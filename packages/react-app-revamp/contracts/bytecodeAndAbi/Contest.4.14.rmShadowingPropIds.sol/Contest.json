{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_prompt",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "_submissionMerkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_votingMerkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "_constructorIntParams",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AddressNotPermissionedToSubmit",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "author",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "AuthorIsNotSender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CannotDeleteWhenCompleted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CannotVoteOnDeletedProposal",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ContestAlreadyCancelled",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "enum Governor.ContestState",
          "name": "currentState",
          "type": "uint8"
        }
      ],
      "name": "ContestMustBeActiveToVote",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "enum Governor.ContestState",
          "name": "currentState",
          "type": "uint8"
        }
      ],
      "name": "ContestMustBeQueuedToPropose",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "maxProposalCount",
          "type": "uint256"
        }
      ],
      "name": "ContestSubmissionLimitReached",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DownvotingNotEnabled",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "DuplicateSubmission",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EmptyProposalDescription",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "msgValue",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "costToPropose",
          "type": "uint256"
        }
      ],
      "name": "IncorrectCostToProposeSent",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IndexHasNotBeenPopulated",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidVoteType",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MoreThanOneProposalWithThisManyVotes",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NeedAtLeastOneVoteToVote",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NeedToSubmitWithProofFirst",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NeedToVoteWithProofFirst",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotEnoughVotesLeft",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotInMerkle",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyCreatorCanDelete",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyCreatorCanSetRewardsModule",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "failedToDeleteCommentId",
          "type": "uint256"
        }
      ],
      "name": "OnlyCreatorOrAuthorCanDeleteComments",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyJkLabsOrCreatorCanCancel",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RankCannotBeZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RankIsNotInSortedRanks",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "numAllowedProposalSubmissions",
          "type": "uint256"
        }
      ],
      "name": "SenderSubmissionLimitReached",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "enum Governor.Metadatas",
          "name": "unexpectedMetadata",
          "type": "uint8"
        }
      ],
      "name": "UnexpectedMetadata",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroSignersInSafeMetadata",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroThresholdInSafeMetadata",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commentId",
          "type": "uint256"
        }
      ],
      "name": "CommentCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "commentIds",
          "type": "uint256[]"
        }
      ],
      "name": "CommentsDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "ContestCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "name": "JokeraceCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract RewardsModule",
          "name": "oldOfficialRewardsModule",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract RewardsModule",
          "name": "newOfficialRewardsModule",
          "type": "address"
        }
      ],
      "name": "OfficialRewardsModuleSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PaymentReleased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "proposalIds",
          "type": "uint256[]"
        }
      ],
      "name": "ProposalsDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "numVotes",
          "type": "uint256"
        }
      ],
      "name": "VoteCast",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "AMOUNT_FOR_SUMBITTER_PROOF",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "JK_LABS_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "METADATAS_COUNT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressSubmitterVerified",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressTotalCastVoteCounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressTotalVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressTotalVotesVerified",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "addressesThatHaveVoted",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allProposalTotalVotes",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "proposalIdsReturn",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ],
          "internalType": "struct GovernorCountingSimple.VoteCounts[]",
          "name": "proposalVoteCountsArrayReturn",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allProposalTotalVotesWithoutDeleted",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "proposalIdsReturn",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ],
          "internalType": "struct GovernorCountingSimple.VoteCounts[]",
          "name": "proposalVoteCountsArrayReturn",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "canceled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "totalVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "numVotes",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "castVote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "numVotes",
          "type": "uint256"
        }
      ],
      "name": "castVoteWithoutProof",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addressToCheck",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        },
        {
          "internalType": "bool",
          "name": "voting",
          "type": "bool"
        }
      ],
      "name": "checkProof",
      "outputs": [
        {
          "internalType": "bool",
          "name": "verified",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "commentContent",
          "type": "string"
        }
      ],
      "name": "comment",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "commentIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "commentIsDeleted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "comments",
      "outputs": [
        {
          "internalType": "address",
          "name": "author",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "commentContent",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "contestAddressTotalVotesCast",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "userTotalVotesCast",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contestDeadline",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contestStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "costToPropose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "commentIdsParam",
          "type": "uint256[]"
        }
      ],
      "name": "deleteComments",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "proposalIdsToDelete",
          "type": "uint256[]"
        }
      ],
      "name": "deleteProposals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "deletedCommentIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "deletedProposalIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "downvotingAllowed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "forVotesToProposalIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllAddressesThatHaveVoted",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllCommentIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllDeletedCommentIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllDeletedProposalIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllProposalAuthors",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllProposalIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "commentId",
          "type": "uint256"
        }
      ],
      "name": "getComment",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "commentContent",
              "type": "string"
            }
          ],
          "internalType": "struct GovernorEngagement.CommentCore",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        }
      ],
      "name": "getNumProposalsWithThisManyForVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        }
      ],
      "name": "getOnlyProposalIdWithThisManyForVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getProposal",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct Governor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Governor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct Governor.ProposalCore",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getProposalComments",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        }
      ],
      "name": "getProposalsWithThisManyForVotes",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "proposalsWithThisManyForVotes",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rank",
          "type": "uint256"
        }
      ],
      "name": "getRankIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rankIndex",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSortedRanks",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "sortedRanksArray",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "commentContent",
              "type": "string"
            }
          ],
          "internalType": "struct GovernorEngagement.CommentCore",
          "name": "commentObj",
          "type": "tuple"
        }
      ],
      "name": "hashComment",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct Governor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Governor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct Governor.ProposalCore",
          "name": "proposal",
          "type": "tuple"
        }
      ],
      "name": "hashProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "idx",
          "type": "uint256"
        }
      ],
      "name": "isOrIsBelowTiedRank",
      "outputs": [
        {
          "internalType": "bool",
          "name": "atOrBelowTiedRank",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxProposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numAllowedProposalSubmissions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "numSubmissions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "officialRewardsModule",
      "outputs": [
        {
          "internalType": "contract RewardsModule",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "percentageToCreator",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "prompt",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "proposalAddressVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "proposalAddressesHaveVoted",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalAuthors",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalComments",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalIsDeleted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "proposalVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalVotesStructs",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ],
          "internalType": "struct GovernorCountingSimple.VoteCounts",
          "name": "proposalVoteCounts",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "address",
          "name": "author",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "exists",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "targetAddress",
              "type": "address"
            }
          ],
          "internalType": "struct Governor.TargetMetadata",
          "name": "targetMetadata",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address[]",
              "name": "signers",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "threshold",
              "type": "uint256"
            }
          ],
          "internalType": "struct Governor.SafeMetadata",
          "name": "safeMetadata",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct Governor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Governor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct Governor.ProposalCore",
          "name": "proposal",
          "type": "tuple"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "propose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct Governor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Governor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct Governor.ProposalCore",
          "name": "proposal",
          "type": "tuple"
        }
      ],
      "name": "proposeWithoutProof",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rankLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract RewardsModule",
          "name": "officialRewardsModule_",
          "type": "address"
        }
      ],
      "name": "setOfficialRewardsModule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "sortedRanks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sortingEnabled",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum Governor.ContestState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "submissionMerkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalVotesCast",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct Governor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Governor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct Governor.ProposalCore",
          "name": "proposal",
          "type": "tuple"
        }
      ],
      "name": "validateProposalData",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "verifyProposer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "totalVotes",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "verifyVoter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "voteStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingMerkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "322:1043:28:-:0;;;415:948;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;645:5;664:7;685:21;720:17;751:21;773:1;751:24;;;;;;;;:::i;:::-;;;;;;;805:21;827:1;805:24;;;;;;;;:::i;:::-;;;;;;;859:21;881:1;859:24;;;;;;;;:::i;:::-;;;;;;;914:21;936:1;914:24;;;;;;;;:::i;:::-;;;;;;;986:21;1008:1;986:24;;;;;;;;:::i;:::-;;;;;;;1044:21;1066:1;1044:24;;;;;;;;:::i;:::-;;;;;;;1103:21;1125:1;1103:24;;;;;;;;:::i;:::-;;;;;;;1158:21;1180:1;1158:24;;;;;;;;:::i;:::-;;;;;;;4275:21:29;4298:17;1253:21:28;1275:1;1253:24;;;;;;;;:::i;:::-;;;;;;;1309:21;1331:1;1309:24;;;;;;;;:::i;:::-;;;;;;;;;;;2141:14:34;:32;;;;2183:9;:22;881:20:33;:44;;;;950:16;:36;4327:4:29::1;:12;4334:5:::0;4327:4;:12:::1;:::i;:::-;-1:-1:-1::0;4349:6:29::1;:16;4358:7:::0;4349:6;:16:::1;:::i;:::-;-1:-1:-1::0;4375:7:29::1;:20:::0;;-1:-1:-1;;;;;;4375:20:29::1;4385:10;4375:20:::0;;::::1;::::0;;;4405:12:::1;:28:::0;;;4443:11:::1;:26:::0;;;4479:12:::1;:28:::0;;;4517:29:::1;:62:::0;;;4589:16:::1;:36:::0;;;4635:17:::1;:38:::0;;;4683:13:::1;:30:::0;;;4723:19:::1;:42:::0;;;4781:34:::1;::::0;::::1;::::0;::::1;::::0;4797:5;;4385:10;4781:34:::1;:::i;:::-;;;;;;;;3822:1069:::0;;;;;;;;;;;;415:948:28;;;;;322:1043;;14:127:38;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:38;247:40;;-1:-1:-1;;;;;302:34:38;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:38:o;426:250::-;511:1;521:113;535:6;532:1;529:13;521:113;;;611:11;;;605:18;592:11;;;585:39;557:2;550:10;521:113;;;-1:-1:-1;;668:1:38;650:16;;643:27;426:250::o;681:510::-;735:5;788:3;781:4;773:6;769:17;765:27;755:55;;806:1;803;796:12;755:55;829:13;;-1:-1:-1;;;;;854:26:38;;851:52;;;883:18;;:::i;:::-;927:55;970:2;951:13;;-1:-1:-1;;947:27:38;976:4;943:38;927:55;:::i;:::-;1007:2;998:7;991:19;1053:3;1046:4;1041:2;1033:6;1029:15;1025:26;1022:35;1019:55;;;1070:1;1067;1060:12;1019:55;1083:77;1157:2;1150:4;1141:7;1137:18;1130:4;1122:6;1118:17;1083:77;:::i;:::-;1178:7;681:510;-1:-1:-1;;;;681:510:38:o;1196:1468::-;1347:6;1355;1363;1371;1379;1432:3;1420:9;1411:7;1407:23;1403:33;1400:53;;;1449:1;1446;1439:12;1400:53;1476:16;;-1:-1:-1;;;;;1541:14:38;;;1538:34;;;1568:1;1565;1558:12;1538:34;1591:61;1644:7;1635:6;1624:9;1620:22;1591:61;:::i;:::-;1581:71;;1671:2;1661:12;;1719:2;1708:9;1704:18;1698:25;1748:2;1738:8;1735:16;1732:36;;;1764:1;1761;1754:12;1732:36;1787:63;1842:7;1831:8;1820:9;1816:24;1787:63;:::i;:::-;1777:73;;;1890:2;1879:9;1875:18;1869:25;1859:35;;1934:2;1923:9;1919:18;1913:25;1903:35;;1984:3;1973:9;1969:19;1963:26;2014:2;2004:8;2001:16;1998:36;;;2030:1;2027;2020:12;1998:36;2053:24;;2108:4;2100:13;;2096:27;-1:-1:-1;2086:55:38;;2137:1;2134;2127:12;2086:55;2166:2;2160:9;2188:2;2184;2181:10;2178:36;;;2194:18;;:::i;:::-;2240:2;2237:1;2233:10;2223:20;;2263:28;2287:2;2283;2279:11;2263:28;:::i;:::-;2325:15;;;2395:11;;;2391:20;;;2356:12;;;;2423:19;;;2420:39;;;2455:1;2452;2445:12;2420:39;2479:11;;;;2499:135;2515:6;2510:3;2507:15;2499:135;;;2581:10;;2569:23;;2532:12;;;;2612;;;;2499:135;;;2653:5;2643:15;;;;;;;;1196:1468;;;;;;;;:::o;2669:127::-;2730:10;2725:3;2721:20;2718:1;2711:31;2761:4;2758:1;2751:15;2785:4;2782:1;2775:15;2801:380;2880:1;2876:12;;;;2923;;;2944:61;;2998:4;2990:6;2986:17;2976:27;;2944:61;3051:2;3043:6;3040:14;3020:18;3017:38;3014:161;;3097:10;3092:3;3088:20;3085:1;3078:31;3132:4;3129:1;3122:15;3160:4;3157:1;3150:15;3014:161;;2801:380;;;:::o;3312:545::-;3414:2;3409:3;3406:11;3403:448;;;3450:1;3475:5;3471:2;3464:17;3520:4;3516:2;3506:19;3590:2;3578:10;3574:19;3571:1;3567:27;3561:4;3557:38;3626:4;3614:10;3611:20;3608:47;;;-1:-1:-1;3649:4:38;3608:47;3704:2;3699:3;3695:12;3692:1;3688:20;3682:4;3678:31;3668:41;;3759:82;3777:2;3770:5;3767:13;3759:82;;;3822:17;;;3803:1;3792:13;3759:82;;;3763:3;;;3403:448;3312:545;;;:::o;4033:1352::-;4153:10;;-1:-1:-1;;;;;4175:30:38;;4172:56;;;4208:18;;:::i;:::-;4237:97;4327:6;4287:38;4319:4;4313:11;4287:38;:::i;:::-;4281:4;4237:97;:::i;:::-;4389:4;;4453:2;4442:14;;4470:1;4465:663;;;;5172:1;5189:6;5186:89;;;-1:-1:-1;5241:19:38;;;5235:26;5186:89;-1:-1:-1;;3990:1:38;3986:11;;;3982:24;3978:29;3968:40;4014:1;4010:11;;;3965:57;5288:81;;4435:944;;4465:663;3259:1;3252:14;;;3296:4;3283:18;;-1:-1:-1;;4501:20:38;;;4619:236;4633:7;4630:1;4627:14;4619:236;;;4722:19;;;4716:26;4701:42;;4814:27;;;;4782:1;4770:14;;;;4649:19;;4619:236;;;4623:3;4883:6;4874:7;4871:19;4868:201;;;4944:19;;;4938:26;-1:-1:-1;;5027:1:38;5023:14;;;5039:3;5019:24;5015:37;5011:42;4996:58;4981:74;;4868:201;-1:-1:-1;;;;;5115:1:38;5099:14;;;5095:22;5082:36;;-1:-1:-1;4033:1352:38:o;5390:497::-;5567:2;5556:9;5549:21;5530:4;5599:6;5593:13;5642:6;5637:2;5626:9;5622:18;5615:34;5658:81;5732:6;5727:2;5716:9;5712:18;5705:4;5697:6;5693:17;5658:81;:::i;:::-;-1:-1:-1;;;;;5848:32:38;;;;5841:4;5826:20;;5819:62;-1:-1:-1;5800:2:38;5779:15;;;;-1:-1:-1;;5775:29:38;5760:45;5807:2;5756:54;;5390:497;-1:-1:-1;5390:497:38:o;:::-;322:1043:28;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMapi;:::-;;:::i;:::-;;;;;;;;;;;:::i;1812:27::-;;;;;;;;;;;;;;;;1621:22;;;;;;;;;;-1:-1:-1;1621:22:29;;;;-1:-1:-1;;;;;1621:22:29;;;;;;-1:-1:-1;;;;;2444:32:38;;;2426:51;;2414:2;2399:18;1621:22:29;2280:203:38;1799:24:34;;;;;;;;;;;;;;;;2318:35:29;;;;;;;;;;-1:-1:-1;2318:35:29;;;;;:::i;:::-;;:::i;1543:18::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;740:60:30:-;;;;;;;;;;-1:-1:-1;740:60:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1536:123:31:-;;;;;;;;;;-1:-1:-1;1536:123:31;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2550:32:29:-;;;;;;;;;;-1:-1:-1;2550:32:29;;;;;:::i;:::-;;:::i;6211:117::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1990:579:31:-;;;;;;;;;;-1:-1:-1;1990:579:31;;;;;:::i;:::-;;:::i;7647:469:29:-;;;;;;;;;;-1:-1:-1;7647:469:29;;;;;:::i;:::-;;:::i;:::-;;6671:107;;;;;;;;;;;;;:::i;6022:125::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1967:28:34:-;;;;;;;;;;-1:-1:-1;1967:28:34;;;;;:::i;:::-;;:::i;1416:539:33:-;;;;;;;;;;-1:-1:-1;1416:539:33;;;;;:::i;:::-;;:::i;:::-;;;9308:14:38;;9301:22;9283:41;;9271:2;9256:18;1416:539:33;9143:187:38;1373:73:29;;;;;;;;;;;;1426:20;1373:73;;1728:29:34;;;;;;;;;;;;;;;;1732:26:29;;;;;;;;;;;;;;;;2414:20;;;;;;;;;;-1:-1:-1;2414:20:29;;;;;;;;602:34:31;;;;;;;;;;-1:-1:-1;602:34:31;;;;;:::i;:::-;;:::i;991:148::-;;;;;;;;;;-1:-1:-1;991:148:31;;;;;:::i;:::-;;:::i;14452:397:29:-;;;;;;;;;;-1:-1:-1;14452:397:29;;;;;:::i;:::-;;:::i;4988:146::-;;;;;;;;;;-1:-1:-1;4988:146:29;;;;;:::i;:::-;;:::i;10572:625::-;;;;;;:::i;:::-;;:::i;1293:74::-;;;;;;;;;;;;;:::i;2715:580:30:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;2588:39:29:-;;;;;;;;;;-1:-1:-1;2588:39:29;;;;;:::i;:::-;;:::i;14015:370::-;;;;;;;;;;-1:-1:-1;14015:370:29;;;;;:::i;:::-;;:::i;1210:294:30:-;;;;;;;;;;-1:-1:-1;1210:294:30;;;;;:::i;:::-;1274:16;1360:32;;;:20;:32;;;;;1410:40;;1452:44;;;;;1410:40;;1210:294;;;;;16164:25:38;;;16220:2;16205:18;;16198:34;;;;16137:18;1210:294:30;15990:248:38;4897:85:29;;;;;;;;;;-1:-1:-1;4962:13:29;;;;;;;;;;;;-1:-1:-1;;;4962:13:29;;;;4897:85;;5794:1027:30;;;;;;;;;;-1:-1:-1;5794:1027:30;;;;;:::i;:::-;;:::i;1362:115:31:-;;;;;;;;;;;;;:::i;2126:32:29:-;;;;;;;;;;;;;;;;14951:378;;;;;;;;;;-1:-1:-1;14951:378:29;;;;;:::i;:::-;;:::i;1607:408:30:-;;;;;;;;;;-1:-1:-1;1607:408:30;;;;;:::i;:::-;;:::i;2209:28:29:-;;;;;;;;;;;;;;;;2480:117:34;;;;;;;;;;;;;:::i;807:58:30:-;;;;;;;;;;-1:-1:-1;807:58:30;;;;;:::i;:::-;;:::i;2495:49:29:-;;;;;;;;;;-1:-1:-1;2495:49:29;;;;;:::i;:::-;;;;;;;;;;;;;;366:42:32;;;;;;;;;;-1:-1:-1;366:42:32;;;;-1:-1:-1;;;;;366:42:32;;;1595:20:29;;;;;;;;;;;;;:::i;600:29:30:-;;;;;;;;;;;;;;;;1887:44:29;;;;;;;;;;;;;;;;642:47:31;;;;;;;;;;-1:-1:-1;642:47:31;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;6933:523:30:-;;;;;;;;;;-1:-1:-1;6933:523:30;;;;;:::i;:::-;;:::i;2692:57:29:-;;;;;;;;;;-1:-1:-1;2692:57:29;;;;;:::i;:::-;;;;;;;;;;;;;;;;5839:111;;;;;;;;;;;;;:::i;2284:28::-;;;;;;;;;;-1:-1:-1;2284:28:29;;;;;:::i;:::-;;:::i;4839:170:30:-;;;;;;;;;;-1:-1:-1;4839:170:30;;;;;:::i;:::-;4932:13;4964:31;;;:21;:31;;;;;:38;;4839:170;673:61;;;;;;;;;;-1:-1:-1;673:61:30;;;;;:::i;:::-;;;;;;;;;;;;;;2667:709:31;;;;;;;;;;-1:-1:-1;2667:709:31;;;;;:::i;:::-;;:::i;754:48::-;;;;;;;;;;-1:-1:-1;754:48:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;2451:171:30;;;;;;;;;;-1:-1:-1;2451:171:30;;;;;:::i;:::-;-1:-1:-1;;;;;2576:39:30;2531:26;2576:39;;;:26;:39;;;;;;;2451:171;2116:224;;;;;;;;;;-1:-1:-1;2116:224:30;;;;;:::i;:::-;;:::i;5325:268::-;;;;;;;;;;-1:-1:-1;5325:268:30;;;;;:::i;:::-;;:::i;377:35:33:-;;;;;;;;;;;;;;;;1747:140:31;;;;;;;;;;-1:-1:-1;1747:140:31;;;;;:::i;:::-;;:::i;10038:419:29:-;;;;;;:::i;:::-;;:::i;5140:477::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;6836:128::-;;;;;;;;;;-1:-1:-1;6836:128:29;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4523:212:30:-;;;;;;;;;;-1:-1:-1;4523:212:30;;;;;:::i;:::-;;:::i;2755:56:29:-;;;;;;;;;;-1:-1:-1;2755:56:29;;;;;:::i;:::-;;;;;;;;;;;;;;;;3420:991:30;;;;;;;;;;;;;:::i;418:31:33:-;;;;;;;;;;;;;;;;2634:52:29;;;;;;;;;;-1:-1:-1;2634:52:29;;;;;:::i;:::-;;;;;;;;;;;;;;6489:101;;;;;;;;;;;;;:::i;1196::31:-;;;;;;;;;;;;;:::i;13574:323:29:-;;;;;;;;;;;;;:::i;2243:34::-;;;;;;;;;;;;;;;;1452:84;;;;;;;;;;;;1494:42;1452:84;;5673:103;;;;;;;;;;;;;:::i;12200:1262::-;;;;;;;;;;-1:-1:-1;12200:1262:29;;;;;:::i;:::-;;:::i;576:379:32:-;;;;;;;;;;-1:-1:-1;576:379:32;;;;;:::i;:::-;;:::i;569:27:31:-;;;;;;;;;;-1:-1:-1;569:27:31;;;;;:::i;:::-;;:::i;695:53::-;;;;;;;;;;-1:-1:-1;695:53:31;;;;;:::i;:::-;;:::i;2359:49:29:-;;;;;;;;;;-1:-1:-1;2359:49:29;;;;;:::i;:::-;;;;;;;;;;;;;;;;8210:889;;;;;;;;;;-1:-1:-1;8210:889:29;;;;;:::i;:::-;;:::i;2037:31::-;;;;;;;;;;;;;;;;2440:49;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2440:49:29;;;-1:-1:-1;;;2440:49:29;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2440:49:29;;;;;;;;;;;;;-1:-1:-1;;;;;2440:49:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2440:49:29;;-1:-1:-1;2440:49:29;-1:-1:-1;2440:49:29;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2440:49:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2318:35::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2318:35:29;:::o;1543:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1536:123:31:-;1596:18;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1596:18:31;1633:19;;;;:8;:19;;;;;;;;;1626:26;;;;;;;;;-1:-1:-1;;;;;1626:26:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1633:19;1626:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1536:123;;;:::o;2550:32:29:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2550:32:29;;-1:-1:-1;2550:32:29;:::o;6211:117::-;6268:16;6303:18;6296:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6211:117;:::o;1990:579:31:-;2127:175;;;;;;;;2161:10;2127:175;;2196:15;2127:175;;;;;;;;;;;;;;;;2073:7;;;2332:26;2127:175;2332:11;:26::i;:::-;2369:10;:26;;;;;;;;;;;;;;;-1:-1:-1;2405:19:31;;;:8;:19;;;;;;;:35;;;;-1:-1:-1;;;;;;2405:35:31;-1:-1:-1;;;;;2405:35:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;2369:26;;-1:-1:-1;2405:35:31;;;;;;;;;;:::i;:::-;-1:-1:-1;;;2450:28:31;;;;:16;:28;;;;;;;;:44;;;;;;;;;;;;;;;;;;2510:25;;;;;2484:9;160:25:38;;148:2;133:18;;14:177;2510:25:31;;;;;;;;2553:9;-1:-1:-1;;1990:579:31;;;;;:::o;7647:469:29:-;-1:-1:-1;;;;;7736:33:29;;;;;;:24;:33;;;;;;;;7731:379;;7789:20;;7813:1;7789:25;7785:141;;7647:469;;;:::o;7785:141::-;7939:61;7950:7;1426:20;7987:5;;7994;7939:10;:61::i;:::-;-1:-1:-1;;;;;;8059:33:29;;;;;;:24;:33;;;;;:40;;-1:-1:-1;;8059:40:29;8095:4;8059:40;;;7731:379;7647:469;;;:::o;6671:107::-;6719:7;6759:12;;6745:11;:9;:11::i;:::-;:26;;;;:::i;:::-;6738:33;;6671:107;:::o;6022:125::-;6083:16;6118:22;6111:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6111:29:29;;;;;;;;;;;;;;;;;;;;;;6022:125;:::o;1967:28:34:-;;;;;;;;;;;;1416:539:33;1671:40;;-1:-1:-1;;24833:2:38;24829:15;;;24825:53;1671:40:33;;;24813:66:38;24895:12;;;24888:28;;;1560:13:33;;;;24932:12:38;;1671:40:33;;;;;;;;;;;;1661:51;;;;;;1646:66;;1722:16;1741:6;:138;;1826:53;1845:5;;1826:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1852:20:33;;;-1:-1:-1;1874:4:33;;-1:-1:-1;1826:18:33;:53::i;:::-;1741:138;;;1762:49;1781:5;;1762:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1788:16:33;;;-1:-1:-1;1806:4:33;;-1:-1:-1;1762:18:33;:49::i;:::-;1722:157;;1894:11;1889:38;;1914:13;;-1:-1:-1;;;1914:13:33;;;;;;;;;;;1889:38;-1:-1:-1;1944:4:33;;1416:539;-1:-1:-1;;;;;;;1416:539:33:o;602:34:31:-;;;;;;;;;;;;991:148;1064:7;1119:10;1108:22;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1108:22:31;;;;;;;;;1098:33;;1108:22;1098:33;;;;;991:148;-1:-1:-1;;991:148:31:o;14452:397:29:-;14601:7;14664:29;;;:17;:29;;;;;;14640:10;;14664:29;;14660:71;;;14702:29;;-1:-1:-1;;;14702:29:29;;;;;;;;;;;14660:71;14741:37;14753:5;14760:10;14772:5;;14741:11;:37::i;:::-;14795:47;14805:10;14817:5;14824:7;14833:8;14795:9;:47::i;:::-;14788:54;14452:397;-1:-1:-1;;;;;;;;14452:397:29:o;4988:146::-;5061:7;5116:8;5105:20;;;;;;;;:::i;10572:625::-;10657:7;10693:13;;10680:9;:26;10676:91;;10753:13;;10715:52;;-1:-1:-1;;;10715:52:29;;10742:9;10715:52;;;16164:25:38;16205:18;;;16198:34;;;;16137:18;;10715:52:29;;;;;;;;10676:91;10782:20;;:25;10778:254;;10973:10;10948:36;;;;:24;:36;;;;;;;;10943:78;;10993:28;;-1:-1:-1;;;10993:28:29;;;;;;;;;;;10943:78;11041:30;;11062:8;11041:30;:::i;:::-;11081:18;11102:23;;11116:8;11102:23;:::i;:::-;:13;:23::i;:::-;11081:44;;11136:26;:24;:26::i;1293:74::-;1335:32;1343:19;;1335:32;:::i;:::-;1293:74;:::o;2715:580:30:-;2793:34;2829:49;2894:34;2931:19;:17;:19::i;:::-;2894:56;;2960:43;3023:17;:24;-1:-1:-1;;;;;3006:42:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;3006:42:30;;;;;;;;;;;;;;;;2960:88;;3063:9;3058:170;3082:17;:24;3078:1;:28;3058:170;;;3156:20;:42;3177:17;3195:1;3177:20;;;;;;;;:::i;:::-;;;;;;;3156:42;;;;;;;;;;;:61;;3127:90;;;;;;;;;;;;;;;;;;;;;;;;;:23;3151:1;3127:26;;;;;;;;:::i;:::-;;;;;;:90;;;;3108:3;;;;;:::i;:::-;;;;3058:170;;;-1:-1:-1;3245:17:30;;3264:23;;-1:-1:-1;2715:580:30;-1:-1:-1;2715:580:30:o;2588:39:29:-;;;;;;;;;;;;14015:370;-1:-1:-1;;;;;14121:34:29;;;;;;:25;:34;;;;;;;;14116:263;;14171:44;14182:7;14191:10;14203:5;;14210:4;14171:10;:44::i;:::-;-1:-1:-1;;;;;;14274:26:29;;;;;;:17;:26;;;;;;;;:39;;;14327:25;:34;;;;;:41;;-1:-1:-1;;14327:41:29;14364:4;14327:41;;;14116:263;14015:370;;;;:::o;5794:1027:30:-;5851:17;5884:4;5892:1;5884:9;5880:40;;5902:18;;-1:-1:-1;;;5902:18:30;;;;;;;;;;;5880:40;5959:11;:18;;6031:48;;;;;;;;;;;;;;;;;5959:18;;5931:25;;6031:48;5959:18;;6031:48;;5959:11;:18;6031:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6134:15;6152:1;6134:19;;6168:13;6163:536;6195:17;6187:5;:25;6163:536;;;6393:61;6429:17;6447:5;6429:24;;;;;;;;:::i;:::-;;;;;;;4932:13;4964:31;;;:21;:31;;;;;:38;;4839:170;6393:61;6389:113;6479:8;6389:113;6615:4;6604:7;:15;6600:66;;6646:5;5794:1027;-1:-1:-1;;;;;5794:1027:30:o;6600:66::-;6679:9;;;;:::i;:::-;;;;6163:536;6214:7;;;;:::i;:::-;;;;6163:536;;;;6790:24;;-1:-1:-1;;;6790:24:30;;;;;;;;;;;1362:115:31;1418:16;1453:17;1446:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1362:115;:::o;14951:378:29:-;15050:7;15109:29;;;:17;:29;;;;;;15085:10;;15109:29;;15105:71;;;15147:29;;-1:-1:-1;;;15147:29:29;;;;;;;;;;;15105:71;-1:-1:-1;;;;;15191:32:29;;;;;;:25;:32;;;;;;;;15186:72;;15232:26;;-1:-1:-1;;;15232:26:29;;;;;;;;;;;15186:72;15275:47;15285:10;15297:5;15304:7;15313:8;15275:9;:47::i;:::-;15268:54;14951:378;-1:-1:-1;;;;;14951:378:29:o;1607:408:30:-;1723:16;1813:32;;;:20;:32;;;;;;;;-1:-1:-1;;;;;1876:43:30;;;;:30;;:43;;;;;:52;;1942:56;;;;;1607:408;;;;;;:::o;2480:117:34:-;2527:33;2579:11;2572:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2480:117;:::o;807:58:30:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1595:20:29:-;;;;;;;:::i;642:47:31:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;642:47:31;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6933:523:30:-;7040:11;:18;6996:22;;7040;;7061:1;;7040:22;:::i;:::-;7034:3;:28;7030:205;;;7198:26;;-1:-1:-1;;;7198:26:30;;;;;;;;;;;7030:205;7250:13;7245:183;7277:7;:3;7283:1;7277:7;:::i;:::-;7269:5;:15;7245:183;;;7371:1;7313:55;7349:11;7361:5;7349:18;;;;;;;;:::i;:::-;;;;;;;;;4932:13;4964:31;;;:21;:31;;;;;:38;;4839:170;7313:55;:59;7309:109;;;-1:-1:-1;7399:4:30;;6933:523;-1:-1:-1;;6933:523:30:o;7309:109::-;7286:7;;;;:::i;:::-;;;;7245:183;;;-1:-1:-1;7444:5:30;;6933:523;-1:-1:-1;;6933:523:30:o;5839:111:29:-;5893:16;5928:15;5921:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5921:22:29;;;;;;;;;;;;;;;;;;;;;;5839:111;:::o;2284:28::-;;;;;;;;;;;;2667:709:31;2774:22;;2742:29;2807:515;2839:21;2831:5;:29;2807:515;;;2885:24;2912:15;2928:5;2912:22;;;;;;;;:::i;:::-;;;;;;;;;;;2968:7;;2912:22;;-1:-1:-1;;;;;;2968:7:31;2954:10;:21;;;;2953:76;;-1:-1:-1;2995:26:31;;;;:8;:26;;;;;:33;-1:-1:-1;;;;;2995:33:31;2981:10;:47;;2953:76;2949:176;;;3056:54;;-1:-1:-1;;;3056:54:31;;;;;160:25:38;;;133:18;;3056:54:31;14:177:38;2949:176:31;3144:34;;;;:16;:34;;;;;;;;3139:173;;3198:34;;;;:16;:34;;;;;:41;;-1:-1:-1;;3198:41:31;3235:4;3198:41;;;;;;3257:17;:40;;;;;;;;;;;;;;;3139:173;-1:-1:-1;2862:7:31;;;;:::i;:::-;;;;2807:515;;;;3337:32;3353:15;3337:32;;;;;;:::i;:::-;;;;;;;;2732:644;2667:709;:::o;2116:224:30:-;2221:33;2257:32;;;:20;:32;;;;;;;;;2306:27;;;2299:34;;;;;;;;;;;;;;;;;2193:16;;2257:32;;2299:34;;2306:27;2299:34;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2299:34:30;;;;;;;;;;;;;;;;;;;;;;;;2116:224;;;:::o;5325:268::-;5411:18;5445:31;;;:21;:31;;;;;:38;5487:1;5445:43;5441:94;;5497:38;;-1:-1:-1;;;5497:38:30;;;;;;;;;;;5441:94;5552:31;;;;:21;:31;;;;;:34;;:31;;;:34;;;;:::i;:::-;;;;;;;;;5545:41;;5325:268;;;:::o;1747:140:31:-;1852:28;;;;:16;:28;;;;;;;;;1845:35;;;;;;;;;;;;;;;;;1817:16;;1845:35;;;1852:28;1845:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1747:140;;;:::o;10038:419:29:-;10137:7;10173:13;;10160:9;:26;10156:91;;10233:13;;10195:52;;-1:-1:-1;;;10195:52:29;;10222:9;10195:52;;;16164:25:38;16205:18;;;16198:34;;;;16137:18;;10195:52:29;15990:248:38;10156:91:29;10258:33;10273:10;10285:5;;10258:14;:33::i;:::-;10301:30;;10322:8;10301:30;:::i;:::-;10341:18;10362:23;;10376:8;10362:23;:::i;:::-;10341:44;;10396:26;:24;:26::i;:::-;10440:10;10038:419;-1:-1:-1;;;;10038:419:29:o;5140:477::-;5206:8;;5178:12;;5206:8;;5202:67;;;-1:-1:-1;5237:21:29;;5140:477::o;5202:67::-;5299:15;5283:12;;:31;5279:92;;-1:-1:-1;5337:23:29;;5140:477::o;5279:92::-;5400:15;5385:11;:9;:11::i;:::-;:30;5381:87;;-1:-1:-1;5438:19:29;;5140:477::o;5381:87::-;5503:15;5482:17;:15;:17::i;:::-;:36;5478:93;;-1:-1:-1;5541:19:29;;5140:477::o;5478:93::-;-1:-1:-1;5588:22:29;;5140:477::o;6836:128::-;6898:19;;:::i;:::-;6936:21;;;;:9;:21;;;;;;;;;6929:28;;;;;;;;;-1:-1:-1;;;;;6929:28:29;;;;-1:-1:-1;;;6929:28:29;;;;;;;;;;;;;;;;;;;;6936:21;;6929:28;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6929:28:29;;;-1:-1:-1;;6929:28:29;;;;;;;;;;;;;-1:-1:-1;;;;;6929:28:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6929:28:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6836:128;;;:::o;4523:212:30:-;4697:31;;;;:21;:31;;;;;;;;;4690:38;;;;;;;;;;;;;;;;;4628:46;;4690:38;;;4697:31;4690:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4523:212;;;:::o;3420:991::-;3512:34;3548:49;3613:34;3650:19;:17;:19::i;:::-;3613:56;;3679:42;3738:17;:24;-1:-1:-1;;;;;3724:39:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3724:39:30;;3679:84;;3773:43;3836:17;:24;-1:-1:-1;;;;;3819:42:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;3819:42:30;;;;;;;;;;;;;;;;3773:88;;3872:29;3920:9;3915:421;3939:17;:24;3935:1;:28;3915:421;;;3989:17;:39;4007:17;4025:1;4007:20;;;;;;;;:::i;:::-;;;;;;;;;;;;3989:39;;;;;;;;;;-1:-1:-1;3989:39:30;;;;3984:342;;4099:17;4117:1;4099:20;;;;;;;;:::i;:::-;;;;;;;4048:25;4074:21;4048:48;;;;;;;;:::i;:::-;;;;;;:71;;;;;4206:20;:42;4227:17;4245:1;4227:20;;;;;;;;:::i;:::-;;;;;;;4206:42;;;;;;;;;;;:61;;4137:130;;;;;;;;;;;;;;;;;;;;;;;;;:23;4161:21;4137:46;;;;;;;;:::i;:::-;;;;;;;;;;:130;4285:26;4310:1;4285:26;;:::i;:::-;;;3984:342;3965:3;;;;:::i;:::-;;;;3915:421;;;-1:-1:-1;4353:25:30;;4380:23;;-1:-1:-1;3420:991:30;-1:-1:-1;;;3420:991:30:o;6489:101:29:-;6531:7;6572:11;;6557:12;;:26;;;;:::i;1196:101:31:-;1245:16;1280:10;1273:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1196:101;:::o;13574:323:29:-;13629:7;;-1:-1:-1;;;;;13629:7:29;13615:10;:21;;;;13614:58;;-1:-1:-1;13642:10:29;1494:42;13642:29;;13614:58;13609:103;;;13682:30;;-1:-1:-1;;;13682:30:29;;;;;;;;;;;13609:103;13723:19;13745:7;:5;:7::i;:::-;13723:29;-1:-1:-1;13776:21:29;13766:6;:31;;;;;;;;:::i;:::-;;13762:69;;13806:25;;-1:-1:-1;;;13806:25:29;;;;;;;;;;;13762:69;13842:8;:15;;-1:-1:-1;;13842:15:29;13853:4;13842:15;;;13873:17;;;;13842:8;;13873:17;13599:298;13574:323::o;5673:103::-;5723:16;5758:11;5751:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5673:103;:::o;12200:1262::-;12300:7;;-1:-1:-1;;;;;12300:7:29;12286:10;:21;12282:56;;12316:22;;-1:-1:-1;;;12316:22:29;;;;;;;;;;;12282:56;12363:22;12352:7;:5;:7::i;:::-;:33;;;;;;;;:::i;:::-;;12348:73;;12394:27;;-1:-1:-1;;;12394:27:29;;;;;;;;;;;12348:73;12437:13;12432:620;12456:34;;;12432:620;;;12515:25;12543:19;;12563:5;12543:26;;;;;;;:::i;:::-;;;;;;;;;;12588:36;;;;:17;:36;;;;;;;;12543:26;;-1:-1:-1;;12588:36:29;;12583:459;;12708:36;;;;:17;:36;;;;;:43;;-1:-1:-1;;12708:43:29;12747:4;12708:43;;;;;;12985:18;:42;;;;;;;;;;;;;;;12583:459;-1:-1:-1;12492:7:29;;;;:::i;:::-;;;;12432:620;;;-1:-1:-1;13148:17:29;;:22;:45;;;;;13174:14;;13192:1;13174:19;13148:45;13144:267;;;13346:54;13380:19;;13346:33;:54::i;:::-;13426:29;13443:11;13426:29;;;;;;:::i;576:379:32:-;683:7;;-1:-1:-1;;;;;683:7:32;669:10;:21;665:66;;699:32;;-1:-1:-1;;;699:32:32;;;;;;;;;;;665:66;782:21;;;-1:-1:-1;;;;;813:46:32;;;-1:-1:-1;;;;;;813:46:32;;;;;;;874:74;;;782:21;;;;26509:34:38;;;26574:2;26559:18;;26552:43;;;;874:74:32;;26444:18:38;874:74:32;26235:366:38;569:27:31;;;;;;;;;;;;695:53;;;;;;;;;;;;;;;;;;;;8210:889:29;8296:15;;-1:-1:-1;;;;;8296:29:29;8315:10;8296:29;8292:88;;8352:15;;8334:46;;-1:-1:-1;;;8334:46:29;;-1:-1:-1;;;;;26527:15:38;;;8334:46:29;;;26509:34:38;8369:10:29;26559:18:38;;;26552:43;26444:18;;8334:46:29;26235:366:38;8292:88:29;8395:13;8390:615;1335:32;1343:19;;1335:32;:::i;:::-;8414:5;:23;8390:615;;;8462:25;8500:5;8490:16;;;;;;;;:::i;:::-;8462:44;-1:-1:-1;8543:16:29;8524:15;:35;;;;;;;;:::i;:::-;;8520:475;;8579:8;;;8520:475;8688:14;8669:15;:33;;;;;;;;:::i;:::-;;8665:330;;8726:21;;;;:29;:36;:29;:41;8722:81;;8776:27;;-1:-1:-1;;;8776:27:29;;;;;;;;;;;8722:81;8825:8;:21;;;:31;;;8860:1;8825:36;8821:78;;8870:29;;-1:-1:-1;;;8870:29:29;;;;;;;;;;;8821:78;8665:330;;;8964:15;8945:35;;-1:-1:-1;;;8945:35:29;;;;;;;;:::i;8665:330::-;8448:557;8390:615;8439:7;;;;:::i;:::-;;;;8390:615;;;;9024:8;:20;;;9018:34;9056:1;9018:39;9014:78;;9066:26;;-1:-1:-1;;;9066:26:29;;;;;;;;;;;9014:78;8210:889;:::o;1156:154:26:-;1247:4;1299;1270:25;1283:5;1290:4;1270:12;:25::i;:::-;:33;;1156:154;-1:-1:-1;;;;1156:154:26:o;15610:539:29:-;15733:7;15771:19;15760:7;:5;:7::i;:::-;:30;;;;;;;;:::i;:::-;;15756:77;;15825:7;:5;:7::i;:::-;15799:34;;-1:-1:-1;;;15799:34:29;;;;;;;;:::i;15756:77::-;15847:8;15859:1;15847:13;15843:52;;15869:26;;-1:-1:-1;;;15869:26:29;;;;;;;;;;;15843:52;15906:78;15917:10;15929:7;15938;15947:8;15957:17;:26;15975:7;-1:-1:-1;;;;;15957:26:29;-1:-1:-1;;;;;15957:26:29;;;;;;;;;;;;;15906:10;:78::i;:::-;15995:22;:39;;;;;;;-1:-1:-1;15995:39:29;;;;;;;;-1:-1:-1;;;;;;15995:39:29;16023:10;15995:39;;;16050:48;;;27364:25:38;;;27437:4;27425:17;;27420:2;27405:18;;27398:45;27459:18;;;27452:34;;;-1:-1:-1;;;;;16050:48:29;;;;;27352:2:38;27337:18;16050:48:29;;;;;;;-1:-1:-1;;;;;;;;16116:26:29;;;;;:17;:26;;;;;;;15610:539;-1:-1:-1;15610:539:29:o;11203:887::-;11274:7;11308:19;11297:7;:5;:7::i;:::-;:30;;;;;;;;:::i;:::-;;11293:80;;11365:7;:5;:7::i;:::-;11336:37;;-1:-1:-1;;;11336:37:29;;;;;;;;:::i;11293:80::-;11417:29;;11402:10;11387:26;;;;:14;:26;;;;;;:59;11383:156;;11498:29;;11469:59;;-1:-1:-1;;;11469:59:29;;;;;;160:25:38;;148:2;133:18;;14:177;11383:156:29;11604:16;;11574:18;:25;11553:11;:18;:46;;11574:25;11553:46;:::i;:::-;11552:68;11548:153;;11673:16;;11643:47;;-1:-1:-1;;;11643:47:29;;;;;;160:25:38;;148:2;133:18;;14:177;11548:153:29;11711:18;11732:22;11745:8;11732:12;:22::i;:::-;11768:21;;;;:9;:21;;;;;:28;:21;;-1:-1:-1;;;;11768:28:29;;;;11764:72;;;11805:31;;-1:-1:-1;;;11805:31:29;;;;;160:25:38;;;133:18;;11805:31:29;14:177:38;11764:72:29;11847:11;:28;;;;;;;;;;;;;;-1:-1:-1;11885:21:29;;;:9;11847:28;11885:21;;;;;;;;:32;;;;;;;;;;-1:-1:-1;;;11885:32:29;-1:-1:-1;;;;;;11885:32:29;;;-1:-1:-1;;;;;11885:32:29;;;;;;;;;;;;;;11909:8;;11885:32;;;;;;;:::i;:::-;-1:-1:-1;11885:32:29;;;;;;;;;;-1:-1:-1;;;;;;11885:32:29;-1:-1:-1;;;;;11885:32:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11885:32:29;;;;;;;;;;11942:10;11927:26;;;;:14;:26;;;;;;:31;;11885:32;;-1:-1:-1;11927:26:29;-1:-1:-1;11927:31:29;;11885:32;;11927:31;:::i;:::-;;;;-1:-1:-1;;11968:15:29;:32;;;;;;;-1:-1:-1;11968:32:29;;;;;;;;-1:-1:-1;;;;;;11968:32:29;11989:10;11968:32;;;;;;12016:39;;;27671:25:38;;;27727:2;27712:18;;27705:60;;;;12016:39:29;;27644:18:38;12016:39:29;;;;;;;12073:10;11203:887;-1:-1:-1;;11203:887:29:o;9220:761::-;9278:13;;:17;9274:701;;9375:23;9445:3;9421:19;;9415:3;:25;;;;:::i;:::-;9402:39;;:9;:39;:::i;:::-;9401:47;;;;:::i;:::-;9375:73;-1:-1:-1;9466:19:29;;9462:190;;9505:60;1494:42;9549:15;9505:17;:60::i;:::-;9588:49;;;1494:42;28345:51:38;;28427:2;28412:18;;28405:34;;;9588:49:29;;28318:18:38;9588:49:29;;;;;;;9462:190;9666:24;9693:27;9705:15;9693:9;:27;:::i;:::-;9666:54;-1:-1:-1;9738:20:29;;9734:231;;9804:7;;9778:53;;-1:-1:-1;;;;;9804:7:29;9814:16;9778:17;:53::i;:::-;9924:7;;9908:42;;;-1:-1:-1;;;;;9924:7:29;;;28345:51:38;;28427:2;28412:18;;28405:34;;;9908:42:29;;28318:18:38;9908:42:29;28171:274:38;9734:231:29;9297:678;;9274:701;9220:761::o;8554:606:30:-;8670:9;8665:489;8685:30;;;8665:489;;;8736:25;8764:19;;8784:1;8764:22;;;;;;;:::i;:::-;;;;;;;;;;8800:32;8835:39;;;:20;:39;;;;;;;:67;8764:22;;-1:-1:-1;9070:73:30;;-1:-1:-1;8764:22:30;8835:67;9070:28;:73::i;:::-;8722:432;;8717:3;;;;;:::i;:::-;;;;8665:489;;1934:290:26;2017:7;2059:4;2017:7;2073:116;2097:5;:12;2093:1;:16;2073:116;;;2145:33;2155:12;2169:5;2175:1;2169:8;;;;;;;;:::i;:::-;;;;;;;2145:9;:33::i;:::-;2130:48;-1:-1:-1;2111:3:26;;;;:::i;:::-;;;;2073:116;;;-1:-1:-1;2205:12:26;1934:290;-1:-1:-1;;;1934:290:26:o;9300:2076:30:-;9458:33;9494:32;;;:20;:32;;;;;;;;-1:-1:-1;;;;;9566:35:30;;;;:26;:35;;;;;;;9553:48;;:10;:48;:::i;:::-;9541:8;:61;9537:94;;;9611:20;;-1:-1:-1;;;9611:20:30;;;;;;;;;;;9537:94;-1:-1:-1;;;;;9679:39:30;;9642:20;9679:39;;;:30;;;:39;;;;;:48;:53;:130;;;;-1:-1:-1;;;;;;9752:39:30;;;;;;:30;;;:39;;;;;:52;;;:57;9679:130;9642:177;-1:-1:-1;9834:30:30;;;9830:518;;9880:52;;9924:8;;9880:12;;:31;;:52;;9924:8;;9880:52;:::i;:::-;;;;-1:-1:-1;;;;;;;9946:39:30;;;;;;:30;;;:39;;;;;:60;;9998:8;;9946:39;:60;;9998:8;;9946:60;:::i;:::-;;;;-1:-1:-1;9830:518:30;;-1:-1:-1;9830:518:30;;-1:-1:-1;;10027:34:30;;;;10023:325;;10081:17;;10102:1;10081:22;10077:57;;10112:22;;-1:-1:-1;;;10112:22:30;;;;;;;;;;;10077:57;10196:8;10148:12;:31;;:44;;;:56;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;10218:39:30;;;;;;:30;;;:39;;;;;:52;;:64;;10274:8;;10218:39;:64;;10274:8;;10218:64;:::i;10023:325::-;10320:17;;-1:-1:-1;;;10320:17:30;;;;;;;;;;;10023:325;10362:15;10358:87;;;10393:27;;;:41;;;;;;;-1:-1:-1;10393:41:30;;;;;;;;;;-1:-1:-1;;;;;;10393:41:30;-1:-1:-1;;;;;10393:41:30;;;;;10358:87;-1:-1:-1;;;;;10454:35:30;;;;;;:26;:35;;;;;:47;;10493:8;;10454:35;:47;;10493:8;;10454:47;:::i;:::-;;;;;;;;10529:8;10511:14;;:26;;;;;;;:::i;:::-;;;;-1:-1:-1;;10682:17:30;;:22;10681:49;;;;;10710:14;;10728:1;10710:19;10681:49;10677:693;;;10768:40;;10746:19;10888:22;10902:8;10768:40;10888:22;:::i;:::-;10866:44;-1:-1:-1;11139:15:30;;11135:107;;11174:53;11203:10;11215:11;11174:28;:53::i;:::-;11255:34;;;;:21;:34;;;;;;;:51;;;;;;;;;;;;;;;;11321:38;11334:11;11277;11321:12;:38::i;:::-;10732:638;;10677:693;9448:1928;;9300:2076;;;;;:::o;2647:312:24:-;2761:6;2736:21;:31;;2728:73;;;;-1:-1:-1;;;2728:73:24;;28652:2:38;2728:73:24;;;28634:21:38;28691:2;28671:18;;;28664:30;28730:31;28710:18;;;28703:59;28779:18;;2728:73:24;28450:353:38;2728:73:24;2813:12;2831:9;-1:-1:-1;;;;;2831:14:24;2853:6;2831:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2812:52;;;2882:7;2874:78;;;;-1:-1:-1;;;2874:78:24;;29220:2:38;2874:78:24;;;29202:21:38;29259:2;29239:18;;;29232:30;29298:34;29278:18;;;29271:62;29369:28;29349:18;;;29342:56;29415:19;;2874:78:24;29018:422:38;7618:852:30;7713:39;7755:31;;;:21;:31;;;;;;;;7713:73;;;;;;;;;;;;;;;;;;;7755:31;;7713:73;;;7755:31;7713:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7845:9;7840:624;7864:22;:29;7860:1;:33;7840:624;;;7947:10;7918:22;7941:1;7918:25;;;;;;;;:::i;:::-;;;;;;;:39;7914:540;;8304:22;8359:1;8327:22;:29;:33;;;;:::i;:::-;8304:57;;;;;;;;:::i;:::-;;;;;;;8267:21;:31;8289:8;8267:31;;;;;;;;;;;8299:1;8267:34;;;;;;;;:::i;:::-;;;;;;;;:94;;;;8379:21;:31;8401:8;8379:31;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;8434:5;;7914:540;7895:3;;;;:::i;:::-;;;;7840:624;;9205:147:26;9268:7;9298:1;9294;:5;:51;;9426:13;9517:15;;;9552:4;9545:15;;;9598:4;9582:21;;9294:51;;;9426:13;9517:15;;;9552:4;9545:15;;;9598:4;9582:21;;9302:20;9287:58;9205:147;-1:-1:-1;;;9205:147:26:o;6308:1337:34:-;6413:11;:18;;6485:48;;;;;;;;;;;;;;;;;6413:18;;6385:25;;6485:48;6413:18;;6485:48;;6413:11;:18;6485:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6700:17;6721:1;6700:22;6696:99;;-1:-1:-1;;6738:11:34;:26;;;;;;;-1:-1:-1;6738:26:34;;;;;;;-1:-1:-1;6308:1337:34:o;6696:99::-;7050:17;7068:21;7088:1;7068:17;:21;:::i;:::-;7050:40;;;;;;;;:::i;:::-;;;;;;;7039:8;:51;7035:424;;;7131:9;;7110:17;:30;7106:343;;7248:7;;6308:1337;;:::o;7106:343::-;-1:-1:-1;;7384:11:34;:26;;;;;;;-1:-1:-1;7384:26:34;;;;;;;-1:-1:-1;6308:1337:34:o;7106:343::-;7569:69;7581:8;7591;7601:17;7620;3037:22;;3069:494;3101:17;3093:5;:25;3069:494;;;3248:17;3266:5;3248:24;;;;;;;;:::i;:::-;;;;;;;3236:8;:36;3232:188;;3399:7;;;;3232:188;3449:17;3467:5;3449:24;;;;;;;;:::i;:::-;;;;;;;3438:8;:35;3434:119;;;3510:5;3493:22;;3533:5;;3434:119;3120:7;;;;:::i;:::-;;;;3069:494;;;;3618:21;3654:1;3643:8;:12;3642:70;;;;-1:-1:-1;4932:13:30;4964:31;;;:21;:31;;;;;:38;3661:50:34;3642:70;3618:94;;3797:22;4061:16;:67;;;;;4119:8;4082:17;4100:14;4082:33;;;;;;;;:::i;:::-;;;;;;;:45;4061:67;4055:1656;;4498:21;4518:1;4498:17;:21;:::i;:::-;4480:14;:39;4474:844;;4793:13;4809:18;:14;4826:1;4809:18;:::i;:::-;4793:34;;4788:516;4837:17;4829:5;:25;4788:516;;;4908:17;4926:9;4934:1;4926:5;:9;:::i;:::-;4908:28;;;;;;;;:::i;:::-;;;;;;;4887:11;4899:5;4887:18;;;;;;;;:::i;:::-;;;;;;;;;;:49;5122:16;:58;;;;;5171:8;5143:17;5161:5;5143:24;;;;;;;;:::i;:::-;;;;;;;:36;5122:58;5118:168;;;5228:4;5208:24;;5258:5;;5118:168;4856:7;;;;:::i;:::-;;;;4788:516;;;;4474:844;5556:17;5555:18;:53;;;;;5598:9;;5578:17;:29;5555:53;5551:150;;;5628:11;5645:17;5663:21;5683:1;5663:17;:21;:::i;:::-;5645:40;;;;;;;;:::i;:::-;;;;;;;;;;;;5628:58;;;;;;;-1:-1:-1;5628:58:34;;;;;;;;;5551:150;5872:8;5842:11;5854:14;5842:27;;;;;;;;:::i;:::-;;;;;;;;;;:38;-1:-1:-1;;;2812:3075:34;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;196:180:38;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:38;;196:180;-1:-1:-1;196:180:38:o;381:423::-;423:3;461:5;455:12;488:6;483:3;476:19;513:1;523:162;537:6;534:1;531:13;523:162;;;599:4;655:13;;;651:22;;645:29;627:11;;;623:20;;616:59;552:12;523:162;;;527:3;730:1;723:4;714:6;709:3;705:16;701:27;694:38;793:4;786:2;782:7;777:2;769:6;765:15;761:29;756:3;752:39;748:50;741:57;;;381:423;;;;:::o;809:668::-;937:12;;903:4;958:17;;;1024:19;;894:14;;;1052:20;;;864:3;;1121:4;;1148:21;;;;1099:2;1090:12;;;864:3;1197:201;1211:6;1208:1;1205:13;1197:201;;;1278:13;;-1:-1:-1;;;;;1274:39:38;1260:54;;1373:15;;;;1336:14;;;;1310:1;1226:9;1197:201;;;-1:-1:-1;;1434:14:38;;;1428:21;1414:12;;;;1407:43;;;;-1:-1:-1;1466:5:38;809:668;-1:-1:-1;809:668:38:o;1482:793::-;1828:4;1874:1;1870;1865:3;1861:11;1857:19;1915:2;1907:6;1903:15;1892:9;1885:34;1969:6;1962:14;1955:22;1950:2;1939:9;1935:18;1928:50;2014:3;2009:2;1998:9;1994:18;1987:31;2041:46;2082:3;2071:9;2067:19;2059:6;2041:46;:::i;:::-;2142:2;2133:6;2127:13;2123:22;2118:2;2107:9;2103:18;2096:50;2195:9;2187:6;2183:22;2177:3;2166:9;2162:19;2155:51;2223:46;2262:6;2254;2223:46;:::i;:::-;2215:54;1482:793;-1:-1:-1;;;;;;;;;1482:793:38:o;2488:220::-;2637:2;2626:9;2619:21;2600:4;2657:45;2698:2;2687:9;2683:18;2675:6;2657:45;:::i;2869:257::-;2789:12;;2777:25;;2851:4;2840:16;;;2834:23;2818:14;;;2811:47;3061:2;3046:18;;3073:47;2713:151;3131:555;3320:2;3309:9;3302:21;3395:1;3391;3386:3;3382:11;3378:19;3369:6;3363:13;3359:39;3354:2;3343:9;3339:18;3332:67;3453:2;3445:6;3441:15;3435:22;3430:2;3419:9;3415:18;3408:50;3512:2;3504:6;3500:15;3494:22;3489:2;3478:9;3474:18;3467:50;3283:4;3564:2;3556:6;3552:15;3546:22;3606:4;3599;3588:9;3584:20;3577:34;3628:52;3675:3;3664:9;3660:19;3646:12;3628:52;:::i;3691:435::-;3744:3;3782:5;3776:12;3809:6;3804:3;3797:19;3835:4;3864:2;3859:3;3855:12;3848:19;;3901:2;3894:5;3890:14;3922:1;3932:169;3946:6;3943:1;3940:13;3932:169;;;4007:13;;3995:26;;4041:12;;;;4076:15;;;;3968:1;3961:9;3932:169;;;-1:-1:-1;4117:3:38;;3691:435;-1:-1:-1;;;;;3691:435:38:o;4131:261::-;4310:2;4299:9;4292:21;4273:4;4330:56;4382:2;4371:9;4367:18;4359:6;4330:56;:::i;4397:127::-;4458:10;4453:3;4449:20;4446:1;4439:31;4489:4;4486:1;4479:15;4513:4;4510:1;4503:15;4529:257;4601:4;4595:11;;;4633:17;;-1:-1:-1;;;;;4665:34:38;;4701:22;;;4662:62;4659:88;;;4727:18;;:::i;:::-;4763:4;4756:24;4529:257;:::o;4791:253::-;4863:2;4857:9;4905:4;4893:17;;-1:-1:-1;;;;;4925:34:38;;4961:22;;;4922:62;4919:88;;;4987:18;;:::i;5049:251::-;5121:2;5115:9;5163:2;5151:15;;-1:-1:-1;;;;;5181:34:38;;5217:22;;;5178:62;5175:88;;;5243:18;;:::i;5305:275::-;5376:2;5370:9;5441:2;5422:13;;-1:-1:-1;;5418:27:38;5406:40;;-1:-1:-1;;;;;5461:34:38;;5497:22;;;5458:62;5455:88;;;5523:18;;:::i;:::-;5559:2;5552:22;5305:275;;-1:-1:-1;5305:275:38:o;5585:531::-;5628:5;5681:3;5674:4;5666:6;5662:17;5658:27;5648:55;;5699:1;5696;5689:12;5648:55;5735:6;5722:20;-1:-1:-1;;;;;5757:2:38;5754:26;5751:52;;;5783:18;;:::i;:::-;5827:55;5870:2;5851:13;;-1:-1:-1;;5847:27:38;5876:4;5843:38;5827:55;:::i;:::-;5907:2;5898:7;5891:19;5953:3;5946:4;5941:2;5933:6;5929:15;5925:26;5922:35;5919:55;;;5970:1;5967;5960:12;5919:55;6035:2;6028:4;6020:6;6016:17;6009:4;6000:7;5996:18;5983:55;6083:1;6058:16;;;6076:4;6054:27;6047:38;;;;6062:7;5585:531;-1:-1:-1;;;5585:531:38:o;6121:390::-;6199:6;6207;6260:2;6248:9;6239:7;6235:23;6231:32;6228:52;;;6276:1;6273;6266:12;6228:52;6312:9;6299:23;6289:33;;6373:2;6362:9;6358:18;6345:32;-1:-1:-1;;;;;6392:6:38;6389:30;6386:50;;;6432:1;6429;6422:12;6386:50;6455;6497:7;6488:6;6477:9;6473:22;6455:50;:::i;:::-;6445:60;;;6121:390;;;;;:::o;6516:131::-;-1:-1:-1;;;;;6591:31:38;;6581:42;;6571:70;;6637:1;6634;6627:12;6652:367;6715:8;6725:6;6779:3;6772:4;6764:6;6760:17;6756:27;6746:55;;6797:1;6794;6787:12;6746:55;-1:-1:-1;6820:20:38;;-1:-1:-1;;;;;6852:30:38;;6849:50;;;6895:1;6892;6885:12;6849:50;6932:4;6924:6;6920:17;6908:29;;6992:3;6985:4;6975:6;6972:1;6968:14;6960:6;6956:27;6952:38;6949:47;6946:67;;;7009:1;7006;6999:12;7024:572;7119:6;7127;7135;7188:2;7176:9;7167:7;7163:23;7159:32;7156:52;;;7204:1;7201;7194:12;7156:52;7243:9;7230:23;7262:31;7287:5;7262:31;:::i;:::-;7312:5;-1:-1:-1;7368:2:38;7353:18;;7340:32;-1:-1:-1;;;;;7384:30:38;;7381:50;;;7427:1;7424;7417:12;7381:50;7466:70;7528:7;7519:6;7508:9;7504:22;7466:70;:::i;:::-;7024:572;;7555:8;;-1:-1:-1;7440:96:38;;-1:-1:-1;;;;7024:572:38:o;7601:658::-;7772:2;7824:21;;;7894:13;;7797:18;;;7916:22;;;7743:4;;7772:2;7995:15;;;;7969:2;7954:18;;;7743:4;8038:195;8052:6;8049:1;8046:13;8038:195;;;8117:13;;-1:-1:-1;;;;;8113:39:38;8101:52;;8208:15;;;;8173:12;;;;8149:1;8067:9;8038:195;;;-1:-1:-1;8250:3:38;;7601:658;-1:-1:-1;;;;;;7601:658:38:o;8264:160::-;8329:20;;8385:13;;8378:21;8368:32;;8358:60;;8414:1;8411;8404:12;8358:60;8264:160;;;:::o;8429:709::-;8539:6;8547;8555;8563;8571;8624:3;8612:9;8603:7;8599:23;8595:33;8592:53;;;8641:1;8638;8631:12;8592:53;8680:9;8667:23;8699:31;8724:5;8699:31;:::i;:::-;8749:5;-1:-1:-1;8801:2:38;8786:18;;8773:32;;-1:-1:-1;8856:2:38;8841:18;;8828:32;-1:-1:-1;;;;;8872:30:38;;8869:50;;;8915:1;8912;8905:12;8869:50;8954:70;9016:7;9007:6;8996:9;8992:22;8954:70;:::i;:::-;9043:8;;-1:-1:-1;8928:96:38;-1:-1:-1;9097:35:38;;-1:-1:-1;9128:2:38;9113:18;;9097:35;:::i;:::-;9087:45;;8429:709;;;;;;;;:::o;9335:1004::-;9424:6;9477:2;9465:9;9456:7;9452:23;9448:32;9445:52;;;9493:1;9490;9483:12;9445:52;9533:9;9520:23;-1:-1:-1;;;;;9603:2:38;9595:6;9592:14;9589:34;;;9619:1;9616;9609:12;9589:34;9642:22;;;;9698:4;9680:16;;;9676:27;9673:47;;;9716:1;9713;9706:12;9673:47;9749:2;9743:9;9791:4;9783:6;9779:17;9846:6;9834:10;9831:22;9826:2;9814:10;9811:18;9808:46;9805:72;;;9857:18;;:::i;:::-;9893:2;9886:22;9930:16;;9955:31;9930:16;9955:31;:::i;:::-;10010:5;10002:6;9995:21;;10070:2;10066;10062:11;10049:25;10044:2;10036:6;10032:15;10025:50;10129:2;10125;10121:11;10108:25;10103:2;10095:6;10091:15;10084:50;10180:2;10176;10172:11;10159:25;10209:2;10199:8;10196:16;10193:36;;;10225:1;10222;10215:12;10193:36;10262:45;10299:7;10288:8;10284:2;10280:17;10262:45;:::i;:::-;10257:2;10245:15;;10238:70;-1:-1:-1;10249:6:38;9335:1004;-1:-1:-1;;;;;9335:1004:38:o;10344:156::-;10410:20;;10470:4;10459:16;;10449:27;;10439:55;;10490:1;10487;10480:12;10505:713;10625:6;10633;10641;10649;10657;10665;10718:3;10706:9;10697:7;10693:23;10689:33;10686:53;;;10735:1;10732;10725:12;10686:53;10771:9;10758:23;10748:33;;10800:36;10832:2;10821:9;10817:18;10800:36;:::i;:::-;10790:46;;10883:2;10872:9;10868:18;10855:32;10845:42;;10934:2;10923:9;10919:18;10906:32;10896:42;;10989:3;10978:9;10974:19;10961:33;-1:-1:-1;;;;;11009:6:38;11006:30;11003:50;;;11049:1;11046;11039:12;11003:50;11088:70;11150:7;11141:6;11130:9;11126:22;11088:70;:::i;:::-;10505:713;;;;-1:-1:-1;10505:713:38;;-1:-1:-1;10505:713:38;;11177:8;;10505:713;-1:-1:-1;;;10505:713:38:o;11223:183::-;11283:4;-1:-1:-1;;;;;11308:6:38;11305:30;11302:56;;;11338:18;;:::i;:::-;-1:-1:-1;11383:1:38;11379:14;11395:4;11375:25;;11223:183::o;11411:1048::-;11470:5;11518:4;11506:9;11501:3;11497:19;11493:30;11490:50;;;11536:1;11533;11526:12;11490:50;11558:22;;:::i;:::-;11549:31;;11616:9;11603:23;-1:-1:-1;;;;;11641:6:38;11638:30;11635:50;;;11681:1;11678;11671:12;11635:50;11704:22;;11757:4;11749:13;;11745:23;-1:-1:-1;11735:51:38;;11782:1;11779;11772:12;11735:51;11818:2;11805:16;11840:4;11864:60;11880:43;11920:2;11880:43;:::i;:::-;11864:60;:::i;:::-;11958:15;;;12040:1;12036:10;;;;12028:19;;12024:28;;;11989:12;;;;12064:15;;;12061:35;;;12092:1;12089;12082:12;12061:35;12116:11;;;;12136:223;12152:6;12147:3;12144:15;12136:223;;;12234:3;12221:17;12251:33;12276:7;12251:33;:::i;:::-;12297:20;;12169:12;;;;12337;;;;12136:223;;;12368:20;;-1:-1:-1;12433:18:38;;;12420:32;12404:14;;;12397:56;;;;-1:-1:-1;12375:5:38;11411:1048;-1:-1:-1;;11411:1048:38:o;12464:1067::-;12523:5;12562:9;12557:3;12553:19;12592:4;12588:2;12584:13;12581:33;;;12610:1;12607;12600:12;12581:33;12632:22;;:::i;:::-;12623:31;;12691:9;12678:23;12710:33;12735:7;12710:33;:::i;:::-;12752:22;;12806:35;12837:2;12822:18;;12806:35;:::i;:::-;12801:2;12794:5;12790:14;12783:59;12893:2;12882:9;12878:18;12865:32;-1:-1:-1;;;;;12957:2:38;12949:6;12946:14;12943:34;;;12973:1;12970;12963:12;12943:34;13009:46;13051:3;13042:6;13031:9;13027:22;13009:46;:::i;:::-;13004:2;12993:14;;12986:70;13090:2;-1:-1:-1;;13072:16:38;;13068:25;13065:45;;;13106:1;13103;13096:12;13065:45;13134:22;;:::i;:::-;13119:37;;13208:2;13197:9;13193:18;13180:32;13165:47;;13221:33;13246:7;13221:33;:::i;:::-;13279:7;13270;13263:24;13319:7;13314:2;13307:5;13303:14;13296:31;13380:3;13369:9;13365:19;13352:33;13336:49;;13410:2;13400:8;13397:16;13394:36;;;13426:1;13423;13416:12;13394:36;;;13463:61;13520:3;13509:8;13498:9;13494:24;13463:61;:::i;:::-;13457:3;13450:5;13446:15;13439:86;;12464:1067;;;;:::o;13536:356::-;13626:6;13679:2;13667:9;13658:7;13654:23;13650:32;13647:52;;;13695:1;13692;13685:12;13647:52;13735:9;13722:23;-1:-1:-1;;;;;13760:6:38;13757:30;13754:50;;;13800:1;13797;13790:12;13754:50;13823:63;13878:7;13869:6;13858:9;13854:22;13823:63;:::i;13897:161::-;13962:5;14007:3;13998:6;13993:3;13989:16;13985:26;13982:46;;;14024:1;14021;14014:12;13982:46;-1:-1:-1;14046:6:38;13897:161;-1:-1:-1;13897:161:38:o;14063:367::-;14155:6;14208:2;14196:9;14187:7;14183:23;14179:32;14176:52;;;14224:1;14221;14214:12;14176:52;14264:9;14251:23;-1:-1:-1;;;;;14289:6:38;14286:30;14283:50;;;14329:1;14326;14319:12;14283:50;14352:72;14416:7;14407:6;14396:9;14392:22;14352:72;:::i;14435:905::-;14713:4;14742:2;14771;14760:9;14753:21;14797:56;14849:2;14838:9;14834:18;14826:6;14797:56;:::i;:::-;14910:22;;;14872:2;14890:18;;;14883:50;;;;14982:13;;15004:22;;;15080:15;;;;15042;;;15113:1;15123:191;15137:6;15134:1;15131:13;15123:191;;;15186:48;15230:3;15221:6;15215:13;2789:12;;2777:25;;2851:4;2840:16;;;2834:23;2818:14;;2811:47;2713:151;15186:48;15289:15;;;;15254:12;;;;15159:1;15152:9;15123:191;;;-1:-1:-1;15331:3:38;;14435:905;-1:-1:-1;;;;;;;;14435:905:38:o;15345:640::-;15449:6;15457;15465;15473;15526:2;15514:9;15505:7;15501:23;15497:32;15494:52;;;15542:1;15539;15532:12;15494:52;15581:9;15568:23;15600:31;15625:5;15600:31;:::i;:::-;15650:5;-1:-1:-1;15702:2:38;15687:18;;15674:32;;-1:-1:-1;15757:2:38;15742:18;;15729:32;-1:-1:-1;;;;;15773:30:38;;15770:50;;;15816:1;15813;15806:12;15770:50;15855:70;15917:7;15908:6;15897:9;15893:22;15855:70;:::i;:::-;15345:640;;;;-1:-1:-1;15944:8:38;-1:-1:-1;;;;15345:640:38:o;16243:318::-;16318:6;16326;16334;16387:2;16375:9;16366:7;16362:23;16358:32;16355:52;;;16403:1;16400;16393:12;16355:52;16439:9;16426:23;16416:33;;16468:36;16500:2;16489:9;16485:18;16468:36;:::i;:::-;16458:46;;16551:2;16540:9;16536:18;16523:32;16513:42;;16243:318;;;;;:::o;16566:315::-;16634:6;16642;16695:2;16683:9;16674:7;16670:23;16666:32;16663:52;;;16711:1;16708;16701:12;16663:52;16747:9;16734:23;16724:33;;16807:2;16796:9;16792:18;16779:32;16820:31;16845:5;16820:31;:::i;:::-;16870:5;16860:15;;;16566:315;;;;;:::o;16886:248::-;16954:6;16962;17015:2;17003:9;16994:7;16990:23;16986:32;16983:52;;;17031:1;17028;17021:12;16983:52;-1:-1:-1;;17054:23:38;;;17124:2;17109:18;;;17096:32;;-1:-1:-1;16886:248:38:o;17139:247::-;17198:6;17251:2;17239:9;17230:7;17226:23;17222:32;17219:52;;;17267:1;17264;17257:12;17219:52;17306:9;17293:23;17325:31;17350:5;17325:31;:::i;17630:461::-;17892:1;17888;17883:3;17879:11;17875:19;17867:6;17863:32;17852:9;17845:51;17932:6;17927:2;17916:9;17912:18;17905:34;17975:6;17970:2;17959:9;17955:18;17948:34;18018:3;18013:2;18002:9;17998:18;17991:31;17826:4;18039:46;18080:3;18069:9;18065:19;18057:6;18039:46;:::i;:::-;18031:54;17630:461;-1:-1:-1;;;;;;17630:461:38:o;18096:891::-;18180:6;18211:2;18254;18242:9;18233:7;18229:23;18225:32;18222:52;;;18270:1;18267;18260:12;18222:52;18310:9;18297:23;-1:-1:-1;;;;;18335:6:38;18332:30;18329:50;;;18375:1;18372;18365:12;18329:50;18398:22;;18451:4;18443:13;;18439:27;-1:-1:-1;18429:55:38;;18480:1;18477;18470:12;18429:55;18516:2;18503:16;18539:60;18555:43;18595:2;18555:43;:::i;18539:60::-;18633:15;;;18715:1;18711:10;;;;18703:19;;18699:28;;;18664:12;;;;18739:19;;;18736:39;;;18771:1;18768;18761:12;18736:39;18795:11;;;;18815:142;18831:6;18826:3;18823:15;18815:142;;;18897:17;;18885:30;;18848:12;;;;18935;;;;18815:142;;;18976:5;18096:891;-1:-1:-1;;;;;;;18096:891:38:o;19174:703::-;19302:6;19310;19318;19371:2;19359:9;19350:7;19346:23;19342:32;19339:52;;;19387:1;19384;19377:12;19339:52;19427:9;19414:23;-1:-1:-1;;;;;19497:2:38;19489:6;19486:14;19483:34;;;19513:1;19510;19503:12;19483:34;19536:72;19600:7;19591:6;19580:9;19576:22;19536:72;:::i;:::-;19526:82;;19661:2;19650:9;19646:18;19633:32;19617:48;;19690:2;19680:8;19677:16;19674:36;;;19706:1;19703;19696:12;19674:36;;19745:72;19809:7;19798:8;19787:9;19783:24;19745:72;:::i;19882:127::-;19943:10;19938:3;19934:20;19931:1;19924:31;19974:4;19971:1;19964:15;19998:4;19995:1;19988:15;20014:249;20164:2;20149:18;;20197:1;20186:13;;20176:47;;20203:18;;:::i;:::-;20232:25;;;20014:249;:::o;20268:815::-;20459:2;20448:9;20441:21;20422:4;20498:1;20494;20489:3;20485:11;20481:19;20555:2;20546:6;20540:13;20536:22;20531:2;20520:9;20516:18;20509:50;20627:2;20619:6;20615:15;20609:22;20602:30;20595:38;20590:2;20579:9;20575:18;20568:66;20681:2;20673:6;20669:15;20663:22;20721:4;20716:2;20705:9;20701:18;20694:32;20749:52;20796:3;20785:9;20781:19;20767:12;20749:52;:::i;:::-;20735:66;;20873:2;20866;20858:6;20854:15;20848:22;20842:29;20838:38;20832:3;20821:9;20817:19;20810:67;20926:3;20918:6;20914:16;20908:23;20886:45;;21001:2;20997:7;20985:9;20977:6;20973:22;20969:36;20962:4;20951:9;20947:20;20940:66;21023:54;21070:6;21054:14;21023:54;:::i;21088:437::-;21174:6;21182;21235:2;21223:9;21214:7;21210:23;21206:32;21203:52;;;21251:1;21248;21241:12;21203:52;21291:9;21278:23;-1:-1:-1;;;;;21316:6:38;21313:30;21310:50;;;21356:1;21353;21346:12;21310:50;21395:70;21457:7;21448:6;21437:9;21433:22;21395:70;:::i;:::-;21484:8;;21369:96;;-1:-1:-1;21088:437:38;-1:-1:-1;;;;21088:437:38:o;21805:380::-;21884:1;21880:12;;;;21927;;;21948:61;;22002:4;21994:6;21990:17;21980:27;;21948:61;22055:2;22047:6;22044:14;22024:18;22021:38;22018:161;;22101:10;22096:3;22092:20;22089:1;22082:31;22136:4;22133:1;22126:15;22164:4;22161:1;22154:15;22316:545;22418:2;22413:3;22410:11;22407:448;;;22454:1;22479:5;22475:2;22468:17;22524:4;22520:2;22510:19;22594:2;22582:10;22578:19;22575:1;22571:27;22565:4;22561:38;22630:4;22618:10;22615:20;22612:47;;;-1:-1:-1;22653:4:38;22612:47;22708:2;22703:3;22699:12;22696:1;22692:20;22686:4;22682:31;22672:41;;22763:82;22781:2;22774:5;22771:13;22763:82;;;22826:17;;;22807:1;22796:13;22763:82;;;22767:3;;;22316:545;;;:::o;23037:1352::-;23163:3;23157:10;-1:-1:-1;;;;;23182:6:38;23179:30;23176:56;;;23212:18;;:::i;:::-;23241:97;23331:6;23291:38;23323:4;23317:11;23291:38;:::i;:::-;23285:4;23241:97;:::i;:::-;23393:4;;23457:2;23446:14;;23474:1;23469:663;;;;24176:1;24193:6;24190:89;;;-1:-1:-1;24245:19:38;;;24239:26;24190:89;-1:-1:-1;;22994:1:38;22990:11;;;22986:24;22982:29;22972:40;23018:1;23014:11;;;22969:57;24292:81;;23439:944;;23469:663;22263:1;22256:14;;;22300:4;22287:18;;-1:-1:-1;;23505:20:38;;;23623:236;23637:7;23634:1;23631:14;23623:236;;;23726:19;;;23720:26;23705:42;;23818:27;;;;23786:1;23774:14;;;;23653:19;;23623:236;;;23627:3;23887:6;23878:7;23875:19;23872:201;;;23948:19;;;23942:26;-1:-1:-1;;24031:1:38;24027:14;;;24043:3;24023:24;24019:37;24015:42;24000:58;23985:74;;23872:201;-1:-1:-1;;;;;24119:1:38;24103:14;;;24099:22;24086:36;;-1:-1:-1;23037:1352:38:o;24394:127::-;24455:10;24450:3;24446:20;24443:1;24436:31;24486:4;24483:1;24476:15;24510:4;24507:1;24500:15;24526:125;24591:9;;;24612:10;;;24609:36;;;24625:18;;:::i;24955:210::-;25069:9;25106:53;25144:14;25137:5;25106:53;:::i;25170:127::-;25231:10;25226:3;25222:20;25219:1;25212:31;25262:4;25259:1;25252:15;25286:4;25283:1;25276:15;25302:135;25341:3;25362:17;;;25359:43;;25382:18;;:::i;:::-;-1:-1:-1;25429:1:38;25418:13;;25302:135::o;25442:128::-;25509:9;;;25530:11;;;25527:37;;;25544:18;;:::i;25575:655::-;25743:2;25795:21;;;25865:13;;25768:18;;;25887:22;;;25714:4;25952:17;;;25992:16;;;25714:4;;25743:2;25940;25925:18;;;25714:4;26036:168;26050:6;26047:1;26044:13;26036:168;;;26111:13;;26099:26;;26192:1;26180:14;;;;26145:12;;;;26065:9;26036:168;;26915:246;27062:2;27047:18;;27095:1;27084:13;;27074:47;;27101:18;;:::i;27776:168::-;27849:9;;;27880;;27897:15;;;27891:22;;27877:37;27867:71;;27918:18;;:::i;27949:217::-;27989:1;28015;28005:132;;28059:10;28054:3;28050:20;28047:1;28040:31;28094:4;28091:1;28084:15;28122:4;28119:1;28112:15;28005:132;-1:-1:-1;28151:9:38;;27949:217::o;29445:127::-;29506:10;29501:3;29497:20;29494:1;29487:31;29537:4;29534:1;29527:15;29561:4;29558:1;29551:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "AMOUNT_FOR_SUMBITTER_PROOF()": "347cf665",
    "JK_LABS_ADDRESS()": "eef18e17",
    "METADATAS_COUNT()": "4d24a67f",
    "addressSubmitterVerified(address)": "cb853950",
    "addressTotalCastVoteCounts(address)": "a1ac6cb2",
    "addressTotalVotes(address)": "dea5f6a6",
    "addressTotalVotesVerified(address)": "930de979",
    "addressesThatHaveVoted(uint256)": "50c4b616",
    "allProposalTotalVotes()": "50a5e524",
    "allProposalTotalVotesWithoutDeleted()": "d45a010b",
    "cancel()": "ea8a1af0",
    "canceled()": "3f9942ff",
    "castVote(uint256,uint8,uint256,uint256,bytes32[])": "419c533c",
    "castVoteWithoutProof(uint256,uint8,uint256)": "65f16263",
    "checkProof(address,uint256,bytes32[],bool)": "32763c22",
    "comment(uint256,string)": "1805c523",
    "commentIds(uint256)": "f5c36411",
    "commentIsDeleted(uint256)": "ae66b8ad",
    "comments(uint256)": "8ebb4c15",
    "contestAddressTotalVotesCast(address)": "aec116b6",
    "contestDeadline()": "262e59e9",
    "contestStart()": "004114a8",
    "costToPropose()": "6ed815ad",
    "creator()": "02d05d3f",
    "deleteComments(uint256[])": "ac67f801",
    "deleteProposals(uint256[])": "f0a7db0a",
    "deletedCommentIds(uint256)": "3fb57c92",
    "deletedProposalIds(uint256)": "05846cae",
    "downvotingAllowed()": "60506ff6",
    "forVotesToProposalIds(uint256,uint256)": "711effc8",
    "getAllAddressesThatHaveVoted()": "2c39805f",
    "getAllCommentIds()": "e11db9d8",
    "getAllDeletedCommentIds()": "5cb718a1",
    "getAllDeletedProposalIds()": "1242b737",
    "getAllProposalAuthors()": "946369b5",
    "getAllProposalIds()": "efa90d36",
    "getComment(uint256)": "0800e300",
    "getNumProposalsWithThisManyForVotes(uint256)": "9ba197af",
    "getOnlyProposalIdWithThisManyForVotes(uint256)": "b66d1da3",
    "getProposal(uint256)": "c7f758a8",
    "getProposalComments(uint256)": "c05f4104",
    "getProposalsWithThisManyForVotes(uint256)": "c9a1b6b2",
    "getRankIndex(uint256)": "5c7107d8",
    "getSortedRanks()": "6fd3636b",
    "hashComment((address,uint256,uint256,string))": "409fd030",
    "hashProposal((address,bool,string,(address),(address[],uint256)))": "458da87d",
    "isOrIsBelowTiedRank(uint256)": "9174778c",
    "maxProposalCount()": "fb9bf8d4",
    "name()": "06fdde03",
    "numAllowedProposalSubmissions()": "832009af",
    "numSubmissions(address)": "75e509c5",
    "officialRewardsModule()": "785ddfe5",
    "percentageToCreator()": "edcd1be4",
    "prompt()": "7c65d711",
    "proposalAddressVotes(uint256,address)": "6e4eb810",
    "proposalAddressesHaveVoted(uint256)": "b323580d",
    "proposalAuthors(uint256)": "0aa25e44",
    "proposalComments(uint256,uint256)": "f61736f4",
    "proposalIds(uint256)": "9b644a23",
    "proposalIsDeleted(uint256)": "f79c0172",
    "proposalVotes(uint256)": "544ffc9c",
    "proposalVotesStructs(uint256)": "070dc5d9",
    "proposals(uint256)": "013cf08b",
    "propose((address,bool,string,(address),(address[],uint256)),bytes32[])": "c0ffaa78",
    "proposeWithoutProof((address,bool,string,(address),(address[],uint256)))": "476f4d8a",
    "rankLimit()": "0414126a",
    "setOfficialRewardsModule(address)": "f4f3d7ec",
    "sortedRanks(uint256)": "325cc6d9",
    "sortingEnabled()": "366ecf5b",
    "state()": "c19d93fb",
    "submissionMerkleRoot()": "bddc1641",
    "totalVotesCast()": "7de418d5",
    "validateProposalData((address,bool,string,(address),(address[],uint256)))": "fb8ddab4",
    "verifyProposer(address,bytes32[])": "20b3e845",
    "verifyVoter(address,uint256,bytes32[])": "531bd812",
    "version()": "54fd4d50",
    "voteStart()": "e031535b",
    "votingDelay()": "3932abb1",
    "votingMerkleRoot()": "dd96a19d",
    "votingPeriod()": "02a251a3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_prompt\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"_submissionMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_votingMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"_constructorIntParams\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AddressNotPermissionedToSubmit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"AuthorIsNotSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotDeleteWhenCompleted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotVoteOnDeletedProposal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ContestAlreadyCancelled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum Governor.ContestState\",\"name\":\"currentState\",\"type\":\"uint8\"}],\"name\":\"ContestMustBeActiveToVote\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum Governor.ContestState\",\"name\":\"currentState\",\"type\":\"uint8\"}],\"name\":\"ContestMustBeQueuedToPropose\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxProposalCount\",\"type\":\"uint256\"}],\"name\":\"ContestSubmissionLimitReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DownvotingNotEnabled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"DuplicateSubmission\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptyProposalDescription\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"costToPropose\",\"type\":\"uint256\"}],\"name\":\"IncorrectCostToProposeSent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IndexHasNotBeenPopulated\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidVoteType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MoreThanOneProposalWithThisManyVotes\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NeedAtLeastOneVoteToVote\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NeedToSubmitWithProofFirst\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NeedToVoteWithProofFirst\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughVotesLeft\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInMerkle\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyCreatorCanDelete\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyCreatorCanSetRewardsModule\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"failedToDeleteCommentId\",\"type\":\"uint256\"}],\"name\":\"OnlyCreatorOrAuthorCanDeleteComments\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyJkLabsOrCreatorCanCancel\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RankCannotBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RankIsNotInSortedRanks\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numAllowedProposalSubmissions\",\"type\":\"uint256\"}],\"name\":\"SenderSubmissionLimitReached\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum Governor.Metadatas\",\"name\":\"unexpectedMetadata\",\"type\":\"uint8\"}],\"name\":\"UnexpectedMetadata\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroSignersInSafeMetadata\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroThresholdInSafeMetadata\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commentId\",\"type\":\"uint256\"}],\"name\":\"CommentCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"commentIds\",\"type\":\"uint256[]\"}],\"name\":\"CommentsDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ContestCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"JokeraceCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract RewardsModule\",\"name\":\"oldOfficialRewardsModule\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract RewardsModule\",\"name\":\"newOfficialRewardsModule\",\"type\":\"address\"}],\"name\":\"OfficialRewardsModuleSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PaymentReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"proposalIds\",\"type\":\"uint256[]\"}],\"name\":\"ProposalsDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"numVotes\",\"type\":\"uint256\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AMOUNT_FOR_SUMBITTER_PROOF\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"JK_LABS_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"METADATAS_COUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressSubmitterVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressTotalCastVoteCounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressTotalVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressTotalVotesVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addressesThatHaveVoted\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allProposalTotalVotes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"proposalIdsReturn\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"internalType\":\"struct GovernorCountingSimple.VoteCounts[]\",\"name\":\"proposalVoteCountsArrayReturn\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allProposalTotalVotesWithoutDeleted\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"proposalIdsReturn\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"internalType\":\"struct GovernorCountingSimple.VoteCounts[]\",\"name\":\"proposalVoteCountsArrayReturn\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canceled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numVotes\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"castVote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"numVotes\",\"type\":\"uint256\"}],\"name\":\"castVoteWithoutProof\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressToCheck\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool\",\"name\":\"voting\",\"type\":\"bool\"}],\"name\":\"checkProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"commentContent\",\"type\":\"string\"}],\"name\":\"comment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"commentIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"commentIsDeleted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"comments\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"commentContent\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"contestAddressTotalVotesCast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"userTotalVotesCast\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contestDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contestStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"costToPropose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"commentIdsParam\",\"type\":\"uint256[]\"}],\"name\":\"deleteComments\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"proposalIdsToDelete\",\"type\":\"uint256[]\"}],\"name\":\"deleteProposals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deletedCommentIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deletedProposalIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"downvotingAllowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"forVotesToProposalIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllAddressesThatHaveVoted\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllCommentIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllDeletedCommentIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllDeletedProposalIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllProposalAuthors\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllProposalIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"commentId\",\"type\":\"uint256\"}],\"name\":\"getComment\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"commentContent\",\"type\":\"string\"}],\"internalType\":\"struct GovernorEngagement.CommentCore\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"}],\"name\":\"getNumProposalsWithThisManyForVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"}],\"name\":\"getOnlyProposalIdWithThisManyForVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposal\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Governor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct Governor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct Governor.ProposalCore\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposalComments\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"}],\"name\":\"getProposalsWithThisManyForVotes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"proposalsWithThisManyForVotes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rank\",\"type\":\"uint256\"}],\"name\":\"getRankIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rankIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSortedRanks\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"sortedRanksArray\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"commentContent\",\"type\":\"string\"}],\"internalType\":\"struct GovernorEngagement.CommentCore\",\"name\":\"commentObj\",\"type\":\"tuple\"}],\"name\":\"hashComment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Governor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct Governor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct Governor.ProposalCore\",\"name\":\"proposal\",\"type\":\"tuple\"}],\"name\":\"hashProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"isOrIsBelowTiedRank\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"atOrBelowTiedRank\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxProposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numAllowedProposalSubmissions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"numSubmissions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"officialRewardsModule\",\"outputs\":[{\"internalType\":\"contract RewardsModule\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"percentageToCreator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prompt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"proposalAddressVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalAddressesHaveVoted\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalAuthors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalComments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalIsDeleted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalVotesStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"internalType\":\"struct GovernorCountingSimple.VoteCounts\",\"name\":\"proposalVoteCounts\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Governor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct Governor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Governor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct Governor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct Governor.ProposalCore\",\"name\":\"proposal\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Governor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct Governor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct Governor.ProposalCore\",\"name\":\"proposal\",\"type\":\"tuple\"}],\"name\":\"proposeWithoutProof\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rankLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract RewardsModule\",\"name\":\"officialRewardsModule_\",\"type\":\"address\"}],\"name\":\"setOfficialRewardsModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sortedRanks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sortingEnabled\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum Governor.ContestState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"submissionMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVotesCast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Governor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct Governor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct Governor.ProposalCore\",\"name\":\"proposal\",\"type\":\"tuple\"}],\"name\":\"validateProposalData\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"verifyProposer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"verifyVoter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voteStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"CommentCreated(uint256)\":{\"details\":\"Emitted when a comment is created.\"},\"CommentsDeleted(uint256[])\":{\"details\":\"Emitted when comments are deleted.\"}},\"kind\":\"dev\",\"methods\":{\"allProposalTotalVotes()\":{\"details\":\"Accessor to the internal vote counts for a given proposal.\"},\"allProposalTotalVotesWithoutDeleted()\":{\"details\":\"Accessor to the internal vote counts for a given proposal that excludes deleted proposals.\"},\"cancel()\":{\"details\":\"Cancels the contest. Emits a {IGovernor-ContestCanceled} event.\"},\"castVote(uint256,uint8,uint256,uint256,bytes32[])\":{\"details\":\"Cast a vote with a merkle proof.\"},\"castVoteWithoutProof(uint256,uint8,uint256)\":{\"details\":\"Cast a vote without a proof if you have already voted with a proof.\"},\"checkProof(address,uint256,bytes32[],bool)\":{\"params\":{\"addressToCheck\":\"address of participant\",\"amount\":\"to check that the participant has the correct amount\",\"proof\":\"merkle proof to prove address and amount are in tree\",\"voting\":\"true if this is for a voting proof, false if this is for a submission proof\"}},\"comment(uint256,string)\":{\"details\":\"Comment on a proposal. Emits a {CommentCreated} event.\"},\"contestAddressTotalVotesCast(address)\":{\"details\":\"Accessor to how many votes an address has cast total for the contest so far.\"},\"contestDeadline()\":{\"details\":\"Returns if a proposal has been deleted or not.\"},\"deleteComments(uint256[])\":{\"details\":\"Delete comments. Emits a {CommentsDeleted} event.\"},\"deleteProposals(uint256[])\":{\"details\":\"Delete proposals. Emits a {IGovernor-ProposalsDeleted} event.\"},\"getAllAddressesThatHaveVoted()\":{\"details\":\"Return all addresses that have voted.\"},\"getAllCommentIds()\":{\"details\":\"Return all commentIds.\"},\"getAllDeletedCommentIds()\":{\"details\":\"Return all deleted commentIds.\"},\"getAllDeletedProposalIds()\":{\"details\":\"Return all deleted proposals.\"},\"getAllProposalAuthors()\":{\"details\":\"Return all proposal authors.\"},\"getAllProposalIds()\":{\"details\":\"Return all proposals.\"},\"getComment(uint256)\":{\"details\":\"Return a comment object.\"},\"getNumProposalsWithThisManyForVotes(uint256)\":{\"details\":\"Get the number of proposals that have `forVotes` number of for votes.\"},\"getOnlyProposalIdWithThisManyForVotes(uint256)\":{\"details\":\"Get the only proposal id with this many for votes. NOTE: Should only get called at a point at which you are sure there is only one proposal id       with a certain number of forVotes (we only use it in the RewardsModule after ties have       been checked for).\"},\"getProposal(uint256)\":{\"details\":\"Retrieve proposal data.\"},\"getProposalComments(uint256)\":{\"details\":\"Return the array of commentIds on a given proposalId.\"},\"getProposalsWithThisManyForVotes(uint256)\":{\"details\":\"Get the whole array in `forVotesToProposalIds` for a given `forVotes` amount.\"},\"getRankIndex(uint256)\":{\"details\":\"Get the idx of sortedRanks considered to hold the queried rank taking deleted proposals into account.      A rank has to have > 0 votes to be considered valid.\"},\"getSortedRanks()\":{\"details\":\"Get the sortedRanks array.\"},\"hashComment((address,uint256,uint256,string))\":{\"details\":\"Hashing function used to build the comment id from the comment details.\"},\"isOrIsBelowTiedRank(uint256)\":{\"details\":\"Returns whether a given index in sortedRanks is tied or is below a tied rank.\"},\"proposalAddressVotes(uint256,address)\":{\"details\":\"Accessor to how many votes an address has cast for a given proposal.\"},\"proposalAddressesHaveVoted(uint256)\":{\"details\":\"Accessor to which addresses have cast a vote for a given proposal.\"},\"proposalVotes(uint256)\":{\"details\":\"Accessor to the internal vote counts for a given proposal.\"},\"propose((address,bool,string,(address),(address[],uint256)),bytes32[])\":{\"details\":\"Create a new proposal.\"},\"proposeWithoutProof((address,bool,string,(address),(address[],uint256)))\":{\"details\":\"Create a new proposal without a proof if you have already proposed with a proof.\"},\"setOfficialRewardsModule(address)\":{\"details\":\"Get the official rewards module contract for this contest (effectively reverse record).\"},\"validateProposalData((address,bool,string,(address),(address[],uint256)))\":{\"details\":\"Verifies that all of the metadata in the proposal is valid.\"},\"verifyProposer(address,bytes32[])\":{\"details\":\"Verifies that `account` is permissioned to propose via merkle proof.\"},\"verifyVoter(address,uint256,bytes32[])\":{\"details\":\"Verifies that `account` is permissioned to vote with `totalVotes` via merkle proof.\"},\"voteStart()\":{\"details\":\"Timestamp the contest vote begins. Votes open at the end of this block, so it is possible to propose during this block.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"NotInMerkle()\":[{\"notice\":\"Thrown if address/amount are not part of Merkle tree\"}]},\"kind\":\"user\",\"methods\":{\"checkProof(address,uint256,bytes32[],bool)\":{\"notice\":\"Allows checking of proofs for an address\"},\"submissionMerkleRoot()\":{\"notice\":\"Participant inclusion roots\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Contest.sol\":\"Contest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4\",\"dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"src/Contest.sol\":{\"keccak256\":\"0x9e4625cdd5e3737e93194fe019f822c1ac21effe0c9f8c3f4e3459d47e159e1d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a95c04d0551993b81e3bcc6821f913ea91c12af38c687b3341e3bc76ad13e34\",\"dweb:/ipfs/QmVyJtQcLq1PDNYRYmJeMMQN2ektkY6z2SSyn51qEjQgPU\"]},\"src/governance/Governor.sol\":{\"keccak256\":\"0x0ba603ea28335be27642de88c7a4bc189ec34302b4fa804e89cc3810cbca2ead\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38d2ed1ef5303958cb2ea45209df9b5d62c0845fb88082c3ef87f8dc9b9bd8a4\",\"dweb:/ipfs/QmajbSZfmCMXnWmLqYLrEDCeDW2GnPqV5kTfn6XfksZhKv\"]},\"src/governance/extensions/GovernorCountingSimple.sol\":{\"keccak256\":\"0xb5fc4b93f15d86874e0c4fc6f19cc6208bb5b9113749ec307036d88a2a3778e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3eb96ad5dbe6243dee2902144e6ffc4c58de68ae715ed666bf8310aae4af2559\",\"dweb:/ipfs/QmPuVHR3CXGdAnKk8WbShpm6QMAQZHn2whhqiKNrzG9tDJ\"]},\"src/governance/extensions/GovernorEngagement.sol\":{\"keccak256\":\"0x9bcf001d6b907ad106e507eb845c464c2b0120f2e1f6e3b2e0942f10e0b06489\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd3ff4899cef97df767b62dd72ee5dd95a4a764fd3f9cad98e4f13edada58634\",\"dweb:/ipfs/QmaYV4YYAw6qUJ5UUbY1yLUgapeswPE5Vwm83hnkRqjjPc\"]},\"src/governance/extensions/GovernorModuleRegistry.sol\":{\"keccak256\":\"0x125d25059bc535ebe7b693655f4f659e9094142d4214a0d7c0fcf5a40abbd09f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9bbacb3d06b816012e6eb700a12e5bfc2b574d2cd7c7b7ce9ce4fc94ee7396a\",\"dweb:/ipfs/QmPA9As3fYH7uj8h1YijwK4Sh93AnRbuBBQMqxzjMBndWh\"]},\"src/governance/utils/GovernorMerkleVotes.sol\":{\"keccak256\":\"0x86a4459ec25486a65bd3a4bbbd9dab7c70c30a1f13839cffc03dcab372c58f7f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://da7278d541df3a2ca19c2e364f508b21a2d16551d50818dd21b32ea606401417\",\"dweb:/ipfs/QmP3bgW4D9yPF8YyrnSvSR5t2VNM4SAU32XzsgG3CGom32\"]},\"src/governance/utils/GovernorSorting.sol\":{\"keccak256\":\"0x3c34f027313e32b0f82f267f42deab9b37293c3c4b238880487a1abd6d8a091b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7566a7ea9c346cdaf30de3cd8ffb30da05d5c06b5ffdcf357fd439bd4dd54a1\",\"dweb:/ipfs/QmWrZ9gkqgn35Dp4AhTNr78jnZpSp1HNn1LMTrfwVwC6wU\"]},\"src/modules/RewardsModule.sol\":{\"keccak256\":\"0xb611464c6db429d46d76946216fd59e49ee12f61f41a247d945b18742be6ec25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f5bcf4cbbb7b5639e522af272c87c11dacf3d687a32b4c8986013b623830be5\",\"dweb:/ipfs/QmSpJbd8tt5Xg1X2K8vACJazNbbtcKZLfmsZr8VmoY8Q6k\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_prompt",
              "type": "string"
            },
            {
              "internalType": "bytes32",
              "name": "_submissionMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "_votingMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256[]",
              "name": "_constructorIntParams",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AddressNotPermissionedToSubmit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AuthorIsNotSender"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CannotDeleteWhenCompleted"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CannotVoteOnDeletedProposal"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ContestAlreadyCancelled"
        },
        {
          "inputs": [
            {
              "internalType": "enum Governor.ContestState",
              "name": "currentState",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "ContestMustBeActiveToVote"
        },
        {
          "inputs": [
            {
              "internalType": "enum Governor.ContestState",
              "name": "currentState",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "ContestMustBeQueuedToPropose"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "maxProposalCount",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ContestSubmissionLimitReached"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DownvotingNotEnabled"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "DuplicateSubmission"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EmptyProposalDescription"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "msgValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "costToPropose",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "IncorrectCostToProposeSent"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IndexHasNotBeenPopulated"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidVoteType"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MoreThanOneProposalWithThisManyVotes"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NeedAtLeastOneVoteToVote"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NeedToSubmitWithProofFirst"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NeedToVoteWithProofFirst"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotEnoughVotesLeft"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotInMerkle"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyCreatorCanDelete"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyCreatorCanSetRewardsModule"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "failedToDeleteCommentId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "OnlyCreatorOrAuthorCanDeleteComments"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyJkLabsOrCreatorCanCancel"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RankCannotBeZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RankIsNotInSortedRanks"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "numAllowedProposalSubmissions",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "SenderSubmissionLimitReached"
        },
        {
          "inputs": [
            {
              "internalType": "enum Governor.Metadatas",
              "name": "unexpectedMetadata",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "UnexpectedMetadata"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroSignersInSafeMetadata"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroThresholdInSafeMetadata"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "commentId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CommentCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "commentIds",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CommentsDeleted",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "ContestCanceled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "JokeraceCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract RewardsModule",
              "name": "oldOfficialRewardsModule",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract RewardsModule",
              "name": "newOfficialRewardsModule",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OfficialRewardsModuleSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PaymentReleased",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "proposer",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProposalCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalIds",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProposalsDeleted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "voter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "numVotes",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VoteCast",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "AMOUNT_FOR_SUMBITTER_PROOF",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "JK_LABS_ADDRESS",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "METADATAS_COUNT",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressSubmitterVerified",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressTotalCastVoteCounts",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressTotalVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressTotalVotesVerified",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressesThatHaveVoted",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allProposalTotalVotes",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalIdsReturn",
              "type": "uint256[]"
            },
            {
              "internalType": "struct GovernorCountingSimple.VoteCounts[]",
              "name": "proposalVoteCountsArrayReturn",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "forVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "againstVotes",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allProposalTotalVotesWithoutDeleted",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalIdsReturn",
              "type": "uint256[]"
            },
            {
              "internalType": "struct GovernorCountingSimple.VoteCounts[]",
              "name": "proposalVoteCountsArrayReturn",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "forVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "againstVotes",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancel"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "canceled",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "totalVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "numVotes",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "castVote",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "numVotes",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "castVoteWithoutProof",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "addressToCheck",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "bool",
              "name": "voting",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkProof",
          "outputs": [
            {
              "internalType": "bool",
              "name": "verified",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "commentContent",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "comment",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "commentIds",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "commentIsDeleted",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "comments",
          "outputs": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "commentContent",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "userAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "contestAddressTotalVotesCast",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "userTotalVotesCast",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contestDeadline",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contestStart",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "costToPropose",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "creator",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "commentIdsParam",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteComments"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalIdsToDelete",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteProposals"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "deletedCommentIds",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "deletedProposalIds",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "downvotingAllowed",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "forVotesToProposalIds",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllAddressesThatHaveVoted",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllCommentIds",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllDeletedCommentIds",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllDeletedProposalIds",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllProposalAuthors",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllProposalIds",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "commentId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getComment",
          "outputs": [
            {
              "internalType": "struct GovernorEngagement.CommentCore",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "commentContent",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getNumProposalsWithThisManyForVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOnlyProposalIdWithThisManyForVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProposal",
          "outputs": [
            {
              "internalType": "struct Governor.ProposalCore",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "struct Governor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct Governor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProposalComments",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProposalsWithThisManyForVotes",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalsWithThisManyForVotes",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "rank",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRankIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "rankIndex",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getSortedRanks",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "sortedRanksArray",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct GovernorEngagement.CommentCore",
              "name": "commentObj",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "commentContent",
                  "type": "string"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "hashComment",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Governor.ProposalCore",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "struct Governor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct Governor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "hashProposal",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "idx",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOrIsBelowTiedRank",
          "outputs": [
            {
              "internalType": "bool",
              "name": "atOrBelowTiedRank",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxProposalCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "numAllowedProposalSubmissions",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "numSubmissions",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "officialRewardsModule",
          "outputs": [
            {
              "internalType": "contract RewardsModule",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "percentageToCreator",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "prompt",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "userAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalAddressVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalAddressesHaveVoted",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalAuthors",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalComments",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalIds",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalIsDeleted",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalVotesStructs",
          "outputs": [
            {
              "internalType": "struct GovernorCountingSimple.VoteCounts",
              "name": "proposalVoteCounts",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "forVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "againstVotes",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposals",
          "outputs": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "struct Governor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct Governor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Governor.ProposalCore",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "struct Governor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct Governor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "propose",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Governor.ProposalCore",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "struct Governor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct Governor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "proposeWithoutProof",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rankLimit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract RewardsModule",
              "name": "officialRewardsModule_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOfficialRewardsModule"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "sortedRanks",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sortingEnabled",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "state",
          "outputs": [
            {
              "internalType": "enum Governor.ContestState",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "submissionMerkleRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalVotesCast",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Governor.ProposalCore",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "struct Governor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct Governor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "validateProposalData"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyProposer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalVotes",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyVoter"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "voteStart",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "votingDelay",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "votingMerkleRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "votingPeriod",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allProposalTotalVotes()": {
            "details": "Accessor to the internal vote counts for a given proposal."
          },
          "allProposalTotalVotesWithoutDeleted()": {
            "details": "Accessor to the internal vote counts for a given proposal that excludes deleted proposals."
          },
          "cancel()": {
            "details": "Cancels the contest. Emits a {IGovernor-ContestCanceled} event."
          },
          "castVote(uint256,uint8,uint256,uint256,bytes32[])": {
            "details": "Cast a vote with a merkle proof."
          },
          "castVoteWithoutProof(uint256,uint8,uint256)": {
            "details": "Cast a vote without a proof if you have already voted with a proof."
          },
          "checkProof(address,uint256,bytes32[],bool)": {
            "params": {
              "addressToCheck": "address of participant",
              "amount": "to check that the participant has the correct amount",
              "proof": "merkle proof to prove address and amount are in tree",
              "voting": "true if this is for a voting proof, false if this is for a submission proof"
            }
          },
          "comment(uint256,string)": {
            "details": "Comment on a proposal. Emits a {CommentCreated} event."
          },
          "contestAddressTotalVotesCast(address)": {
            "details": "Accessor to how many votes an address has cast total for the contest so far."
          },
          "contestDeadline()": {
            "details": "Returns if a proposal has been deleted or not."
          },
          "deleteComments(uint256[])": {
            "details": "Delete comments. Emits a {CommentsDeleted} event."
          },
          "deleteProposals(uint256[])": {
            "details": "Delete proposals. Emits a {IGovernor-ProposalsDeleted} event."
          },
          "getAllAddressesThatHaveVoted()": {
            "details": "Return all addresses that have voted."
          },
          "getAllCommentIds()": {
            "details": "Return all commentIds."
          },
          "getAllDeletedCommentIds()": {
            "details": "Return all deleted commentIds."
          },
          "getAllDeletedProposalIds()": {
            "details": "Return all deleted proposals."
          },
          "getAllProposalAuthors()": {
            "details": "Return all proposal authors."
          },
          "getAllProposalIds()": {
            "details": "Return all proposals."
          },
          "getComment(uint256)": {
            "details": "Return a comment object."
          },
          "getNumProposalsWithThisManyForVotes(uint256)": {
            "details": "Get the number of proposals that have `forVotes` number of for votes."
          },
          "getOnlyProposalIdWithThisManyForVotes(uint256)": {
            "details": "Get the only proposal id with this many for votes. NOTE: Should only get called at a point at which you are sure there is only one proposal id       with a certain number of forVotes (we only use it in the RewardsModule after ties have       been checked for)."
          },
          "getProposal(uint256)": {
            "details": "Retrieve proposal data."
          },
          "getProposalComments(uint256)": {
            "details": "Return the array of commentIds on a given proposalId."
          },
          "getProposalsWithThisManyForVotes(uint256)": {
            "details": "Get the whole array in `forVotesToProposalIds` for a given `forVotes` amount."
          },
          "getRankIndex(uint256)": {
            "details": "Get the idx of sortedRanks considered to hold the queried rank taking deleted proposals into account.      A rank has to have > 0 votes to be considered valid."
          },
          "getSortedRanks()": {
            "details": "Get the sortedRanks array."
          },
          "hashComment((address,uint256,uint256,string))": {
            "details": "Hashing function used to build the comment id from the comment details."
          },
          "isOrIsBelowTiedRank(uint256)": {
            "details": "Returns whether a given index in sortedRanks is tied or is below a tied rank."
          },
          "proposalAddressVotes(uint256,address)": {
            "details": "Accessor to how many votes an address has cast for a given proposal."
          },
          "proposalAddressesHaveVoted(uint256)": {
            "details": "Accessor to which addresses have cast a vote for a given proposal."
          },
          "proposalVotes(uint256)": {
            "details": "Accessor to the internal vote counts for a given proposal."
          },
          "propose((address,bool,string,(address),(address[],uint256)),bytes32[])": {
            "details": "Create a new proposal."
          },
          "proposeWithoutProof((address,bool,string,(address),(address[],uint256)))": {
            "details": "Create a new proposal without a proof if you have already proposed with a proof."
          },
          "setOfficialRewardsModule(address)": {
            "details": "Get the official rewards module contract for this contest (effectively reverse record)."
          },
          "validateProposalData((address,bool,string,(address),(address[],uint256)))": {
            "details": "Verifies that all of the metadata in the proposal is valid."
          },
          "verifyProposer(address,bytes32[])": {
            "details": "Verifies that `account` is permissioned to propose via merkle proof."
          },
          "verifyVoter(address,uint256,bytes32[])": {
            "details": "Verifies that `account` is permissioned to vote with `totalVotes` via merkle proof."
          },
          "voteStart()": {
            "details": "Timestamp the contest vote begins. Votes open at the end of this block, so it is possible to propose during this block."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "checkProof(address,uint256,bytes32[],bool)": {
            "notice": "Allows checking of proofs for an address"
          },
          "submissionMerkleRoot()": {
            "notice": "Participant inclusion roots"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@forge-std/=lib/forge-std/src/",
        "@openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Contest.sol": "Contest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa",
        "urls": [
          "bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4",
          "dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol": {
        "keccak256": "0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac",
        "urls": [
          "bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04",
          "dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "src/Contest.sol": {
        "keccak256": "0x9e4625cdd5e3737e93194fe019f822c1ac21effe0c9f8c3f4e3459d47e159e1d",
        "urls": [
          "bzz-raw://5a95c04d0551993b81e3bcc6821f913ea91c12af38c687b3341e3bc76ad13e34",
          "dweb:/ipfs/QmVyJtQcLq1PDNYRYmJeMMQN2ektkY6z2SSyn51qEjQgPU"
        ],
        "license": "MIT"
      },
      "src/governance/Governor.sol": {
        "keccak256": "0x0ba603ea28335be27642de88c7a4bc189ec34302b4fa804e89cc3810cbca2ead",
        "urls": [
          "bzz-raw://38d2ed1ef5303958cb2ea45209df9b5d62c0845fb88082c3ef87f8dc9b9bd8a4",
          "dweb:/ipfs/QmajbSZfmCMXnWmLqYLrEDCeDW2GnPqV5kTfn6XfksZhKv"
        ],
        "license": "MIT"
      },
      "src/governance/extensions/GovernorCountingSimple.sol": {
        "keccak256": "0xb5fc4b93f15d86874e0c4fc6f19cc6208bb5b9113749ec307036d88a2a3778e0",
        "urls": [
          "bzz-raw://3eb96ad5dbe6243dee2902144e6ffc4c58de68ae715ed666bf8310aae4af2559",
          "dweb:/ipfs/QmPuVHR3CXGdAnKk8WbShpm6QMAQZHn2whhqiKNrzG9tDJ"
        ],
        "license": "MIT"
      },
      "src/governance/extensions/GovernorEngagement.sol": {
        "keccak256": "0x9bcf001d6b907ad106e507eb845c464c2b0120f2e1f6e3b2e0942f10e0b06489",
        "urls": [
          "bzz-raw://bd3ff4899cef97df767b62dd72ee5dd95a4a764fd3f9cad98e4f13edada58634",
          "dweb:/ipfs/QmaYV4YYAw6qUJ5UUbY1yLUgapeswPE5Vwm83hnkRqjjPc"
        ],
        "license": "MIT"
      },
      "src/governance/extensions/GovernorModuleRegistry.sol": {
        "keccak256": "0x125d25059bc535ebe7b693655f4f659e9094142d4214a0d7c0fcf5a40abbd09f",
        "urls": [
          "bzz-raw://d9bbacb3d06b816012e6eb700a12e5bfc2b574d2cd7c7b7ce9ce4fc94ee7396a",
          "dweb:/ipfs/QmPA9As3fYH7uj8h1YijwK4Sh93AnRbuBBQMqxzjMBndWh"
        ],
        "license": "MIT"
      },
      "src/governance/utils/GovernorMerkleVotes.sol": {
        "keccak256": "0x86a4459ec25486a65bd3a4bbbd9dab7c70c30a1f13839cffc03dcab372c58f7f",
        "urls": [
          "bzz-raw://da7278d541df3a2ca19c2e364f508b21a2d16551d50818dd21b32ea606401417",
          "dweb:/ipfs/QmP3bgW4D9yPF8YyrnSvSR5t2VNM4SAU32XzsgG3CGom32"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/governance/utils/GovernorSorting.sol": {
        "keccak256": "0x3c34f027313e32b0f82f267f42deab9b37293c3c4b238880487a1abd6d8a091b",
        "urls": [
          "bzz-raw://e7566a7ea9c346cdaf30de3cd8ffb30da05d5c06b5ffdcf357fd439bd4dd54a1",
          "dweb:/ipfs/QmWrZ9gkqgn35Dp4AhTNr78jnZpSp1HNn1LMTrfwVwC6wU"
        ],
        "license": "MIT"
      },
      "src/modules/RewardsModule.sol": {
        "keccak256": "0xb611464c6db429d46d76946216fd59e49ee12f61f41a247d945b18742be6ec25",
        "urls": [
          "bzz-raw://3f5bcf4cbbb7b5639e522af272c87c11dacf3d687a32b4c8986013b623830be5",
          "dweb:/ipfs/QmSpJbd8tt5Xg1X2K8vACJazNbbtcKZLfmsZr8VmoY8Q6k"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Contest.sol",
    "id": 32637,
    "exportedSymbols": {
      "Address": [
        30478
      ],
      "Contest": [
        32636
      ],
      "Governor": [
        33797
      ],
      "GovernorCountingSimple": [
        34553
      ],
      "GovernorEngagement": [
        34799
      ],
      "GovernorMerkleVotes": [
        34932
      ],
      "GovernorModuleRegistry": [
        34850
      ],
      "GovernorSorting": [
        35192
      ],
      "IERC20": [
        29638
      ],
      "IERC20Permit": [
        29743
      ],
      "MerkleProof": [
        31028
      ],
      "RewardsModule": [
        35898
      ],
      "SafeCast": [
        32569
      ],
      "SafeERC20": [
        30148
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1334:28",
    "nodes": [
      {
        "id": 32571,
        "nodeType": "PragmaDirective",
        "src": "32:23:28",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 32572,
        "nodeType": "ImportDirective",
        "src": "57:35:28",
        "nodes": [],
        "absolutePath": "src/governance/Governor.sol",
        "file": "./governance/Governor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32637,
        "sourceUnit": 33798,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32573,
        "nodeType": "ImportDirective",
        "src": "93:60:28",
        "nodes": [],
        "absolutePath": "src/governance/extensions/GovernorCountingSimple.sol",
        "file": "./governance/extensions/GovernorCountingSimple.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32637,
        "sourceUnit": 34554,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32574,
        "nodeType": "ImportDirective",
        "src": "154:60:28",
        "nodes": [],
        "absolutePath": "src/governance/extensions/GovernorModuleRegistry.sol",
        "file": "./governance/extensions/GovernorModuleRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32637,
        "sourceUnit": 34851,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32575,
        "nodeType": "ImportDirective",
        "src": "215:56:28",
        "nodes": [],
        "absolutePath": "src/governance/extensions/GovernorEngagement.sol",
        "file": "./governance/extensions/GovernorEngagement.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32637,
        "sourceUnit": 34800,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32576,
        "nodeType": "ImportDirective",
        "src": "272:48:28",
        "nodes": [],
        "absolutePath": "src/governance/utils/GovernorSorting.sol",
        "file": "./governance/utils/GovernorSorting.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32637,
        "sourceUnit": 35193,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32636,
        "nodeType": "ContractDefinition",
        "src": "322:1043:28",
        "nodes": [
          {
            "id": 32635,
            "nodeType": "FunctionDefinition",
            "src": "415:948:28",
            "nodes": [],
            "body": {
              "id": 32634,
              "nodeType": "Block",
              "src": "1361:2:28",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 32596,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32584,
                    "src": "645:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 32597,
                    "name": "_prompt",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32586,
                    "src": "664:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 32598,
                    "name": "_submissionMerkleRoot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32588,
                    "src": "685:21:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "id": 32599,
                    "name": "_votingMerkleRoot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32590,
                    "src": "720:17:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 32600,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32593,
                      "src": "751:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 32602,
                    "indexExpression": {
                      "hexValue": "30",
                      "id": 32601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "773:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "751:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 32603,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32593,
                      "src": "805:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 32605,
                    "indexExpression": {
                      "hexValue": "31",
                      "id": 32604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "827:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "805:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 32606,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32593,
                      "src": "859:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 32608,
                    "indexExpression": {
                      "hexValue": "32",
                      "id": 32607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "881:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "859:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 32609,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32593,
                      "src": "914:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 32611,
                    "indexExpression": {
                      "hexValue": "33",
                      "id": 32610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "936:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "914:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 32612,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32593,
                      "src": "986:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 32614,
                    "indexExpression": {
                      "hexValue": "34",
                      "id": 32613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1008:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "986:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 32615,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32593,
                      "src": "1044:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 32617,
                    "indexExpression": {
                      "hexValue": "35",
                      "id": 32616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1066:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1044:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 32618,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32593,
                      "src": "1103:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 32620,
                    "indexExpression": {
                      "hexValue": "36",
                      "id": 32619,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1125:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_6_by_1",
                        "typeString": "int_const 6"
                      },
                      "value": "6"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1103:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 32621,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32593,
                      "src": "1158:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 32623,
                    "indexExpression": {
                      "hexValue": "37",
                      "id": 32622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1180:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_7_by_1",
                        "typeString": "int_const 7"
                      },
                      "value": "7"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1158:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 32624,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 32595,
                  "name": "Governor",
                  "nameLocations": [
                    "623:8:28"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33797,
                  "src": "623:8:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "623:592:28"
              },
              {
                "arguments": [
                  {
                    "baseExpression": {
                      "id": 32626,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32593,
                      "src": "1253:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 32628,
                    "indexExpression": {
                      "hexValue": "38",
                      "id": 32627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1275:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_8_by_1",
                        "typeString": "int_const 8"
                      },
                      "value": "8"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1253:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 32629,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32593,
                      "src": "1309:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 32631,
                    "indexExpression": {
                      "hexValue": "39",
                      "id": 32630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1331:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_9_by_1",
                        "typeString": "int_const 9"
                      },
                      "value": "9"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1309:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 32632,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 32625,
                  "name": "GovernorSorting",
                  "nameLocations": [
                    "1224:15:28"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35192,
                  "src": "1224:15:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "1224:132:28"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 32594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32584,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "450:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 32635,
                  "src": "436:19:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32583,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "436:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32586,
                  "mutability": "mutable",
                  "name": "_prompt",
                  "nameLocation": "479:7:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 32635,
                  "src": "465:21:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32585,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "465:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32588,
                  "mutability": "mutable",
                  "name": "_submissionMerkleRoot",
                  "nameLocation": "504:21:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 32635,
                  "src": "496:29:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 32587,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "496:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32590,
                  "mutability": "mutable",
                  "name": "_votingMerkleRoot",
                  "nameLocation": "543:17:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 32635,
                  "src": "535:25:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 32589,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "535:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32593,
                  "mutability": "mutable",
                  "name": "_constructorIntParams",
                  "nameLocation": "587:21:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 32635,
                  "src": "570:38:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 32591,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "570:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 32592,
                    "nodeType": "ArrayTypeName",
                    "src": "570:9:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "426:188:28"
            },
            "returnParameters": {
              "id": 32633,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1361:0:28"
            },
            "scope": 32636,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 32577,
              "name": "GovernorCountingSimple",
              "nameLocations": [
                "342:22:28"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34553,
              "src": "342:22:28"
            },
            "id": 32578,
            "nodeType": "InheritanceSpecifier",
            "src": "342:22:28"
          },
          {
            "baseName": {
              "id": 32579,
              "name": "GovernorModuleRegistry",
              "nameLocations": [
                "366:22:28"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34850,
              "src": "366:22:28"
            },
            "id": 32580,
            "nodeType": "InheritanceSpecifier",
            "src": "366:22:28"
          },
          {
            "baseName": {
              "id": 32581,
              "name": "GovernorEngagement",
              "nameLocations": [
                "390:18:28"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34799,
              "src": "390:18:28"
            },
            "id": 32582,
            "nodeType": "InheritanceSpecifier",
            "src": "390:18:28"
          }
        ],
        "canonicalName": "Contest",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          32636,
          34799,
          34850,
          34553,
          33797,
          34932,
          35192
        ],
        "name": "Contest",
        "nameLocation": "331:7:28",
        "scope": 32637,
        "usedErrors": [
          32800,
          32802,
          32804,
          32809,
          32811,
          32817,
          32819,
          32824,
          32829,
          32833,
          32837,
          32841,
          32843,
          32845,
          32847,
          32849,
          32851,
          32853,
          32855,
          32857,
          33841,
          33843,
          33845,
          33847,
          33849,
          33851,
          33853,
          34603,
          34819,
          34863
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 28
}