{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_prompt",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "_submissionMerkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_votingMerkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "_constructorIntParams",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "InvalidShortString",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotInMerkle",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "str",
          "type": "string"
        }
      ],
      "name": "StringTooLong",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TooManyMetadatas",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "ContestCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldContestStart",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newContestStart",
          "type": "uint256"
        }
      ],
      "name": "ContestStartSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldCreator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newCreator",
          "type": "address"
        }
      ],
      "name": "CreatorSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldDownvotingAllowed",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDownvotingAllowed",
          "type": "uint256"
        }
      ],
      "name": "DownvotingAllowedSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "EIP712DomainChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldMaxProposalCount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newMaxProposalCount",
          "type": "uint256"
        }
      ],
      "name": "MaxProposalCountSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldNumAllowedProposalSubmissions",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newNumAllowedProposalSubmissions",
          "type": "uint256"
        }
      ],
      "name": "NumAllowedProposalSubmissionsSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract RewardsModule",
          "name": "oldOfficialRewardsModule",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract RewardsModule",
          "name": "newOfficialRewardsModule",
          "type": "address"
        }
      ],
      "name": "OfficialRewardsModuleSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "proposalIds",
          "type": "uint256[]"
        }
      ],
      "name": "ProposalsDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "numVotes",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "VoteCast",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldVotingDelay",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newVotingDelay",
          "type": "uint256"
        }
      ],
      "name": "VotingDelaySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldVotingPeriod",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newVotingPeriod",
          "type": "uint256"
        }
      ],
      "name": "VotingPeriodSet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "AMOUNT_FOR_SUMBITTER_PROOF",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BALLOT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "COUNTING_MODE",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "METADATAS_COUNT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_numDeletedProposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressSubmitterVerified",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressTotalCastVoteCounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressTotalVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressTotalVotesVerified",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allProposalTotalVotes",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "proposalIdsReturn",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ],
          "internalType": "struct GovernorCountingSimple.VoteCounts[]",
          "name": "proposalVoteCountsArrayReturn",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allProposalTotalVotesWithoutDeleted",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "proposalIdsReturn",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ],
          "internalType": "struct GovernorCountingSimple.VoteCounts[]",
          "name": "proposalVoteCountsArrayReturn",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "totalVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "numVotes",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "castVote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "numVotes",
          "type": "uint256"
        }
      ],
      "name": "castVoteWithoutProof",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addressToCheck",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        },
        {
          "internalType": "bool",
          "name": "voting",
          "type": "bool"
        }
      ],
      "name": "checkProof",
      "outputs": [
        {
          "internalType": "bool",
          "name": "verified",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "contestAddressTotalVotesCast",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "userTotalVotesCast",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contestDeadline",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contestStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "proposalIds",
          "type": "uint256[]"
        }
      ],
      "name": "deleteProposals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "downvotingAllowed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eip712Domain",
      "outputs": [
        {
          "internalType": "bytes1",
          "name": "fields",
          "type": "bytes1"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "version",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "verifyingContract",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "extensions",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllProposalIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getNumSubmissions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getProposal",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "isDeleted",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct IGovernor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IGovernor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct IGovernor.ProposalCore",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "isDeleted",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct IGovernor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IGovernor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct IGovernor.ProposalCore",
          "name": "proposal",
          "type": "tuple"
        }
      ],
      "name": "hashProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "highestTiedRanking",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "isProposalDeleted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ranking",
          "type": "uint256"
        }
      ],
      "name": "isTied",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lowestRanking",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxProposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numAllowedProposalSubmissions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "officialRewardsModule",
      "outputs": [
        {
          "internalType": "contract RewardsModule",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "prompt",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "proposalAddressVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "proposalAddressesHaveVoted",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "proposalVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalVotesStructs",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ],
          "internalType": "struct GovernorCountingSimple.VoteCounts",
          "name": "proposalVoteCounts",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "isDeleted",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct IGovernor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IGovernor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct IGovernor.ProposalCore",
          "name": "proposal",
          "type": "tuple"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "propose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "isDeleted",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct IGovernor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IGovernor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct IGovernor.ProposalCore",
          "name": "proposal",
          "type": "tuple"
        }
      ],
      "name": "proposeWithoutProof",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ranking",
          "type": "uint256"
        }
      ],
      "name": "rankingPosition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract RewardsModule",
          "name": "officialRewardsModule_",
          "type": "address"
        }
      ],
      "name": "setOfficialRewardsModule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setSortedAndTiedProposals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setSortedAndTiedProposalsHasBeenRun",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sortedProposalIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "excludeDeletedProposals",
          "type": "bool"
        }
      ],
      "name": "sortedProposals",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "sortedProposalIdsReturn",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum IGovernor.ContestState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "submissionMerkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tiedAdjustedRankingPosition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalVotesCast",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "isDeleted",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct IGovernor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IGovernor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct IGovernor.ProposalCore",
          "name": "proposal",
          "type": "tuple"
        }
      ],
      "name": "validateProposalData",
      "outputs": [
        {
          "internalType": "bool",
          "name": "dataValidated",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "verifyProposer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "verified",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "totalVotes",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "verifyVoter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "verified",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "voteStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingMerkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "271:1911:40:-:0;;;273:55:47;;;-1:-1:-1;;273:55:47;;;365:716:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;678:21;700:1;678:24;;;;;;;;:::i;:::-;;;;;;;740:21;762:1;740:24;;;;;;;;:::i;:::-;;;;;;;802:21;824:1;802:24;;;;;;;;:::i;:::-;;;;;;;865:21;887:1;865:24;;;;;;;;:::i;:::-;;;;;;;945:21;967:1;945:24;;;;;;;;:::i;:::-;;;;;;;1011:21;1033:1;1011:24;;;;;;;;:::i;:::-;;;;;;;582:5;589:7;598:21;621:17;1938:21:41;1961:17;1995:5;2002:9;:7;;;:9;;:::i;:::-;3251:45:32;:4;3282:13;3251:30;:45::i;:::-;3243:53;;3317:51;:7;3351:16;3317:33;:51::i;:::-;3306:62;;3392:22;;;;;;;;;;3378:36;;3441:25;;;;;;3424:42;;3494:13;3477:30;;3542:23;4077:11;;4090:14;;4054:81;;;1929:95;4054:81;;;5649:25:51;5690:18;;;5683:34;;;;5733:18;;;5726:34;4106:13:32;5776:18:51;;;5769:34;4129:4:32;5819:19:51;;;5812:61;4018:7:32;;5621:19:51;;4054:81:32;;;;;;;;;;;;4044:92;;;;;;4037:99;;3963:180;;3542:23;3517:48;;-1:-1:-1;;3597:4:32;3575:27;;894:44:42;;;;;963:36;;2027:5:41::2;:13;2035:5:::0;2027;:13:::2;:::i;:::-;-1:-1:-1::0;2050:7:41::2;:17;2060:7:::0;2050;:17:::2;:::i;:::-;;1796:278:::0;;;;1483:37:46;1500:19;1483:16;;;:37;;:::i;:::-;1530:35;1546:18;1530:15;:35::i;:::-;1575:37;1592:19;1575:16;:37::i;:::-;1622:71;1656:36;1622:33;:71::i;:::-;1703:45;1724:23;1703:20;:45::i;:::-;1758:47;1780:24;1758:21;:47::i;:::-;1815:23;1827:10;1815:11;:23::i;:::-;1208:637;;;;;;365:716:40;;;;;271:1911;;2968:101:41;3050:12;;;;;;;;;;;;-1:-1:-1;;;3050:12:41;;;;;2968:101::o;2895:341:27:-;2991:11;3040:2;3024:5;3018:19;:24;3014:216;;;3065:20;3079:5;3065:13;:20::i;:::-;3058:27;;;;3014:216;3142:5;3116:46;3157:5;3142;3116:46;:::i;:::-;-1:-1:-1;1371:66:27;;-1:-1:-1;3014:216:27;2895:341;;;;:::o;3247:178:46:-;3346:13;;3330:47;;;6058:25:51;;;6114:2;6099:18;;6092:34;;;3330:47:46;;6031:18:51;3330:47:46;;;;;;;3387:13;:31;3247:178::o;3543:171::-;3639:12;;3624:44;;;6058:25:51;;;6114:2;6099:18;;6092:34;;;3624:44:46;;6031:18:51;3624:44:46;;;;;;;3678:12;:29;3543:171::o;3834:316::-;3995:1;3977:15;:19;3969:71;;;;-1:-1:-1;;;3969:71:46;;6339:2:51;3969:71:46;;;6321:21:51;6378:2;6358:18;;;6351:30;6417:34;6397:18;;;6390:62;-1:-1:-1;;;6468:18:51;;;6461:37;6515:19;;3969:71:46;;;;;;;;;4071:13;;4055:47;;;6058:25:51;;;6114:2;6099:18;;6092:34;;;4055:47:46;;6031:18:51;4055:47:46;;;;;;;4112:13;:31;3834:316::o;4337:297::-;4487:30;;4454:98;;;6058:25:51;;;6114:2;6099:18;;6092:34;;;4454:98:46;;6031:18:51;4454:98:46;;;;;;;4562:30;:65;4337:297::o;4763:206::-;4874:17;;4854:59;;;6058:25:51;;;6114:2;6099:18;;6092:34;;;4854:59:46;;6031:18:51;4854:59:46;;;;;;;4923:17;:39;4763:206::o;5101:213::-;5215:18;;5194:62;;;6058:25:51;;;6114:2;6099:18;;6092:34;;;5194:62:46;;6031:18:51;5194:62:46;;;;;;;5266:18;:41;5101:213::o;5419:143::-;5503:8;;5492:32;;;-1:-1:-1;;;;;5503:8:46;;;6757:34:51;;6827:15;;;6822:2;6807:18;;6800:43;5492:32:46;;6692:18:51;5492:32:46;;;;;;;5534:8;:21;;-1:-1:-1;;;;;;5534:21:46;-1:-1:-1;;;;;5534:21:46;;;;;;;;;;5419:143::o;1689:286:27:-;1754:11;1777:17;1803:3;1777:30;;1835:2;1821:4;:11;:16;1817:72;;;1874:3;1860:18;;-1:-1:-1;;;1860:18:27;;;;;;;;:::i;1817:72::-;1955:11;;1938:13;1955:4;1938:13;:::i;:::-;1930:36;;1689:286;-1:-1:-1;;;1689:286:27:o;14:127:51:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:51;247:40;;-1:-1:-1;;;;;302:34:51;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:51:o;426:250::-;511:1;521:113;535:6;532:1;529:13;521:113;;;611:11;;;605:18;592:11;;;585:39;557:2;550:10;521:113;;;-1:-1:-1;;668:1:51;650:16;;643:27;426:250::o;681:510::-;735:5;788:3;781:4;773:6;769:17;765:27;755:55;;806:1;803;796:12;755:55;829:13;;-1:-1:-1;;;;;854:26:51;;851:52;;;883:18;;:::i;:::-;927:55;970:2;951:13;;-1:-1:-1;;947:27:51;976:4;943:38;927:55;:::i;:::-;1007:2;998:7;991:19;1053:3;1046:4;1041:2;1033:6;1029:15;1025:26;1022:35;1019:55;;;1070:1;1067;1060:12;1019:55;1083:77;1157:2;1150:4;1141:7;1137:18;1130:4;1122:6;1118:17;1083:77;:::i;:::-;1178:7;681:510;-1:-1:-1;;;;681:510:51:o;1196:1468::-;1347:6;1355;1363;1371;1379;1432:3;1420:9;1411:7;1407:23;1403:33;1400:53;;;1449:1;1446;1439:12;1400:53;1476:16;;-1:-1:-1;;;;;1541:14:51;;;1538:34;;;1568:1;1565;1558:12;1538:34;1591:61;1644:7;1635:6;1624:9;1620:22;1591:61;:::i;:::-;1581:71;;1671:2;1661:12;;1719:2;1708:9;1704:18;1698:25;1748:2;1738:8;1735:16;1732:36;;;1764:1;1761;1754:12;1732:36;1787:63;1842:7;1831:8;1820:9;1816:24;1787:63;:::i;:::-;1777:73;;;1890:2;1879:9;1875:18;1869:25;1859:35;;1934:2;1923:9;1919:18;1913:25;1903:35;;1984:3;1973:9;1969:19;1963:26;2014:2;2004:8;2001:16;1998:36;;;2030:1;2027;2020:12;1998:36;2053:24;;2108:4;2100:13;;2096:27;-1:-1:-1;2086:55:51;;2137:1;2134;2127:12;2086:55;2166:2;2160:9;2188:2;2184;2181:10;2178:36;;;2194:18;;:::i;:::-;2240:2;2237:1;2233:10;2223:20;;2263:28;2287:2;2283;2279:11;2263:28;:::i;:::-;2325:15;;;2395:11;;;2391:20;;;2356:12;;;;2423:19;;;2420:39;;;2455:1;2452;2445:12;2420:39;2479:11;;;;2499:135;2515:6;2510:3;2507:15;2499:135;;;2581:10;;2569:23;;2532:12;;;;2612;;;;2499:135;;;2653:5;2643:15;;;;;;;;1196:1468;;;;;;;;:::o;2669:127::-;2730:10;2725:3;2721:20;2718:1;2711:31;2761:4;2758:1;2751:15;2785:4;2782:1;2775:15;2801:380;2880:1;2876:12;;;;2923;;;2944:61;;2998:4;2990:6;2986:17;2976:27;;2944:61;3051:2;3043:6;3040:14;3020:18;3017:38;3014:161;;3097:10;3092:3;3088:20;3085:1;3078:31;3132:4;3129:1;3122:15;3160:4;3157:1;3150:15;3014:161;;2801:380;;;:::o;3312:545::-;3414:2;3409:3;3406:11;3403:448;;;3450:1;3475:5;3471:2;3464:17;3520:4;3516:2;3506:19;3590:2;3578:10;3574:19;3571:1;3567:27;3561:4;3557:38;3626:4;3614:10;3611:20;3608:47;;;-1:-1:-1;3649:4:51;3608:47;3704:2;3699:3;3695:12;3692:1;3688:20;3682:4;3678:31;3668:41;;3759:82;3777:2;3770:5;3767:13;3759:82;;;3822:17;;;3803:1;3792:13;3759:82;;;3763:3;;;3403:448;3312:545;;;:::o;4033:1352::-;4153:10;;-1:-1:-1;;;;;4175:30:51;;4172:56;;;4208:18;;:::i;:::-;4237:97;4327:6;4287:38;4319:4;4313:11;4287:38;:::i;:::-;4281:4;4237:97;:::i;:::-;4389:4;;4453:2;4442:14;;4470:1;4465:663;;;;5172:1;5189:6;5186:89;;;-1:-1:-1;5241:19:51;;;5235:26;5186:89;-1:-1:-1;;3990:1:51;3986:11;;;3982:24;3978:29;3968:40;4014:1;4010:11;;;3965:57;5288:81;;4435:944;;4465:663;3259:1;3252:14;;;3296:4;3283:18;;-1:-1:-1;;4501:20:51;;;4619:236;4633:7;4630:1;4627:14;4619:236;;;4722:19;;;4716:26;4701:42;;4814:27;;;;4782:1;4770:14;;;;4649:19;;4619:236;;;4623:3;4883:6;4874:7;4871:19;4868:201;;;4944:19;;;4938:26;-1:-1:-1;;5027:1:51;5023:14;;;5039:3;5019:24;5015:37;5011:42;4996:58;4981:74;;4868:201;-1:-1:-1;;;;;5115:1:51;5099:14;;;5095:22;5082:36;;-1:-1:-1;4033:1352:51:o;6854:396::-;7003:2;6992:9;6985:21;6966:4;7035:6;7029:13;7078:6;7073:2;7062:9;7058:18;7051:34;7094:79;7166:6;7161:2;7150:9;7146:18;7141:2;7133:6;7129:15;7094:79;:::i;:::-;7234:2;7213:15;-1:-1:-1;;7209:29:51;7194:45;;;;7241:2;7190:54;;6854:396;-1:-1:-1;;6854:396:51:o;7255:297::-;7373:12;;7420:4;7409:16;;;7403:23;;7373:12;7438:16;;7435:111;;;-1:-1:-1;;7512:4:51;7508:17;;;;7505:1;7501:25;7497:38;7486:50;;7255:297;-1:-1:-1;7255:297:51:o;:::-;271:1911:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061039a5760003560e01c8063832009af116101dc578063d45a010b11610102578063e5eb5a48116100a0578063f0a7db0a1161006f578063f0a7db0a14610b91578063f4f3d7ec14610bb1578063fb9bf8d414610bd1578063fc481d7514610be657600080fd5b8063e5eb5a4814610b25578063ea8a1af014610b52578063ebc18b9b14610b67578063efa90d3614610b7c57600080fd5b8063dd96a19d116100dc578063dd96a19d14610a7b578063dea5f6a614610aaf578063deaaa7cc14610adc578063e031535b14610b1057600080fd5b8063d45a010b14610a06578063d889161914610a1b578063dd4e2ba514610a3557600080fd5b8063aec116b61161017a578063bddc164111610149578063bddc164114610953578063c19d93fb14610987578063c7f758a8146109a9578063cb853950146109d657600080fd5b8063aec116b6146108b0578063b323580d146108e6578063bcbd518d14610913578063bd01f12b1461093357600080fd5b80638a9cd550116101b65780638a9cd55014610829578063930de9791461083e57806396f0e9621461086e578063a1ac6cb21461088357600080fd5b8063832009af146107cc57806384b0196e146107e1578063861874881461080957600080fd5b8063419c533c116102c15780635f953a031161025f5780636e4eb8101161022e5780636e4eb81014610763578063785ddfe5146107835780637c65d711146107a15780637de418d5146107b657600080fd5b80635f953a03146106e357806360506ff61461071957806365f162631461072e5780636ca1a2c71461074e57600080fd5b806350a5e5241161029b57806350a5e5241461062a578063531bd8121461064d578063544ffc9c1461066d57806354fd4d50146106b757600080fd5b8063419c533c146105c8578063427d56c2146105e85780634d24a67f1461061557600080fd5b806320b3e84511610339578063347cf66511610308578063347cf6651461054a57806334da4d33146105665780633932abb11461057c5780633b6d199b1461059157600080fd5b806320b3e845146104d55780632399c660146104f5578063262e59e91461051557806332763c221461052a57600080fd5b806302d05d3f1161037557806302d05d3f1461041557806306fdde0314610442578063070dc5d9146104645780631dfa0223146104b557600080fd5b80624114a8146103a857806301ffc9a7146103d057806302a251a31461040057600080fd5b366103a357005b005b600080fd5b3480156103b457600080fd5b506103bd610c06565b6040519081526020015b60405180910390f35b3480156103dc57600080fd5b506103f06103eb3660046130b6565b610c16565b60405190151581526020016103c7565b34801561040c57600080fd5b506103bd610c4d565b34801561042157600080fd5b5061042a610c58565b6040516001600160a01b0390911681526020016103c7565b34801561044e57600080fd5b50610457610c6c565b6040516103c79190613126565b34801561047057600080fd5b506104a861047f366004613139565b601560209081526000918252604091829020825180840190935280548352600101549082015281565b6040516103c79190613152565b3480156104c157600080fd5b506103bd6104d03660046134ba565b610cfe565b3480156104e157600080fd5b506103f06104f0366004613522565b610d4d565b34801561050157600080fd5b506103f0610510366004613139565b610de2565b34801561052157600080fd5b506103bd610e1d565b34801561053657600080fd5b506103f0610545366004613569565b610e39565b34801561055657600080fd5b506103bd678ac7230489e8000081565b34801561057257600080fd5b506103bd600b5481565b34801561058857600080fd5b506103bd610f76565b34801561059d57600080fd5b506103f06105ac366004613139565b600090815260096020526040902054600160a81b900460ff1690565b3480156105d457600080fd5b506103bd6105e33660046135ea565b610f81565b3480156105f457600080fd5b5061060861060336600461365a565b610fb9565b6040516103c791906136b0565b34801561062157600080fd5b506103bd600281565b34801561063657600080fd5b5061063f611151565b6040516103c79291906136c3565b34801561065957600080fd5b506103f061066836600461372c565b611257565b34801561067957600080fd5b506106a2610688366004613139565b600090815260156020526040902080546001909101549091565b604080519283526020830191909152016103c7565b3480156106c357600080fd5b50604080518082019091526003815262332e3560e81b6020820152610457565b3480156106ef57600080fd5b506103bd6106fe366004613787565b6001600160a01b03166000908152600a602052604090205490565b34801561072557600080fd5b506103bd6112c2565b34801561073a57600080fd5b506103bd6107493660046137a4565b6112cd565b34801561075a57600080fd5b506103bd611395565b34801561076f57600080fd5b506106a261077e3660046137d9565b6113c1565b34801561078f57600080fd5b50601c546001600160a01b031661042a565b3480156107ad57600080fd5b506104576113f6565b3480156107c257600080fd5b506103bd60135481565b3480156107d857600080fd5b506103bd611405565b3480156107ed57600080fd5b506107f6611410565b6040516103c79796959493929190613809565b34801561081557600080fd5b506103bd610824366004613139565b611498565b34801561083557600080fd5b506106086114d0565b34801561084a57600080fd5b506103f0610859366004613787565b60036020526000908152604090205460ff1681565b34801561087a57600080fd5b506103a161154a565b34801561088f57600080fd5b506103bd61089e366004613787565b60146020526000908152604090205481565b3480156108bc57600080fd5b506103bd6108cb366004613787565b6001600160a01b031660009081526014602052604090205490565b3480156108f257600080fd5b50610906610901366004613139565b61185e565b6040516103c791906138b2565b34801561091f57600080fd5b506103bd61092e3660046138c5565b6118d0565b34801561093f57600080fd5b506103f061094e3660046138c5565b61193a565b34801561095f57600080fd5b506103bd7f000000000000000000000000000000000000000000000000000000000000000081565b34801561099357600080fd5b5061099c611bc5565b6040516103c79190613917565b3480156109b557600080fd5b506109c96109c4366004613139565b611c37565b6040516103c7919061393f565b3480156109e257600080fd5b506103f06109f1366004613787565b60046020526000908152604090205460ff1681565b348015610a1257600080fd5b5061063f611e0b565b348015610a2757600080fd5b506016546103f09060ff1681565b348015610a4157600080fd5b5060408051808201909152601881527f737570706f72743d627261766f2671756f72756d3d666f7200000000000000006020820152610457565b348015610a8757600080fd5b506103bd7f000000000000000000000000000000000000000000000000000000000000000081565b348015610abb57600080fd5b506103bd610aca366004613787565b60026020526000908152604090205481565b348015610ae857600080fd5b506103bd7f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f81565b348015610b1c57600080fd5b506103bd611fde565b348015610b3157600080fd5b506103bd610b40366004613139565b60176020526000908152604090205481565b348015610b5e57600080fd5b506103a1611ff0565b348015610b7357600080fd5b506103bd6120da565b348015610b8857600080fd5b50610608612106565b348015610b9d57600080fd5b506103a1610bac3660046139d1565b61215c565b348015610bbd57600080fd5b506103a1610bcc366004613787565b612385565b348015610bdd57600080fd5b506103bd612420565b348015610bf257600080fd5b506103bd610c013660046138c5565b61242b565b6000610c11600c5490565b905090565b60006001600160e01b03198216630dd1d76b60e21b1480610c4757506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000610c11600e5490565b6000610c116012546001600160a01b031690565b606060068054610c7b90613a61565b80601f0160208091040260200160405190810160405280929190818152602001828054610ca790613a61565b8015610cf45780601f10610cc957610100808354040283529160200191610cf4565b820191906000526020600020905b815481529060010190602001808311610cd757829003601f168201915b5050505050905090565b6000610d0b338484610d4d565b610d305760405162461bcd60e51b8152600401610d2790613a9b565b60405180910390fd5b610d398461193a565b50610d438461245c565b90505b9392505050565b6001600160a01b03831660009081526004602052604081205460ff16610dd8577f0000000000000000000000000000000000000000000000000000000000000000600003610d9d57506001610d46565b610db384678ac7230489e8000085856000610e39565b506001600160a01b0384166000908152600460205260409020805460ff191660011790555b5060019392505050565b60165460009060ff16610e075760405162461bcd60e51b8152600401610d2790613aea565b5060009081526018602052604090205460ff1690565b6000610e27610c4d565b610e2f611fde565b610c119190613b6b565b6040516bffffffffffffffffffffffff19606087901b166020820152603481018590526000908190605401604051602081830303815290604052805190602001209050600083610ee857610ee38686808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f000000000000000000000000000000000000000000000000000000000000000092508691506128129050565b610f48565b610f488686808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f000000000000000000000000000000000000000000000000000000000000000092508691506128129050565b905080610f685760405163452c2df160e11b815260040160405180910390fd5b506001979650505050505050565b6000610c11600d5490565b600033610f9081878686611257565b50610fad8882898860405180602001604052806000815250612828565b98975050505050505050565b606060008083610fd057610fcb611151565b610fd8565b610fd8611e0b565b9150915060008251116110485760405162461bcd60e51b815260206004820152603260248201527f476f7665726e6f72536f7274696e673a2063616e6e6f7420736f72742061206c6044820152710d2e6e840decc40f4cae4de40d8cadccee8d60731b6064820152608401610d27565b600082516001600160401b0381111561106357611063613169565b60405190808252806020026020018201604052801561108c578160200160208202803683370190505b50905060005b8251811015611110578281815181106110ad576110ad613b7e565b6020026020010151602001518382815181106110cb576110cb613b7e565b6020026020010151600001516110e19190613b94565b8282815181106110f3576110f3613b7e565b60209081029190910101528061110881613bbb565b915050611092565b5060005b600184516111229190613bd4565b81101561114757611134818386612a42565b508061113f81613bbb565b915050611114565b5091949350505050565b606080600061115e612106565b9050600081516001600160401b0381111561117b5761117b613169565b6040519080825280602002602001820160405280156111c057816020015b60408051808201909152600080825260208201528152602001906001900390816111995790505b50905060005b825181101561124d57601560008483815181106111e5576111e5613b7e565b602002602001015181526020019081526020016000206000016040518060400160405290816000820154815260200160018201548152505082828151811061122f5761122f613b7e565b6020026020010181905250808061124590613bbb565b9150506111c6565b5090939092509050565b6001600160a01b03841660009081526003602052604081205460ff166112b757611285858585856001610e39565b506001600160a01b038516600090815260026020908152604080832087905560039091529020805460ff191660011790555b506001949350505050565b6000610c1160115490565b3360008181526003602052604081205490919060ff166113705760405162461bcd60e51b815260206004820152605260248201527f476f7665726e6f723a20796f75206e65656420746f2063617374206120766f7460448201527f652077697468207468652070726f6f66206174206c65617374206f6e636520616064820152711b99081e5bdd481a185d995b89dd081e595d60721b608482015260a401610d27565b61138c8582868660405180602001604052806000815250612828565b95945050505050565b60165460009060ff166113ba5760405162461bcd60e51b8152600401610d2790613aea565b50601a5490565b60008281526015602090815260408083206001600160a01b0385168452600301909152902080546001909101545b9250929050565b606060078054610c7b90613a61565b6000610c11600f5490565b6000606080828080836114437f000000000000000000000000000000000000000000000000000000000000000083612ba8565b61146e7f00000000000000000000000000000000000000000000000000000000000000006001612ba8565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60165460009060ff166114bd5760405162461bcd60e51b8152600401610d2790613aea565b5060009081526017602052604090205490565b60165460609060ff166114f55760405162461bcd60e51b8152600401610d2790613aea565b6019805480602002602001604051908101604052809291908181526020018280548015610cf457602002820191906000526020600020905b81548152602001906001019080831161152d575050505050905090565b6004611554611bc5565b600481111561156557611565613901565b146115e85760405162461bcd60e51b815260206004820152604760248201527f476f7665726e6f72536f7274696e673a20636f6e74657374206d75737420626560448201527f20746f2063616c63756c61746520736f7274656420616e6420746965642070726064820152666f706f73616c7360c81b608482015260a401610d27565b60165460ff16156116875760405162461bcd60e51b815260206004820152605f60248201527f476f7665726e6f72536f7274696e673a20736574536f72746564416e6454696560448201527f6450726f706f73616c7328292068617320616c7265616479206265656e20727560648201527f6e20616e642069747320726573706563746976652076616c7565732073657400608482015260a401610d27565b6116916001610fb9565b80516116a591601991602090910190613001565b506019546000906001906116b99082613b6b565b601b5560005b60195481101561184c576019546000906116db90600190613bd4565b905060008061172460196116ef8686613bd4565b815481106116ff576116ff613b7e565b9060005260206000200154600090815260156020526040902080546001909101549091565b909250905060006117358284613b94565b90508460000361177657601954909650869060010361176d576117588585613bd4565b600087815260176020526040902055601a8690555b5050505061183a565b8681036117c95760008681526018602052604090205460ff166117ad576000868152601860205260409020805460ff191660011790555b6019546117bb906001613b6b565b601b54036117c957601b8690555b868114611802576117da8585613bd4565b6117e5906001613b6b565b600087815260176020526040902055856117fe81613bbb565b9650505b601954611810866001613b6b565b036118345761181f8585613bd4565b600087815260176020526040902055601a8690555b95505050505b8061184481613bbb565b9150506116bf565b50506016805460ff1916600117905550565b60008181526015602090815260409182902060028101805484518185028101850190955280855260609492938301828280156118c357602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116118a5575b5050505050915050919050565b60007f000000000000000000000000000000000000000000000000000000000000000015611927573360009081526004602052604090205460ff166119275760405162461bcd60e51b8152600401610d2790613a9b565b6119308261193a565b50610c478261245c565b80516000906001600160a01b031633146119af5760405162461bcd60e51b815260206004820152603060248201527f476f7665726e6f723a207468652070726f706f73616c20617574686f72206d7560448201526f39ba1031329036b9b39739b2b73232b960811b6064820152608401610d27565b60005b6002811015611b675760008160018111156119cf576119cf613901565b905060008160018111156119e5576119e5613901565b036119f05750611b55565b6001816001811115611a0457611a04613901565b03611b3a5760a08401515151600003611a965760405162461bcd60e51b815260206004820152604860248201527f476f7665726e6f724d6574616461746156616c69646174696f6e3a207468657260448201527f652063616e6e6f74206265207a65726f207369676e65727320696e20736166656064820152674d6574616461746160c01b608482015260a401610d27565b8360a0015160200151600003611b225760405162461bcd60e51b8152602060048201526044602482018190527f476f7665726e6f724d6574616461746156616c69646174696f6e3a2074687265908201527f73686f6c642063616e6e6f74206265207a65726f20696e20736166654d6574616064820152636461746160e01b608482015260a401610d27565b60a08401515151600003611b3557600080fd5b611b53565b6040516308b6566d60e11b815260040160405180910390fd5b505b80611b5f81613bbb565b9150506119b2565b50816060015151600003611bbd5760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a20656d7074792070726f706f73616c00000000000000006044820152606401610d27565b506001919050565b60085460009060ff1615611bd95750600290565b6000611be3610c06565b9050428110611bf457600091505090565b6000611bfe611fde565b9050428110611c105760039250505090565b6000611c1a610e1d565b9050428110611c2d576001935050505090565b6004935050505090565b611c846040805160c081018252600080825260208083018290528284018290526060808401819052845180830186528381526080850152845180860190955284528301529060a082015290565b600082815260096020908152604091829020825160c08101845281546001600160a01b038116825260ff600160a01b82048116151594830194909452600160a81b9004909216151592820192909252600182018054919291606084019190611ceb90613a61565b80601f0160208091040260200160405190810160405280929190818152602001828054611d1790613a61565b8015611d645780601f10611d3957610100808354040283529160200191611d64565b820191906000526020600020905b815481529060010190602001808311611d4757829003601f168201915b5050509183525050604080516020818101835260028501546001600160a01b03168252808401919091528151600385018054606093810283018401855282850181815294909501949193909284928491840182828015611ded57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611dcf575b50505050508152602001600182015481525050815250509050919050565b6060806000611e18612106565b9050600081516001600160401b03811115611e3557611e35613169565b604051908082528060200260200182016040528015611e5e578160200160208202803683370190505b509050600082516001600160401b03811115611e7c57611e7c613169565b604051908082528060200260200182016040528015611ec157816020015b6040805180820190915260008082526020820152815260200190600190039081611e9a5790505b5090506000805b8451811015611fd257611f0b858281518110611ee657611ee6613b7e565b602002602001015160009081526009602052604090205460ff600160a81b9091041690565b611fc057848181518110611f2157611f21613b7e565b6020026020010151848381518110611f3b57611f3b613b7e565b60200260200101818152505060156000868381518110611f5d57611f5d613b7e565b6020026020010151815260200190815260200160002060000160405180604001604052908160008201548152602001600182015481525050838381518110611fa757611fa7613b7e565b6020908102919091010152611fbd600183613b6b565b91505b80611fca81613bbb565b915050611ec8565b50919590945092505050565b6000611fe8610f76565b610e2f610c06565b611ff8610c58565b6001600160a01b0316336001600160a01b03161461201557600080fd5b600061201f611bc5565b9050600281600481111561203557612035613901565b141580156120555750600481600481111561205257612052613901565b14155b6120a15760405162461bcd60e51b815260206004820152601c60248201527f476f7665726e6f723a20636f6e74657374206e6f7420616374697665000000006044820152606401610d27565b6008805460ff191660011790556040517f4cd963a081760a54f571abc0f1db4dde31b4a07d8d6da3e844b8c6f47eeaaa4290600090a150565b60165460009060ff166120ff5760405162461bcd60e51b8152600401610d2790613aea565b50601b5490565b60606005805480602002602001604051908101604052809291908181526020018280548015610cf4576020028201919060005260206000209081548152602001906001019080831161152d575050505050905090565b612164610c58565b6001600160a01b0316336001600160a01b0316146121ea5760405162461bcd60e51b815260206004820152603760248201527f476f7665726e6f723a206f6e6c792074686520636f6e7465737420637265617460448201527f6f722063616e2064656c6574652070726f706f73616c730000000000000000006064820152608401610d27565b60046121f4611bc5565b600481111561220557612205613901565b0361228a5760405162461bcd60e51b815260206004820152604960248201527f476f7665726e6f723a2064656c6574696f6e206f662070726f706f73616c732060448201527f61667465722074686520656e64206f66206120636f6e74657374206973206e6f6064820152681d08185b1b1bddd95960ba1b608482015260a401610d27565b60005b815181101561234a57600960008383815181106122ac576122ac613b7e565b6020026020010151815260200190815260200160002060000160159054906101000a900460ff16612338576001600960008484815181106122ef576122ef613b7e565b6020026020010151815260200190815260200160002060000160156101000a81548160ff0219169083151502179055506001600b60008282546123329190613b6b565b90915550505b8061234281613bbb565b91505061228d565b507f75a75cf5c561892f4cc5b26c1b8e933849b42238c96dd073d080d1ae96c514168160405161237a91906136b0565b60405180910390a150565b61238d610c58565b6001600160a01b0316336001600160a01b0316146123aa57600080fd5b60006123be601c546001600160a01b031690565b601c80546001600160a01b0319166001600160a01b0385811691821790925560408051928416835260208301919091529192507f753a2cf8d360cff631674504210913e48247f8e56b3e6d2006c2103d4095999f910160405180910390a15050565b6000610c1160105490565b60008160405160200161243e919061393f565b60408051601f19818403018152919052805160209091012092915050565b60006003612468611bc5565b600481111561247957612479613901565b146124ec5760405162461bcd60e51b815260206004820152603e60248201527f476f7665726e6f723a20636f6e74657374206d7573742062652071756575656460448201527f20666f722070726f706f73616c7320746f206265207375626d697474656400006064820152608401610d27565b6124f4611405565b336000908152600a6020526040902054106125ab5760405162461bcd60e51b815260206004820152606560248201527f476f7665726e6f723a207468652073616d6520616464726573732063616e6e6f60448201527f74207375626d6974206d6f7265207468616e20746865206e756d416c6c6f776560648201527f6450726f706f73616c5375626d697373696f6e7320666f72207468697320636f6084820152641b9d195cdd60da1b60a482015260c401610d27565b6125b3612420565b600b546005546125c39190613bd4565b106126365760405162461bcd60e51b815260206004820152603960248201527f476f7665726e6f723a20746865206d6178206e756d626572206f662070726f7060448201527f6f73616c732068617665206265656e207375626d6974746564000000000000006064820152608401610d27565b60006126418361242b565b600081815260096020526040902054909150600160a01b900460ff16156126bc5760405162461bcd60e51b815260206004820152602960248201527f476f7665726e6f723a206475706c69636174652070726f706f73616c73206e6f6044820152681d08185b1b1bddd95960ba1b6064820152608401610d27565b6005805460018181019092557f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0018290556000828152600960209081526040918290208651815492880151938801511515600160a81b0260ff60a81b19941515600160a01b026001600160a81b03199094166001600160a01b039092169190911792909217929092161781556060850151859282019061275c9082613c36565b506080820151516002820180546001600160a01b0319166001600160a01b0390921691909117905560a08201518051805160038401916127a19183916020019061304c565b50602091820151600191820155336000908152600a90925260408220805491945092506127cf908490613b6b565b9091555050604080518281523360208201527fcd423cc1203c0af96b9b3d68d73b3064a69de2d14450bb7181c5e5df2132b358910160405180910390a192915050565b60008261281f8584612c54565b14949350505050565b60006001612834611bc5565b600481111561284557612845613901565b1461289e5760405162461bcd60e51b815260206004820152602360248201527f476f7665726e6f723a20766f7465206e6f742063757272656e746c792061637460448201526269766560e81b6064820152608401610d27565b600083116129025760405162461bcd60e51b815260206004820152602b60248201527f476f7665726e6f723a2063616e6e6f7420766f746520776974682030206f722060448201526a666577657220766f74657360a81b6064820152608401610d27565b6001600160a01b03851660009081526003602052604090205460ff166129a85760405162461bcd60e51b815260206004820152604f60248201527f476f7665726e6f723a20796f75206e65656420746f2076657269667920796f7560448201527f72206e756d626572206f6620766f74657320616761696e737420746865206d6560648201526e1c9adb19481c9bdbdd08199a5c9cdd608a1b608482015260a401610d27565b6129da86868686600260008b6001600160a01b03166001600160a01b0316815260200190815260200160002054612ca1565b846001600160a01b03167fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda487868686604051612a199493929190613cf5565b60405180910390a2505050506001600160a01b0316600090815260026020526040902054919050565b600083805b8451811015612aa057848281518110612a6257612a62613b7e565b6020026020010151858281518110612a7c57612a7c613b7e565b60200260200101511215612a8e578091505b80612a9881613bbb565b915050612a47565b50848103612ab2576000915050610d46565b6000848681518110612ac657612ac6613b7e565b60200260200101519050848281518110612ae257612ae2613b7e565b6020026020010151858781518110612afc57612afc613b7e565b60200260200101818152505080858381518110612b1b57612b1b613b7e565b6020026020010181815250506000848781518110612b3b57612b3b613b7e565b60200260200101519050848381518110612b5757612b57613b7e565b6020026020010151858881518110612b7157612b71613b7e565b60200260200101818152505080858481518110612b9057612b90613b7e565b60209081029190910101525060019695505050505050565b606060ff8314612bc257612bbb83612f6e565b9050610c47565b818054612bce90613a61565b80601f0160208091040260200160405190810160405280929190818152602001828054612bfa90613a61565b8015612c475780601f10612c1c57610100808354040283529160200191612c47565b820191906000526020600020905b815481529060010190602001808311612c2a57829003601f168201915b5050505050905092915050565b600081815b8451811015612c9957612c8582868381518110612c7857612c78613b7e565b6020026020010151612fad565b915080612c9181613bbb565b915050612c59565b509392505050565b60008581526015602090815260408083206001600160a01b0388168452601490925290912054612cd19083613bd4565b831115612d3c5760405162461bcd60e51b815260206004820152603360248201527f476f7665726e6f72566f74696e6753696d706c653a206e6f7420656e6f756768604482015272081d9bdd195cc81b19599d081d1bc818d85cdd606a1b6064820152608401610d27565b6001600160a01b03851660009081526003820160205260409020541560ff8516612dae57815484908390600090612d74908490613b6b565b90915550506001600160a01b038616600090815260038301602052604081208054869290612da3908490613b6b565b90915550612ee89050565b60001960ff861601612e8257612dc26112c2565b600114612e39576040805162461bcd60e51b81526020600482015260248101919091527f476f7665726e6f72566f74696e6753696d706c653a20646f776e766f74696e6760448201527f206973206e6f7420656e61626c656420666f72207468697320436f6e746573746064820152608401610d27565b83826000016001016000828254612e509190613b6b565b90915550506001600160a01b038616600090815260038301602052604081206001018054869290612da3908490613b6b565b60405162461bcd60e51b815260206004820152603560248201527f476f7665726e6f72566f74696e6753696d706c653a20696e76616c69642076616044820152746c756520666f7220656e756d20566f74655479706560581b6064820152608401610d27565b8015612f1f57600282018054600181018255600091825260209091200180546001600160a01b0319166001600160a01b0388161790555b6001600160a01b03861660009081526014602052604081208054869290612f47908490613b6b565b925050819055508360136000828254612f609190613b6b565b909155505050505050505050565b60606000612f7b83612fd9565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000818310612fc9576000828152602084905260409020610d46565b5060009182526020526040902090565b600060ff8216601f811115610c4757604051632cd44ac360e21b815260040160405180910390fd5b82805482825590600052602060002090810192821561303c579160200282015b8281111561303c578251825591602001919060010190613021565b506130489291506130a1565b5090565b82805482825590600052602060002090810192821561303c579160200282015b8281111561303c57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061306c565b5b8082111561304857600081556001016130a2565b6000602082840312156130c857600080fd5b81356001600160e01b031981168114610d4657600080fd5b6000815180845260005b81811015613106576020818501810151868301820152016130ea565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610d4660208301846130e0565b60006020828403121561314b57600080fd5b5035919050565b815181526020808301519082015260408101610c47565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156131a1576131a1613169565b60405290565b60405160c081016001600160401b03811182821017156131a1576131a1613169565b604051601f8201601f191681016001600160401b03811182821017156131f1576131f1613169565b604052919050565b6001600160a01b038116811461320e57600080fd5b50565b803561321c816131f9565b919050565b8035801515811461321c57600080fd5b600082601f83011261324257600080fd5b81356001600160401b0381111561325b5761325b613169565b61326e601f8201601f19166020016131c9565b81815284602083860101111561328357600080fd5b816020850160208301376000918101602001919091529392505050565b6000602082840312156132b257600080fd5b604051602081018181106001600160401b03821117156132d4576132d4613169565b60405290508082356132e5816131f9565b905292915050565b60006001600160401b0382111561330657613306613169565b5060051b60200190565b60006040828403121561332257600080fd5b61332a61317f565b905081356001600160401b0381111561334257600080fd5b8201601f8101841361335357600080fd5b80356020613368613363836132ed565b6131c9565b82815260059290921b8301810191818101908784111561338757600080fd5b938201935b838510156133ae57843561339f816131f9565b8252938201939082019061338c565b85525093840135938301939093525092915050565b600060c082840312156133d557600080fd5b6133dd6131a7565b90506133e882613211565b81526133f660208301613221565b602082015261340760408301613221565b604082015260608201356001600160401b038082111561342657600080fd5b61343285838601613231565b606084015261344485608086016132a0565b608084015260a084013591508082111561345d57600080fd5b5061346a84828501613310565b60a08301525092915050565b60008083601f84011261348857600080fd5b5081356001600160401b0381111561349f57600080fd5b6020830191508360208260051b85010111156113ef57600080fd5b6000806000604084860312156134cf57600080fd5b83356001600160401b03808211156134e657600080fd5b6134f2878388016133c3565b9450602086013591508082111561350857600080fd5b5061351586828701613476565b9497909650939450505050565b60008060006040848603121561353757600080fd5b8335613542816131f9565b925060208401356001600160401b0381111561355d57600080fd5b61351586828701613476565b60008060008060006080868803121561358157600080fd5b853561358c816131f9565b94506020860135935060408601356001600160401b038111156135ae57600080fd5b6135ba88828901613476565b90945092506135cd905060608701613221565b90509295509295909350565b803560ff8116811461321c57600080fd5b60008060008060008060a0878903121561360357600080fd5b86359550613613602088016135d9565b9450604087013593506060870135925060808701356001600160401b0381111561363c57600080fd5b61364889828a01613476565b979a9699509497509295939492505050565b60006020828403121561366c57600080fd5b610d4682613221565b600081518084526020808501945080840160005b838110156136a557815187529582019590820190600101613689565b509495945050505050565b602081526000610d466020830184613675565b600060408083526136d681840186613675565b83810360208581019190915285518083528682019282019060005b8181101561371e5761370e83865180518252602090810151910152565b93830193918501916001016136f1565b509098975050505050505050565b6000806000806060858703121561374257600080fd5b843561374d816131f9565b93506020850135925060408501356001600160401b0381111561376f57600080fd5b61377b87828801613476565b95989497509550505050565b60006020828403121561379957600080fd5b8135610d46816131f9565b6000806000606084860312156137b957600080fd5b833592506137c9602085016135d9565b9150604084013590509250925092565b600080604083850312156137ec57600080fd5b8235915060208301356137fe816131f9565b809150509250929050565b60ff60f81b8816815260e06020820152600061382860e08301896130e0565b828103604084015261383a81896130e0565b606084018890526001600160a01b038716608085015260a0840186905283810360c0850152905061386b8185613675565b9a9950505050505050505050565b600081518084526020808501945080840160005b838110156136a55781516001600160a01b03168752958201959082019060010161388d565b602081526000610d466020830184613879565b6000602082840312156138d757600080fd5b81356001600160401b038111156138ed57600080fd5b6138f9848285016133c3565b949350505050565b634e487b7160e01b600052602160045260246000fd5b602081016005831061393957634e487b7160e01b600052602160045260246000fd5b91905290565b60208152600060018060a01b03808451166020840152602084015115156040840152604084015115156060840152606084015160c0608085015261398660e08501826130e0565b9050816080860151511660a085015260a08501519150601f198482030160c08501528151604082526139bb6040830182613879565b6020938401519290930191909152509392505050565b600060208083850312156139e457600080fd5b82356001600160401b038111156139fa57600080fd5b8301601f81018513613a0b57600080fd5b8035613a19613363826132ed565b81815260059190911b82018301908381019087831115613a3857600080fd5b928401925b82841015613a5657833582529284019290840190613a3d565b979650505050505050565b600181811c90821680613a7557607f821691505b602082108103613a9557634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602f908201527f476f7665726e6f723a2061646472657373206973206e6f74207065726d69737360408201526e1a5bdb9959081d1bc81cdd589b5a5d608a1b606082015260800190565b60208082526045908201527f526577617264734d6f64756c653a2072756e20736574536f72746564416e645460408201527f69656450726f706f73616c73282920746f20706f70756c61746520746869732060608201526476616c756560d81b608082015260a00190565b634e487b7160e01b600052601160045260246000fd5b80820180821115610c4757610c47613b55565b634e487b7160e01b600052603260045260246000fd5b8181036000831280158383131683831282161715613bb457613bb4613b55565b5092915050565b600060018201613bcd57613bcd613b55565b5060010190565b81810381811115610c4757610c47613b55565b601f821115613c3157600081815260208120601f850160051c81016020861015613c0e5750805b601f850160051c820191505b81811015613c2d57828155600101613c1a565b5050505b505050565b81516001600160401b03811115613c4f57613c4f613169565b613c6381613c5d8454613a61565b84613be7565b602080601f831160018114613c985760008415613c805750858301515b600019600386901b1c1916600185901b178555613c2d565b600085815260208120601f198616915b82811015613cc757888601518255948401946001909101908401613ca8565b5085821015613ce55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b84815260ff84166020820152826040820152608060608201526000613d1d60808301846130e0565b969550505050505056fea26469706673582212209b08663c99dac4958bdf1f6cae78f8610869445a7c962f9ffd67c22dbe617a0a64736f6c63430008130033",
    "sourceMapi;:::-;;;160:25:51;;;148:2;133:18;1155:136:40;;;;;;;;2381:214:41;;;;;;;;;;-1:-1:-1;2381:214:41;;;;;:::i;:::-;;:::i;:::-;;;652:14:51;;645:22;627:41;;615:2;600:18;2381:214:41;487:187:51;1437:136:40;;;;;;;;;;;;;:::i;2054:126::-;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;843:32:51;;;825:51;;813:2;798:18;2054:126:40;679:203:51;2651:98:41;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;752:60:44:-;;;;;;;;;;-1:-1:-1;752:60:44;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;8970:341:41:-;;;;;;;;;;-1:-1:-1;8970:341:41;;;;;:::i;:::-;;:::i;7109:528::-;;;;;;;;;;-1:-1:-1;7109:528:41;;;;;:::i;:::-;;:::i;950:249:47:-;;;;;;;;;;-1:-1:-1;950:249:47;;;;;:::i;:::-;;:::i;5328:126:41:-;;;;;;;;;;;;;:::i;1304:539:42:-;;;;;;;;;;-1:-1:-1;1304:539:42;;;;;:::i;:::-;;:::i;1054:73:41:-;;;;;;;;;;;;1107:20;1054:73;;1550:35;;;;;;;;;;;;;;;;1297:134:40;;;;;;;;;;;;;:::i;6563:138:41:-;;;;;;;;;;-1:-1:-1;6563:138:41;;;;;:::i;:::-;6639:4;6662:22;;;:10;:22;;;;;:32;-1:-1:-1;;;6662:32:41;;;;;6563:138;12828:353;;;;;;;;;;-1:-1:-1;12828:353:41;;;;;:::i;:::-;;:::i;5062:1024:47:-;;;;;;;;;;-1:-1:-1;5062:1024:47;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;328:43:43:-;;;;;;;;;;;;370:1;328:43;;2610:566:47;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;12316:452:41:-;;;;;;;;;;-1:-1:-1;12316:452:41;;;;;:::i;:::-;;:::i;1152:302:44:-;;;;;;;;;;-1:-1:-1;1152:302:44;;;;;:::i;:::-;1224:16;1310:32;;;:20;:32;;;;;1360:40;;1402:44;;;;;1360:40;;1152:302;;;;;12515:25:51;;;12571:2;12556:18;;12549:34;;;;12488:18;1152:302:44;12341:248:51;2968:101:41;;;;;;;;;;-1:-1:-1;3050:12:41;;;;;;;;;;;;-1:-1:-1;;;3050:12:41;;;;2968:101;;6352:130;;;;;;;;;;-1:-1:-1;6352:130:41;;;;;:::i;:::-;-1:-1:-1;;;;;6451:24:41;6425:7;6451:24;;;:15;:24;;;;;;;6352:130;1903:145:40;;;;;;;;;;;;;:::i;13253:443:41:-;;;;;;;;;;-1:-1:-1;13253:443:41;;;;;:::i;:::-;;:::i;1956:242:47:-;;;;;;;;;;;;;:::i;1557:424:44:-;;;;;;;;;;-1:-1:-1;1557:424:44;;;;;:::i;:::-;;:::i;536:123:45:-;;;;;;;;;;-1:-1:-1;630:22:45;;-1:-1:-1;;;;;630:22:45;536:123;;2807:102:41;;;;;;;;;;;;;:::i;612:29:44:-;;;;;;;;;;;;;;;;1579:169:40;;;;;;;;;;;;;:::i;5021:633:32:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;1286:281:47:-;;;;;;;;;;-1:-1:-1;1286:281:47;;;;;:::i;:::-;;:::i;1632:259::-;;;;;;;;;;;;;:::i;1191:57:41:-;;;;;;;;;;-1:-1:-1;1191:57:41;;;;;:::i;:::-;;;;;;;;;;;;;;;;6512:3166:47;;;;;;;;;;;;;:::i;685:61:44:-;;;;;;;;;;-1:-1:-1;685:61:44;;;;;:::i;:::-;;;;;;;;;;;;;;2425:215;;;;;;;;;;-1:-1:-1;2425:215:44;;;;;:::i;:::-;-1:-1:-1;;;;;2594:39:44;2545:26;2594:39;;;:26;:39;;;;;;;2425:215;2082:232;;;;;;;;;;-1:-1:-1;2082:232:44;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;9382:469:41:-;;;;;;;;;;-1:-1:-1;9382:469:41;;;;;:::i;:::-;;:::i;7709:1202::-;;;;;;;;;;-1:-1:-1;7709:1202:41;;;;;:::i;:::-;;:::i;378:45:42:-;;;;;;;;;;;;;;;4235:675:41;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;6121:137::-;;;;;;;;;;-1:-1:-1;6121:137:41;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1254:56::-;;;;;;;;;;-1:-1:-1;1254:56:41;;;;;:::i;:::-;;;;;;;;;;;;;;;;3301:945:47;;;;;;;;;;;;;:::i;273:55::-;;;;;;;;;;-1:-1:-1;273:55:47;;;;;;;;931:128:44;;;;;;;;;;-1:-1:-1;1019:33:44;;;;;;;;;;;;;;;;;931:128;;429:41:42;;;;;;;;;;;;;;;1133:52:41;;;;;;;;;;-1:-1:-1;1133:52:41;;;;;:::i;:::-;;;;;;;;;;;;;;953:95;;;;;;;;;;;;995:53;953:95;;5139:122;;;;;;;;;;;;;:::i;334:62:47:-;;;;;;;;;;-1:-1:-1;334:62:47;;;;;:::i;:::-;;;;;;;;;;;;;;11953:300:41;;;;;;;;;;;;;:::i;2265:252:47:-;;;;;;;;;;;;;:::i;4966:112:41:-;;;;;;;;;;;;;:::i;10931:931::-;;;;;;;;;;-1:-1:-1;10931:931:41;;;;;:::i;:::-;;:::i;781:356:45:-;;;;;;;;;;-1:-1:-1;781:356:45;;;;;:::i;:::-;;:::i;1754:143:40:-;;;;;;;;;;;;;:::i;4015:163:41:-;;;;;;;;;;-1:-1:-1;4015:163:41;;;;;:::i;:::-;;:::i;1155:136:40:-;1238:7;1264:20;1997:13:46;;;1909:108;1264:20:40;1257:27;;1155:136;:::o;2381:214:41:-;2483:4;-1:-1:-1;;;;;;2506:42:41;;-1:-1:-1;;;2506:42:41;;:82;;-1:-1:-1;;;;;;;;;;937:40:35;;;2552:36:41;2499:89;2381:214;-1:-1:-1;;2381:214:41:o;1437:136:40:-;1520:7;1546:20;2338:13:46;;;2250:108;2054:126:40;2132:7;2158:15;3113:8:46;;-1:-1:-1;;;;;3113:8:46;;3030:98;2651::41;2705:13;2737:5;2730:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2651:98;:::o;8970:341::-;9108:7;9139:33;9154:10;9166:5;;9139:14;:33::i;:::-;9131:93;;;;-1:-1:-1;;;9131:93:41;;;;;;;:::i;:::-;;;;;;;;;9234:30;9255:8;9234:20;:30::i;:::-;;9281:23;9295:8;9281:13;:23::i;:::-;9274:30;;8970:341;;;;;;:::o;7109:528::-;-1:-1:-1;;;;;7231:33:41;;7201:13;7231:33;;;:24;:33;;;;;;;;7226:384;;7284:20;7308:1;7284:25;7280:146;;-1:-1:-1;7407:4:41;7400:11;;7280:146;7439:61;7450:7;1107:20;7487:5;;7494;7439:10;:61::i;:::-;-1:-1:-1;;;;;;7559:33:41;;;;;;:24;:33;;;;;:40;;-1:-1:-1;;7559:40:41;7595:4;7559:40;;;7226:384;-1:-1:-1;7626:4:41;7109:528;;;;;:::o;950:249:47:-;1041:35;;1004:4;;1041:35;;1020:139;;;;-1:-1:-1;;;1020:139:47;;;;;;;:::i;:::-;-1:-1:-1;1176:16:47;;;;:7;:16;;;;;;;;;950:249::o;5328:126:41:-;5393:7;5433:14;:12;:14::i;:::-;5419:11;:9;:11::i;:::-;:28;;;;:::i;1304:539:42:-;1559:40;;-1:-1:-1;;20376:2:51;20372:15;;;20368:53;1559:40:42;;;20356:66:51;20438:12;;;20431:28;;;1448:13:42;;;;20475:12:51;;1559:40:42;;;;;;;;;;;;1549:51;;;;;;1534:66;;1610:16;1629:6;:138;;1714:53;1733:5;;1714:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1740:20:42;;-1:-1:-1;1762:4:42;;-1:-1:-1;1714:18:42;;-1:-1:-1;1714:53:42:i;:::-;1629:138;;;1650:49;1669:5;;1650:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1676:16:42;;-1:-1:-1;1694:4:42;;-1:-1:-1;1650:18:42;;-1:-1:-1;1650:49:42:i;:::-;1610:157;;1782:11;1777:38;;1802:13;;-1:-1:-1;;;1802:13:42;;;;;;;;;;;1777:38;-1:-1:-1;1832:4:42;;1304:539;-1:-1:-1;;;;;;;1304:539:42:o;1297:134:40:-;1379:7;1405:19;2167:12:46;;;2080:106;12828:353:41;13010:7;13049:10;13069:37;13049:10;13088;13100:5;;13069:11;:37::i;:::-;;13123:51;13133:10;13145:5;13152:7;13161:8;13123:51;;;;;;;;;;;;:9;:51::i;:::-;13116:58;12828:353;-1:-1:-1;;;;;;;;12828:353:41:o;5062:1024:47:-;5178:40;5235:31;5268:43;5327:23;:89;;5393:23;:21;:23::i;:::-;5327:89;;;5353:37;:35;:37::i;:::-;5234:182;;;;5458:1;5434:14;:21;:25;5426:88;;;;-1:-1:-1;;;5426:88:47;;20700:2:51;5426:88:47;;;20682:21:51;20739:2;20719:18;;;20712:30;20778:34;20758:18;;;20751:62;-1:-1:-1;;;20829:18:51;;;20822:48;20887:19;;5426:88:47;20498:414:51;5426:88:47;5524:32;5572:14;:21;-1:-1:-1;;;;;5559:35:47;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5559:35:47;;5524:70;;5609:9;5604:217;5628:23;:30;5624:1;:34;5604:217;;;5770:23;5794:1;5770:26;;;;;;;;:::i;:::-;;;;;;;:39;;;5724:23;5748:1;5724:26;;;;;;;;:::i;:::-;;;;;;;:35;;;5717:93;;;;:::i;:::-;5679:16;5696:1;5679:19;;;;;;;;:::i;:::-;;;;;;;;;;:131;5660:3;;;;:::i;:::-;;;;5604:217;;;;5835:9;5830:219;5878:1;5854:14;:21;:25;;;;:::i;:::-;5850:1;:29;5830:219;;;5992:46;6002:1;6005:16;6023:14;5992:9;:46::i;:::-;-1:-1:-1;5881:3:47;;;;:::i;:::-;;;;5830:219;;;-1:-1:-1;6065:14:47;;5062:1024;-1:-1:-1;;;;5062:1024:47:o;2610:566::-;2704:34;2740:49;2805:28;2836:19;:17;:19::i;:::-;2805:50;;2865:43;2928:11;:18;-1:-1:-1;;;;;2911:36:47;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;2911:36:47;;;;;;;;;;;;;;;;2865:82;;2962:9;2957:158;2981:11;:18;2977:1;:22;2957:158;;;3049:20;:36;3070:11;3082:1;3070:14;;;;;;;;:::i;:::-;;;;;;;3049:36;;;;;;;;;;;:55;;3020:84;;;;;;;;;;;;;;;;;;;;;;;;;:23;3044:1;3020:26;;;;;;;;:::i;:::-;;;;;;:84;;;;3001:3;;;;;:::i;:::-;;;;2957:158;;;-1:-1:-1;3132:11:47;;3145:23;;-1:-1:-1;2610:566:47;-1:-1:-1;2610:566:47:o;12316:452:41:-;-1:-1:-1;;;;;12483:34:41;;12449:13;12483:34;;;:25;:34;;;;;;;;12478:263;;12533:44;12544:7;12553:10;12565:5;;12572:4;12533:10;:44::i;:::-;-1:-1:-1;;;;;;12636:26:41;;;;;;:17;:26;;;;;;;;:39;;;12689:25;:34;;;;;:41;;-1:-1:-1;;12689:41:41;12726:4;12689:41;;;12478:263;-1:-1:-1;12757:4:41;12316:452;;;;;;:::o;1903:145:40:-;1990:7;2016:25;2946:18:46;;;2853:118;13253:443:41;13440:10;13401:7;13481:32;;;:25;:32;;;;;;13401:7;;13440:10;13481:32;;13460:161;;;;-1:-1:-1;;;13460:161:41;;21729:2:51;13460:161:41;;;21711:21:51;21768:2;21748:18;;;21741:30;21807:34;21787:18;;;21780:62;21878:34;21858:18;;;21851:62;-1:-1:-1;;;21929:19:51;;;21922:49;21988:19;;13460:161:41;21527:486:51;13460:161:41;13638:51;13648:10;13660:5;13667:7;13676:8;13638:51;;;;;;;;;;;;:9;:51::i;:::-;13631:58;13253:443;-1:-1:-1;;;;;13253:443:41:o;1956:242:47:-;2042:35;;2002:7;;2042:35;;2021:139;;;;-1:-1:-1;;;2021:139:47;;;;;;;:::i;:::-;-1:-1:-1;2177:14:47;;;1956:242::o;1557:424:44:-;1689:16;1779:32;;;:20;:32;;;;;;;;-1:-1:-1;;;;;1842:43:44;;;;:30;;:43;;;;;:52;;1908:56;;;;;1557:424;;;;;;:::o;2807:102:41:-;2863:13;2895:7;2888:14;;;;;:::i;1579:169:40:-;1678:7;1704:37;2543:30:46;;;2438:142;5021:633:32;5136:13;5163:18;;5136:13;;;5163:18;5427:41;:5;5136:13;5427:26;:41::i;:::-;5482:47;:8;5512:16;5482:29;:47::i;:::-;5621:16;;;5605:1;5621:16;;;;;;;;;-1:-1:-1;;;5376:271:32;;;-1:-1:-1;5376:271:32;;-1:-1:-1;5543:13:32;;-1:-1:-1;5578:4:32;;-1:-1:-1;5605:1:32;-1:-1:-1;5621:16:32;-1:-1:-1;5376:271:32;-1:-1:-1;5021:633:32:o;1286:281:47:-;1389:35;;1349:7;;1389:35;;1368:139;;;;-1:-1:-1;;;1368:139:47;;;;;;;:::i;:::-;-1:-1:-1;1524:36:47;;;;:27;:36;;;;;;;1286:281::o;1632:259::-;1731:35;;1682:16;;1731:35;;1710:139;;;;-1:-1:-1;;;1710:139:47;;;;;;;:::i;:::-;1866:18;1859:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1632:259;:::o;6512:3166::-;6606:32;6595:7;:5;:7::i;:::-;:43;;;;;;;;:::i;:::-;;6574:161;;;;-1:-1:-1;;;6574:161:47;;22220:2:51;6574:161:47;;;22202:21:51;22259:2;22239:18;;;22232:30;22298:34;22278:18;;;22271:62;22369:34;22349:18;;;22342:62;-1:-1:-1;;;22420:19:51;;;22413:38;22468:19;;6574:161:47;22018:475:51;6574:161:47;6766:35;;;;:44;6745:186;;;;-1:-1:-1;;;6745:186:47;;22700:2:51;6745:186:47;;;22682:21:51;22739:2;22719:18;;;22712:30;22778:34;22758:18;;;22751:62;22849:34;22829:18;;;22822:62;22921:33;22900:19;;;22893:62;22972:19;;6745:186:47;22498:499:51;6745:186:47;6963:21;6979:4;6963:15;:21::i;:::-;6942:42;;;;:18;;:42;;;;;;:::i;:::-;-1:-1:-1;7089:18:47;:25;6995:21;;7056:1;;7089:29;;7056:1;7089:29;:::i;:::-;7067:19;:51;7191:9;7186:2433;7210:18;:25;7206:29;;7186:2433;;;7286:18;:25;7256:27;;7286:29;;7314:1;;7286:29;:::i;:::-;7256:59;-1:-1:-1;7390:23:47;;7462:58;7476:18;7495:23;7517:1;7256:59;7495:23;:::i;:::-;7476:43;;;;;;;;:::i;:::-;;;;;;;;;1224:16:44;1310:32;;;:20;:32;;;;;1360:40;;1402:44;;;;;1360:40;;1152:302;7462:58:47;7389:131;;-1:-1:-1;7389:131:47;-1:-1:-1;7534:24:47;7561:53;7389:131;;7561:53;:::i;:::-;7534:80;;7698:1;7703;7698:6;7694:474;;7922:18;:25;7741:17;;-1:-1:-1;7741:17:47;;7951:1;7922:30;7918:209;;8027:23;8049:1;8027:19;:23;:::i;:::-;7976:48;;;;:27;:48;;;;;:74;8072:14;:36;;;7918:209;8145:8;;;;;;7694:474;8272:14;8251:17;:35;8247:481;;8311:28;;;;:7;:28;;;;;;;;8306:161;;8413:28;;;;:7;:28;;;;;:35;;-1:-1:-1;;8413:35:47;8444:4;8413:35;;;8306:161;8511:18;:25;:29;;8539:1;8511:29;:::i;:::-;8488:19;;:52;8484:230;;8654:19;:41;;;8484:230;8961:14;8940:17;:35;8936:291;;9146:23;9168:1;9146:19;:23;:::i;:::-;:27;;9172:1;9146:27;:::i;:::-;9095:48;;;;:27;:48;;;;;:78;9123:19;9191:21;9123:19;9191:21;:::i;:::-;;;;8936:291;9372:18;:25;9363:5;:1;9367;9363:5;:::i;:::-;:34;9359:201;;9468:23;9490:1;9468:19;:23;:::i;:::-;9417:48;;;;:27;:48;;;;;:74;9509:14;:36;;;9359:201;9591:17;-1:-1:-1;;;;7186:2433:47;7237:3;;;;:::i;:::-;;;;7186:2433;;;-1:-1:-1;;9629:35:47;:42;;-1:-1:-1;;9629:42:47;9667:4;9629:42;;;-1:-1:-1;6512:3166:47:o;2082:232:44:-;2195:33;2231:32;;;:20;:32;;;;;;;;;2280:27;;;2273:34;;;;;;;;;;;;;;;;;2167:16;;2231:32;;2273:34;;2280:27;2273:34;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:34:44;;;;;;;;;;;;;;;;;;;;;;;;2082:232;;;:::o;9382:469:41:-;9474:7;9497:20;:25;9493:272;;9691:10;9666:36;;;;:24;:36;;;;;;;;9658:96;;;;-1:-1:-1;;;9658:96:41;;;;;;;:::i;:::-;9774:30;9795:8;9774:20;:30::i;:::-;;9821:23;9835:8;9821:13;:23::i;7709:1202::-;7840:15;;7802:18;;-1:-1:-1;;;;;7840:29:41;7859:10;7840:29;7832:90;;;;-1:-1:-1;;;7832:90:41;;23204:2:51;7832:90:41;;;23186:21:51;23243:2;23223:18;;;23216:30;23282:34;23262:18;;;23255:62;-1:-1:-1;;;23333:18:51;;;23326:46;23389:19;;7832:90:41;23002:412:51;7832:90:41;7937:13;7932:866;370:1:43;7956:5:41;:23;7932:866;;;8004:25;8042:5;8032:16;;;;;;;;:::i;:::-;8004:44;-1:-1:-1;8085:16:41;8066:15;:35;;;;;;;;:::i;:::-;;8062:726;;8121:8;;;8062:726;8230:14;8211:15;:33;;;;;;;;:::i;:::-;;8207:581;;8293:21;;;;:29;:36;:29;:41;8264:184;;;;-1:-1:-1;;;8264:184:41;;23621:2:51;8264:184:41;;;23603:21:51;23660:2;23640:18;;;23633:30;23699:34;23679:18;;;23672:62;23770:34;23750:18;;;23743:62;-1:-1:-1;;;23821:19:51;;;23814:39;23870:19;;8264:184:41;23419:476:51;8264:184:41;8495:8;:21;;;:31;;;8530:1;8495:36;8466:175;;;;-1:-1:-1;;;8466:175:41;;24102:2:51;8466:175:41;;;24084:21:51;24141:2;24121:18;;;24114:30;;;24180:34;24160:18;;;24153:62;24251:34;24231:18;;;24224:62;-1:-1:-1;;;24302:19:51;;;24295:35;24347:19;;8466:175:41;23900:472:51;8466:175:41;8667:21;;;;:29;:36;:29;:41;8659:50;;;;;;8207:581;;;8755:18;;-1:-1:-1;;;8755:18:41;;;;;;;;;;;8207:581;7990:808;7932:866;7981:7;;;;:::i;:::-;;;;7932:866;;;;8821:8;:20;;;8815:34;8853:1;8815:39;8807:76;;;;-1:-1:-1;;;8807:76:41;;24579:2:51;8807:76:41;;;24561:21:51;24618:2;24598:18;;;24591:30;24657:26;24637:18;;;24630:54;24701:18;;8807:76:41;24377:348:51;8807:76:41;-1:-1:-1;8900:4:41;;7709:1202;-1:-1:-1;7709:1202:41:o;4235:675::-;4318:9;;4290:12;;4318:9;;4314:68;;;-1:-1:-1;4350:21:41;;4235:675::o;4314:68::-;4392:29;4424:14;:12;:14::i;:::-;4392:46;;4478:15;4453:21;:40;4449:101;;4516:23;4509:30;;;4235:675;:::o;4449:101::-;4560:26;4589:11;:9;:11::i;:::-;4560:40;;4637:15;4615:18;:37;4611:94;;4675:19;4668:26;;;;4235:675;:::o;4611:94::-;4715:25;4743:17;:15;:17::i;:::-;4715:45;;4796:15;4775:17;:36;4771:93;;4834:19;4827:26;;;;;4235:675;:::o;4771:93::-;4881:22;4874:29;;;;;4235:675;:::o;6121:137::-;6191:19;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6191:19:41;6229:22;;;;:10;:22;;;;;;;;;6222:29;;;;;;;;;-1:-1:-1;;;;;6222:29:41;;;;;-1:-1:-1;;;6222:29:41;;;;;;;;;;;;;-1:-1:-1;;;6222:29:41;;;;;;;;;;;;;;;;;;;;;6229:22;6222:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6222:29:41;;;-1:-1:-1;;6222:29:41;;;;;;;;;;;;;-1:-1:-1;;;;;6222:29:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6222:29:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6121:137;;;:::o;3301:945:47:-;3409:34;3445:49;3510:28;3541:19;:17;:19::i;:::-;3510:50;;3570:42;3629:11;:18;-1:-1:-1;;;;;3615:33:47;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3615:33:47;;3570:78;;3658:43;3721:11;:18;-1:-1:-1;;;;;3704:36:47;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;3704:36:47;;;;;;;;;;;;;;;;3658:82;;3751:29;3799:9;3794:377;3818:11;:18;3814:1;:22;3794:377;;;3862:33;3880:11;3892:1;3880:14;;;;;;;;:::i;:::-;;;;;;;6639:4:41;6662:22;;;:10;:22;;;;;:32;;-1:-1:-1;;;6662:32:41;;;;;6563:138;3862:33:47;3857:304;;3966:11;3978:1;3966:14;;;;;;;;:::i;:::-;;;;;;;3915:25;3941:21;3915:48;;;;;;;;:::i;:::-;;;;;;:65;;;;;4047:20;:36;4068:11;4080:1;4068:14;;;;;;;;:::i;:::-;;;;;;;4047:36;;;;;;;;;;;:55;;3998:104;;;;;;;;;;;;;;;;;;;;;;;;;:23;4022:21;3998:46;;;;;;;;:::i;:::-;;;;;;;;;;:104;4120:26;4145:1;4120:26;;:::i;:::-;;;3857:304;3838:3;;;;:::i;:::-;;;;3794:377;;;-1:-1:-1;4188:25:47;;4215:23;;-1:-1:-1;3301:945:47;-1:-1:-1;;;3301:945:47:o;5139:122:41:-;5198:7;5241:13;:11;:13::i;:::-;5224:14;:12;:14::i;11953:300::-;12018:9;:7;:9::i;:::-;-1:-1:-1;;;;;12004:23:41;:10;-1:-1:-1;;;;;12004:23:41;;11996:32;;;;;;12039:19;12061:7;:5;:7::i;:::-;12039:29;-1:-1:-1;12097:21:41;12087:6;:31;;;;;;;;:::i;:::-;;;:67;;;;-1:-1:-1;12132:22:41;12122:6;:32;;;;;;;;:::i;:::-;;;12087:67;12079:108;;;;-1:-1:-1;;;12079:108:41;;24932:2:51;12079:108:41;;;24914:21:51;24971:2;24951:18;;;24944:30;25010;24990:18;;;24983:58;25058:18;;12079:108:41;24730:352:51;12079:108:41;12197:9;:16;;-1:-1:-1;;12197:16:41;12209:4;12197:16;;;12229:17;;;;12197:9;;12229:17;11986:267;11953:300::o;2265:252:47:-;2356:35;;2316:7;;2356:35;;2335:139;;;;-1:-1:-1;;;2335:139:47;;;;;;;:::i;:::-;-1:-1:-1;2491:19:47;;;2265:252::o;4966:112:41:-;5024:16;5059:12;5052:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4966:112;:::o;10931:931::-;11033:9;:7;:9::i;:::-;-1:-1:-1;;;;;11019:23:41;:10;-1:-1:-1;;;;;11019:23:41;;11011:91;;;;-1:-1:-1;;;11011:91:41;;25289:2:51;11011:91:41;;;25271:21:51;25328:2;25308:18;;;25301:30;25367:34;25347:18;;;25340:62;25438:25;25418:18;;;25411:53;25481:19;;11011:91:41;25087:419:51;11011:91:41;11144:22;11133:7;:5;:7::i;:::-;:33;;;;;;;;:::i;:::-;;11112:153;;;;-1:-1:-1;;;11112:153:41;;25713:2:51;11112:153:41;;;25695:21:51;25752:2;25732:18;;;25725:30;25791:34;25771:18;;;25764:62;25862:34;25842:18;;;25835:62;-1:-1:-1;;;25913:19:51;;;25906:40;25963:19;;11112:153:41;25511:477:51;11112:153:41;11281:13;11276:535;11308:11;:18;11300:5;:26;11276:535;;;11356:10;:30;11367:11;11379:5;11367:18;;;;;;;;:::i;:::-;;;;;;;11356:30;;;;;;;;;;;:40;;;;;;;;;;;;11351:450;;11523:4;11480:10;:30;11491:11;11503:5;11491:18;;;;;;;;:::i;:::-;;;;;;;11480:30;;;;;;;;;;;:40;;;:47;;;;;;;;;;;;;;;;;;11785:1;11761:20;;:25;;;;;;;:::i;:::-;;;;-1:-1:-1;;11351:450:41;11328:7;;;;:::i;:::-;;;;11276:535;;;;11826:29;11843:11;11826:29;;;;;;:::i;:::-;;;;;;;;10931:931;:::o;781:356:45:-;900:9;:7;:9::i;:::-;-1:-1:-1;;;;;886:23:45;:10;-1:-1:-1;;;;;886:23:45;;878:32;;;;;;920:38;961:23;630:22;;-1:-1:-1;;;;;630:22:45;;536:123;961:23;994:22;:47;;-1:-1:-1;;;;;;994:47:45;-1:-1:-1;;;;;994:47:45;;;;;;;;;1056:74;;;26285:15:51;;;26267:34;;26332:2;26317:18;;26310:43;;;;920:64:45;;-1:-1:-1;1056:74:45;;26202:18:51;1056:74:45;;;;;;;868:269;781:356;:::o;1754:143:40:-;1840:7;1866:24;2754:17:46;;;2662:116;4015:163:41;4105:7;4160:8;4149:20;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4149:20:41;;;;;;;;;4139:31;;4149:20;4139:31;;;;;4015:163;-1:-1:-1;;4015:163:41:o;9857:964::-;9936:7;9974:19;9963:7;:5;:7::i;:::-;:30;;;;;;;;:::i;:::-;;9955:105;;;;-1:-1:-1;;;9955:105:41;;26566:2:51;9955:105:41;;;26548:21:51;26605:2;26585:18;;;26578:30;26644:34;26624:18;;;26617:62;26715:32;26695:18;;;26688:60;26765:19;;9955:105:41;26364:426:51;9955:105:41;10121:31;:29;:31::i;:::-;10107:10;10091:27;;;;:15;:27;;;;;;:61;10070:209;;;;-1:-1:-1;;;10070:209:41;;26997:2:51;10070:209:41;;;26979:21:51;27036:3;27016:18;;;27009:31;27076:34;27056:18;;;27049:62;27147:34;27127:18;;;27120:62;27219:34;27198:19;;;27191:63;-1:-1:-1;;;27270:19:51;;;27263:36;27316:19;;10070:209:41;26795:546:51;10070:209:41;10357:18;:16;:18::i;:::-;10333:20;;10311:12;:19;:42;;10333:20;10311:42;:::i;:::-;10310:65;10289:169;;;;-1:-1:-1;;;10289:169:41;;27548:2:51;10289:169:41;;;27530:21:51;27587:2;27567:18;;;27560:30;27626:34;27606:18;;;27599:62;27697:27;27677:18;;;27670:55;27742:19;;10289:169:41;27346:421:51;10289:169:41;10469:18;10490:22;10503:8;10490:12;:22::i;:::-;10531;;;;:10;:22;;;;;:29;:22;;-1:-1:-1;;;;10531:29:41;;;;10530:30;10522:84;;;;-1:-1:-1;;;10522:84:41;;27974:2:51;10522:84:41;;;27956:21:51;28013:2;27993:18;;;27986:30;28052:34;28032:18;;;28025:62;-1:-1:-1;;;28103:18:51;;;28096:39;28152:19;;10522:84:41;27772:405:51;10522:84:41;10617:12;:29;;;;;;;;;;;;;;-1:-1:-1;10656:22:41;;;:10;10617:29;10656:22;;;;;;;;:33;;;;;;;;;;;;;;-1:-1:-1;;;10656:33:41;-1:-1:-1;;;;10656:33:41;;;-1:-1:-1;;;10656:33:41;-1:-1:-1;;;;;;10656:33:41;;;-1:-1:-1;;;;;10656:33:41;;;;;;;;;;;;;;;;;;;;;;10681:8;;10656:33;;;;;;;:::i;:::-;-1:-1:-1;10656:33:41;;;;;;;;;;-1:-1:-1;;;;;;10656:33:41;-1:-1:-1;;;;;10656:33:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10656:33:41;;;;;;;;;;10715:10;10699:27;;;;:15;:27;;;;;;:32;;10656:33;;-1:-1:-1;10699:27:41;-1:-1:-1;10699:32:41;;10656:33;;10699:32;:::i;:::-;;;;-1:-1:-1;;10747:39:41;;;30560:25:51;;;10775:10:41;30616:2:51;30601:18;;30594:60;10747:39:41;;30533:18:51;10747:39:41;;;;;;;10804:10;9857:964;-1:-1:-1;;9857:964:41:o;1156:154:33:-;1247:4;1299;1270:25;1283:5;1290:4;1270:12;:25::i;:::-;:33;;1156:154;-1:-1:-1;;;;1156:154:33:o;13977:722:41:-;14138:7;14180:19;14169:7;:5;:7::i;:::-;:30;;;;;;;;:::i;:::-;;14161:78;;;;-1:-1:-1;;;14161:78:41;;30867:2:51;14161:78:41;;;30849:21:51;30906:2;30886:18;;;30879:30;30945:34;30925:18;;;30918:62;-1:-1:-1;;;30996:18:51;;;30989:33;31039:19;;14161:78:41;30665:399:51;14161:78:41;14268:1;14257:8;:12;14249:68;;;;-1:-1:-1;;;14249:68:41;;31271:2:51;14249:68:41;;;31253:21:51;31310:2;31290:18;;;31283:30;31349:34;31329:18;;;31322:62;-1:-1:-1;;;31400:18:51;;;31393:41;31451:19;;14249:68:41;31069:407:51;14249:68:41;-1:-1:-1;;;;;14349:34:41;;;;;;:25;:34;;;;;;;;14328:160;;;;-1:-1:-1;;;14328:160:41;;31683:2:51;14328:160:41;;;31665:21:51;31722:2;31702:18;;;31695:30;31761:34;31741:18;;;31734:62;31832:34;31812:18;;;31805:62;-1:-1:-1;;;31883:19:51;;;31876:46;31939:19;;14328:160:41;31481:483:51;14328:160:41;14498:78;14509:10;14521:7;14530;14539:8;14549:17;:26;14567:7;-1:-1:-1;;;;;14549:26:41;-1:-1:-1;;;;;14549:26:41;;;;;;;;;;;;;14498:10;:78::i;:::-;14601:7;-1:-1:-1;;;;;14592:56:41;;14610:10;14622:7;14631:8;14641:6;14592:56;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;14666:26:41;;;;;:17;:26;;;;;;;13977:722;-1:-1:-1;13977:722:41:o;4252:717:47:-;4395:4;4430:3;;4443:171;4469:16;:23;4465:1;:27;4443:171;;;4539:16;4556:4;4539:22;;;;;;;;:::i;:::-;;;;;;;4517:16;4534:1;4517:19;;;;;;;;:::i;:::-;;;;;;;:44;4513:91;;;4588:1;4581:8;;4513:91;4494:3;;;;:::i;:::-;;;;4443:171;;;;4635:3;4627:4;:11;4623:29;;4647:5;4640:12;;;;;4623:29;4662:15;4680:16;4697:3;4680:21;;;;;;;;:::i;:::-;;;;;;;4662:39;;4735:16;4752:4;4735:22;;;;;;;;:::i;:::-;;;;;;;4711:16;4728:3;4711:21;;;;;;;;:::i;:::-;;;;;;:46;;;;;4792:8;4767:16;4784:4;4767:22;;;;;;;;:::i;:::-;;;;;;:33;;;;;4810:22;4835:11;4847:3;4835:16;;;;;;;;:::i;:::-;;;;;;;4810:41;;4880:11;4892:4;4880:17;;;;;;;;:::i;:::-;;;;;;;4861:11;4873:3;4861:16;;;;;;;;:::i;:::-;;;;;;:36;;;;;4927:14;4907:11;4919:4;4907:17;;;;;;;;:::i;:::-;;;;;;;;;;:34;-1:-1:-1;4958:4:47;;4252:717;-1:-1:-1;;;;;;4252:717:47:o;3367:268:27:-;3461:13;1371:66;3490:47;;3486:143;;3560:15;3569:5;3560:8;:15::i;:::-;3553:22;;;;3486:143;3613:5;3606:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3367:268;;;;:::o;1934:290:33:-;2017:7;2059:4;2017:7;2073:116;2097:5;:12;2093:1;:16;2073:116;;;2145:33;2155:12;2169:5;2175:1;2169:8;;;;;;;;:::i;:::-;;;;;;;2145:9;:33::i;:::-;2130:48;-1:-1:-1;2111:3:33;;;;:::i;:::-;;;;2073:116;;;-1:-1:-1;2205:12:33;1934:290;-1:-1:-1;;;1934:290:33:o;2780:1308:44:-;2954:33;2990:32;;;:20;:32;;;;;;;;-1:-1:-1;;;;;3080:35:44;;;;:26;:35;;;;;;;3067:48;;:10;:48;:::i;:::-;3054:8;:62;;3033:160;;;;-1:-1:-1;;;3033:160:44;;32618:2:51;3033:160:44;;;32600:21:51;32657:2;32637:18;;;32630:30;32696:34;32676:18;;;32669:62;-1:-1:-1;;;32747:18:51;;;32740:49;32806:19;;3033:160:44;32416:415:51;3033:160:44;-1:-1:-1;;;;;3227:39:44;;3204:20;3227:39;;;:30;;;:39;;;;;:48;:53;3295:30;;;3291:601;;3341:52;;3385:8;;3341:12;;:31;;:52;;3385:8;;3341:52;:::i;:::-;;;;-1:-1:-1;;;;;;;3407:39:44;;;;;;:30;;;:39;;;;;:60;;3459:8;;3407:39;:60;;3459:8;;3407:60;:::i;:::-;;;;-1:-1:-1;3291:601:44;;-1:-1:-1;3291:601:44;;-1:-1:-1;;3488:34:44;;;;3484:408;;3546:19;:17;:19::i;:::-;3569:1;3546:24;3538:101;;;;;-1:-1:-1;;;3538:101:44;;33038:2:51;3538:101:44;;;33020:21:51;33057:18;;;33050:30;;;;33116:34;33096:18;;;33089:62;33187:34;33167:18;;;33160:62;33239:19;;3538:101:44;32836:428:51;3538:101:44;3701:8;3653:12;:31;;:44;;;:56;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;3723:39:44;;;;;;:30;;;:39;;;;;:52;;:64;;3779:8;;3723:39;:64;;3779:8;;3723:64;:::i;3484:408::-;3818:63;;-1:-1:-1;;;3818:63:44;;33471:2:51;3818:63:44;;;33453:21:51;33510:2;33490:18;;;33483:30;33549:34;33529:18;;;33522:62;-1:-1:-1;;;33600:18:51;;;33593:51;33661:19;;3818:63:44;33269:417:51;3484:408:44;3906:15;3902:87;;;3937:27;;;:41;;;;;;;-1:-1:-1;3937:41:44;;;;;;;;;;-1:-1:-1;;;;;;3937:41:44;-1:-1:-1;;;;;3937:41:44;;;;;3902:87;-1:-1:-1;;;;;3998:35:44;;;;;;:26;:35;;;;;:47;;4037:8;;3998:35;:47;;4037:8;;3998:47;:::i;:::-;;;;;;;;4073:8;4055:14;;:26;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;;;2780:1308:44:o;2059:405:27:-;2118:13;2143:11;2157:16;2168:4;2157:10;:16::i;:::-;2281:14;;;2292:2;2281:14;;;;;;;;;2143:30;;-1:-1:-1;2261:17:27;;2281:14;;;;;;;;;-1:-1:-1;;;2371:16:27;;;-1:-1:-1;2416:4:27;2407:14;;2400:28;;;;-1:-1:-1;2371:16:27;2059:405::o;9205:147:33:-;9268:7;9298:1;9294;:5;:51;;9426:13;9517:15;;;9552:4;9545:15;;;9598:4;9582:21;;9294:51;;;-1:-1:-1;9426:13:33;9517:15;;;9552:4;9545:15;9598:4;9582:21;;;9205:147::o;2536:245:27:-;2597:7;2669:4;2633:40;;2696:2;2687:11;;2683:69;;;2721:20;;-1:-1:-1;;;2721:20:27;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;196:286:51;254:6;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;349:23;;-1:-1:-1;;;;;;401:32:51;;391:43;;381:71;;448:1;445;438:12;887:423;929:3;967:5;961:12;994:6;989:3;982:19;1019:1;1029:162;1043:6;1040:1;1037:13;1029:162;;;1105:4;1161:13;;;1157:22;;1151:29;1133:11;;;1129:20;;1122:59;1058:12;1029:162;;;1033:3;1236:1;1229:4;1220:6;1215:3;1211:16;1207:27;1200:38;1299:4;1292:2;1288:7;1283:2;1275:6;1271:15;1267:29;1262:3;1258:39;1254:50;1247:57;;;887:423;;;;:::o;1315:220::-;1464:2;1453:9;1446:21;1427:4;1484:45;1525:2;1514:9;1510:18;1502:6;1484:45;:::i;1540:180::-;1599:6;1652:2;1640:9;1631:7;1627:23;1623:32;1620:52;;;1668:1;1665;1658:12;1620:52;-1:-1:-1;1691:23:51;;1540:180;-1:-1:-1;1540:180:51:o;1881:257::-;1801:12;;1789:25;;1863:4;1852:16;;;1846:23;1830:14;;;1823:47;2073:2;2058:18;;2085:47;1725:151;2143:127;2204:10;2199:3;2195:20;2192:1;2185:31;2235:4;2232:1;2225:15;2259:4;2256:1;2249:15;2275:257;2347:4;2341:11;;;2379:17;;-1:-1:-1;;;;;2411:34:51;;2447:22;;;2408:62;2405:88;;;2473:18;;:::i;:::-;2509:4;2502:24;2275:257;:::o;2537:253::-;2609:2;2603:9;2651:4;2639:17;;-1:-1:-1;;;;;2671:34:51;;2707:22;;;2668:62;2665:88;;;2733:18;;:::i;2795:275::-;2866:2;2860:9;2931:2;2912:13;;-1:-1:-1;;2908:27:51;2896:40;;-1:-1:-1;;;;;2951:34:51;;2987:22;;;2948:62;2945:88;;;3013:18;;:::i;:::-;3049:2;3042:22;2795:275;;-1:-1:-1;2795:275:51:o;3075:131::-;-1:-1:-1;;;;;3150:31:51;;3140:42;;3130:70;;3196:1;3193;3186:12;3130:70;3075:131;:::o;3211:134::-;3279:20;;3308:31;3279:20;3308:31;:::i;:::-;3211:134;;;:::o;3350:160::-;3415:20;;3471:13;;3464:21;3454:32;;3444:60;;3500:1;3497;3490:12;3515:531;3558:5;3611:3;3604:4;3596:6;3592:17;3588:27;3578:55;;3629:1;3626;3619:12;3578:55;3665:6;3652:20;-1:-1:-1;;;;;3687:2:51;3684:26;3681:52;;;3713:18;;:::i;:::-;3757:55;3800:2;3781:13;;-1:-1:-1;;3777:27:51;3806:4;3773:38;3757:55;:::i;:::-;3837:2;3828:7;3821:19;3883:3;3876:4;3871:2;3863:6;3859:15;3855:26;3852:35;3849:55;;;3900:1;3897;3890:12;3849:55;3965:2;3958:4;3950:6;3946:17;3939:4;3930:7;3926:18;3913:55;4013:1;3988:16;;;4006:4;3984:27;3977:38;;;;3992:7;3515:531;-1:-1:-1;;;3515:531:51:o;4051:486::-;4112:5;4160:4;4148:9;4143:3;4139:19;4135:30;4132:50;;;4178:1;4175;4168:12;4132:50;4211:2;4205:9;4253:4;4245:6;4241:17;4324:6;4312:10;4309:22;-1:-1:-1;;;;;4276:10:51;4273:34;4270:62;4267:88;;;4335:18;;:::i;:::-;4371:2;4364:22;4404:6;-1:-1:-1;4404:6:51;4434:23;;4466:33;4434:23;4466:33;:::i;:::-;4508:23;;4051:486;;-1:-1:-1;;4051:486:51:o;4542:183::-;4602:4;-1:-1:-1;;;;;4627:6:51;4624:30;4621:56;;;4657:18;;:::i;:::-;-1:-1:-1;4702:1:51;4698:14;4714:4;4694:25;;4542:183::o;4730:1048::-;4789:5;4837:4;4825:9;4820:3;4816:19;4812:30;4809:50;;;4855:1;4852;4845:12;4809:50;4877:22;;:::i;:::-;4868:31;;4935:9;4922:23;-1:-1:-1;;;;;4960:6:51;4957:30;4954:50;;;5000:1;4997;4990:12;4954:50;5023:22;;5076:4;5068:13;;5064:23;-1:-1:-1;5054:51:51;;5101:1;5098;5091:12;5054:51;5137:2;5124:16;5159:4;5183:60;5199:43;5239:2;5199:43;:::i;:::-;5183:60;:::i;:::-;5277:15;;;5359:1;5355:10;;;;5347:19;;5343:28;;;5308:12;;;;5383:15;;;5380:35;;;5411:1;5408;5401:12;5380:35;5435:11;;;;5455:223;5471:6;5466:3;5463:15;5455:223;;;5553:3;5540:17;5570:33;5595:7;5570:33;:::i;:::-;5616:20;;5488:12;;;;5656;;;;5455:223;;;5687:20;;-1:-1:-1;5752:18:51;;;5739:32;5723:14;;;5716:56;;;;-1:-1:-1;5694:5:51;4730:1048;-1:-1:-1;;4730:1048:51:o;5783:868::-;5842:5;5890:4;5878:9;5873:3;5869:19;5865:30;5862:50;;;5908:1;5905;5898:12;5862:50;5930:22;;:::i;:::-;5921:31;;5975:29;5994:9;5975:29;:::i;:::-;5968:5;5961:44;6037:35;6068:2;6057:9;6053:18;6037:35;:::i;:::-;6032:2;6025:5;6021:14;6014:59;6105:35;6136:2;6125:9;6121:18;6105:35;:::i;:::-;6100:2;6093:5;6089:14;6082:59;6192:2;6181:9;6177:18;6164:32;-1:-1:-1;;;;;6256:2:51;6248:6;6245:14;6242:34;;;6272:1;6269;6262:12;6242:34;6308:46;6350:3;6341:6;6330:9;6326:22;6308:46;:::i;:::-;6303:2;6296:5;6292:14;6285:70;6388:58;6442:3;6436;6425:9;6421:19;6388:58;:::i;:::-;6382:3;6375:5;6371:15;6364:83;6500:3;6489:9;6485:19;6472:33;6456:49;;6530:2;6520:8;6517:16;6514:36;;;6546:1;6543;6536:12;6514:36;;6583:61;6640:3;6629:8;6618:9;6614:24;6583:61;:::i;:::-;6577:3;6570:5;6566:15;6559:86;;5783:868;;;;:::o;6656:367::-;6719:8;6729:6;6783:3;6776:4;6768:6;6764:17;6760:27;6750:55;;6801:1;6798;6791:12;6750:55;-1:-1:-1;6824:20:51;;-1:-1:-1;;;;;6856:30:51;;6853:50;;;6899:1;6896;6889:12;6853:50;6936:4;6928:6;6924:17;6912:29;;6996:3;6989:4;6979:6;6976:1;6972:14;6964:6;6960:27;6956:38;6953:47;6950:67;;;7013:1;7010;7003:12;7028:692;7154:6;7162;7170;7223:2;7211:9;7202:7;7198:23;7194:32;7191:52;;;7239:1;7236;7229:12;7191:52;7279:9;7266:23;-1:-1:-1;;;;;7349:2:51;7341:6;7338:14;7335:34;;;7365:1;7362;7355:12;7335:34;7388:63;7443:7;7434:6;7423:9;7419:22;7388:63;:::i;:::-;7378:73;;7504:2;7493:9;7489:18;7476:32;7460:48;;7533:2;7523:8;7520:16;7517:36;;;7549:1;7546;7539:12;7517:36;;7588:72;7652:7;7641:8;7630:9;7626:24;7588:72;:::i;:::-;7028:692;;7679:8;;-1:-1:-1;7562:98:51;;-1:-1:-1;;;;7028:692:51:o;7725:572::-;7820:6;7828;7836;7889:2;7877:9;7868:7;7864:23;7860:32;7857:52;;;7905:1;7902;7895:12;7857:52;7944:9;7931:23;7963:31;7988:5;7963:31;:::i;:::-;8013:5;-1:-1:-1;8069:2:51;8054:18;;8041:32;-1:-1:-1;;;;;8085:30:51;;8082:50;;;8128:1;8125;8118:12;8082:50;8167:70;8229:7;8220:6;8209:9;8205:22;8167:70;:::i;8302:709::-;8412:6;8420;8428;8436;8444;8497:3;8485:9;8476:7;8472:23;8468:33;8465:53;;;8514:1;8511;8504:12;8465:53;8553:9;8540:23;8572:31;8597:5;8572:31;:::i;:::-;8622:5;-1:-1:-1;8674:2:51;8659:18;;8646:32;;-1:-1:-1;8729:2:51;8714:18;;8701:32;-1:-1:-1;;;;;8745:30:51;;8742:50;;;8788:1;8785;8778:12;8742:50;8827:70;8889:7;8880:6;8869:9;8865:22;8827:70;:::i;:::-;8916:8;;-1:-1:-1;8801:96:51;-1:-1:-1;8970:35:51;;-1:-1:-1;9001:2:51;8986:18;;8970:35;:::i;:::-;8960:45;;8302:709;;;;;;;;:::o;9016:156::-;9082:20;;9142:4;9131:16;;9121:27;;9111:55;;9162:1;9159;9152:12;9177:713;9297:6;9305;9313;9321;9329;9337;9390:3;9378:9;9369:7;9365:23;9361:33;9358:53;;;9407:1;9404;9397:12;9358:53;9443:9;9430:23;9420:33;;9472:36;9504:2;9493:9;9489:18;9472:36;:::i;:::-;9462:46;;9555:2;9544:9;9540:18;9527:32;9517:42;;9606:2;9595:9;9591:18;9578:32;9568:42;;9661:3;9650:9;9646:19;9633:33;-1:-1:-1;;;;;9681:6:51;9678:30;9675:50;;;9721:1;9718;9711:12;9675:50;9760:70;9822:7;9813:6;9802:9;9798:22;9760:70;:::i;:::-;9177:713;;;;-1:-1:-1;9177:713:51;;-1:-1:-1;9177:713:51;;9849:8;;9177:713;-1:-1:-1;;;9177:713:51:o;9895:180::-;9951:6;10004:2;9992:9;9983:7;9979:23;9975:32;9972:52;;;10020:1;10017;10010:12;9972:52;10043:26;10059:9;10043:26;:::i;10080:435::-;10133:3;10171:5;10165:12;10198:6;10193:3;10186:19;10224:4;10253:2;10248:3;10244:12;10237:19;;10290:2;10283:5;10279:14;10311:1;10321:169;10335:6;10332:1;10329:13;10321:169;;;10396:13;;10384:26;;10430:12;;;;10465:15;;;;10357:1;10350:9;10321:169;;;-1:-1:-1;10506:3:51;;10080:435;-1:-1:-1;;;;;10080:435:51:o;10520:261::-;10699:2;10688:9;10681:21;10662:4;10719:56;10771:2;10760:9;10756:18;10748:6;10719:56;:::i;10786:905::-;11064:4;11093:2;11122;11111:9;11104:21;11148:56;11200:2;11189:9;11185:18;11177:6;11148:56;:::i;:::-;11261:22;;;11223:2;11241:18;;;11234:50;;;;11333:13;;11355:22;;;11431:15;;;;11393;;;11464:1;11474:191;11488:6;11485:1;11482:13;11474:191;;;11537:48;11581:3;11572:6;11566:13;1801:12;;1789:25;;1863:4;1852:16;;;1846:23;1830:14;;1823:47;1725:151;11537:48;11640:15;;;;11605:12;;;;11510:1;11503:9;11474:191;;;-1:-1:-1;11682:3:51;;10786:905;-1:-1:-1;;;;;;;;10786:905:51:o;11696:640::-;11800:6;11808;11816;11824;11877:2;11865:9;11856:7;11852:23;11848:32;11845:52;;;11893:1;11890;11883:12;11845:52;11932:9;11919:23;11951:31;11976:5;11951:31;:::i;:::-;12001:5;-1:-1:-1;12053:2:51;12038:18;;12025:32;;-1:-1:-1;12108:2:51;12093:18;;12080:32;-1:-1:-1;;;;;12124:30:51;;12121:50;;;12167:1;12164;12157:12;12121:50;12206:70;12268:7;12259:6;12248:9;12244:22;12206:70;:::i;:::-;11696:640;;;;-1:-1:-1;12295:8:51;-1:-1:-1;;;;11696:640:51:o;12594:247::-;12653:6;12706:2;12694:9;12685:7;12681:23;12677:32;12674:52;;;12722:1;12719;12712:12;12674:52;12761:9;12748:23;12780:31;12805:5;12780:31;:::i;12846:318::-;12921:6;12929;12937;12990:2;12978:9;12969:7;12965:23;12961:32;12958:52;;;13006:1;13003;12996:12;12958:52;13042:9;13029:23;13019:33;;13071:36;13103:2;13092:9;13088:18;13071:36;:::i;:::-;13061:46;;13154:2;13143:9;13139:18;13126:32;13116:42;;12846:318;;;;;:::o;13169:315::-;13237:6;13245;13298:2;13286:9;13277:7;13273:23;13269:32;13266:52;;;13314:1;13311;13304:12;13266:52;13350:9;13337:23;13327:33;;13410:2;13399:9;13395:18;13382:32;13423:31;13448:5;13423:31;:::i;:::-;13473:5;13463:15;;;13169:315;;;;;:::o;13728:920::-;14134:3;14129;14125:13;14117:6;14113:26;14102:9;14095:45;14176:3;14171:2;14160:9;14156:18;14149:31;14076:4;14203:46;14244:3;14233:9;14229:19;14221:6;14203:46;:::i;:::-;14297:9;14289:6;14285:22;14280:2;14269:9;14265:18;14258:50;14331:33;14357:6;14349;14331:33;:::i;:::-;14395:2;14380:18;;14373:34;;;-1:-1:-1;;;;;14444:32:51;;14438:3;14423:19;;14416:61;14464:3;14493:19;;14486:35;;;14558:22;;;14552:3;14537:19;;14530:51;14317:47;-1:-1:-1;14598:44:51;14317:47;14627:6;14598:44;:::i;:::-;14590:52;13728:920;-1:-1:-1;;;;;;;;;;13728:920:51:o;14653:461::-;14706:3;14744:5;14738:12;14771:6;14766:3;14759:19;14797:4;14826:2;14821:3;14817:12;14810:19;;14863:2;14856:5;14852:14;14884:1;14894:195;14908:6;14905:1;14902:13;14894:195;;;14973:13;;-1:-1:-1;;;;;14969:39:51;14957:52;;15029:12;;;;15064:15;;;;15005:1;14923:9;14894:195;;15119:261;15298:2;15287:9;15280:21;15261:4;15318:56;15370:2;15359:9;15355:18;15347:6;15318:56;:::i;15385:356::-;15475:6;15528:2;15516:9;15507:7;15503:23;15499:32;15496:52;;;15544:1;15541;15534:12;15496:52;15584:9;15571:23;-1:-1:-1;;;;;15609:6:51;15606:30;15603:50;;;15649:1;15646;15639:12;15603:50;15672:63;15727:7;15718:6;15707:9;15703:22;15672:63;:::i;:::-;15662:73;15385:356;-1:-1:-1;;;;15385:356:51:o;15928:127::-;15989:10;15984:3;15980:20;15977:1;15970:31;16020:4;16017:1;16010:15;16044:4;16041:1;16034:15;16060:346;16210:2;16195:18;;16243:1;16232:13;;16222:144;;16288:10;16283:3;16279:20;16276:1;16269:31;16323:4;16320:1;16313:15;16351:4;16348:1;16341:15;16222:144;16375:25;;;16060:346;:::o;16411:1071::-;16602:2;16591:9;16584:21;16565:4;16641:1;16637;16632:3;16628:11;16624:19;16698:2;16689:6;16683:13;16679:22;16674:2;16663:9;16659:18;16652:50;16770:2;16762:6;16758:15;16752:22;16745:30;16738:38;16733:2;16722:9;16718:18;16711:66;16845:2;16837:6;16833:15;16827:22;16820:30;16813:38;16808:2;16797:9;16793:18;16786:66;16899:2;16891:6;16887:15;16881:22;16940:4;16934:3;16923:9;16919:19;16912:33;16968:52;17015:3;17004:9;17000:19;16986:12;16968:52;:::i;:::-;16954:66;;17093:2;17085:3;17077:6;17073:16;17067:23;17061:30;17057:39;17051:3;17040:9;17036:19;17029:68;17146:3;17138:6;17134:16;17128:23;17106:45;;17221:2;17217:7;17205:9;17197:6;17193:22;17189:36;17182:4;17171:9;17167:20;17160:66;17263:14;17257:21;17302:2;17294:6;17287:18;17328:61;17385:2;17377:6;17373:15;17357:14;17328:61;:::i;:::-;17448:2;17428:23;;;17422:30;17405:15;;;;17398:55;;;;-1:-1:-1;17314:75:51;16411:1071;-1:-1:-1;;;16411:1071:51:o;17487:891::-;17571:6;17602:2;17645;17633:9;17624:7;17620:23;17616:32;17613:52;;;17661:1;17658;17651:12;17613:52;17701:9;17688:23;-1:-1:-1;;;;;17726:6:51;17723:30;17720:50;;;17766:1;17763;17756:12;17720:50;17789:22;;17842:4;17834:13;;17830:27;-1:-1:-1;17820:55:51;;17871:1;17868;17861:12;17820:55;17907:2;17894:16;17930:60;17946:43;17986:2;17946:43;:::i;17930:60::-;18024:15;;;18106:1;18102:10;;;;18094:19;;18090:28;;;18055:12;;;;18130:19;;;18127:39;;;18162:1;18159;18152:12;18127:39;18186:11;;;;18206:142;18222:6;18217:3;18214:15;18206:142;;;18288:17;;18276:30;;18239:12;;;;18326;;;;18206:142;;;18367:5;17487:891;-1:-1:-1;;;;;;;17487:891:51:o;18658:380::-;18737:1;18733:12;;;;18780;;;18801:61;;18855:4;18847:6;18843:17;18833:27;;18801:61;18908:2;18900:6;18897:14;18877:18;18874:38;18871:161;;18954:10;18949:3;18945:20;18942:1;18935:31;18989:4;18986:1;18979:15;19017:4;19014:1;19007:15;18871:161;;18658:380;;;:::o;19043:411::-;19245:2;19227:21;;;19284:2;19264:18;;;19257:30;19323:34;19318:2;19303:18;;19296:62;-1:-1:-1;;;19389:2:51;19374:18;;19367:45;19444:3;19429:19;;19043:411::o;19459:473::-;19661:2;19643:21;;;19700:2;19680:18;;;19673:30;19739:34;19734:2;19719:18;;19712:62;19810:34;19805:2;19790:18;;19783:62;-1:-1:-1;;;19876:3:51;19861:19;;19854:36;19922:3;19907:19;;19459:473::o;19937:127::-;19998:10;19993:3;19989:20;19986:1;19979:31;20029:4;20026:1;20019:15;20053:4;20050:1;20043:15;20069:125;20134:9;;;20155:10;;;20152:36;;;20168:18;;:::i;20917:127::-;20978:10;20973:3;20969:20;20966:1;20959:31;21009:4;21006:1;20999:15;21033:4;21030:1;21023:15;21049:200;21115:9;;;21088:4;21143:9;;21171:10;;21183:12;;;21167:29;21206:12;;;21198:21;;21164:56;21161:82;;;21223:18;;:::i;:::-;21161:82;21049:200;;;;:::o;21254:135::-;21293:3;21314:17;;;21311:43;;21334:18;;:::i;:::-;-1:-1:-1;21381:1:51;21370:13;;21254:135::o;21394:128::-;21461:9;;;21482:11;;;21479:37;;;21496:18;;:::i;28308:545::-;28410:2;28405:3;28402:11;28399:448;;;28446:1;28471:5;28467:2;28460:17;28516:4;28512:2;28502:19;28586:2;28574:10;28570:19;28567:1;28563:27;28557:4;28553:38;28622:4;28610:10;28607:20;28604:47;;;-1:-1:-1;28645:4:51;28604:47;28700:2;28695:3;28691:12;28688:1;28684:20;28678:4;28674:31;28664:41;;28755:82;28773:2;28766:5;28763:13;28755:82;;;28818:17;;;28799:1;28788:13;28755:82;;;28759:3;;;28399:448;28308:545;;;:::o;29029:1352::-;29155:3;29149:10;-1:-1:-1;;;;;29174:6:51;29171:30;29168:56;;;29204:18;;:::i;:::-;29233:97;29323:6;29283:38;29315:4;29309:11;29283:38;:::i;:::-;29277:4;29233:97;:::i;:::-;29385:4;;29449:2;29438:14;;29466:1;29461:663;;;;30168:1;30185:6;30182:89;;;-1:-1:-1;30237:19:51;;;30231:26;30182:89;-1:-1:-1;;28986:1:51;28982:11;;;28978:24;28974:29;28964:40;29010:1;29006:11;;;28961:57;30284:81;;29431:944;;29461:663;28255:1;28248:14;;;28292:4;28279:18;;-1:-1:-1;;29497:20:51;;;29615:236;29629:7;29626:1;29623:14;29615:236;;;29718:19;;;29712:26;29697:42;;29810:27;;;;29778:1;29766:14;;;;29645:19;;29615:236;;;29619:3;29879:6;29870:7;29867:19;29864:201;;;29940:19;;;29934:26;-1:-1:-1;;30023:1:51;30019:14;;;30035:3;30015:24;30011:37;30007:42;29992:58;29977:74;;29864:201;-1:-1:-1;;;;;30111:1:51;30095:14;;;30091:22;30078:36;;-1:-1:-1;29029:1352:51:o;31969:442::-;32198:6;32187:9;32180:25;32253:4;32245:6;32241:17;32236:2;32225:9;32221:18;32214:45;32295:6;32290:2;32279:9;32275:18;32268:34;32338:3;32333:2;32322:9;32318:18;32311:31;32161:4;32359:46;32400:3;32389:9;32385:19;32377:6;32359:46;:::i;:::-;32351:54;31969:442;-1:-1:-1;;;;;;31969:442:51:o",
    "linkReferences": {},
    "immutableReferences": {
      "31688": [
        {
          "start": 5150,
          "length": 32
        }
      ],
      "31691": [
        {
          "start": 5192,
          "length": 32
        }
      ],
      "36043": [
        {
          "start": 2405,
          "length": 32
        },
        {
          "start": 3439,
          "length": 32
        },
        {
          "start": 3768,
          "length": 32
        },
        {
          "start": 6356,
          "length": 32
        }
      ],
      "36045": [
        {
          "start": 2701,
          "length": 32
        },
        {
          "start": 3869,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "AMOUNT_FOR_SUMBITTER_PROOF()": "347cf665",
    "BALLOT_TYPEHASH()": "deaaa7cc",
    "COUNTING_MODE()": "dd4e2ba5",
    "METADATAS_COUNT()": "4d24a67f",
    "_numDeletedProposals()": "34da4d33",
    "addressSubmitterVerified(address)": "cb853950",
    "addressTotalCastVoteCounts(address)": "a1ac6cb2",
    "addressTotalVotes(address)": "dea5f6a6",
    "addressTotalVotesVerified(address)": "930de979",
    "allProposalTotalVotes()": "50a5e524",
    "allProposalTotalVotesWithoutDeleted()": "d45a010b",
    "cancel()": "ea8a1af0",
    "castVote(uint256,uint8,uint256,uint256,bytes32[])": "419c533c",
    "castVoteWithoutProof(uint256,uint8,uint256)": "65f16263",
    "checkProof(address,uint256,bytes32[],bool)": "32763c22",
    "contestAddressTotalVotesCast(address)": "aec116b6",
    "contestDeadline()": "262e59e9",
    "contestStart()": "004114a8",
    "creator()": "02d05d3f",
    "deleteProposals(uint256[])": "f0a7db0a",
    "downvotingAllowed()": "60506ff6",
    "eip712Domain()": "84b0196e",
    "getAllProposalIds()": "efa90d36",
    "getNumSubmissions(address)": "5f953a03",
    "getProposal(uint256)": "c7f758a8",
    "hashProposal((address,bool,bool,string,(address),(address[],uint256)))": "fc481d75",
    "highestTiedRanking()": "ebc18b9b",
    "isProposalDeleted(uint256)": "3b6d199b",
    "isTied(uint256)": "2399c660",
    "lowestRanking()": "6ca1a2c7",
    "maxProposalCount()": "fb9bf8d4",
    "name()": "06fdde03",
    "numAllowedProposalSubmissions()": "832009af",
    "officialRewardsModule()": "785ddfe5",
    "prompt()": "7c65d711",
    "proposalAddressVotes(uint256,address)": "6e4eb810",
    "proposalAddressesHaveVoted(uint256)": "b323580d",
    "proposalVotes(uint256)": "544ffc9c",
    "proposalVotesStructs(uint256)": "070dc5d9",
    "propose((address,bool,bool,string,(address),(address[],uint256)),bytes32[])": "1dfa0223",
    "proposeWithoutProof((address,bool,bool,string,(address),(address[],uint256)))": "bcbd518d",
    "rankingPosition(uint256)": "86187488",
    "setOfficialRewardsModule(address)": "f4f3d7ec",
    "setSortedAndTiedProposals()": "96f0e962",
    "setSortedAndTiedProposalsHasBeenRun()": "d8891619",
    "sortedProposalIds()": "8a9cd550",
    "sortedProposals(bool)": "427d56c2",
    "state()": "c19d93fb",
    "submissionMerkleRoot()": "bddc1641",
    "supportsInterface(bytes4)": "01ffc9a7",
    "tiedAdjustedRankingPosition(uint256)": "e5eb5a48",
    "totalVotesCast()": "7de418d5",
    "validateProposalData((address,bool,bool,string,(address),(address[],uint256)))": "bd01f12b",
    "verifyProposer(address,bytes32[])": "20b3e845",
    "verifyVoter(address,uint256,bytes32[])": "531bd812",
    "version()": "54fd4d50",
    "voteStart()": "e031535b",
    "votingDelay()": "3932abb1",
    "votingMerkleRoot()": "dd96a19d",
    "votingPeriod()": "02a251a3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_prompt\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"_submissionMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_votingMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"_constructorIntParams\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInMerkle\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TooManyMetadatas\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ContestCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldContestStart\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newContestStart\",\"type\":\"uint256\"}],\"name\":\"ContestStartSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldCreator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newCreator\",\"type\":\"address\"}],\"name\":\"CreatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldDownvotingAllowed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDownvotingAllowed\",\"type\":\"uint256\"}],\"name\":\"DownvotingAllowedSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldMaxProposalCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaxProposalCount\",\"type\":\"uint256\"}],\"name\":\"MaxProposalCountSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldNumAllowedProposalSubmissions\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newNumAllowedProposalSubmissions\",\"type\":\"uint256\"}],\"name\":\"NumAllowedProposalSubmissionsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract RewardsModule\",\"name\":\"oldOfficialRewardsModule\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract RewardsModule\",\"name\":\"newOfficialRewardsModule\",\"type\":\"address\"}],\"name\":\"OfficialRewardsModuleSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"proposalIds\",\"type\":\"uint256[]\"}],\"name\":\"ProposalsDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"numVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingDelay\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingDelay\",\"type\":\"uint256\"}],\"name\":\"VotingDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingPeriod\",\"type\":\"uint256\"}],\"name\":\"VotingPeriodSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AMOUNT_FOR_SUMBITTER_PROOF\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COUNTING_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"METADATAS_COUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_numDeletedProposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressSubmitterVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressTotalCastVoteCounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressTotalVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressTotalVotesVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allProposalTotalVotes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"proposalIdsReturn\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"internalType\":\"struct GovernorCountingSimple.VoteCounts[]\",\"name\":\"proposalVoteCountsArrayReturn\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allProposalTotalVotesWithoutDeleted\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"proposalIdsReturn\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"internalType\":\"struct GovernorCountingSimple.VoteCounts[]\",\"name\":\"proposalVoteCountsArrayReturn\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numVotes\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"castVote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"numVotes\",\"type\":\"uint256\"}],\"name\":\"castVoteWithoutProof\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressToCheck\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool\",\"name\":\"voting\",\"type\":\"bool\"}],\"name\":\"checkProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"contestAddressTotalVotesCast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"userTotalVotesCast\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contestDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contestStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"proposalIds\",\"type\":\"uint256[]\"}],\"name\":\"deleteProposals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"downvotingAllowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllProposalIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNumSubmissions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposal\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isDeleted\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct IGovernor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct IGovernor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct IGovernor.ProposalCore\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isDeleted\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct IGovernor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct IGovernor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct IGovernor.ProposalCore\",\"name\":\"proposal\",\"type\":\"tuple\"}],\"name\":\"hashProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"highestTiedRanking\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"isProposalDeleted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ranking\",\"type\":\"uint256\"}],\"name\":\"isTied\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lowestRanking\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxProposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numAllowedProposalSubmissions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"officialRewardsModule\",\"outputs\":[{\"internalType\":\"contract RewardsModule\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prompt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"proposalAddressVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalAddressesHaveVoted\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalVotesStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"internalType\":\"struct GovernorCountingSimple.VoteCounts\",\"name\":\"proposalVoteCounts\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isDeleted\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct IGovernor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct IGovernor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct IGovernor.ProposalCore\",\"name\":\"proposal\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isDeleted\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct IGovernor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct IGovernor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct IGovernor.ProposalCore\",\"name\":\"proposal\",\"type\":\"tuple\"}],\"name\":\"proposeWithoutProof\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ranking\",\"type\":\"uint256\"}],\"name\":\"rankingPosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract RewardsModule\",\"name\":\"officialRewardsModule_\",\"type\":\"address\"}],\"name\":\"setOfficialRewardsModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setSortedAndTiedProposals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setSortedAndTiedProposalsHasBeenRun\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sortedProposalIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"excludeDeletedProposals\",\"type\":\"bool\"}],\"name\":\"sortedProposals\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"sortedProposalIdsReturn\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum IGovernor.ContestState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"submissionMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tiedAdjustedRankingPosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVotesCast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isDeleted\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct IGovernor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct IGovernor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct IGovernor.ProposalCore\",\"name\":\"proposal\",\"type\":\"tuple\"}],\"name\":\"validateProposalData\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"dataValidated\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"verifyProposer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"verifyVoter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voteStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"ContestCanceled()\":{\"details\":\"Emitted when a contest is canceled.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"ProposalCreated(uint256,address)\":{\"details\":\"Emitted when a proposal is created.\"},\"ProposalsDeleted(uint256[])\":{\"details\":\"Emitted when proposals are deleted.\"},\"VoteCast(address,uint256,uint8,uint256,string)\":{\"details\":\"Emitted when a vote is cast. Note: `support` values should be seen as buckets. There interpretation depends on the voting module used.\"}},\"kind\":\"dev\",\"methods\":{\"COUNTING_MODE()\":{\"details\":\"See {IGovernor-COUNTING_MODE}.\"},\"allProposalTotalVotes()\":{\"details\":\"Accessor to the internal vote counts for a given proposal.\"},\"allProposalTotalVotesWithoutDeleted()\":{\"details\":\"Accessor to the internal vote counts for a given proposal that excludes deleted proposals.\"},\"cancel()\":{\"details\":\"Emits a {IGovernor-ContestCanceled} event.\"},\"castVote(uint256,uint8,uint256,uint256,bytes32[])\":{\"details\":\"See {IGovernor-castVote}.\"},\"castVoteWithoutProof(uint256,uint8,uint256)\":{\"details\":\"See {IGovernor-castVoteWithoutProof}.\"},\"checkProof(address,uint256,bytes32[],bool)\":{\"params\":{\"addressToCheck\":\"address of claimee\",\"amount\":\"to check that the claimee has\",\"proof\":\"merkle proof to prove address and amount are in tree\"}},\"contestAddressTotalVotesCast(address)\":{\"details\":\"Accessor to how many votes an address has cast total for the contest so far.\"},\"contestDeadline()\":{\"details\":\"See {IGovernor-contestDeadline}.\"},\"deleteProposals(uint256[])\":{\"details\":\"Delete proposals. Emits a {IGovernor-ProposalsDeleted} event.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"getAllProposalIds()\":{\"details\":\"Return all proposals.\"},\"getNumSubmissions(address)\":{\"details\":\"Get the number of proposal submissions for a given address.\"},\"getProposal(uint256)\":{\"details\":\"Retrieve proposal data\\\"_.\"},\"hashProposal((address,bool,bool,string,(address),(address[],uint256)))\":{\"details\":\"See {IGovernor-hashProposal}. The proposal id is produced by hashing the RLC encoded `targets` array, the `values` array, the `calldatas` array and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in advance, before the proposal is submitted. Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the same proposal (with same operation and same description) will have the same id if submitted on multiple governors accross multiple networks. This also means that in order to execute the same operation twice (on the same governor) the proposer will have to change the description in order to avoid proposal id conflicts.\"},\"highestTiedRanking()\":{\"details\":\"Getter for highest tied ranking.\"},\"isProposalDeleted(uint256)\":{\"details\":\"Returns if a proposal has been deleted or not.\"},\"isTied(uint256)\":{\"details\":\"Getter if a given ranking is tied.\"},\"lowestRanking()\":{\"details\":\"Getter for the lowest ranking.\"},\"name()\":{\"details\":\"See {IGovernor-name}.\"},\"officialRewardsModule()\":{\"details\":\"Get the official rewards module contract for this contest (effectively reverse record).\"},\"prompt()\":{\"details\":\"See {IGovernor-prompt}.\"},\"proposalAddressVotes(uint256,address)\":{\"details\":\"Accessor to how many votes an address has cast for a given proposal.\"},\"proposalAddressesHaveVoted(uint256)\":{\"details\":\"Accessor to which addresses have cast a vote for a given proposal.\"},\"proposalVotes(uint256)\":{\"details\":\"Accessor to the internal vote counts for a given proposal.\"},\"propose((address,bool,bool,string,(address),(address[],uint256)),bytes32[])\":{\"details\":\"See {IGovernor-propose}.\"},\"proposeWithoutProof((address,bool,bool,string,(address),(address[],uint256)))\":{\"details\":\"See {IGovernor-proposeWithoutProof}.\"},\"rankingPosition(uint256)\":{\"details\":\"Getter for tiedAdjustedRankingPosition of a ranking.\"},\"setOfficialRewardsModule(address)\":{\"details\":\"Get the official rewards module contract for this contest (effectively reverse record).\"},\"setSortedAndTiedProposals()\":{\"details\":\"Setter for _sortedProposalIds, tiedAdjustedRankingPosition, _isTied, _lowestRanking, and _highestTiedRanking. Will only be called once and only needs to be called once because once the contest is complete these values don't change. Determines if a ranking is tied and also where the last iteration of a ranking is in the _sortedProposalIds list taking ties into account.\"},\"sortedProposalIds()\":{\"details\":\"Getter for _sortedProposalIds.\"},\"sortedProposals(bool)\":{\"details\":\"Accessor to sorted list of proposalIds in ascending order.\"},\"state()\":{\"details\":\"See {IGovernor-state}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"validateProposalData((address,bool,bool,string,(address),(address[],uint256)))\":{\"details\":\"See {IGovernor-validateProposalData}.\"},\"verifyProposer(address,bytes32[])\":{\"details\":\"See {IGovernor-verifyProposer}.\"},\"verifyVoter(address,uint256,bytes32[])\":{\"details\":\"See {IGovernor-verifyVoter}.\"},\"version()\":{\"details\":\"See {IGovernor-version}.\"},\"voteStart()\":{\"details\":\"See {IGovernor-voteStart}.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"NotInMerkle()\":[{\"notice\":\"Thrown if address/amount are not part of Merkle tree\"}],\"TooManyMetadatas()\":[{\"notice\":\"Thrown if there is metadata included in a proposal that isn't covered in data validation\"}]},\"kind\":\"user\",\"methods\":{\"checkProof(address,uint256,bytes32[],bool)\":{\"notice\":\"Allows checking of proofs for an address\"},\"submissionMerkleRoot()\":{\"notice\":\"ERC20-claimee inclusion root\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Contest.sol\":\"Contest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4\",\"dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/Timers.sol\":{\"keccak256\":\"0x413dd6eccfbd25fff5e6c45500e049fc3b66f1a6c7d482d3ab88b8f4a5060ede\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f12296326560a2591d1e8d5cabcb55a1a82209a6752fe6a08b46bd9a3f9835f\",\"dweb:/ipfs/QmTgY5GkmvuMsrB4bzsfXj6SALnshYyXpKKR8WCXaMpoPM\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0xea30c402170bc240354b74e6c6f6a8e5bdb1935d90d168cc58c0654461c6a72b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95cbddf89006e6dbbc200eb091eb90025c97a9980310f2325c9bda2c4fdc97e3\",\"dweb:/ipfs/QmT67Dt3xrKEQSDC4XyDcrKwZUYsJzddrRFjEopRZNP9yR\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"src/Contest.sol\":{\"keccak256\":\"0xa471cab034594f2c2abee2478c60c024de57070152038716d4deaf704f79143c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19bde157cbcdaa4bc4a6e28390bc2f06a558abcf594d70038e0e4f7cab6ba363\",\"dweb:/ipfs/QmW8Hi3fPYwekpdzPuiYATh5NrHz9RkDSr1LjvTPXnG46V\"]},\"src/governance/Governor.sol\":{\"keccak256\":\"0xb2ae570fc8731182d6876b975a26995dd1185f96e25eb204385e44ce6c8d2e9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0479079e93e5b73c17474b327698bf48bc641fedeaef9b7c354d0c4b3a9c359\",\"dweb:/ipfs/QmamX3DfAU8TfonJpTQ1AG74Ts7gtUj4cmpQCPJbken2hr\"]},\"src/governance/GovernorMerkleVotes.sol\":{\"keccak256\":\"0xdf37902c07f4229349c80ae7335d7d7112265e62428a38e2786584382bc8f0ec\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://73866fb05fb57229990cbb10d7788098ad66e0a821bb8622d91eb0e9cb836d5d\",\"dweb:/ipfs/Qmeg5mnXTsXYyrkGhMYfX1XjBAT6Y2wwwrcQZxKVkKHRgU\"]},\"src/governance/IGovernor.sol\":{\"keccak256\":\"0x857419444fb0c9ac5139cdba9db22c85be9a80b98cacaae61adb37209dae9995\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b444e3b8624ade03c84c70ce50b6d2e0adb20e84261cf5c1c21d1a69fed20bf3\",\"dweb:/ipfs/QmTW4irADxAESL4oaJEYCNHHuifzGTfPdHzYtFAtgXxQav\"]},\"src/governance/extensions/GovernorCountingSimple.sol\":{\"keccak256\":\"0x0826e704a30c41b3b862a0ab49aa7b6b304df357b36ae01c594f1a06eefe706d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ca6a0f71e0d3f52c5adf79ec69425925d5399edd47305b1c178100f6c26563\",\"dweb:/ipfs/QmaYWdZYwt4Tv86gzytWBZyPY2uiLCo2gtPcAhpQ5v7PRe\"]},\"src/governance/extensions/GovernorModuleRegistry.sol\":{\"keccak256\":\"0x62c9d2a2dcaeccf1b6b801595f34abf893416964997e6ba699c9828ada1abefc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18672ac920d4749fec025a7c8610c8cb866addb0ba20e9cfce5bedd91e062776\",\"dweb:/ipfs/QmNPWkqouY45jCeeFYi5metLX9d8BpSuGXLG55A5BZjH4D\"]},\"src/governance/extensions/GovernorSettings.sol\":{\"keccak256\":\"0x03baf7fa5c11f3d9b50c9df1d193a73bf1e6799f792ce510ccdb4dc86a82d9a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d78ca667bc09e43d8abf0f9ac4e17deaea1a0196aa1bc78c9ac66d734e81cf95\",\"dweb:/ipfs/QmRwfFjbCA6HAn1SRDJ4CKSvmzBqyjce1sDfuwBThj7PWi\"]},\"src/governance/extensions/GovernorSorting.sol\":{\"keccak256\":\"0xc6d5d110dd8cd0a54c5794fb6e83efe1776a5b2aa46225a918a6d960f848d04e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9aab1600f4247b6d01d24f922b77364b6b9d202f7234e24c5fd674ef0ac82437\",\"dweb:/ipfs/QmPe3wUwDchwdzc2FrhBJCsNMK8fJAuvPHdsFsZWddRKJH\"]},\"src/modules/RewardsModule.sol\":{\"keccak256\":\"0xc032d20f2377de43c77d5b5945b1bb8927ca015a52fb9bc7184f28e8956ef8d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8973489de263e0fc651b04a0ce9734d6e5f528909d04dc6976abc24c771efc93\",\"dweb:/ipfs/QmdSP2MLoJ5RtUqoiES564gDcRFayTkej14KBBUrFryoxu\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_prompt",
              "type": "string"
            },
            {
              "internalType": "bytes32",
              "name": "_submissionMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "_votingMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256[]",
              "name": "_constructorIntParams",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidShortString"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotInMerkle"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "str",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "StringTooLong"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TooManyMetadatas"
        },
        {
          "inputs": [],
          "type": "event",
          "name": "ContestCanceled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldContestStart",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newContestStart",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContestStartSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldCreator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newCreator",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CreatorSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldDownvotingAllowed",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newDownvotingAllowed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DownvotingAllowedSet",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "EIP712DomainChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldMaxProposalCount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newMaxProposalCount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MaxProposalCountSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldNumAllowedProposalSubmissions",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newNumAllowedProposalSubmissions",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NumAllowedProposalSubmissionsSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract RewardsModule",
              "name": "oldOfficialRewardsModule",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract RewardsModule",
              "name": "newOfficialRewardsModule",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OfficialRewardsModuleSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "proposer",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProposalCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalIds",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProposalsDeleted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "voter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "numVotes",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "reason",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VoteCast",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldVotingDelay",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newVotingDelay",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VotingDelaySet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldVotingPeriod",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newVotingPeriod",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VotingPeriodSet",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "AMOUNT_FOR_SUMBITTER_PROOF",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BALLOT_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "COUNTING_MODE",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "METADATAS_COUNT",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "_numDeletedProposals",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressSubmitterVerified",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressTotalCastVoteCounts",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressTotalVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressTotalVotesVerified",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allProposalTotalVotes",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalIdsReturn",
              "type": "uint256[]"
            },
            {
              "internalType": "struct GovernorCountingSimple.VoteCounts[]",
              "name": "proposalVoteCountsArrayReturn",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "forVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "againstVotes",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allProposalTotalVotesWithoutDeleted",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalIdsReturn",
              "type": "uint256[]"
            },
            {
              "internalType": "struct GovernorCountingSimple.VoteCounts[]",
              "name": "proposalVoteCountsArrayReturn",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "forVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "againstVotes",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancel"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "totalVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "numVotes",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "castVote",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "numVotes",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "castVoteWithoutProof",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "addressToCheck",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "bool",
              "name": "voting",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkProof",
          "outputs": [
            {
              "internalType": "bool",
              "name": "verified",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "userAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "contestAddressTotalVotesCast",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "userTotalVotesCast",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contestDeadline",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contestStart",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "creator",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalIds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteProposals"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "downvotingAllowed",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eip712Domain",
          "outputs": [
            {
              "internalType": "bytes1",
              "name": "fields",
              "type": "bytes1"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "version",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "chainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "verifyingContract",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "uint256[]",
              "name": "extensions",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllProposalIds",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getNumSubmissions",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProposal",
          "outputs": [
            {
              "internalType": "struct IGovernor.ProposalCore",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "isDeleted",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "struct IGovernor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct IGovernor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IGovernor.ProposalCore",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "isDeleted",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "struct IGovernor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct IGovernor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "hashProposal",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "highestTiedRanking",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isProposalDeleted",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "ranking",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTied",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lowestRanking",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxProposalCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "numAllowedProposalSubmissions",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "officialRewardsModule",
          "outputs": [
            {
              "internalType": "contract RewardsModule",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "prompt",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "userAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalAddressVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalAddressesHaveVoted",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalVotesStructs",
          "outputs": [
            {
              "internalType": "struct GovernorCountingSimple.VoteCounts",
              "name": "proposalVoteCounts",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "forVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "againstVotes",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IGovernor.ProposalCore",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "isDeleted",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "struct IGovernor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct IGovernor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "propose",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IGovernor.ProposalCore",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "isDeleted",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "struct IGovernor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct IGovernor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "proposeWithoutProof",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "ranking",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "rankingPosition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract RewardsModule",
              "name": "officialRewardsModule_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOfficialRewardsModule"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSortedAndTiedProposals"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "setSortedAndTiedProposalsHasBeenRun",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sortedProposalIds",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "excludeDeletedProposals",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "sortedProposals",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "sortedProposalIdsReturn",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "state",
          "outputs": [
            {
              "internalType": "enum IGovernor.ContestState",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "submissionMerkleRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tiedAdjustedRankingPosition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalVotesCast",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IGovernor.ProposalCore",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "isDeleted",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "struct IGovernor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct IGovernor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "validateProposalData",
          "outputs": [
            {
              "internalType": "bool",
              "name": "dataValidated",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyProposer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "verified",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalVotes",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyVoter",
          "outputs": [
            {
              "internalType": "bool",
              "name": "verified",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "voteStart",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "votingDelay",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "votingMerkleRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "votingPeriod",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "COUNTING_MODE()": {
            "details": "See {IGovernor-COUNTING_MODE}."
          },
          "allProposalTotalVotes()": {
            "details": "Accessor to the internal vote counts for a given proposal."
          },
          "allProposalTotalVotesWithoutDeleted()": {
            "details": "Accessor to the internal vote counts for a given proposal that excludes deleted proposals."
          },
          "cancel()": {
            "details": "Emits a {IGovernor-ContestCanceled} event."
          },
          "castVote(uint256,uint8,uint256,uint256,bytes32[])": {
            "details": "See {IGovernor-castVote}."
          },
          "castVoteWithoutProof(uint256,uint8,uint256)": {
            "details": "See {IGovernor-castVoteWithoutProof}."
          },
          "checkProof(address,uint256,bytes32[],bool)": {
            "params": {
              "addressToCheck": "address of claimee",
              "amount": "to check that the claimee has",
              "proof": "merkle proof to prove address and amount are in tree"
            }
          },
          "contestAddressTotalVotesCast(address)": {
            "details": "Accessor to how many votes an address has cast total for the contest so far."
          },
          "contestDeadline()": {
            "details": "See {IGovernor-contestDeadline}."
          },
          "deleteProposals(uint256[])": {
            "details": "Delete proposals. Emits a {IGovernor-ProposalsDeleted} event."
          },
          "eip712Domain()": {
            "details": "See {EIP-5267}. _Available since v4.9._"
          },
          "getAllProposalIds()": {
            "details": "Return all proposals."
          },
          "getNumSubmissions(address)": {
            "details": "Get the number of proposal submissions for a given address."
          },
          "getProposal(uint256)": {
            "details": "Retrieve proposal data\"_."
          },
          "hashProposal((address,bool,bool,string,(address),(address[],uint256)))": {
            "details": "See {IGovernor-hashProposal}. The proposal id is produced by hashing the RLC encoded `targets` array, the `values` array, the `calldatas` array and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in advance, before the proposal is submitted. Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the same proposal (with same operation and same description) will have the same id if submitted on multiple governors accross multiple networks. This also means that in order to execute the same operation twice (on the same governor) the proposer will have to change the description in order to avoid proposal id conflicts."
          },
          "highestTiedRanking()": {
            "details": "Getter for highest tied ranking."
          },
          "isProposalDeleted(uint256)": {
            "details": "Returns if a proposal has been deleted or not."
          },
          "isTied(uint256)": {
            "details": "Getter if a given ranking is tied."
          },
          "lowestRanking()": {
            "details": "Getter for the lowest ranking."
          },
          "name()": {
            "details": "See {IGovernor-name}."
          },
          "officialRewardsModule()": {
            "details": "Get the official rewards module contract for this contest (effectively reverse record)."
          },
          "prompt()": {
            "details": "See {IGovernor-prompt}."
          },
          "proposalAddressVotes(uint256,address)": {
            "details": "Accessor to how many votes an address has cast for a given proposal."
          },
          "proposalAddressesHaveVoted(uint256)": {
            "details": "Accessor to which addresses have cast a vote for a given proposal."
          },
          "proposalVotes(uint256)": {
            "details": "Accessor to the internal vote counts for a given proposal."
          },
          "propose((address,bool,bool,string,(address),(address[],uint256)),bytes32[])": {
            "details": "See {IGovernor-propose}."
          },
          "proposeWithoutProof((address,bool,bool,string,(address),(address[],uint256)))": {
            "details": "See {IGovernor-proposeWithoutProof}."
          },
          "rankingPosition(uint256)": {
            "details": "Getter for tiedAdjustedRankingPosition of a ranking."
          },
          "setOfficialRewardsModule(address)": {
            "details": "Get the official rewards module contract for this contest (effectively reverse record)."
          },
          "setSortedAndTiedProposals()": {
            "details": "Setter for _sortedProposalIds, tiedAdjustedRankingPosition, _isTied, _lowestRanking, and _highestTiedRanking. Will only be called once and only needs to be called once because once the contest is complete these values don't change. Determines if a ranking is tied and also where the last iteration of a ranking is in the _sortedProposalIds list taking ties into account."
          },
          "sortedProposalIds()": {
            "details": "Getter for _sortedProposalIds."
          },
          "sortedProposals(bool)": {
            "details": "Accessor to sorted list of proposalIds in ascending order."
          },
          "state()": {
            "details": "See {IGovernor-state}."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "validateProposalData((address,bool,bool,string,(address),(address[],uint256)))": {
            "details": "See {IGovernor-validateProposalData}."
          },
          "verifyProposer(address,bytes32[])": {
            "details": "See {IGovernor-verifyProposer}."
          },
          "verifyVoter(address,uint256,bytes32[])": {
            "details": "See {IGovernor-verifyVoter}."
          },
          "version()": {
            "details": "See {IGovernor-version}."
          },
          "voteStart()": {
            "details": "See {IGovernor-voteStart}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "checkProof(address,uint256,bytes32[],bool)": {
            "notice": "Allows checking of proofs for an address"
          },
          "submissionMerkleRoot()": {
            "notice": "ERC20-claimee inclusion root"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@forge-std/=lib/forge-std/src/",
        "@openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Contest.sol": "Contest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol": {
        "keccak256": "0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f",
        "urls": [
          "bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc",
          "dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa",
        "urls": [
          "bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4",
          "dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol": {
        "keccak256": "0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256",
        "urls": [
          "bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516",
          "dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899",
        "urls": [
          "bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da",
          "dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Timers.sol": {
        "keccak256": "0x413dd6eccfbd25fff5e6c45500e049fc3b66f1a6c7d482d3ab88b8f4a5060ede",
        "urls": [
          "bzz-raw://6f12296326560a2591d1e8d5cabcb55a1a82209a6752fe6a08b46bd9a3f9835f",
          "dweb:/ipfs/QmTgY5GkmvuMsrB4bzsfXj6SALnshYyXpKKR8WCXaMpoPM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58",
        "urls": [
          "bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2",
          "dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol": {
        "keccak256": "0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd",
        "urls": [
          "bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a",
          "dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol": {
        "keccak256": "0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac",
        "urls": [
          "bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04",
          "dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol": {
        "keccak256": "0xea30c402170bc240354b74e6c6f6a8e5bdb1935d90d168cc58c0654461c6a72b",
        "urls": [
          "bzz-raw://95cbddf89006e6dbbc200eb091eb90025c97a9980310f2325c9bda2c4fdc97e3",
          "dweb:/ipfs/QmT67Dt3xrKEQSDC4XyDcrKwZUYsJzddrRFjEopRZNP9yR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "src/Contest.sol": {
        "keccak256": "0xa471cab034594f2c2abee2478c60c024de57070152038716d4deaf704f79143c",
        "urls": [
          "bzz-raw://19bde157cbcdaa4bc4a6e28390bc2f06a558abcf594d70038e0e4f7cab6ba363",
          "dweb:/ipfs/QmW8Hi3fPYwekpdzPuiYATh5NrHz9RkDSr1LjvTPXnG46V"
        ],
        "license": "MIT"
      },
      "src/governance/Governor.sol": {
        "keccak256": "0xb2ae570fc8731182d6876b975a26995dd1185f96e25eb204385e44ce6c8d2e9c",
        "urls": [
          "bzz-raw://b0479079e93e5b73c17474b327698bf48bc641fedeaef9b7c354d0c4b3a9c359",
          "dweb:/ipfs/QmamX3DfAU8TfonJpTQ1AG74Ts7gtUj4cmpQCPJbken2hr"
        ],
        "license": "MIT"
      },
      "src/governance/GovernorMerkleVotes.sol": {
        "keccak256": "0xdf37902c07f4229349c80ae7335d7d7112265e62428a38e2786584382bc8f0ec",
        "urls": [
          "bzz-raw://73866fb05fb57229990cbb10d7788098ad66e0a821bb8622d91eb0e9cb836d5d",
          "dweb:/ipfs/Qmeg5mnXTsXYyrkGhMYfX1XjBAT6Y2wwwrcQZxKVkKHRgU"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/governance/IGovernor.sol": {
        "keccak256": "0x857419444fb0c9ac5139cdba9db22c85be9a80b98cacaae61adb37209dae9995",
        "urls": [
          "bzz-raw://b444e3b8624ade03c84c70ce50b6d2e0adb20e84261cf5c1c21d1a69fed20bf3",
          "dweb:/ipfs/QmTW4irADxAESL4oaJEYCNHHuifzGTfPdHzYtFAtgXxQav"
        ],
        "license": "MIT"
      },
      "src/governance/extensions/GovernorCountingSimple.sol": {
        "keccak256": "0x0826e704a30c41b3b862a0ab49aa7b6b304df357b36ae01c594f1a06eefe706d",
        "urls": [
          "bzz-raw://c9ca6a0f71e0d3f52c5adf79ec69425925d5399edd47305b1c178100f6c26563",
          "dweb:/ipfs/QmaYWdZYwt4Tv86gzytWBZyPY2uiLCo2gtPcAhpQ5v7PRe"
        ],
        "license": "MIT"
      },
      "src/governance/extensions/GovernorModuleRegistry.sol": {
        "keccak256": "0x62c9d2a2dcaeccf1b6b801595f34abf893416964997e6ba699c9828ada1abefc",
        "urls": [
          "bzz-raw://18672ac920d4749fec025a7c8610c8cb866addb0ba20e9cfce5bedd91e062776",
          "dweb:/ipfs/QmNPWkqouY45jCeeFYi5metLX9d8BpSuGXLG55A5BZjH4D"
        ],
        "license": "MIT"
      },
      "src/governance/extensions/GovernorSettings.sol": {
        "keccak256": "0x03baf7fa5c11f3d9b50c9df1d193a73bf1e6799f792ce510ccdb4dc86a82d9a4",
        "urls": [
          "bzz-raw://d78ca667bc09e43d8abf0f9ac4e17deaea1a0196aa1bc78c9ac66d734e81cf95",
          "dweb:/ipfs/QmRwfFjbCA6HAn1SRDJ4CKSvmzBqyjce1sDfuwBThj7PWi"
        ],
        "license": "MIT"
      },
      "src/governance/extensions/GovernorSorting.sol": {
        "keccak256": "0xc6d5d110dd8cd0a54c5794fb6e83efe1776a5b2aa46225a918a6d960f848d04e",
        "urls": [
          "bzz-raw://9aab1600f4247b6d01d24f922b77364b6b9d202f7234e24c5fd674ef0ac82437",
          "dweb:/ipfs/QmPe3wUwDchwdzc2FrhBJCsNMK8fJAuvPHdsFsZWddRKJH"
        ],
        "license": "MIT"
      },
      "src/modules/RewardsModule.sol": {
        "keccak256": "0xc032d20f2377de43c77d5b5945b1bb8927ca015a52fb9bc7184f28e8956ef8d6",
        "urls": [
          "bzz-raw://8973489de263e0fc651b04a0ce9734d6e5f528909d04dc6976abc24c771efc93",
          "dweb:/ipfs/QmdSP2MLoJ5RtUqoiES564gDcRFayTkej14KBBUrFryoxu"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Contest.sol",
    "id": 35091,
    "exportedSymbols": {
      "Address": [
        30503
      ],
      "Contest": [
        35090
      ],
      "Context": [
        30525
      ],
      "ECDSA": [
        31660
      ],
      "EIP712": [
        31864
      ],
      "ERC165": [
        32419
      ],
      "Governor": [
        36035
      ],
      "GovernorCountingSimple": [
        36618
      ],
      "GovernorMerkleVotes": [
        36117
      ],
      "GovernorModuleRegistry": [
        36678
      ],
      "GovernorSettings": [
        36977
      ],
      "GovernorSorting": [
        37622
      ],
      "IERC165": [
        32431
      ],
      "IERC20": [
        29663
      ],
      "IERC20Permit": [
        29768
      ],
      "IERC5267": [
        28998
      ],
      "IGovernor": [
        36348
      ],
      "Math": [
        33297
      ],
      "MerkleProof": [
        32392
      ],
      "RewardsModule": [
        38435
      ],
      "SafeCast": [
        34838
      ],
      "SafeERC20": [
        30173
      ],
      "ShortString": [
        30530
      ],
      "ShortStrings": [
        30741
      ],
      "SignedMath": [
        34943
      ],
      "StorageSlot": [
        30851
      ],
      "Strings": [
        31080
      ],
      "Timers": [
        31294
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2151:40",
    "nodes": [
      {
        "id": 34945,
        "nodeType": "PragmaDirective",
        "src": "32:23:40",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 34946,
        "nodeType": "ImportDirective",
        "src": "57:35:40",
        "nodes": [],
        "absolutePath": "src/governance/Governor.sol",
        "file": "./governance/Governor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35091,
        "sourceUnit": 36036,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34947,
        "nodeType": "ImportDirective",
        "src": "93:54:40",
        "nodes": [],
        "absolutePath": "src/governance/extensions/GovernorSettings.sol",
        "file": "./governance/extensions/GovernorSettings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35091,
        "sourceUnit": 36978,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34948,
        "nodeType": "ImportDirective",
        "src": "148:60:40",
        "nodes": [],
        "absolutePath": "src/governance/extensions/GovernorCountingSimple.sol",
        "file": "./governance/extensions/GovernorCountingSimple.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35091,
        "sourceUnit": 36619,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34949,
        "nodeType": "ImportDirective",
        "src": "209:60:40",
        "nodes": [],
        "absolutePath": "src/governance/extensions/GovernorModuleRegistry.sol",
        "file": "./governance/extensions/GovernorModuleRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35091,
        "sourceUnit": 36679,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 35090,
        "nodeType": "ContractDefinition",
        "src": "271:1911:40",
        "nodes": [
          {
            "id": 34998,
            "nodeType": "FunctionDefinition",
            "src": "365:716:40",
            "nodes": [],
            "body": {
              "id": 34997,
              "nodeType": "Block",
              "src": "1079:2:40",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 34971,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34959,
                    "src": "582:5:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 34972,
                    "name": "_prompt",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34961,
                    "src": "589:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 34973,
                    "name": "_submissionMerkleRoot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34963,
                    "src": "598:21:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "id": 34974,
                    "name": "_votingMerkleRoot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34965,
                    "src": "621:17:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 34975,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 34970,
                  "name": "Governor",
                  "nameLocations": [
                    "573:8:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36035,
                  "src": "573:8:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "573:66:40"
              },
              {
                "arguments": [
                  {
                    "baseExpression": {
                      "id": 34977,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34968,
                      "src": "678:21:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 34979,
                    "indexExpression": {
                      "hexValue": "30",
                      "id": 34978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "700:1:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "678:24:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 34980,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34968,
                      "src": "740:21:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 34982,
                    "indexExpression": {
                      "hexValue": "31",
                      "id": 34981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "762:1:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "740:24:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 34983,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34968,
                      "src": "802:21:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 34985,
                    "indexExpression": {
                      "hexValue": "32",
                      "id": 34984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "824:1:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "802:24:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 34986,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34968,
                      "src": "865:21:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 34988,
                    "indexExpression": {
                      "hexValue": "33",
                      "id": 34987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "887:1:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "865:24:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 34989,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34968,
                      "src": "945:21:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 34991,
                    "indexExpression": {
                      "hexValue": "34",
                      "id": 34990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "967:1:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "945:24:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 34992,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34968,
                      "src": "1011:21:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 34994,
                    "indexExpression": {
                      "hexValue": "35",
                      "id": 34993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1033:1:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1011:24:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 34995,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 34976,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "648:16:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36977,
                  "src": "648:16:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "648:426:40"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 34969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34959,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "400:5:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 34998,
                  "src": "386:19:40",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 34958,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "386:6:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34961,
                  "mutability": "mutable",
                  "name": "_prompt",
                  "nameLocation": "429:7:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 34998,
                  "src": "415:21:40",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 34960,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "415:6:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34963,
                  "mutability": "mutable",
                  "name": "_submissionMerkleRoot",
                  "nameLocation": "454:21:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 34998,
                  "src": "446:29:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 34962,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "446:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34965,
                  "mutability": "mutable",
                  "name": "_votingMerkleRoot",
                  "nameLocation": "493:17:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 34998,
                  "src": "485:25:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 34964,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "485:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34968,
                  "mutability": "mutable",
                  "name": "_constructorIntParams",
                  "nameLocation": "537:21:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 34998,
                  "src": "520:38:40",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 34966,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "520:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 34967,
                    "nodeType": "ArrayTypeName",
                    "src": "520:9:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "376:188:40"
            },
            "returnParameters": {
              "id": 34996,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1079:0:40"
            },
            "scope": 35090,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35011,
            "nodeType": "FunctionDefinition",
            "src": "1155:136:40",
            "nodes": [],
            "body": {
              "id": 35010,
              "nodeType": "Block",
              "src": "1247:44:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 35006,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1264:5:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Contest_$35090_$",
                          "typeString": "type(contract super Contest)"
                        }
                      },
                      "id": 35007,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1270:12:40",
                      "memberName": "contestStart",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36797,
                      "src": "1264:18:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 35008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1264:20:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 35005,
                  "id": 35009,
                  "nodeType": "Return",
                  "src": "1257:27:40"
                }
              ]
            },
            "baseFunctions": [
              36234,
              36797
            ],
            "functionSelector": "004114a8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contestStart",
            "nameLocation": "1164:12:40",
            "overrides": {
              "id": 35002,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 35000,
                  "name": "IGovernor",
                  "nameLocations": [
                    "1200:9:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36348,
                  "src": "1200:9:40"
                },
                {
                  "id": 35001,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "1211:16:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36977,
                  "src": "1211:16:40"
                }
              ],
              "src": "1191:37:40"
            },
            "parameters": {
              "id": 34999,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1176:2:40"
            },
            "returnParameters": {
              "id": 35005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35004,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35011,
                  "src": "1238:7:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35003,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1238:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1237:9:40"
            },
            "scope": 35090,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35024,
            "nodeType": "FunctionDefinition",
            "src": "1297:134:40",
            "nodes": [],
            "body": {
              "id": 35023,
              "nodeType": "Block",
              "src": "1388:43:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 35019,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1405:5:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Contest_$35090_$",
                          "typeString": "type(contract super Contest)"
                        }
                      },
                      "id": 35020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1411:11:40",
                      "memberName": "votingDelay",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36807,
                      "src": "1405:17:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 35021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1405:19:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 35018,
                  "id": 35022,
                  "nodeType": "Return",
                  "src": "1398:26:40"
                }
              ]
            },
            "baseFunctions": [
              36252,
              36807
            ],
            "functionSelector": "3932abb1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "votingDelay",
            "nameLocation": "1306:11:40",
            "overrides": {
              "id": 35015,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 35013,
                  "name": "IGovernor",
                  "nameLocations": [
                    "1341:9:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36348,
                  "src": "1341:9:40"
                },
                {
                  "id": 35014,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "1352:16:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36977,
                  "src": "1352:16:40"
                }
              ],
              "src": "1332:37:40"
            },
            "parameters": {
              "id": 35012,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1317:2:40"
            },
            "returnParameters": {
              "id": 35018,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35017,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35024,
                  "src": "1379:7:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35016,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1379:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1378:9:40"
            },
            "scope": 35090,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35037,
            "nodeType": "FunctionDefinition",
            "src": "1437:136:40",
            "nodes": [],
            "body": {
              "id": 35036,
              "nodeType": "Block",
              "src": "1529:44:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 35032,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1546:5:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Contest_$35090_$",
                          "typeString": "type(contract super Contest)"
                        }
                      },
                      "id": 35033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1552:12:40",
                      "memberName": "votingPeriod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36817,
                      "src": "1546:18:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 35034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1546:20:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 35031,
                  "id": 35035,
                  "nodeType": "Return",
                  "src": "1539:27:40"
                }
              ]
            },
            "baseFunctions": [
              36258,
              36817
            ],
            "functionSelector": "02a251a3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "votingPeriod",
            "nameLocation": "1446:12:40",
            "overrides": {
              "id": 35028,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 35026,
                  "name": "IGovernor",
                  "nameLocations": [
                    "1482:9:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36348,
                  "src": "1482:9:40"
                },
                {
                  "id": 35027,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "1493:16:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36977,
                  "src": "1493:16:40"
                }
              ],
              "src": "1473:37:40"
            },
            "parameters": {
              "id": 35025,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1458:2:40"
            },
            "returnParameters": {
              "id": 35031,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35030,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35037,
                  "src": "1520:7:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35029,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1520:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1519:9:40"
            },
            "scope": 35090,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35050,
            "nodeType": "FunctionDefinition",
            "src": "1579:169:40",
            "nodes": [],
            "body": {
              "id": 35049,
              "nodeType": "Block",
              "src": "1687:61:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 35045,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1704:5:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Contest_$35090_$",
                          "typeString": "type(contract super Contest)"
                        }
                      },
                      "id": 35046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1710:29:40",
                      "memberName": "numAllowedProposalSubmissions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36827,
                      "src": "1704:35:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 35047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1704:37:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 35044,
                  "id": 35048,
                  "nodeType": "Return",
                  "src": "1697:44:40"
                }
              ]
            },
            "baseFunctions": [
              35384,
              36827
            ],
            "functionSelector": "832009af",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "numAllowedProposalSubmissions",
            "nameLocation": "1588:29:40",
            "overrides": {
              "id": 35041,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 35039,
                  "name": "Governor",
                  "nameLocations": [
                    "1641:8:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36035,
                  "src": "1641:8:40"
                },
                {
                  "id": 35040,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "1651:16:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36977,
                  "src": "1651:16:40"
                }
              ],
              "src": "1632:36:40"
            },
            "parameters": {
              "id": 35038,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1617:2:40"
            },
            "returnParameters": {
              "id": 35044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35043,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35050,
                  "src": "1678:7:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35042,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1678:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1677:9:40"
            },
            "scope": 35090,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35063,
            "nodeType": "FunctionDefinition",
            "src": "1754:143:40",
            "nodes": [],
            "body": {
              "id": 35062,
              "nodeType": "Block",
              "src": "1849:48:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 35058,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1866:5:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Contest_$35090_$",
                          "typeString": "type(contract super Contest)"
                        }
                      },
                      "id": 35059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1872:16:40",
                      "memberName": "maxProposalCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36837,
                      "src": "1866:22:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 35060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1866:24:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 35057,
                  "id": 35061,
                  "nodeType": "Return",
                  "src": "1859:31:40"
                }
              ]
            },
            "baseFunctions": [
              35393,
              36837
            ],
            "functionSelector": "fb9bf8d4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "maxProposalCount",
            "nameLocation": "1763:16:40",
            "overrides": {
              "id": 35054,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 35052,
                  "name": "Governor",
                  "nameLocations": [
                    "1803:8:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36035,
                  "src": "1803:8:40"
                },
                {
                  "id": 35053,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "1813:16:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36977,
                  "src": "1813:16:40"
                }
              ],
              "src": "1794:36:40"
            },
            "parameters": {
              "id": 35051,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1779:2:40"
            },
            "returnParameters": {
              "id": 35057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35056,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35063,
                  "src": "1840:7:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35055,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1840:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1839:9:40"
            },
            "scope": 35090,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35076,
            "nodeType": "FunctionDefinition",
            "src": "1903:145:40",
            "nodes": [],
            "body": {
              "id": 35075,
              "nodeType": "Block",
              "src": "1999:49:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 35071,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "2016:5:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Contest_$35090_$",
                          "typeString": "type(contract super Contest)"
                        }
                      },
                      "id": 35072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2022:17:40",
                      "memberName": "downvotingAllowed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36847,
                      "src": "2016:23:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 35073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2016:25:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 35070,
                  "id": 35074,
                  "nodeType": "Return",
                  "src": "2009:32:40"
                }
              ]
            },
            "baseFunctions": [
              35402,
              36847
            ],
            "functionSelector": "60506ff6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "downvotingAllowed",
            "nameLocation": "1912:17:40",
            "overrides": {
              "id": 35067,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 35065,
                  "name": "Governor",
                  "nameLocations": [
                    "1953:8:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36035,
                  "src": "1953:8:40"
                },
                {
                  "id": 35066,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "1963:16:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36977,
                  "src": "1963:16:40"
                }
              ],
              "src": "1944:36:40"
            },
            "parameters": {
              "id": 35064,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1929:2:40"
            },
            "returnParameters": {
              "id": 35070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35069,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35076,
                  "src": "1990:7:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35068,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1990:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1989:9:40"
            },
            "scope": 35090,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35089,
            "nodeType": "FunctionDefinition",
            "src": "2054:126:40",
            "nodes": [],
            "body": {
              "id": 35088,
              "nodeType": "Block",
              "src": "2141:39:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 35084,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "2158:5:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Contest_$35090_$",
                          "typeString": "type(contract super Contest)"
                        }
                      },
                      "id": 35085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2164:7:40",
                      "memberName": "creator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36857,
                      "src": "2158:13:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 35086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2158:15:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 35083,
                  "id": 35087,
                  "nodeType": "Return",
                  "src": "2151:22:40"
                }
              ]
            },
            "baseFunctions": [
              36264,
              36857
            ],
            "functionSelector": "02d05d3f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "creator",
            "nameLocation": "2063:7:40",
            "overrides": {
              "id": 35080,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 35078,
                  "name": "IGovernor",
                  "nameLocations": [
                    "2094:9:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36348,
                  "src": "2094:9:40"
                },
                {
                  "id": 35079,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "2105:16:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36977,
                  "src": "2105:16:40"
                }
              ],
              "src": "2085:37:40"
            },
            "parameters": {
              "id": 35077,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2070:2:40"
            },
            "returnParameters": {
              "id": 35083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35082,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35089,
                  "src": "2132:7:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35081,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2132:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2131:9:40"
            },
            "scope": 35090,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 34950,
              "name": "Governor",
              "nameLocations": [
                "291:8:40"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36035,
              "src": "291:8:40"
            },
            "id": 34951,
            "nodeType": "InheritanceSpecifier",
            "src": "291:8:40"
          },
          {
            "baseName": {
              "id": 34952,
              "name": "GovernorSettings",
              "nameLocations": [
                "301:16:40"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36977,
              "src": "301:16:40"
            },
            "id": 34953,
            "nodeType": "InheritanceSpecifier",
            "src": "301:16:40"
          },
          {
            "baseName": {
              "id": 34954,
              "name": "GovernorSorting",
              "nameLocations": [
                "319:15:40"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37622,
              "src": "319:15:40"
            },
            "id": 34955,
            "nodeType": "InheritanceSpecifier",
            "src": "319:15:40"
          },
          {
            "baseName": {
              "id": 34956,
              "name": "GovernorModuleRegistry",
              "nameLocations": [
                "336:22:40"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36678,
              "src": "336:22:40"
            },
            "id": 34957,
            "nodeType": "InheritanceSpecifier",
            "src": "336:22:40"
          }
        ],
        "canonicalName": "Contest",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          35090,
          36678,
          37622,
          36618,
          36977,
          36035,
          36348,
          36117,
          31864,
          28998,
          32419,
          32431,
          30525
        ],
        "name": "Contest",
        "nameLocation": "280:7:40",
        "scope": 35091,
        "usedErrors": [
          30538,
          30540,
          35157,
          36048
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 40
}