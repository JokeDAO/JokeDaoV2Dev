{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_prompt",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "_submissionMerkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_votingMerkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "_constructorIntParams",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AddressNotPermissionedToSubmit",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "author",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "AuthorIsNotSender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CannotCancelACompletedContest",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CannotDeleteWhenCompleted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CannotVoteOnDeletedProposal",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ContestAlreadyCancelled",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "enum Governor.ContestState",
          "name": "currentState",
          "type": "uint8"
        }
      ],
      "name": "ContestMustBeActiveToVote",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "enum Governor.ContestState",
          "name": "currentState",
          "type": "uint8"
        }
      ],
      "name": "ContestMustBeQueuedToPropose",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "maxProposalCount",
          "type": "uint256"
        }
      ],
      "name": "ContestSubmissionLimitReached",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DownvotingNotEnabled",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "DuplicateSubmission",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EmptyProposalDescription",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "msgValue",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "costToPropose",
          "type": "uint256"
        }
      ],
      "name": "IncorrectCostToProposeSent",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IndexHasNotBeenPopulated",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidVoteType",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MoreThanOneProposalWithThisManyVotes",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NeedAtLeastOneVoteToVote",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NeedToSubmitWithProofFirst",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NeedToVoteWithProofFirst",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotEnoughVotesLeft",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotInMerkle",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyCreatorCanDelete",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyCreatorCanSetRewardsModule",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyJkLabsOrCreatorCanCancel",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RankCannotBeZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RankIsNotInSortedRanks",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "numAllowedProposalSubmissions",
          "type": "uint256"
        }
      ],
      "name": "SenderSubmissionLimitReached",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "enum Governor.Metadatas",
          "name": "unexpectedMetadata",
          "type": "uint8"
        }
      ],
      "name": "UnexpectedMetadata",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroSignersInSafeMetadata",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroThresholdInSafeMetadata",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "ContestCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "name": "JokeraceCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract RewardsModule",
          "name": "oldOfficialRewardsModule",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract RewardsModule",
          "name": "newOfficialRewardsModule",
          "type": "address"
        }
      ],
      "name": "OfficialRewardsModuleSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PaymentReleased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "proposalIds",
          "type": "uint256[]"
        }
      ],
      "name": "ProposalsDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "numVotes",
          "type": "uint256"
        }
      ],
      "name": "VoteCast",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "AMOUNT_FOR_SUMBITTER_PROOF",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "JK_LABS_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "METADATAS_COUNT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressSubmitterVerified",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressTotalCastVoteCounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressTotalVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressTotalVotesVerified",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "addressesThatHaveVoted",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allProposalTotalVotes",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "proposalIdsReturn",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ],
          "internalType": "struct GovernorCountingSimple.VoteCounts[]",
          "name": "proposalVoteCountsArrayReturn",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allProposalTotalVotesWithoutDeleted",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "proposalIdsReturn",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ],
          "internalType": "struct GovernorCountingSimple.VoteCounts[]",
          "name": "proposalVoteCountsArrayReturn",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "canceled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "totalVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "numVotes",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "castVote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "numVotes",
          "type": "uint256"
        }
      ],
      "name": "castVoteWithoutProof",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addressToCheck",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        },
        {
          "internalType": "bool",
          "name": "voting",
          "type": "bool"
        }
      ],
      "name": "checkProof",
      "outputs": [
        {
          "internalType": "bool",
          "name": "verified",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "contestAddressTotalVotesCast",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "userTotalVotesCast",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contestDeadline",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contestStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "costToPropose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "proposalIdsToDelete",
          "type": "uint256[]"
        }
      ],
      "name": "deleteProposals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "deletedProposalIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "downvotingAllowed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "forVotesToProposalIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllAddressesThatHaveVoted",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllDeletedProposalIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllProposalAuthors",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllProposalIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        }
      ],
      "name": "getNumProposalsWithThisManyForVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        }
      ],
      "name": "getOnlyProposalIdWithThisManyForVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getProposal",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct Governor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Governor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct Governor.ProposalCore",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        }
      ],
      "name": "getProposalsWithThisManyForVotes",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "proposalsWithThisManyForVotes",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rank",
          "type": "uint256"
        }
      ],
      "name": "getRankIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rankIndex",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSortedRanks",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "sortedRanksArray",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct Governor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Governor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct Governor.ProposalCore",
          "name": "proposal",
          "type": "tuple"
        }
      ],
      "name": "hashProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "idx",
          "type": "uint256"
        }
      ],
      "name": "isOrIsBelowTiedRank",
      "outputs": [
        {
          "internalType": "bool",
          "name": "atOrBelowTiedRank",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxProposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numAllowedProposalSubmissions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "numSubmissions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "officialRewardsModule",
      "outputs": [
        {
          "internalType": "contract RewardsModule",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "percentageToCreator",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "prompt",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "proposalAddressVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "proposalAddressesHaveVoted",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalAuthors",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalIsDeleted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "proposalVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalVotesStructs",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ],
          "internalType": "struct GovernorCountingSimple.VoteCounts",
          "name": "proposalVoteCounts",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "address",
          "name": "author",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "exists",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "targetAddress",
              "type": "address"
            }
          ],
          "internalType": "struct Governor.TargetMetadata",
          "name": "targetMetadata",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address[]",
              "name": "signers",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "threshold",
              "type": "uint256"
            }
          ],
          "internalType": "struct Governor.SafeMetadata",
          "name": "safeMetadata",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct Governor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Governor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct Governor.ProposalCore",
          "name": "proposal",
          "type": "tuple"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "propose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct Governor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Governor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct Governor.ProposalCore",
          "name": "proposal",
          "type": "tuple"
        }
      ],
      "name": "proposeWithoutProof",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rankLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract RewardsModule",
          "name": "officialRewardsModule_",
          "type": "address"
        }
      ],
      "name": "setOfficialRewardsModule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "sortedRanks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sortingEnabled",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum Governor.ContestState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "submissionMerkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalVotesCast",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct Governor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Governor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct Governor.ProposalCore",
          "name": "proposal",
          "type": "tuple"
        }
      ],
      "name": "validateProposalData",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "verifyProposer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "totalVotes",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "verifyVoter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "voteStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingMerkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50604051620041113803806200411183398101604081905262000034916200030b565b84848484846000815181106200004e576200004e6200041c565b6020026020010151856001815181106200006c576200006c6200041c565b6020026020010151866002815181106200008a576200008a6200041c565b602002602001015187600381518110620000a857620000a86200041c565b602002602001015188600481518110620000c657620000c66200041c565b602002602001015189600581518110620000e457620000e46200041c565b60200260200101518a6006815181106200010257620001026200041c565b60200260200101518b6007815181106200012057620001206200041c565b602002602001015189898e6008815181106200014057620001406200041c565b60200260200101518f6009815181106200015e576200015e6200041c565b60209081029190910101516000919091556001556003919091556004556005620001898d82620004c1565b506006620001988c82620004c1565b50600780546001600160a01b0319163390811790915560088990556009889055600a879055600b869055600c859055600d849055600e839055600f8290556040517f1eae03a78f765227bc1e8574db32390cefa5b3c0a954017973e497e40a1237349162000209918f91906200058d565b60405180910390a15050505050505050505050505050505050620005d3565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171562000269576200026962000228565b604052919050565b60005b838110156200028e57818101518382015260200162000274565b50506000910152565b600082601f830112620002a957600080fd5b81516001600160401b03811115620002c557620002c562000228565b620002da601f8201601f19166020016200023e565b818152846020838601011115620002f057600080fd5b6200030382602083016020870162000271565b949350505050565b600080600080600060a086880312156200032457600080fd5b85516001600160401b03808211156200033c57600080fd5b6200034a89838a0162000297565b96506020915081880151818111156200036257600080fd5b620003708a828b0162000297565b96505060408801519450606088015193506080880151818111156200039457600080fd5b8801601f81018a13620003a657600080fd5b805182811115620003bb57620003bb62000228565b8060051b9250620003ce8484016200023e565b818152928201840192848101908c851115620003e957600080fd5b928501925b848410156200040957835182529285019290850190620003ee565b8096505050505050509295509295909350565b634e487b7160e01b600052603260045260246000fd5b600181811c908216806200044757607f821691505b6020821081036200046857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620004bc57600081815260208120601f850160051c81016020861015620004975750805b601f850160051c820191505b81811015620004b857828155600101620004a3565b5050505b505050565b81516001600160401b03811115620004dd57620004dd62000228565b620004f581620004ee845462000432565b846200046e565b602080601f8311600181146200052d5760008415620005145750858301515b600019600386901b1c1916600185901b178555620004b8565b600085815260208120601f198616915b828110156200055e578886015182559484019460019091019084016200053d565b50858210156200057d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6040815260008351806040840152620005ae81606085016020880162000271565b6001600160a01b0393909316602083015250601f91909101601f191601606001919050565b613b2e80620005e36000396000f3fe6080604052600436106103ee5760003560e01c8063711effc811610208578063c19d93fb11610118578063ea8a1af0116100ab578063f0a7db0a1161007a578063f0a7db0a14610c14578063f4f3d7ec14610c34578063f79c017214610c54578063fb8ddab414610c84578063fb9bf8d414610ca457600080fd5b8063ea8a1af014610bac578063edcd1be414610bc1578063eef18e1714610bd7578063efa90d3614610bff57600080fd5b8063d45a010b116100e7578063d45a010b14610b3f578063dd96a19d14610b54578063dea5f6a614610b6a578063e031535b14610b9757600080fd5b8063c19d93fb14610aa0578063c7f758a814610ac2578063c9a1b6b214610aef578063cb85395014610b0f57600080fd5b8063946369b51161019b578063aec116b61161016a578063aec116b614610a01578063b323580d14610a37578063b66d1da314610a57578063bddc164114610a77578063c0ffaa7814610a8d57600080fd5b8063946369b5146109725780639b644a23146109875780639ba197af146109a7578063a1ac6cb2146109d457600080fd5b80637de418d5116101d75780637de418d5146108f6578063832009af1461090c5780639174778c14610922578063930de9791461094257600080fd5b8063711effc81461087457806375e509c514610894578063785ddfe5146108c15780637c65d711146108e157600080fd5b80633932abb111610303578063531bd8121161029657806360506ff61161026557806360506ff6146107f357806365f16263146108095780636e4eb810146108295780636ed815ad146108495780636fd3636b1461085f57600080fd5b8063531bd8121461073c578063544ffc9c1461075c57806354fd4d50146107a65780635c7107d8146107d357600080fd5b8063476f4d8a116102d2578063476f4d8a146106d15780634d24a67f146106e457806350a5e524146106f957806350c4b6161461071c57600080fd5b80633932abb1146106615780633f9942ff14610677578063419c533c14610691578063458da87d146106b157600080fd5b80630aa25e44116103865780632c39805f116103555780632c39805f146105bd578063325cc6d9146105df57806332763c22146105ff578063347cf6651461062f578063366ecf5b1461064b57600080fd5b80630aa25e44146105445780631242b7371461056457806320b3e84514610586578063262e59e9146105a857600080fd5b80630414126a116103c25780630414126a1461049b57806305846cae146104b157806306fdde03146104d1578063070dc5d9146104f357600080fd5b80624114a8146103f3578063013cf08b1461041c57806302a251a31461044d57806302d05d3f14610463575b600080fd5b3480156103ff57600080fd5b5061040960085481565b6040519081526020015b60405180910390f35b34801561042857600080fd5b5061043c610437366004612f69565b610cba565b604051610413959493929190613021565b34801561045957600080fd5b50610409600a5481565b34801561046f57600080fd5b50600754610483906001600160a01b031681565b6040516001600160a01b039091168152602001610413565b3480156104a757600080fd5b5061040960015481565b3480156104bd57600080fd5b506104096104cc366004612f69565b610e02565b3480156104dd57600080fd5b506104e6610e23565b6040516104139190613073565b3480156104ff57600080fd5b5061053761050e366004612f69565b601d60209081526000918252604091829020825180840190935280548352600101549082015281565b6040516104139190613086565b34801561055057600080fd5b5061048361055f366004612f69565b610eb1565b34801561057057600080fd5b50610579610edb565b60405161041391906130d8565b34801561059257600080fd5b506105a66105a1366004613144565b610f33565b005b3480156105b457600080fd5b50610409610fa2565b3480156105c957600080fd5b506105d2610fbe565b6040516104139190613198565b3480156105eb57600080fd5b506104096105fa366004612f69565b61101f565b34801561060b57600080fd5b5061061f61061a3660046131fa565b61102f565b6040519015158152602001610413565b34801561063b57600080fd5b50610409678ac7230489e8000081565b34801561065757600080fd5b5061040960005481565b34801561066d57600080fd5b5061040960095481565b34801561068357600080fd5b5060135461061f9060ff1681565b34801561069d57600080fd5b506104096106ac36600461327b565b61112e565b3480156106bd57600080fd5b506104096106cc366004613587565b611184565b6104096106df3660046135d3565b6111b5565b3480156106f057600080fd5b50610409611252565b34801561070557600080fd5b5061070e611260565b604051610413929190613607565b34801561072857600080fd5b50610483610737366004612f69565b611366565b34801561074857600080fd5b506105a6610757366004613670565b611376565b34801561076857600080fd5b50610791610777366004612f69565b6000908152601d6020526040902080546001909101549091565b60408051928352602083019190915201610413565b3480156107b257600080fd5b50604080518082019091526004815263342e313160e01b60208201526104e6565b3480156107df57600080fd5b506104096107ee366004612f69565b6113dc565b3480156107ff57600080fd5b50610409600d5481565b34801561081557600080fd5b506104096108243660046136cb565b6114e3565b34801561083557600080fd5b50610791610844366004613700565b611563565b34801561085557600080fd5b50610409600e5481565b34801561086b57600080fd5b50610579611598565b34801561088057600080fd5b5061040961088f366004613730565b6115ee565b3480156108a057600080fd5b506104096108af366004613752565b60156020526000908152604090205481565b3480156108cd57600080fd5b50601f54610483906001600160a01b031681565b3480156108ed57600080fd5b506104e661161f565b34801561090257600080fd5b50610409601b5481565b34801561091857600080fd5b50610409600b5481565b34801561092e57600080fd5b5061061f61093d366004612f69565b61162c565b34801561094e57600080fd5b5061061f61095d366004613752565b60196020526000908152604090205460ff1681565b34801561097e57600080fd5b506105d26116d2565b34801561099357600080fd5b506104096109a2366004612f69565b611732565b3480156109b357600080fd5b506104096109c2366004612f69565b6000908152601e602052604090205490565b3480156109e057600080fd5b506104096109ef366004613752565b601c6020526000908152604090205481565b348015610a0d57600080fd5b50610409610a1c366004613752565b6001600160a01b03166000908152601c602052604090205490565b348015610a4357600080fd5b506105d2610a52366004612f69565b611742565b348015610a6357600080fd5b50610409610a72366004612f69565b6117b4565b348015610a8357600080fd5b5061040960035481565b610409610a9b36600461376f565b611814565b348015610aac57600080fd5b50610ab561187c565b60405161041391906137e0565b348015610ace57600080fd5b50610ae2610add366004612f69565b6118cd565b60405161041391906137fa565b348015610afb57600080fd5b50610579610b0a366004612f69565b611a47565b348015610b1b57600080fd5b5061061f610b2a366004613752565b601a6020526000908152604090205460ff1681565b348015610b4b57600080fd5b5061070e611aa9565b348015610b6057600080fd5b5061040960045481565b348015610b7657600080fd5b50610409610b85366004613752565b60186020526000908152604090205481565b348015610ba357600080fd5b50610409611c76565b348015610bb857600080fd5b506105a6611c88565b348015610bcd57600080fd5b50610409600f5481565b348015610be357600080fd5b5061048373dc652c746a8f85e18ce632d97c6118e8a52fa73881565b348015610c0b57600080fd5b50610579611d7e565b348015610c2057600080fd5b506105a6610c2f366004613861565b611dd4565b348015610c4057600080fd5b506105a6610c4f366004613752565b611f3b565b348015610c6057600080fd5b5061061f610c6f366004612f69565b60126020526000908152604090205460ff1681565b348015610c9057600080fd5b506105a6610c9f366004613587565b611fc0565b348015610cb057600080fd5b50610409600c5481565b601460205260009081526040902080546001820180546001600160a01b03831693600160a01b90930460ff16929190610cf2906138a2565b80601f0160208091040260200160405190810160405280929190818152602001828054610d1e906138a2565b8015610d6b5780601f10610d4057610100808354040283529160200191610d6b565b820191906000526020600020905b815481529060010190602001808311610d4e57829003601f168201915b5050604080516020808201835260028801546001600160a01b031682528251600389018054606093810283018401865294820185815298999398939750909550935084928491840182828015610dea57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610dcc575b50505050508152602001600182015481525050905085565b60118181548110610e1257600080fd5b600091825260209091200154905081565b60058054610e30906138a2565b80601f0160208091040260200160405190810160405280929190818152602001828054610e5c906138a2565b8015610ea95780601f10610e7e57610100808354040283529160200191610ea9565b820191906000526020600020905b815481529060010190602001808311610e8c57829003601f168201915b505050505081565b60168181548110610ec157600080fd5b6000918252602090912001546001600160a01b0316905081565b60606011805480602002602001604051908101604052809291908181526020018280548015610f2957602002820191906000526020600020905b815481526020019060010190808311610f15575b5050505050905090565b6001600160a01b0383166000908152601a602052604090205460ff16610f9d57600354600003610f6257505050565b610f7883678ac7230489e800008484600061102f565b506001600160a01b0383166000908152601a60205260409020805460ff191660011790555b505050565b6000600a54610faf611c76565b610fb991906138ec565b905090565b60606017805480602002602001604051908101604052809291908181526020018280548015610f2957602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610ff8575050505050905090565b60028181548110610e1257600080fd5b6040516bffffffffffffffffffffffff19606087901b1660208201526034810185905260009081906054016040516020818303038152906040528051906020012090506000836110bf576110ba86868080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050600354915085905061210f565b611100565b61110086868080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050600454915085905061210f565b9050806111205760405163452c2df160e11b815260040160405180910390fd5b506001979650505050505050565b600086815260126020526040812054339060ff1615611160576040516358f1119560e01b815260040160405180910390fd5b61116c81878686611376565b61117888828988612125565b98975050505050505050565b60008160405160200161119791906137fa565b60408051601f19818403018152919052805160209091012092915050565b6000600e5434146111eb57600e546040516380a7af9f60e01b815234600482015260248101919091526044015b60405180910390fd5b6003541561122357336000908152601a602052604090205460ff1661122357604051631f22097560e01b815260040160405180910390fd5b61122f610c9f836138ff565b600061124261123d846138ff565b61226c565b905061124c6124e7565b92915050565b61125d6001806138ec565b81565b606080600061126d611d7e565b9050600081516001600160401b0381111561128a5761128a6132eb565b6040519080825280602002602001820160405280156112cf57816020015b60408051808201909152600080825260208201528152602001906001900390816112a85790505b50905060005b825181101561135c57601d60008483815181106112f4576112f461390b565b602002602001015181526020019081526020016000206000016040518060400160405290816000820154815260200160018201548152505082828151811061133e5761133e61390b565b6020026020010181905250808061135490613921565b9150506112d5565b5090939092509050565b60178181548110610ec157600080fd5b6001600160a01b03841660009081526019602052604090205460ff166113d6576113a484848484600161102f565b506001600160a01b038416600090815260186020908152604080832086905560199091529020805460ff191660011790555b50505050565b6000816000036113ff57604051630ec90a1760e31b815260040160405180910390fd5b6002805460408051602080840282018101909252828152919260009291849083018282801561144d57602002820191906000526020600020905b815481526020019060010190808311611439575b5050505050905060006001905060005b838110156114c95761149483828151811061147a5761147a61390b565b60200260200101516000908152601e602052604090205490565b156114b7578582036114a95795945050505050565b816114b381613921565b9250505b806114c181613921565b91505061145d565b50604051632cc2ab7360e11b815260040160405180910390fd5b600083815260126020526040812054339060ff1615611515576040516358f1119560e01b815260040160405180910390fd5b6001600160a01b03811660009081526019602052604090205460ff1661154e5760405163126ec6d160e31b815260040160405180910390fd5b61155a85828686612125565b95945050505050565b6000828152601d602090815260408083206001600160a01b0385168452600301909152902080546001909101545b9250929050565b60606002805480602002602001604051908101604052809291908181526020018280548015610f295760200282019190600052602060002090815481526020019060010190808311610f15575050505050905090565b601e602052816000526040600020818154811061160a57600080fd5b90600052602060002001600091509150505481565b60068054610e30906138a2565b60025460009061163e9060019061393a565b82111561165e576040516365d6f35160e11b815260040160405180910390fd5b60005b61166c8360016138ec565b8110156116c95760016116a86002838154811061168b5761168b61390b565b90600052602060002001546000908152601e602052604090205490565b11156116b75750600192915050565b806116c181613921565b915050611661565b50600092915050565b60606016805480602002602001604051908101604052809291908181526020018280548015610f29576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610ff8575050505050905090565b60108181548110610e1257600080fd5b6000818152601d602090815260409182902060028101805484518185028101850190955280855260609492938301828280156117a757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611789575b5050505050915050919050565b6000818152601e60205260408120546001146117e357604051633832a15560e21b815260040160405180910390fd5b6000828152601e6020526040812080549091906118025761180261390b565b90600052602060002001549050919050565b6000600e54341461184557600e546040516380a7af9f60e01b815234600482015260248101919091526044016111e2565b611850338484610f33565b61185c610c9f856138ff565b600061186a61123d866138ff565b90506118746124e7565b949350505050565b60135460009060ff16156118905750600290565b426008541061189f5750600090565b426118a8611c76565b106118b35750600390565b426118bc610fa2565b106118c75750600190565b50600490565b6118d5612e7e565b600082815260146020908152604091829020825160a08101845281546001600160a01b0381168252600160a01b900460ff161515928101929092526001810180549293919291840191611927906138a2565b80601f0160208091040260200160405190810160405280929190818152602001828054611953906138a2565b80156119a05780601f10611975576101008083540402835291602001916119a0565b820191906000526020600020905b81548152906001019060200180831161198357829003601f168201915b5050509183525050604080516020818101835260028501546001600160a01b03168252808401919091528151600385018054606093810283018401855282850181815294909501949193909284928491840182828015611a2957602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611a0b575b50505050508152602001600182015481525050815250509050919050565b6000818152601e6020908152604091829020805483518184028101840190945280845260609392830182828015611a9d57602002820191906000526020600020905b815481526020019060010190808311611a89575b50505050509050919050565b6060806000611ab6611d7e565b9050600081516001600160401b03811115611ad357611ad36132eb565b604051908082528060200260200182016040528015611afc578160200160208202803683370190505b509050600082516001600160401b03811115611b1a57611b1a6132eb565b604051908082528060200260200182016040528015611b5f57816020015b6040805180820190915260008082526020820152815260200190600190039081611b385790505b5090506000805b8451811015611c6a5760126000868381518110611b8557611b8561390b565b60209081029190910181015182528101919091526040016000205460ff16611c5857848181518110611bb957611bb961390b565b6020026020010151848381518110611bd357611bd361390b565b602002602001018181525050601d6000868381518110611bf557611bf561390b565b6020026020010151815260200190815260200160002060000160405180604001604052908160008201548152602001600182015481525050838381518110611c3f57611c3f61390b565b6020908102919091010152611c556001836138ec565b91505b80611c6281613921565b915050611b66565b50919590945092505050565b6000600954600854610fb991906138ec565b6007546001600160a01b03163314801590611cb757503373dc652c746a8f85e18ce632d97c6118e8a52fa73814155b15611cd5576040516301dbf46f60e71b815260040160405180910390fd5b6000611cdf61187c565b90506002816004811115611cf557611cf56137ca565b03611d1357604051633c30acbf60e01b815260040160405180910390fd5b6004816004811115611d2757611d276137ca565b03611d45576040516307b9d0f760e01b815260040160405180910390fd5b6013805460ff191660011790556040517f4cd963a081760a54f571abc0f1db4dde31b4a07d8d6da3e844b8c6f47eeaaa4290600090a150565b60606010805480602002602001604051908101604052809291908181526020018280548015610f295760200282019190600052602060002090815481526020019060010190808311610f15575050505050905090565b6007546001600160a01b03163314611dff5760405163b8d4540960e01b815260040160405180910390fd5b6004611e0961187c565b6004811115611e1a57611e1a6137ca565b03611e38576040516331da1c8b60e11b815260040160405180910390fd5b60005b81811015611edd576000838383818110611e5757611e5761390b565b60209081029290920135600081815260129093526040909220549192505060ff16611eca576000818152601260205260408120805460ff191660019081179091556011805491820181559091527f31ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c68018190555b5080611ed581613921565b915050611e3b565b50600d54158015611ef057506000546001145b15611eff57611eff82826125fc565b7f75a75cf5c561892f4cc5b26c1b8e933849b42238c96dd073d080d1ae96c514166010604051611f2f919061394d565b60405180910390a15050565b6007546001600160a01b03163314611f6657604051630f4cb1bd60e11b815260040160405180910390fd5b601f80546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f753a2cf8d360cff631674504210913e48247f8e56b3e6d2006c2103d4095999f9101611f2f565b80516001600160a01b03163314611ffe57805160405163fbbf4d7f60e01b81526001600160a01b0390911660048201523360248201526044016111e2565b60005b61200c6001806138ec565b8110156120e5576000816001811115612027576120276137ca565b9050600081600181111561203d5761203d6137ca565b0361204857506120d3565b600181600181111561205c5761205c6137ca565b036120b657608083015151516000036120885760405163c3b2798b60e01b815260040160405180910390fd5b8260800151602001516000036120b1576040516392fb9a3560e01b815260040160405180910390fd5b6120d1565b8060405163d2277d4960e01b81526004016111e29190613988565b505b806120dd81613921565b915050612001565b5080604001515160000361210c5760405163e182473360e01b815260040160405180910390fd5b50565b60008261211c8584612659565b14949350505050565b6000600161213161187c565b6004811115612142576121426137ca565b146121695761214f61187c565b60405163049cab4960e51b81526004016111e291906137e0565b8160000361218a5760405163502e1c2960e01b815260040160405180910390fd5b6121bc85858585601860008a6001600160a01b03166001600160a01b03168152602001908152602001600020546126a6565b601780546001810182556000919091527fc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c150180546001600160a01b031916331790556040805186815260ff851660208201529081018390526001600160a01b038516907f2c9deb38f462962eadbd85a9d3a4120503ee091f1582eaaa10aa8c6797651d299060600160405180910390a25050506001600160a01b0316600090815260186020526040902054919050565b6000600361227861187c565b6004811115612289576122896137ca565b146122b05761229661187c565b604051632889531360e01b81526004016111e291906137e0565b600b5433600090815260156020526040902054036122e757600b54604051632bd6d93960e21b81526004016111e291815260200190565b600c546011546010546122fa919061393a565b0361231e57600c546040516302217f5360e51b81526004016111e291815260200190565b600061232983611184565b600081815260146020526040902054909150600160a01b900460ff16156123665760405163baffc42360e01b8152600481018290526024016111e2565b6010805460018181019092557f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae6720182905560008281526014602090815260409182902086518154928801511515600160a01b026001600160a81b03199093166001600160a01b03909116179190911781559085015185928201906123ea90826139ea565b506060820151516002820180546001600160a01b0319166001600160a01b03909216919091179055608082015180518051600384019161242f91839160200190612eef565b506020918201516001918201553360009081526015909252604082208054919450925061245d9084906138ec565b9091555050601680546001810182556000919091527fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b51242890180546001600160a01b031916339081179091556040805183815260208101929092527fcd423cc1203c0af96b9b3d68d73b3064a69de2d14450bb7181c5e5df2132b358910160405180910390a192915050565b600e54156125fa5760006064600f546064612502919061393a565b61250c9034613aa9565b6125169190613ac0565b9050801561258a5761253c73dc652c746a8f85e18ce632d97c6118e8a52fa7388261290d565b6040805173dc652c746a8f85e18ce632d97c6118e8a52fa7388152602081018390527fdf20fd1e76bc69d672e4814fafb2c449bba3a5369d8359adf9e05e6fde87b056910160405180910390a15b6000612596823461393a565b905080156125f7576007546125b4906001600160a01b03168261290d565b600754604080516001600160a01b039092168252602082018390527fdf20fd1e76bc69d672e4814fafb2c449bba3a5369d8359adf9e05e6fde87b0569101611f2f565b50505b565b60005b81811015610f9d57600083838381811061261b5761261b61390b565b602090810292909201356000818152601d90935260409092205491925061264490508282612a26565b5050808061265190613921565b9150506125ff565b600081815b845181101561269e5761268a8286838151811061267d5761267d61390b565b6020026020010151612b57565b91508061269681613921565b91505061265e565b509392505050565b6000858152601d602090815260408083206001600160a01b0388168452601c909252909120546126d6908361393a565b8311156126f65760405163660fa07360e11b815260040160405180910390fd5b6001600160a01b038516600090815260038201602052604081205415801561273957506001600160a01b0386166000908152600383016020526040902060010154155b905060ff8516612791578154849083906000906127579084906138ec565b90915550506001600160a01b0386166000908152600383016020526040812080548692906127869084906138ec565b909155506128229050565b60001960ff86160161280957600d546001146127c057604051639755958f60e01b815260040160405180910390fd5b838260000160010160008282546127d791906138ec565b90915550506001600160a01b0386166000908152600383016020526040812060010180548692906127869084906138ec565b604051638eed55d160e01b815260040160405180910390fd5b801561285957600282018054600181018255600091825260209091200180546001600160a01b0319166001600160a01b0388161790555b6001600160a01b0386166000908152601c6020526040812080548692906128819084906138ec565b9250508190555083601b600082825461289a91906138ec565b9091555050600d541580156128b157506000546001145b1561290457815460006128c4868361393a565b905080156128d6576128d68982612a26565b6000828152601e60209081526040822080546001810182559083529120018990556129018183612b89565b50505b50505050505050565b8047101561295d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016111e2565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146129aa576040519150601f19603f3d011682016040523d82523d6000602084013e6129af565b606091505b5050905080610f9d5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016111e2565b6000818152601e6020908152604080832080548251818502810185019093528083529192909190830182828015612a7c57602002820191906000526020600020905b815481526020019060010190808311612a68575b5050505050905060005b81518110156113d65783828281518110612aa257612aa261390b565b602002602001015103612b45578160018351612abe919061393a565b81518110612ace57612ace61390b565b6020026020010151601e60008581526020019081526020016000208281548110612afa57612afa61390b565b9060005260206000200181905550601e6000848152602001908152602001600020805480612b2a57612b2a613ae2565b600190038181906000526020600020016000905590556113d6565b80612b4f81613921565b915050612a86565b6000818310612b73576000828152602084905260409020612b82565b60008381526020839052604090205b9392505050565b60028054604080516020808402820181019092528281529192600092918490830182828015612bd757602002820191906000526020600020905b815481526020019060010190808311612bc3575b5050505050905081600003612c1e575050600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace015550565b80612c2a60018461393a565b81518110612c3a57612c3a61390b565b6020026020010151831015612c90576001548203612c585750505050565b5050600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace015550565b6113d6848484846000805b83811015612d0557828181518110612cb557612cb561390b565b60200260200101518503612cca5750506113d6565b828181518110612cdc57612cdc61390b565b6020026020010151851115612cf357809150612d05565b80612cfd81613921565b915050612c9b565b5060008086118015612d2357506000868152601e6020526040902054155b90506000818015612d4c575086848481518110612d4257612d4261390b565b6020026020010151145b612e5557612d5b60018661393a565b8314612e03576000612d6e8460016138ec565b90505b85811015612e015784612d8560018361393a565b81518110612d9557612d9561390b565b602002602001015160028281548110612db057612db061390b565b600091825260209091200155828015612de1575087858281518110612dd757612dd761390b565b6020026020010151145b15612def5760019150612e01565b80612df981613921565b915050612d71565b505b80158015612e12575060015485105b15612e5557600284612e2560018861393a565b81518110612e3557612e3561390b565b602090810291909101810151825460018101845560009384529190922001555b8560028481548110612e6957612e6961390b565b60009182526020909120015550505050505050565b6040518060a0016040528060006001600160a01b0316815260200160001515815260200160608152602001612ec8604051806020016040528060006001600160a01b031681525090565b8152602001612eea604051806040016040528060608152602001600081525090565b905290565b828054828255906000526020600020908101928215612f44579160200282015b82811115612f4457825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612f0f565b50612f50929150612f54565b5090565b5b80821115612f505760008155600101612f55565b600060208284031215612f7b57600080fd5b5035919050565b6000815180845260005b81811015612fa857602081850181015186830182015201612f8c565b506000602082860101526020601f19601f83011685010191505092915050565b805160408084528151908401819052600091602091908201906060860190845b8181101561300d5783516001600160a01b031683529284019291840191600101612fe8565b505093820151949091019390935250919050565b600060018060a01b038088168352861515602084015260a0604084015261304b60a0840187612f82565b81865116606085015283810360808501526130668186612fc8565b9998505050505050505050565b602081526000612b826020830184612f82565b81518152602080830151908201526040810161124c565b600081518084526020808501945080840160005b838110156130cd578151875295820195908201906001016130b1565b509495945050505050565b602081526000612b82602083018461309d565b6001600160a01b038116811461210c57600080fd5b60008083601f84011261311257600080fd5b5081356001600160401b0381111561312957600080fd5b6020830191508360208260051b850101111561159157600080fd5b60008060006040848603121561315957600080fd5b8335613164816130eb565b925060208401356001600160401b0381111561317f57600080fd5b61318b86828701613100565b9497909650939450505050565b6020808252825182820181905260009190848201906040850190845b818110156131d95783516001600160a01b0316835292840192918401916001016131b4565b50909695505050505050565b803580151581146131f557600080fd5b919050565b60008060008060006080868803121561321257600080fd5b853561321d816130eb565b94506020860135935060408601356001600160401b0381111561323f57600080fd5b61324b88828901613100565b909450925061325e9050606087016131e5565b90509295509295909350565b803560ff811681146131f557600080fd5b60008060008060008060a0878903121561329457600080fd5b863595506132a46020880161326a565b9450604087013593506060870135925060808701356001600160401b038111156132cd57600080fd5b6132d989828a01613100565b979a9699509497509295939492505050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715613323576133236132eb565b60405290565b60405160a081016001600160401b0381118282101715613323576133236132eb565b604051601f8201601f191681016001600160401b0381118282101715613373576133736132eb565b604052919050565b60006020828403121561338d57600080fd5b604051602081018181106001600160401b03821117156133af576133af6132eb565b60405290508082356133c0816130eb565b905292915050565b6000604082840312156133da57600080fd5b6133e2613301565b905081356001600160401b03808211156133fb57600080fd5b818401915084601f83011261340f57600080fd5b8135602082821115613423576134236132eb565b8160051b925061343481840161334b565b828152928401810192818101908885111561344e57600080fd5b948201945b848610156134785785359350613468846130eb565b8382529482019490820190613453565b808752505080860135818601525050505092915050565b600060a082840312156134a157600080fd5b6134a9613329565b905081356134b6816130eb565b815260206134c58382016131e5565b8183015260408301356001600160401b03808211156134e357600080fd5b818501915085601f8301126134f757600080fd5b813581811115613509576135096132eb565b61351b601f8201601f1916850161334b565b818152878583860101111561352f57600080fd5b818585018683013760008583830101528060408701525050613554866060870161337b565b6060850152608085013592508083111561356d57600080fd5b505061357b848285016133c8565b60808301525092915050565b60006020828403121561359957600080fd5b81356001600160401b038111156135af57600080fd5b6118748482850161348f565b600060a082840312156135cd57600080fd5b50919050565b6000602082840312156135e557600080fd5b81356001600160401b038111156135fb57600080fd5b611874848285016135bb565b6000604080835261361a8184018661309d565b83810360208581019190915285518083528682019282019060005b818110156136625761365283865180518252602090810151910152565b9383019391850191600101613635565b509098975050505050505050565b6000806000806060858703121561368657600080fd5b8435613691816130eb565b93506020850135925060408501356001600160401b038111156136b357600080fd5b6136bf87828801613100565b95989497509550505050565b6000806000606084860312156136e057600080fd5b833592506136f06020850161326a565b9150604084013590509250925092565b6000806040838503121561371357600080fd5b823591506020830135613725816130eb565b809150509250929050565b6000806040838503121561374357600080fd5b50508035926020909101359150565b60006020828403121561376457600080fd5b8135612b82816130eb565b60008060006040848603121561378457600080fd5b83356001600160401b038082111561379b57600080fd5b6137a7878388016135bb565b945060208601359150808211156137bd57600080fd5b5061318b86828701613100565b634e487b7160e01b600052602160045260246000fd5b60208101600583106137f4576137f46137ca565b91905290565b60208152600060018060a01b03808451166020840152602084015115156040840152604084015160a0606085015261383560c0850182612f82565b90508160608601515116608085015260808501519150601f198482030160a085015261155a8183612fc8565b6000806020838503121561387457600080fd5b82356001600160401b0381111561388a57600080fd5b61389685828601613100565b90969095509350505050565b600181811c908216806138b657607f821691505b6020821081036135cd57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561124c5761124c6138d6565b600061124c368361348f565b634e487b7160e01b600052603260045260246000fd5b600060018201613933576139336138d6565b5060010190565b8181038181111561124c5761124c6138d6565b6020808252825482820181905260008481528281209092916040850190845b818110156131d95783548352600193840193928501920161396c565b60208101600283106137f4576137f46137ca565b601f821115610f9d57600081815260208120601f850160051c810160208610156139c35750805b601f850160051c820191505b818110156139e2578281556001016139cf565b505050505050565b81516001600160401b03811115613a0357613a036132eb565b613a1781613a1184546138a2565b8461399c565b602080601f831160018114613a4c5760008415613a345750858301515b600019600386901b1c1916600185901b1785556139e2565b600085815260208120601f198616915b82811015613a7b57888601518255948401946001909101908401613a5c565b5085821015613a995787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808202811582820484141761124c5761124c6138d6565b600082613add57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603160045260246000fdfea26469706673582212209528c94bdde2791991cdbded0f0c7b56dd07df310a27f1c9fd0be8b4a7b5adde64736f6c63430008130033",
    "sourceMap": "265:1023:28:-:0;;;338:948;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;568:5;587:7;608:21;643:17;674:21;696:1;674:24;;;;;;;;:::i;:::-;;;;;;;728:21;750:1;728:24;;;;;;;;:::i;:::-;;;;;;;782:21;804:1;782:24;;;;;;;;:::i;:::-;;;;;;;837:21;859:1;837:24;;;;;;;;:::i;:::-;;;;;;;909:21;931:1;909:24;;;;;;;;:::i;:::-;;;;;;;967:21;989:1;967:24;;;;;;;;:::i;:::-;;;;;;;1026:21;1048:1;1026:24;;;;;;;;:::i;:::-;;;;;;;1081:21;1103:1;1081:24;;;;;;;;:::i;:::-;;;;;;;4318:21:29;4341:17;1176:21:28;1198:1;1176:24;;;;;;;;:::i;:::-;;;;;;;1232:21;1254:1;1232:24;;;;;;;;:::i;:::-;;;;;;;;;;;2141:14:33;:32;;;;2183:9;:22;881:20:32;:44;;;;950:16;:36;4370:4:29::1;:12;4377:5:::0;4370:4;:12:::1;:::i;:::-;-1:-1:-1::0;4392:6:29::1;:16;4401:7:::0;4392:6;:16:::1;:::i;:::-;-1:-1:-1::0;4418:7:29::1;:20:::0;;-1:-1:-1;;;;;;4418:20:29::1;4428:10;4418:20:::0;;::::1;::::0;;;4448:12:::1;:28:::0;;;4486:11:::1;:26:::0;;;4522:12:::1;:28:::0;;;4560:29:::1;:62:::0;;;4632:16:::1;:36:::0;;;4678:17:::1;:38:::0;;;4726:13:::1;:30:::0;;;4766:19:::1;:42:::0;;;4824:34:::1;::::0;::::1;::::0;::::1;::::0;4840:5;;4428:10;4824:34:::1;:::i;:::-;;;;;;;;3865:1069:::0;;;;;;;;;;;;338:948:28;;;;;265:1023;;14:127:37;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:37;247:40;;-1:-1:-1;;;;;302:34:37;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:37:o;426:250::-;511:1;521:113;535:6;532:1;529:13;521:113;;;611:11;;;605:18;592:11;;;585:39;557:2;550:10;521:113;;;-1:-1:-1;;668:1:37;650:16;;643:27;426:250::o;681:510::-;735:5;788:3;781:4;773:6;769:17;765:27;755:55;;806:1;803;796:12;755:55;829:13;;-1:-1:-1;;;;;854:26:37;;851:52;;;883:18;;:::i;:::-;927:55;970:2;951:13;;-1:-1:-1;;947:27:37;976:4;943:38;927:55;:::i;:::-;1007:2;998:7;991:19;1053:3;1046:4;1041:2;1033:6;1029:15;1025:26;1022:35;1019:55;;;1070:1;1067;1060:12;1019:55;1083:77;1157:2;1150:4;1141:7;1137:18;1130:4;1122:6;1118:17;1083:77;:::i;:::-;1178:7;681:510;-1:-1:-1;;;;681:510:37:o;1196:1468::-;1347:6;1355;1363;1371;1379;1432:3;1420:9;1411:7;1407:23;1403:33;1400:53;;;1449:1;1446;1439:12;1400:53;1476:16;;-1:-1:-1;;;;;1541:14:37;;;1538:34;;;1568:1;1565;1558:12;1538:34;1591:61;1644:7;1635:6;1624:9;1620:22;1591:61;:::i;:::-;1581:71;;1671:2;1661:12;;1719:2;1708:9;1704:18;1698:25;1748:2;1738:8;1735:16;1732:36;;;1764:1;1761;1754:12;1732:36;1787:63;1842:7;1831:8;1820:9;1816:24;1787:63;:::i;:::-;1777:73;;;1890:2;1879:9;1875:18;1869:25;1859:35;;1934:2;1923:9;1919:18;1913:25;1903:35;;1984:3;1973:9;1969:19;1963:26;2014:2;2004:8;2001:16;1998:36;;;2030:1;2027;2020:12;1998:36;2053:24;;2108:4;2100:13;;2096:27;-1:-1:-1;2086:55:37;;2137:1;2134;2127:12;2086:55;2166:2;2160:9;2188:2;2184;2181:10;2178:36;;;2194:18;;:::i;:::-;2240:2;2237:1;2233:10;2223:20;;2263:28;2287:2;2283;2279:11;2263:28;:::i;:::-;2325:15;;;2395:11;;;2391:20;;;2356:12;;;;2423:19;;;2420:39;;;2455:1;2452;2445:12;2420:39;2479:11;;;;2499:135;2515:6;2510:3;2507:15;2499:135;;;2581:10;;2569:23;;2532:12;;;;2612;;;;2499:135;;;2653:5;2643:15;;;;;;;;1196:1468;;;;;;;;:::o;2669:127::-;2730:10;2725:3;2721:20;2718:1;2711:31;2761:4;2758:1;2751:15;2785:4;2782:1;2775:15;2801:380;2880:1;2876:12;;;;2923;;;2944:61;;2998:4;2990:6;2986:17;2976:27;;2944:61;3051:2;3043:6;3040:14;3020:18;3017:38;3014:161;;3097:10;3092:3;3088:20;3085:1;3078:31;3132:4;3129:1;3122:15;3160:4;3157:1;3150:15;3014:161;;2801:380;;;:::o;3312:545::-;3414:2;3409:3;3406:11;3403:448;;;3450:1;3475:5;3471:2;3464:17;3520:4;3516:2;3506:19;3590:2;3578:10;3574:19;3571:1;3567:27;3561:4;3557:38;3626:4;3614:10;3611:20;3608:47;;;-1:-1:-1;3649:4:37;3608:47;3704:2;3699:3;3695:12;3692:1;3688:20;3682:4;3678:31;3668:41;;3759:82;3777:2;3770:5;3767:13;3759:82;;;3822:17;;;3803:1;3792:13;3759:82;;;3763:3;;;3403:448;3312:545;;;:::o;4033:1352::-;4153:10;;-1:-1:-1;;;;;4175:30:37;;4172:56;;;4208:18;;:::i;:::-;4237:97;4327:6;4287:38;4319:4;4313:11;4287:38;:::i;:::-;4281:4;4237:97;:::i;:::-;4389:4;;4453:2;4442:14;;4470:1;4465:663;;;;5172:1;5189:6;5186:89;;;-1:-1:-1;5241:19:37;;;5235:26;5186:89;-1:-1:-1;;3990:1:37;3986:11;;;3982:24;3978:29;3968:40;4014:1;4010:11;;;3965:57;5288:81;;4435:944;;4465:663;3259:1;3252:14;;;3296:4;3283:18;;-1:-1:-1;;4501:20:37;;;4619:236;4633:7;4630:1;4627:14;4619:236;;;4722:19;;;4716:26;4701:42;;4814:27;;;;4782:1;4770:14;;;;4649:19;;4619:236;;;4623:3;4883:6;4874:7;4871:19;4868:201;;;4944:19;;;4938:26;-1:-1:-1;;5027:1:37;5023:14;;;5039:3;5019:24;5015:37;5011:42;4996:58;4981:74;;4868:201;-1:-1:-1;;;;;5115:1:37;5099:14;;;5095:22;5082:36;;-1:-1:-1;4033:1352:37:o;5390:497::-;5567:2;5556:9;5549:21;5530:4;5599:6;5593:13;5642:6;5637:2;5626:9;5622:18;5615:34;5658:81;5732:6;5727:2;5716:9;5712:18;5705:4;5697:6;5693:17;5658:81;:::i;:::-;-1:-1:-1;;;;;5848:32:37;;;;5841:4;5826:20;;5819:62;-1:-1:-1;5800:2:37;5779:15;;;;-1:-1:-1;;5775:29:37;5760:45;5807:2;5756:54;;5390:497;-1:-1:-1;5390:497:37:o;:::-;265:1023:28;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106103ee5760003560e01c8063711effc811610208578063c19d93fb11610118578063ea8a1af0116100ab578063f0a7db0a1161007a578063f0a7db0a14610c14578063f4f3d7ec14610c34578063f79c017214610c54578063fb8ddab414610c84578063fb9bf8d414610ca457600080fd5b8063ea8a1af014610bac578063edcd1be414610bc1578063eef18e1714610bd7578063efa90d3614610bff57600080fd5b8063d45a010b116100e7578063d45a010b14610b3f578063dd96a19d14610b54578063dea5f6a614610b6a578063e031535b14610b9757600080fd5b8063c19d93fb14610aa0578063c7f758a814610ac2578063c9a1b6b214610aef578063cb85395014610b0f57600080fd5b8063946369b51161019b578063aec116b61161016a578063aec116b614610a01578063b323580d14610a37578063b66d1da314610a57578063bddc164114610a77578063c0ffaa7814610a8d57600080fd5b8063946369b5146109725780639b644a23146109875780639ba197af146109a7578063a1ac6cb2146109d457600080fd5b80637de418d5116101d75780637de418d5146108f6578063832009af1461090c5780639174778c14610922578063930de9791461094257600080fd5b8063711effc81461087457806375e509c514610894578063785ddfe5146108c15780637c65d711146108e157600080fd5b80633932abb111610303578063531bd8121161029657806360506ff61161026557806360506ff6146107f357806365f16263146108095780636e4eb810146108295780636ed815ad146108495780636fd3636b1461085f57600080fd5b8063531bd8121461073c578063544ffc9c1461075c57806354fd4d50146107a65780635c7107d8146107d357600080fd5b8063476f4d8a116102d2578063476f4d8a146106d15780634d24a67f146106e457806350a5e524146106f957806350c4b6161461071c57600080fd5b80633932abb1146106615780633f9942ff14610677578063419c533c14610691578063458da87d146106b157600080fd5b80630aa25e44116103865780632c39805f116103555780632c39805f146105bd578063325cc6d9146105df57806332763c22146105ff578063347cf6651461062f578063366ecf5b1461064b57600080fd5b80630aa25e44146105445780631242b7371461056457806320b3e84514610586578063262e59e9146105a857600080fd5b80630414126a116103c25780630414126a1461049b57806305846cae146104b157806306fdde03146104d1578063070dc5d9146104f357600080fd5b80624114a8146103f3578063013cf08b1461041c57806302a251a31461044d57806302d05d3f14610463575b600080fd5b3480156103ff57600080fd5b5061040960085481565b6040519081526020015b60405180910390f35b34801561042857600080fd5b5061043c610437366004612f69565b610cba565b604051610413959493929190613021565b34801561045957600080fd5b50610409600a5481565b34801561046f57600080fd5b50600754610483906001600160a01b031681565b6040516001600160a01b039091168152602001610413565b3480156104a757600080fd5b5061040960015481565b3480156104bd57600080fd5b506104096104cc366004612f69565b610e02565b3480156104dd57600080fd5b506104e6610e23565b6040516104139190613073565b3480156104ff57600080fd5b5061053761050e366004612f69565b601d60209081526000918252604091829020825180840190935280548352600101549082015281565b6040516104139190613086565b34801561055057600080fd5b5061048361055f366004612f69565b610eb1565b34801561057057600080fd5b50610579610edb565b60405161041391906130d8565b34801561059257600080fd5b506105a66105a1366004613144565b610f33565b005b3480156105b457600080fd5b50610409610fa2565b3480156105c957600080fd5b506105d2610fbe565b6040516104139190613198565b3480156105eb57600080fd5b506104096105fa366004612f69565b61101f565b34801561060b57600080fd5b5061061f61061a3660046131fa565b61102f565b6040519015158152602001610413565b34801561063b57600080fd5b50610409678ac7230489e8000081565b34801561065757600080fd5b5061040960005481565b34801561066d57600080fd5b5061040960095481565b34801561068357600080fd5b5060135461061f9060ff1681565b34801561069d57600080fd5b506104096106ac36600461327b565b61112e565b3480156106bd57600080fd5b506104096106cc366004613587565b611184565b6104096106df3660046135d3565b6111b5565b3480156106f057600080fd5b50610409611252565b34801561070557600080fd5b5061070e611260565b604051610413929190613607565b34801561072857600080fd5b50610483610737366004612f69565b611366565b34801561074857600080fd5b506105a6610757366004613670565b611376565b34801561076857600080fd5b50610791610777366004612f69565b6000908152601d6020526040902080546001909101549091565b60408051928352602083019190915201610413565b3480156107b257600080fd5b50604080518082019091526004815263342e313160e01b60208201526104e6565b3480156107df57600080fd5b506104096107ee366004612f69565b6113dc565b3480156107ff57600080fd5b50610409600d5481565b34801561081557600080fd5b506104096108243660046136cb565b6114e3565b34801561083557600080fd5b50610791610844366004613700565b611563565b34801561085557600080fd5b50610409600e5481565b34801561086b57600080fd5b50610579611598565b34801561088057600080fd5b5061040961088f366004613730565b6115ee565b3480156108a057600080fd5b506104096108af366004613752565b60156020526000908152604090205481565b3480156108cd57600080fd5b50601f54610483906001600160a01b031681565b3480156108ed57600080fd5b506104e661161f565b34801561090257600080fd5b50610409601b5481565b34801561091857600080fd5b50610409600b5481565b34801561092e57600080fd5b5061061f61093d366004612f69565b61162c565b34801561094e57600080fd5b5061061f61095d366004613752565b60196020526000908152604090205460ff1681565b34801561097e57600080fd5b506105d26116d2565b34801561099357600080fd5b506104096109a2366004612f69565b611732565b3480156109b357600080fd5b506104096109c2366004612f69565b6000908152601e602052604090205490565b3480156109e057600080fd5b506104096109ef366004613752565b601c6020526000908152604090205481565b348015610a0d57600080fd5b50610409610a1c366004613752565b6001600160a01b03166000908152601c602052604090205490565b348015610a4357600080fd5b506105d2610a52366004612f69565b611742565b348015610a6357600080fd5b50610409610a72366004612f69565b6117b4565b348015610a8357600080fd5b5061040960035481565b610409610a9b36600461376f565b611814565b348015610aac57600080fd5b50610ab561187c565b60405161041391906137e0565b348015610ace57600080fd5b50610ae2610add366004612f69565b6118cd565b60405161041391906137fa565b348015610afb57600080fd5b50610579610b0a366004612f69565b611a47565b348015610b1b57600080fd5b5061061f610b2a366004613752565b601a6020526000908152604090205460ff1681565b348015610b4b57600080fd5b5061070e611aa9565b348015610b6057600080fd5b5061040960045481565b348015610b7657600080fd5b50610409610b85366004613752565b60186020526000908152604090205481565b348015610ba357600080fd5b50610409611c76565b348015610bb857600080fd5b506105a6611c88565b348015610bcd57600080fd5b50610409600f5481565b348015610be357600080fd5b5061048373dc652c746a8f85e18ce632d97c6118e8a52fa73881565b348015610c0b57600080fd5b50610579611d7e565b348015610c2057600080fd5b506105a6610c2f366004613861565b611dd4565b348015610c4057600080fd5b506105a6610c4f366004613752565b611f3b565b348015610c6057600080fd5b5061061f610c6f366004612f69565b60126020526000908152604090205460ff1681565b348015610c9057600080fd5b506105a6610c9f366004613587565b611fc0565b348015610cb057600080fd5b50610409600c5481565b601460205260009081526040902080546001820180546001600160a01b03831693600160a01b90930460ff16929190610cf2906138a2565b80601f0160208091040260200160405190810160405280929190818152602001828054610d1e906138a2565b8015610d6b5780601f10610d4057610100808354040283529160200191610d6b565b820191906000526020600020905b815481529060010190602001808311610d4e57829003601f168201915b5050604080516020808201835260028801546001600160a01b031682528251600389018054606093810283018401865294820185815298999398939750909550935084928491840182828015610dea57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610dcc575b50505050508152602001600182015481525050905085565b60118181548110610e1257600080fd5b600091825260209091200154905081565b60058054610e30906138a2565b80601f0160208091040260200160405190810160405280929190818152602001828054610e5c906138a2565b8015610ea95780601f10610e7e57610100808354040283529160200191610ea9565b820191906000526020600020905b815481529060010190602001808311610e8c57829003601f168201915b505050505081565b60168181548110610ec157600080fd5b6000918252602090912001546001600160a01b0316905081565b60606011805480602002602001604051908101604052809291908181526020018280548015610f2957602002820191906000526020600020905b815481526020019060010190808311610f15575b5050505050905090565b6001600160a01b0383166000908152601a602052604090205460ff16610f9d57600354600003610f6257505050565b610f7883678ac7230489e800008484600061102f565b506001600160a01b0383166000908152601a60205260409020805460ff191660011790555b505050565b6000600a54610faf611c76565b610fb991906138ec565b905090565b60606017805480602002602001604051908101604052809291908181526020018280548015610f2957602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610ff8575050505050905090565b60028181548110610e1257600080fd5b6040516bffffffffffffffffffffffff19606087901b1660208201526034810185905260009081906054016040516020818303038152906040528051906020012090506000836110bf576110ba86868080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050600354915085905061210f565b611100565b61110086868080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050600454915085905061210f565b9050806111205760405163452c2df160e11b815260040160405180910390fd5b506001979650505050505050565b600086815260126020526040812054339060ff1615611160576040516358f1119560e01b815260040160405180910390fd5b61116c81878686611376565b61117888828988612125565b98975050505050505050565b60008160405160200161119791906137fa565b60408051601f19818403018152919052805160209091012092915050565b6000600e5434146111eb57600e546040516380a7af9f60e01b815234600482015260248101919091526044015b60405180910390fd5b6003541561122357336000908152601a602052604090205460ff1661122357604051631f22097560e01b815260040160405180910390fd5b61122f610c9f836138ff565b600061124261123d846138ff565b61226c565b905061124c6124e7565b92915050565b61125d6001806138ec565b81565b606080600061126d611d7e565b9050600081516001600160401b0381111561128a5761128a6132eb565b6040519080825280602002602001820160405280156112cf57816020015b60408051808201909152600080825260208201528152602001906001900390816112a85790505b50905060005b825181101561135c57601d60008483815181106112f4576112f461390b565b602002602001015181526020019081526020016000206000016040518060400160405290816000820154815260200160018201548152505082828151811061133e5761133e61390b565b6020026020010181905250808061135490613921565b9150506112d5565b5090939092509050565b60178181548110610ec157600080fd5b6001600160a01b03841660009081526019602052604090205460ff166113d6576113a484848484600161102f565b506001600160a01b038416600090815260186020908152604080832086905560199091529020805460ff191660011790555b50505050565b6000816000036113ff57604051630ec90a1760e31b815260040160405180910390fd5b6002805460408051602080840282018101909252828152919260009291849083018282801561144d57602002820191906000526020600020905b815481526020019060010190808311611439575b5050505050905060006001905060005b838110156114c95761149483828151811061147a5761147a61390b565b60200260200101516000908152601e602052604090205490565b156114b7578582036114a95795945050505050565b816114b381613921565b9250505b806114c181613921565b91505061145d565b50604051632cc2ab7360e11b815260040160405180910390fd5b600083815260126020526040812054339060ff1615611515576040516358f1119560e01b815260040160405180910390fd5b6001600160a01b03811660009081526019602052604090205460ff1661154e5760405163126ec6d160e31b815260040160405180910390fd5b61155a85828686612125565b95945050505050565b6000828152601d602090815260408083206001600160a01b0385168452600301909152902080546001909101545b9250929050565b60606002805480602002602001604051908101604052809291908181526020018280548015610f295760200282019190600052602060002090815481526020019060010190808311610f15575050505050905090565b601e602052816000526040600020818154811061160a57600080fd5b90600052602060002001600091509150505481565b60068054610e30906138a2565b60025460009061163e9060019061393a565b82111561165e576040516365d6f35160e11b815260040160405180910390fd5b60005b61166c8360016138ec565b8110156116c95760016116a86002838154811061168b5761168b61390b565b90600052602060002001546000908152601e602052604090205490565b11156116b75750600192915050565b806116c181613921565b915050611661565b50600092915050565b60606016805480602002602001604051908101604052809291908181526020018280548015610f29576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610ff8575050505050905090565b60108181548110610e1257600080fd5b6000818152601d602090815260409182902060028101805484518185028101850190955280855260609492938301828280156117a757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611789575b5050505050915050919050565b6000818152601e60205260408120546001146117e357604051633832a15560e21b815260040160405180910390fd5b6000828152601e6020526040812080549091906118025761180261390b565b90600052602060002001549050919050565b6000600e54341461184557600e546040516380a7af9f60e01b815234600482015260248101919091526044016111e2565b611850338484610f33565b61185c610c9f856138ff565b600061186a61123d866138ff565b90506118746124e7565b949350505050565b60135460009060ff16156118905750600290565b426008541061189f5750600090565b426118a8611c76565b106118b35750600390565b426118bc610fa2565b106118c75750600190565b50600490565b6118d5612e7e565b600082815260146020908152604091829020825160a08101845281546001600160a01b0381168252600160a01b900460ff161515928101929092526001810180549293919291840191611927906138a2565b80601f0160208091040260200160405190810160405280929190818152602001828054611953906138a2565b80156119a05780601f10611975576101008083540402835291602001916119a0565b820191906000526020600020905b81548152906001019060200180831161198357829003601f168201915b5050509183525050604080516020818101835260028501546001600160a01b03168252808401919091528151600385018054606093810283018401855282850181815294909501949193909284928491840182828015611a2957602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611a0b575b50505050508152602001600182015481525050815250509050919050565b6000818152601e6020908152604091829020805483518184028101840190945280845260609392830182828015611a9d57602002820191906000526020600020905b815481526020019060010190808311611a89575b50505050509050919050565b6060806000611ab6611d7e565b9050600081516001600160401b03811115611ad357611ad36132eb565b604051908082528060200260200182016040528015611afc578160200160208202803683370190505b509050600082516001600160401b03811115611b1a57611b1a6132eb565b604051908082528060200260200182016040528015611b5f57816020015b6040805180820190915260008082526020820152815260200190600190039081611b385790505b5090506000805b8451811015611c6a5760126000868381518110611b8557611b8561390b565b60209081029190910181015182528101919091526040016000205460ff16611c5857848181518110611bb957611bb961390b565b6020026020010151848381518110611bd357611bd361390b565b602002602001018181525050601d6000868381518110611bf557611bf561390b565b6020026020010151815260200190815260200160002060000160405180604001604052908160008201548152602001600182015481525050838381518110611c3f57611c3f61390b565b6020908102919091010152611c556001836138ec565b91505b80611c6281613921565b915050611b66565b50919590945092505050565b6000600954600854610fb991906138ec565b6007546001600160a01b03163314801590611cb757503373dc652c746a8f85e18ce632d97c6118e8a52fa73814155b15611cd5576040516301dbf46f60e71b815260040160405180910390fd5b6000611cdf61187c565b90506002816004811115611cf557611cf56137ca565b03611d1357604051633c30acbf60e01b815260040160405180910390fd5b6004816004811115611d2757611d276137ca565b03611d45576040516307b9d0f760e01b815260040160405180910390fd5b6013805460ff191660011790556040517f4cd963a081760a54f571abc0f1db4dde31b4a07d8d6da3e844b8c6f47eeaaa4290600090a150565b60606010805480602002602001604051908101604052809291908181526020018280548015610f295760200282019190600052602060002090815481526020019060010190808311610f15575050505050905090565b6007546001600160a01b03163314611dff5760405163b8d4540960e01b815260040160405180910390fd5b6004611e0961187c565b6004811115611e1a57611e1a6137ca565b03611e38576040516331da1c8b60e11b815260040160405180910390fd5b60005b81811015611edd576000838383818110611e5757611e5761390b565b60209081029290920135600081815260129093526040909220549192505060ff16611eca576000818152601260205260408120805460ff191660019081179091556011805491820181559091527f31ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c68018190555b5080611ed581613921565b915050611e3b565b50600d54158015611ef057506000546001145b15611eff57611eff82826125fc565b7f75a75cf5c561892f4cc5b26c1b8e933849b42238c96dd073d080d1ae96c514166010604051611f2f919061394d565b60405180910390a15050565b6007546001600160a01b03163314611f6657604051630f4cb1bd60e11b815260040160405180910390fd5b601f80546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f753a2cf8d360cff631674504210913e48247f8e56b3e6d2006c2103d4095999f9101611f2f565b80516001600160a01b03163314611ffe57805160405163fbbf4d7f60e01b81526001600160a01b0390911660048201523360248201526044016111e2565b60005b61200c6001806138ec565b8110156120e5576000816001811115612027576120276137ca565b9050600081600181111561203d5761203d6137ca565b0361204857506120d3565b600181600181111561205c5761205c6137ca565b036120b657608083015151516000036120885760405163c3b2798b60e01b815260040160405180910390fd5b8260800151602001516000036120b1576040516392fb9a3560e01b815260040160405180910390fd5b6120d1565b8060405163d2277d4960e01b81526004016111e29190613988565b505b806120dd81613921565b915050612001565b5080604001515160000361210c5760405163e182473360e01b815260040160405180910390fd5b50565b60008261211c8584612659565b14949350505050565b6000600161213161187c565b6004811115612142576121426137ca565b146121695761214f61187c565b60405163049cab4960e51b81526004016111e291906137e0565b8160000361218a5760405163502e1c2960e01b815260040160405180910390fd5b6121bc85858585601860008a6001600160a01b03166001600160a01b03168152602001908152602001600020546126a6565b601780546001810182556000919091527fc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c150180546001600160a01b031916331790556040805186815260ff851660208201529081018390526001600160a01b038516907f2c9deb38f462962eadbd85a9d3a4120503ee091f1582eaaa10aa8c6797651d299060600160405180910390a25050506001600160a01b0316600090815260186020526040902054919050565b6000600361227861187c565b6004811115612289576122896137ca565b146122b05761229661187c565b604051632889531360e01b81526004016111e291906137e0565b600b5433600090815260156020526040902054036122e757600b54604051632bd6d93960e21b81526004016111e291815260200190565b600c546011546010546122fa919061393a565b0361231e57600c546040516302217f5360e51b81526004016111e291815260200190565b600061232983611184565b600081815260146020526040902054909150600160a01b900460ff16156123665760405163baffc42360e01b8152600481018290526024016111e2565b6010805460018181019092557f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae6720182905560008281526014602090815260409182902086518154928801511515600160a01b026001600160a81b03199093166001600160a01b03909116179190911781559085015185928201906123ea90826139ea565b506060820151516002820180546001600160a01b0319166001600160a01b03909216919091179055608082015180518051600384019161242f91839160200190612eef565b506020918201516001918201553360009081526015909252604082208054919450925061245d9084906138ec565b9091555050601680546001810182556000919091527fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b51242890180546001600160a01b031916339081179091556040805183815260208101929092527fcd423cc1203c0af96b9b3d68d73b3064a69de2d14450bb7181c5e5df2132b358910160405180910390a192915050565b600e54156125fa5760006064600f546064612502919061393a565b61250c9034613aa9565b6125169190613ac0565b9050801561258a5761253c73dc652c746a8f85e18ce632d97c6118e8a52fa7388261290d565b6040805173dc652c746a8f85e18ce632d97c6118e8a52fa7388152602081018390527fdf20fd1e76bc69d672e4814fafb2c449bba3a5369d8359adf9e05e6fde87b056910160405180910390a15b6000612596823461393a565b905080156125f7576007546125b4906001600160a01b03168261290d565b600754604080516001600160a01b039092168252602082018390527fdf20fd1e76bc69d672e4814fafb2c449bba3a5369d8359adf9e05e6fde87b0569101611f2f565b50505b565b60005b81811015610f9d57600083838381811061261b5761261b61390b565b602090810292909201356000818152601d90935260409092205491925061264490508282612a26565b5050808061265190613921565b9150506125ff565b600081815b845181101561269e5761268a8286838151811061267d5761267d61390b565b6020026020010151612b57565b91508061269681613921565b91505061265e565b509392505050565b6000858152601d602090815260408083206001600160a01b0388168452601c909252909120546126d6908361393a565b8311156126f65760405163660fa07360e11b815260040160405180910390fd5b6001600160a01b038516600090815260038201602052604081205415801561273957506001600160a01b0386166000908152600383016020526040902060010154155b905060ff8516612791578154849083906000906127579084906138ec565b90915550506001600160a01b0386166000908152600383016020526040812080548692906127869084906138ec565b909155506128229050565b60001960ff86160161280957600d546001146127c057604051639755958f60e01b815260040160405180910390fd5b838260000160010160008282546127d791906138ec565b90915550506001600160a01b0386166000908152600383016020526040812060010180548692906127869084906138ec565b604051638eed55d160e01b815260040160405180910390fd5b801561285957600282018054600181018255600091825260209091200180546001600160a01b0319166001600160a01b0388161790555b6001600160a01b0386166000908152601c6020526040812080548692906128819084906138ec565b9250508190555083601b600082825461289a91906138ec565b9091555050600d541580156128b157506000546001145b1561290457815460006128c4868361393a565b905080156128d6576128d68982612a26565b6000828152601e60209081526040822080546001810182559083529120018990556129018183612b89565b50505b50505050505050565b8047101561295d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016111e2565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146129aa576040519150601f19603f3d011682016040523d82523d6000602084013e6129af565b606091505b5050905080610f9d5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016111e2565b6000818152601e6020908152604080832080548251818502810185019093528083529192909190830182828015612a7c57602002820191906000526020600020905b815481526020019060010190808311612a68575b5050505050905060005b81518110156113d65783828281518110612aa257612aa261390b565b602002602001015103612b45578160018351612abe919061393a565b81518110612ace57612ace61390b565b6020026020010151601e60008581526020019081526020016000208281548110612afa57612afa61390b565b9060005260206000200181905550601e6000848152602001908152602001600020805480612b2a57612b2a613ae2565b600190038181906000526020600020016000905590556113d6565b80612b4f81613921565b915050612a86565b6000818310612b73576000828152602084905260409020612b82565b60008381526020839052604090205b9392505050565b60028054604080516020808402820181019092528281529192600092918490830182828015612bd757602002820191906000526020600020905b815481526020019060010190808311612bc3575b5050505050905081600003612c1e575050600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace015550565b80612c2a60018461393a565b81518110612c3a57612c3a61390b565b6020026020010151831015612c90576001548203612c585750505050565b5050600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace015550565b6113d6848484846000805b83811015612d0557828181518110612cb557612cb561390b565b60200260200101518503612cca5750506113d6565b828181518110612cdc57612cdc61390b565b6020026020010151851115612cf357809150612d05565b80612cfd81613921565b915050612c9b565b5060008086118015612d2357506000868152601e6020526040902054155b90506000818015612d4c575086848481518110612d4257612d4261390b565b6020026020010151145b612e5557612d5b60018661393a565b8314612e03576000612d6e8460016138ec565b90505b85811015612e015784612d8560018361393a565b81518110612d9557612d9561390b565b602002602001015160028281548110612db057612db061390b565b600091825260209091200155828015612de1575087858281518110612dd757612dd761390b565b6020026020010151145b15612def5760019150612e01565b80612df981613921565b915050612d71565b505b80158015612e12575060015485105b15612e5557600284612e2560018861393a565b81518110612e3557612e3561390b565b602090810291909101810151825460018101845560009384529190922001555b8560028481548110612e6957612e6961390b565b60009182526020909120015550505050505050565b6040518060a0016040528060006001600160a01b0316815260200160001515815260200160608152602001612ec8604051806020016040528060006001600160a01b031681525090565b8152602001612eea604051806040016040528060608152602001600081525090565b905290565b828054828255906000526020600020908101928215612f44579160200282015b82811115612f4457825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612f0f565b50612f50929150612f54565b5090565b5b80821115612f505760008155600101612f55565b600060208284031215612f7b57600080fd5b5035919050565b6000815180845260005b81811015612fa857602081850181015186830182015201612f8c565b506000602082860101526020601f19601f83011685010191505092915050565b805160408084528151908401819052600091602091908201906060860190845b8181101561300d5783516001600160a01b031683529284019291840191600101612fe8565b505093820151949091019390935250919050565b600060018060a01b038088168352861515602084015260a0604084015261304b60a0840187612f82565b81865116606085015283810360808501526130668186612fc8565b9998505050505050505050565b602081526000612b826020830184612f82565b81518152602080830151908201526040810161124c565b600081518084526020808501945080840160005b838110156130cd578151875295820195908201906001016130b1565b509495945050505050565b602081526000612b82602083018461309d565b6001600160a01b038116811461210c57600080fd5b60008083601f84011261311257600080fd5b5081356001600160401b0381111561312957600080fd5b6020830191508360208260051b850101111561159157600080fd5b60008060006040848603121561315957600080fd5b8335613164816130eb565b925060208401356001600160401b0381111561317f57600080fd5b61318b86828701613100565b9497909650939450505050565b6020808252825182820181905260009190848201906040850190845b818110156131d95783516001600160a01b0316835292840192918401916001016131b4565b50909695505050505050565b803580151581146131f557600080fd5b919050565b60008060008060006080868803121561321257600080fd5b853561321d816130eb565b94506020860135935060408601356001600160401b0381111561323f57600080fd5b61324b88828901613100565b909450925061325e9050606087016131e5565b90509295509295909350565b803560ff811681146131f557600080fd5b60008060008060008060a0878903121561329457600080fd5b863595506132a46020880161326a565b9450604087013593506060870135925060808701356001600160401b038111156132cd57600080fd5b6132d989828a01613100565b979a9699509497509295939492505050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715613323576133236132eb565b60405290565b60405160a081016001600160401b0381118282101715613323576133236132eb565b604051601f8201601f191681016001600160401b0381118282101715613373576133736132eb565b604052919050565b60006020828403121561338d57600080fd5b604051602081018181106001600160401b03821117156133af576133af6132eb565b60405290508082356133c0816130eb565b905292915050565b6000604082840312156133da57600080fd5b6133e2613301565b905081356001600160401b03808211156133fb57600080fd5b818401915084601f83011261340f57600080fd5b8135602082821115613423576134236132eb565b8160051b925061343481840161334b565b828152928401810192818101908885111561344e57600080fd5b948201945b848610156134785785359350613468846130eb565b8382529482019490820190613453565b808752505080860135818601525050505092915050565b600060a082840312156134a157600080fd5b6134a9613329565b905081356134b6816130eb565b815260206134c58382016131e5565b8183015260408301356001600160401b03808211156134e357600080fd5b818501915085601f8301126134f757600080fd5b813581811115613509576135096132eb565b61351b601f8201601f1916850161334b565b818152878583860101111561352f57600080fd5b818585018683013760008583830101528060408701525050613554866060870161337b565b6060850152608085013592508083111561356d57600080fd5b505061357b848285016133c8565b60808301525092915050565b60006020828403121561359957600080fd5b81356001600160401b038111156135af57600080fd5b6118748482850161348f565b600060a082840312156135cd57600080fd5b50919050565b6000602082840312156135e557600080fd5b81356001600160401b038111156135fb57600080fd5b611874848285016135bb565b6000604080835261361a8184018661309d565b83810360208581019190915285518083528682019282019060005b818110156136625761365283865180518252602090810151910152565b9383019391850191600101613635565b509098975050505050505050565b6000806000806060858703121561368657600080fd5b8435613691816130eb565b93506020850135925060408501356001600160401b038111156136b357600080fd5b6136bf87828801613100565b95989497509550505050565b6000806000606084860312156136e057600080fd5b833592506136f06020850161326a565b9150604084013590509250925092565b6000806040838503121561371357600080fd5b823591506020830135613725816130eb565b809150509250929050565b6000806040838503121561374357600080fd5b50508035926020909101359150565b60006020828403121561376457600080fd5b8135612b82816130eb565b60008060006040848603121561378457600080fd5b83356001600160401b038082111561379b57600080fd5b6137a7878388016135bb565b945060208601359150808211156137bd57600080fd5b5061318b86828701613100565b634e487b7160e01b600052602160045260246000fd5b60208101600583106137f4576137f46137ca565b91905290565b60208152600060018060a01b03808451166020840152602084015115156040840152604084015160a0606085015261383560c0850182612f82565b90508160608601515116608085015260808501519150601f198482030160a085015261155a8183612fc8565b6000806020838503121561387457600080fd5b82356001600160401b0381111561388a57600080fd5b61389685828601613100565b90969095509350505050565b600181811c908216806138b657607f821691505b6020821081036135cd57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561124c5761124c6138d6565b600061124c368361348f565b634e487b7160e01b600052603260045260246000fd5b600060018201613933576139336138d6565b5060010190565b8181038181111561124c5761124c6138d6565b6020808252825482820181905260008481528281209092916040850190845b818110156131d95783548352600193840193928501920161396c565b60208101600283106137f4576137f46137ca565b601f821115610f9d57600081815260208120601f850160051c810160208610156139c35750805b601f850160051c820191505b818110156139e2578281556001016139cf565b505050505050565b81516001600160401b03811115613a0357613a036132eb565b613a1781613a1184546138a2565b8461399c565b602080601f831160018114613a4c5760008415613a345750858301515b600019600386901b1c1916600185901b1785556139e2565b600085815260208120601f198616915b82811015613a7b57888601518255948401946001909101908401613a5c565b5085821015613a995787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808202811582820484141761124c5761124c6138d6565b600082613add57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603160045260246000fdfea26469706673582212209528c94bdde2791991cdbded0f0c7b56dd07df310a27f1c9fd0be8b4a7b5adde64736f6c63430008130033",
    "sourceMapi;:::-;;:::i;:::-;;;;;;;;;;;:::i;1812:27::-;;;;;;;;;;;;;;;;1621:22;;;;;;;;;;-1:-1:-1;1621:22:29;;;;-1:-1:-1;;;;;1621:22:29;;;;;;-1:-1:-1;;;;;2444:32:37;;;2426:51;;2414:2;2399:18;1621:22:29;2280:203:37;1799:24:33;;;;;;;;;;;;;;;;2318:35:29;;;;;;;;;;-1:-1:-1;2318:35:29;;;;;:::i;:::-;;:::i;1543:18::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;740:60:30:-;;;;;;;;;;-1:-1:-1;740:60:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2550:32:29:-;;;;;;;;;;-1:-1:-1;2550:32:29;;;;;:::i;:::-;;:::i;6254:117::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;7690:469::-;;;;;;;;;;-1:-1:-1;7690:469:29;;;;;:::i;:::-;;:::i;:::-;;6714:107;;;;;;;;;;;;;:::i;6065:125::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1967:28:33:-;;;;;;;;;;-1:-1:-1;1967:28:33;;;;;:::i;:::-;;:::i;1416:539:32:-;;;;;;;;;;-1:-1:-1;1416:539:32;;;;;:::i;:::-;;:::i;:::-;;;6629:14:37;;6622:22;6604:41;;6592:2;6577:18;1416:539:32;6464:187:37;1373:73:29;;;;;;;;;;;;1426:20;1373:73;;1728:29:33;;;;;;;;;;;;;;;;1732:26:29;;;;;;;;;;;;;;;;2414:20;;;;;;;;;;-1:-1:-1;2414:20:29;;;;;;;;14581:397;;;;;;;;;;-1:-1:-1;14581:397:29;;;;;:::i;:::-;;:::i;5031:146::-;;;;;;;;;;-1:-1:-1;5031:146:29;;;;;:::i;:::-;;:::i;10615:625::-;;;;;;:::i;:::-;;:::i;1293:74::-;;;;;;;;;;;;;:::i;2715:580:30:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;2588:39:29:-;;;;;;;;;;-1:-1:-1;2588:39:29;;;;;:::i;:::-;;:::i;14144:370::-;;;;;;;;;;-1:-1:-1;14144:370:29;;;;;:::i;:::-;;:::i;1210:294:30:-;;;;;;;;;;-1:-1:-1;1210:294:30;;;;;:::i;:::-;1274:16;1360:32;;;:20;:32;;;;;1410:40;;1452:44;;;;;1410:40;;1210:294;;;;;13981:25:37;;;14037:2;14022:18;;14015:34;;;;13954:18;1210:294:30;13807:248:37;4940:85:29;;;;;;;;;;-1:-1:-1;5005:13:29;;;;;;;;;;;;-1:-1:-1;;;5005:13:29;;;;4940:85;;5794:1027:30;;;;;;;;;;-1:-1:-1;5794:1027:30;;;;;:::i;:::-;;:::i;2126:32:29:-;;;;;;;;;;;;;;;;15080:378;;;;;;;;;;-1:-1:-1;15080:378:29;;;;;:::i;:::-;;:::i;1607:408:30:-;;;;;;;;;;-1:-1:-1;1607:408:30;;;;;:::i;:::-;;:::i;2209:28:29:-;;;;;;;;;;;;;;;;2480:117:33;;;;;;;;;;;;;:::i;807:58:30:-;;;;;;;;;;-1:-1:-1;807:58:30;;;;;:::i;:::-;;:::i;2495:49:29:-;;;;;;;;;;-1:-1:-1;2495:49:29;;;;;:::i;:::-;;;;;;;;;;;;;;366:42:31;;;;;;;;;;-1:-1:-1;366:42:31;;;;-1:-1:-1;;;;;366:42:31;;;1595:20:29;;;;;;;;;;;;;:::i;600:29:30:-;;;;;;;;;;;;;;;;1887:44:29;;;;;;;;;;;;;;;;6933:523:30;;;;;;;;;;-1:-1:-1;6933:523:30;;;;;:::i;:::-;;:::i;2692:57:29:-;;;;;;;;;;-1:-1:-1;2692:57:29;;;;;:::i;:::-;;;;;;;;;;;;;;;;5882:111;;;;;;;;;;;;;:::i;2284:28::-;;;;;;;;;;-1:-1:-1;2284:28:29;;;;;:::i;:::-;;:::i;4839:170:30:-;;;;;;;;;;-1:-1:-1;4839:170:30;;;;;:::i;:::-;4932:13;4964:31;;;:21;:31;;;;;:38;;4839:170;673:61;;;;;;;;;;-1:-1:-1;673:61:30;;;;;:::i;:::-;;;;;;;;;;;;;;2451:171;;;;;;;;;;-1:-1:-1;2451:171:30;;;;;:::i;:::-;-1:-1:-1;;;;;2576:39:30;2531:26;2576:39;;;:26;:39;;;;;;;2451:171;2116:224;;;;;;;;;;-1:-1:-1;2116:224:30;;;;;:::i;:::-;;:::i;5325:268::-;;;;;;;;;;-1:-1:-1;5325:268:30;;;;;:::i;:::-;;:::i;377:35:32:-;;;;;;;;;;;;;;;;10081:419:29;;;;;;:::i;:::-;;:::i;5183:477::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;6879:128::-;;;;;;;;;;-1:-1:-1;6879:128:29;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4523:212:30:-;;;;;;;;;;-1:-1:-1;4523:212:30;;;;;:::i;:::-;;:::i;2755:56:29:-;;;;;;;;;;-1:-1:-1;2755:56:29;;;;;:::i;:::-;;;;;;;;;;;;;;;;3420:991:30;;;;;;;;;;;;;:::i;418:31:32:-;;;;;;;;;;;;;;;;2634:52:29;;;;;;;;;;-1:-1:-1;2634:52:29;;;;;:::i;:::-;;;;;;;;;;;;;;6532:101;;;;;;;;;;;;;:::i;13617:409::-;;;;;;;;;;;;;:::i;2243:34::-;;;;;;;;;;;;;;;;1452:84;;;;;;;;;;;;1494:42;1452:84;;5716:103;;;;;;;;;;;;;:::i;12243:1262::-;;;;;;;;;;-1:-1:-1;12243:1262:29;;;;;:::i;:::-;;:::i;576:379:31:-;;;;;;;;;;-1:-1:-1;576:379:31;;;;;:::i;:::-;;:::i;2359:49:29:-;;;;;;;;;;-1:-1:-1;2359:49:29;;;;;:::i;:::-;;;;;;;;;;;;;;;;8253:889;;;;;;;;;;-1:-1:-1;8253:889:29;;;;;:::i;:::-;;:::i;2037:31::-;;;;;;;;;;;;;;;;2440:49;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2440:49:29;;;-1:-1:-1;;;2440:49:29;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2440:49:29;;;;;;;;;;;;;-1:-1:-1;;;;;2440:49:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2440:49:29;;-1:-1:-1;2440:49:29;-1:-1:-1;2440:49:29;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2440:49:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2318:35::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2318:35:29;:::o;1543:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2550:32::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2550:32:29;;-1:-1:-1;2550:32:29;:::o;6254:117::-;6311:16;6346:18;6339:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6254:117;:::o;7690:469::-;-1:-1:-1;;;;;7779:33:29;;;;;;:24;:33;;;;;;;;7774:379;;7832:20;;7856:1;7832:25;7828:141;;7690:469;;;:::o;7828:141::-;7982:61;7993:7;1426:20;8030:5;;8037;7982:10;:61::i;:::-;-1:-1:-1;;;;;;8102:33:29;;;;;;:24;:33;;;;;:40;;-1:-1:-1;;8102:40:29;8138:4;8102:40;;;7774:379;7690:469;;;:::o;6714:107::-;6762:7;6802:12;;6788:11;:9;:11::i;:::-;:26;;;;:::i;:::-;6781:33;;6714:107;:::o;6065:125::-;6126:16;6161:22;6154:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6154:29:29;;;;;;;;;;;;;;;;;;;;;;6065:125;:::o;1967:28:33:-;;;;;;;;;;;;1416:539:32;1671:40;;-1:-1:-1;;19084:2:37;19080:15;;;19076:53;1671:40:32;;;19064:66:37;19146:12;;;19139:28;;;1560:13:32;;;;19183:12:37;;1671:40:32;;;;;;;;;;;;1661:51;;;;;;1646:66;;1722:16;1741:6;:138;;1826:53;1845:5;;1826:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1852:20:32;;;-1:-1:-1;1874:4:32;;-1:-1:-1;1826:18:32;:53::i;:::-;1741:138;;;1762:49;1781:5;;1762:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1788:16:32;;;-1:-1:-1;1806:4:32;;-1:-1:-1;1762:18:32;:49::i;:::-;1722:157;;1894:11;1889:38;;1914:13;;-1:-1:-1;;;1914:13:32;;;;;;;;;;;1889:38;-1:-1:-1;1944:4:32;;1416:539;-1:-1:-1;;;;;;;1416:539:32:o;14581:397:29:-;14730:7;14793:29;;;:17;:29;;;;;;14769:10;;14793:29;;14789:71;;;14831:29;;-1:-1:-1;;;14831:29:29;;;;;;;;;;;14789:71;14870:37;14882:5;14889:10;14901:5;;14870:11;:37::i;:::-;14924:47;14934:10;14946:5;14953:7;14962:8;14924:9;:47::i;:::-;14917:54;14581:397;-1:-1:-1;;;;;;;;14581:397:29:o;5031:146::-;5104:7;5159:8;5148:20;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5148:20:29;;;;;;;;;5138:31;;5148:20;5138:31;;;;;5031:146;-1:-1:-1;;5031:146:29:o;10615:625::-;10700:7;10736:13;;10723:9;:26;10719:91;;10796:13;;10758:52;;-1:-1:-1;;;10758:52:29;;10785:9;10758:52;;;13981:25:37;14022:18;;;14015:34;;;;13954:18;;10758:52:29;;;;;;;;10719:91;10825:20;;:25;10821:254;;11016:10;10991:36;;;;:24;:36;;;;;;;;10986:78;;11036:28;;-1:-1:-1;;;11036:28:29;;;;;;;;;;;10986:78;11084:30;;11105:8;11084:30;:::i;:::-;11124:18;11145:23;;11159:8;11145:23;:::i;:::-;:13;:23::i;:::-;11124:44;;11179:26;:24;:26::i;:::-;11223:10;10615:625;-1:-1:-1;;10615:625:29:o;1293:74::-;1335:32;1343:19;;1335:32;:::i;:::-;1293:74;:::o;2715:580:30:-;2793:34;2829:49;2894:34;2931:19;:17;:19::i;:::-;2894:56;;2960:43;3023:17;:24;-1:-1:-1;;;;;3006:42:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;3006:42:30;;;;;;;;;;;;;;;;2960:88;;3063:9;3058:170;3082:17;:24;3078:1;:28;3058:170;;;3156:20;:42;3177:17;3195:1;3177:20;;;;;;;;:::i;:::-;;;;;;;3156:42;;;;;;;;;;;:61;;3127:90;;;;;;;;;;;;;;;;;;;;;;;;;:23;3151:1;3127:26;;;;;;;;:::i;:::-;;;;;;:90;;;;3108:3;;;;;:::i;:::-;;;;3058:170;;;-1:-1:-1;3245:17:30;;3264:23;;-1:-1:-1;2715:580:30;-1:-1:-1;2715:580:30:o;2588:39:29:-;;;;;;;;;;;;14144:370;-1:-1:-1;;;;;14250:34:29;;;;;;:25;:34;;;;;;;;14245:263;;14300:44;14311:7;14320:10;14332:5;;14339:4;14300:10;:44::i;:::-;-1:-1:-1;;;;;;14403:26:29;;;;;;:17;:26;;;;;;;;:39;;;14456:25;:34;;;;;:41;;-1:-1:-1;;14456:41:29;14493:4;14456:41;;;14245:263;14144:370;;;;:::o;5794:1027:30:-;5851:17;5884:4;5892:1;5884:9;5880:40;;5902:18;;-1:-1:-1;;;5902:18:30;;;;;;;;;;;5880:40;5959:11;:18;;6031:48;;;;;;;;;;;;;;;;;5959:18;;5931:25;;6031:48;5959:18;;6031:48;;5959:11;:18;6031:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6134:15;6152:1;6134:19;;6168:13;6163:536;6195:17;6187:5;:25;6163:536;;;6393:61;6429:17;6447:5;6429:24;;;;;;;;:::i;:::-;;;;;;;4932:13;4964:31;;;:21;:31;;;;;:38;;4839:170;6393:61;6389:113;6479:8;6389:113;6615:4;6604:7;:15;6600:66;;6646:5;5794:1027;-1:-1:-1;;;;;5794:1027:30:o;6600:66::-;6679:9;;;;:::i;:::-;;;;6163:536;6214:7;;;;:::i;:::-;;;;6163:536;;;;6790:24;;-1:-1:-1;;;6790:24:30;;;;;;;;;;;15080:378:29;15179:7;15238:29;;;:17;:29;;;;;;15214:10;;15238:29;;15234:71;;;15276:29;;-1:-1:-1;;;15276:29:29;;;;;;;;;;;15234:71;-1:-1:-1;;;;;15320:32:29;;;;;;:25;:32;;;;;;;;15315:72;;15361:26;;-1:-1:-1;;;15361:26:29;;;;;;;;;;;15315:72;15404:47;15414:10;15426:5;15433:7;15442:8;15404:9;:47::i;:::-;15397:54;15080:378;-1:-1:-1;;;;;15080:378:29:o;1607:408:30:-;1723:16;1813:32;;;:20;:32;;;;;;;;-1:-1:-1;;;;;1876:43:30;;;;:30;;:43;;;;;:52;;1942:56;;;;;1607:408;;;;;;:::o;2480:117:33:-;2527:33;2579:11;2572:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2480:117;:::o;807:58:30:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1595:20:29:-;;;;;;;:::i;6933:523:30:-;7040:11;:18;6996:22;;7040;;7061:1;;7040:22;:::i;:::-;7034:3;:28;7030:205;;;7198:26;;-1:-1:-1;;;7198:26:30;;;;;;;;;;;7030:205;7250:13;7245:183;7277:7;:3;7283:1;7277:7;:::i;:::-;7269:5;:15;7245:183;;;7371:1;7313:55;7349:11;7361:5;7349:18;;;;;;;;:::i;:::-;;;;;;;;;4932:13;4964:31;;;:21;:31;;;;;:38;;4839:170;7313:55;:59;7309:109;;;-1:-1:-1;7399:4:30;;6933:523;-1:-1:-1;;6933:523:30:o;7309:109::-;7286:7;;;;:::i;:::-;;;;7245:183;;;-1:-1:-1;7444:5:30;;6933:523;-1:-1:-1;;6933:523:30:o;5882:111:29:-;5936:16;5971:15;5964:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5964:22:29;;;;;;;;;;;;;;;;;;;;;;5882:111;:::o;2284:28::-;;;;;;;;;;;;2116:224:30;2221:33;2257:32;;;:20;:32;;;;;;;;;2306:27;;;2299:34;;;;;;;;;;;;;;;;;2193:16;;2257:32;;2299:34;;2306:27;2299:34;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2299:34:30;;;;;;;;;;;;;;;;;;;;;;;;2116:224;;;:::o;5325:268::-;5411:18;5445:31;;;:21;:31;;;;;:38;5487:1;5445:43;5441:94;;5497:38;;-1:-1:-1;;;5497:38:30;;;;;;;;;;;5441:94;5552:31;;;;:21;:31;;;;;:34;;:31;;;:34;;;;:::i;:::-;;;;;;;;;5545:41;;5325:268;;;:::o;10081:419:29:-;10180:7;10216:13;;10203:9;:26;10199:91;;10276:13;;10238:52;;-1:-1:-1;;;10238:52:29;;10265:9;10238:52;;;13981:25:37;14022:18;;;14015:34;;;;13954:18;;10238:52:29;13807:248:37;10199:91:29;10301:33;10316:10;10328:5;;10301:14;:33::i;:::-;10344:30;;10365:8;10344:30;:::i;:::-;10384:18;10405:23;;10419:8;10405:23;:::i;:::-;10384:44;;10439:26;:24;:26::i;:::-;10483:10;10081:419;-1:-1:-1;;;;10081:419:29:o;5183:477::-;5249:8;;5221:12;;5249:8;;5245:67;;;-1:-1:-1;5280:21:29;;5183:477::o;5245:67::-;5342:15;5326:12;;:31;5322:92;;-1:-1:-1;5380:23:29;;5183:477::o;5322:92::-;5443:15;5428:11;:9;:11::i;:::-;:30;5424:87;;-1:-1:-1;5481:19:29;;5183:477::o;5424:87::-;5546:15;5525:17;:15;:17::i;:::-;:36;5521:93;;-1:-1:-1;5584:19:29;;5183:477::o;5521:93::-;-1:-1:-1;5631:22:29;;5183:477::o;6879:128::-;6941:19;;:::i;:::-;6979:21;;;;:9;:21;;;;;;;;;6972:28;;;;;;;;;-1:-1:-1;;;;;6972:28:29;;;;-1:-1:-1;;;6972:28:29;;;;;;;;;;;;;;;;;;;;6979:21;;6972:28;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6972:28:29;;;-1:-1:-1;;6972:28:29;;;;;;;;;;;;;-1:-1:-1;;;;;6972:28:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6972:28:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6879:128;;;:::o;4523:212:30:-;4697:31;;;;:21;:31;;;;;;;;;4690:38;;;;;;;;;;;;;;;;;4628:46;;4690:38;;;4697:31;4690:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4523:212;;;:::o;3420:991::-;3512:34;3548:49;3613:34;3650:19;:17;:19::i;:::-;3613:56;;3679:42;3738:17;:24;-1:-1:-1;;;;;3724:39:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3724:39:30;;3679:84;;3773:43;3836:17;:24;-1:-1:-1;;;;;3819:42:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;3819:42:30;;;;;;;;;;;;;;;;3773:88;;3872:29;3920:9;3915:421;3939:17;:24;3935:1;:28;3915:421;;;3989:17;:39;4007:17;4025:1;4007:20;;;;;;;;:::i;:::-;;;;;;;;;;;;3989:39;;;;;;;;;;-1:-1:-1;3989:39:30;;;;3984:342;;4099:17;4117:1;4099:20;;;;;;;;:::i;:::-;;;;;;;4048:25;4074:21;4048:48;;;;;;;;:::i;:::-;;;;;;:71;;;;;4206:20;:42;4227:17;4245:1;4227:20;;;;;;;;:::i;:::-;;;;;;;4206:42;;;;;;;;;;;:61;;4137:130;;;;;;;;;;;;;;;;;;;;;;;;;:23;4161:21;4137:46;;;;;;;;:::i;:::-;;;;;;;;;;:130;4285:26;4310:1;4285:26;;:::i;:::-;;;3984:342;3965:3;;;;:::i;:::-;;;;3915:421;;;-1:-1:-1;4353:25:30;;4380:23;;-1:-1:-1;3420:991:30;-1:-1:-1;;;3420:991:30:o;6532:101:29:-;6574:7;6615:11;;6600:12;;:26;;;;:::i;13617:409::-;13672:7;;-1:-1:-1;;;;;13672:7:29;13658:10;:21;;;;13657:58;;-1:-1:-1;13685:10:29;1494:42;13685:29;;13657:58;13652:103;;;13725:30;;-1:-1:-1;;;13725:30:29;;;;;;;;;;;13652:103;13766:19;13788:7;:5;:7::i;:::-;13766:29;-1:-1:-1;13820:21:29;13810:6;:31;;;;;;;;:::i;:::-;;13806:69;;13850:25;;-1:-1:-1;;;13850:25:29;;;;;;;;;;;13806:69;13899:22;13889:6;:32;;;;;;;;:::i;:::-;;13885:76;;13930:31;;-1:-1:-1;;;13930:31:29;;;;;;;;;;;13885:76;13971:8;:15;;-1:-1:-1;;13971:15:29;13982:4;13971:15;;;14002:17;;;;13971:8;;14002:17;13642:384;13617:409::o;5716:103::-;5766:16;5801:11;5794:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5716:103;:::o;12243:1262::-;12343:7;;-1:-1:-1;;;;;12343:7:29;12329:10;:21;12325:56;;12359:22;;-1:-1:-1;;;12359:22:29;;;;;;;;;;;12325:56;12406:22;12395:7;:5;:7::i;:::-;:33;;;;;;;;:::i;:::-;;12391:73;;12437:27;;-1:-1:-1;;;12437:27:29;;;;;;;;;;;12391:73;12480:13;12475:620;12499:34;;;12475:620;;;12558:25;12586:19;;12606:5;12586:26;;;;;;;:::i;:::-;;;;;;;;;;12631:36;;;;:17;:36;;;;;;;;12586:26;;-1:-1:-1;;12631:36:29;;12626:459;;12751:36;;;;:17;:36;;;;;:43;;-1:-1:-1;;12751:43:29;12790:4;12751:43;;;;;;13028:18;:42;;;;;;;;;;;;;;;12626:459;-1:-1:-1;12535:7:29;;;;:::i;:::-;;;;12475:620;;;-1:-1:-1;13191:17:29;;:22;:45;;;;;13217:14;;13235:1;13217:19;13191:45;13187:267;;;13389:54;13423:19;;13389:33;:54::i;:::-;13469:29;13486:11;13469:29;;;;;;:::i;:::-;;;;;;;;12243:1262;;:::o;576:379:31:-;683:7;;-1:-1:-1;;;;;683:7:31;669:10;:21;665:66;;699:32;;-1:-1:-1;;;699:32:31;;;;;;;;;;;665:66;782:21;;;-1:-1:-1;;;;;813:46:31;;;-1:-1:-1;;;;;;813:46:31;;;;;;;874:74;;;782:21;;;;20897:34:37;;;20962:2;20947:18;;20940:43;;;;874:74:31;;20832:18:37;874:74:31;20623:366:37;8253:889:29;8339:15;;-1:-1:-1;;;;;8339:29:29;8358:10;8339:29;8335:88;;8395:15;;8377:46;;-1:-1:-1;;;8377:46:29;;-1:-1:-1;;;;;20915:15:37;;;8377:46:29;;;20897:34:37;8412:10:29;20947:18:37;;;20940:43;20832:18;;8377:46:29;20623:366:37;8335:88:29;8438:13;8433:615;1335:32;1343:19;;1335:32;:::i;:::-;8457:5;:23;8433:615;;;8505:25;8543:5;8533:16;;;;;;;;:::i;:::-;8505:44;-1:-1:-1;8586:16:29;8567:15;:35;;;;;;;;:::i;:::-;;8563:475;;8622:8;;;8563:475;8731:14;8712:15;:33;;;;;;;;:::i;:::-;;8708:330;;8769:21;;;;:29;:36;:29;:41;8765:81;;8819:27;;-1:-1:-1;;;8819:27:29;;;;;;;;;;;8765:81;8868:8;:21;;;:31;;;8903:1;8868:36;8864:78;;8913:29;;-1:-1:-1;;;8913:29:29;;;;;;;;;;;8864:78;8708:330;;;9007:15;8988:35;;-1:-1:-1;;;8988:35:29;;;;;;;;:::i;8708:330::-;8491:557;8433:615;8482:7;;;;:::i;:::-;;;;8433:615;;;;9067:8;:20;;;9061:34;9099:1;9061:39;9057:78;;9109:26;;-1:-1:-1;;;9109:26:29;;;;;;;;;;;9057:78;8253:889;:::o;1156:154:26:-;1247:4;1299;1270:25;1283:5;1290:4;1270:12;:25::i;:::-;:33;;1156:154;-1:-1:-1;;;;1156:154:26:o;15739:539:29:-;15862:7;15900:19;15889:7;:5;:7::i;:::-;:30;;;;;;;;:::i;:::-;;15885:77;;15954:7;:5;:7::i;:::-;15928:34;;-1:-1:-1;;;15928:34:29;;;;;;;;:::i;15885:77::-;15976:8;15988:1;15976:13;15972:52;;15998:26;;-1:-1:-1;;;15998:26:29;;;;;;;;;;;15972:52;16035:78;16046:10;16058:7;16067;16076:8;16086:17;:26;16104:7;-1:-1:-1;;;;;16086:26:29;-1:-1:-1;;;;;16086:26:29;;;;;;;;;;;;;16035:10;:78::i;:::-;16124:22;:39;;;;;;;-1:-1:-1;16124:39:29;;;;;;;;-1:-1:-1;;;;;;16124:39:29;16152:10;16124:39;;;16179:48;;;21752:25:37;;;21825:4;21813:17;;21808:2;21793:18;;21786:45;21847:18;;;21840:34;;;-1:-1:-1;;;;;16179:48:29;;;;;21740:2:37;21725:18;16179:48:29;;;;;;;-1:-1:-1;;;;;;;;16245:26:29;;;;;:17;:26;;;;;;;15739:539;-1:-1:-1;15739:539:29:o;11246:887::-;11317:7;11351:19;11340:7;:5;:7::i;:::-;:30;;;;;;;;:::i;:::-;;11336:80;;11408:7;:5;:7::i;:::-;11379:37;;-1:-1:-1;;;11379:37:29;;;;;;;;:::i;11336:80::-;11460:29;;11445:10;11430:26;;;;:14;:26;;;;;;:59;11426:156;;11541:29;;11512:59;;-1:-1:-1;;;11512:59:29;;;;;;160:25:37;;148:2;133:18;;14:177;11426:156:29;11647:16;;11617:18;:25;11596:11;:18;:46;;11617:25;11596:46;:::i;:::-;11595:68;11591:153;;11716:16;;11686:47;;-1:-1:-1;;;11686:47:29;;;;;;160:25:37;;148:2;133:18;;14:177;11591:153:29;11754:18;11775:22;11788:8;11775:12;:22::i;:::-;11811:21;;;;:9;:21;;;;;:28;:21;;-1:-1:-1;;;;11811:28:29;;;;11807:72;;;11848:31;;-1:-1:-1;;;11848:31:29;;;;;160:25:37;;;133:18;;11848:31:29;14:177:37;11807:72:29;11890:11;:28;;;;;;;;;;;;;;-1:-1:-1;11928:21:29;;;:9;11890:28;11928:21;;;;;;;;:32;;;;;;;;;;-1:-1:-1;;;11928:32:29;-1:-1:-1;;;;;;11928:32:29;;;-1:-1:-1;;;;;11928:32:29;;;;;;;;;;;;;;11952:8;;11928:32;;;;;;;:::i;:::-;-1:-1:-1;11928:32:29;;;;;;;;;;-1:-1:-1;;;;;;11928:32:29;-1:-1:-1;;;;;11928:32:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11928:32:29;;;;;;;;;;11985:10;11970:26;;;;:14;:26;;;;;;:31;;11928:32;;-1:-1:-1;11970:26:29;-1:-1:-1;11970:31:29;;11928:32;;11970:31;:::i;:::-;;;;-1:-1:-1;;12011:15:29;:32;;;;;;;-1:-1:-1;12011:32:29;;;;;;;;-1:-1:-1;;;;;;12011:32:29;12032:10;12011:32;;;;;;12059:39;;;24148:25:37;;;24204:2;24189:18;;24182:60;;;;12059:39:29;;24121:18:37;12059:39:29;;;;;;;12116:10;11246:887;-1:-1:-1;;11246:887:29:o;9263:761::-;9321:13;;:17;9317:701;;9418:23;9488:3;9464:19;;9458:3;:25;;;;:::i;:::-;9445:39;;:9;:39;:::i;:::-;9444:47;;;;:::i;:::-;9418:73;-1:-1:-1;9509:19:29;;9505:190;;9548:60;1494:42;9592:15;9548:17;:60::i;:::-;9631:49;;;1494:42;24822:51:37;;24904:2;24889:18;;24882:34;;;9631:49:29;;24795:18:37;9631:49:29;;;;;;;9505:190;9709:24;9736:27;9748:15;9736:9;:27;:::i;:::-;9709:54;-1:-1:-1;9781:20:29;;9777:231;;9847:7;;9821:53;;-1:-1:-1;;;;;9847:7:29;9857:16;9821:17;:53::i;:::-;9967:7;;9951:42;;;-1:-1:-1;;;;;9967:7:29;;;24822:51:37;;24904:2;24889:18;;24882:34;;;9951:42:29;;24795:18:37;9951:42:29;24648:274:37;9777:231:29;9340:678;;9317:701;9263:761::o;8554:574:30:-;8662:9;8657:465;8677:22;;;8657:465;;;8720:25;8748:11;;8760:1;8748:14;;;;;;;:::i;:::-;;;;;;;;;;8776:32;8811:39;;;:20;:39;;;;;;;:67;8748:14;;-1:-1:-1;9038:73:30;;-1:-1:-1;8748:14:30;8811:67;9038:28;:73::i;:::-;8706:416;;8701:3;;;;;:::i;:::-;;;;8657:465;;1934:290:26;2017:7;2059:4;2017:7;2073:116;2097:5;:12;2093:1;:16;2073:116;;;2145:33;2155:12;2169:5;2175:1;2169:8;;;;;;;;:::i;:::-;;;;;;;2145:9;:33::i;:::-;2130:48;-1:-1:-1;2111:3:26;;;;:::i;:::-;;;;2073:116;;;-1:-1:-1;2205:12:26;1934:290;-1:-1:-1;;;1934:290:26:o;9268:2076:30:-;9426:33;9462:32;;;:20;:32;;;;;;;;-1:-1:-1;;;;;9534:35:30;;;;:26;:35;;;;;;;9521:48;;:10;:48;:::i;:::-;9509:8;:61;9505:94;;;9579:20;;-1:-1:-1;;;9579:20:30;;;;;;;;;;;9505:94;-1:-1:-1;;;;;9647:39:30;;9610:20;9647:39;;;:30;;;:39;;;;;:48;:53;:130;;;;-1:-1:-1;;;;;;9720:39:30;;;;;;:30;;;:39;;;;;:52;;;:57;9647:130;9610:177;-1:-1:-1;9802:30:30;;;9798:518;;9848:52;;9892:8;;9848:12;;:31;;:52;;9892:8;;9848:52;:::i;:::-;;;;-1:-1:-1;;;;;;;9914:39:30;;;;;;:30;;;:39;;;;;:60;;9966:8;;9914:39;:60;;9966:8;;9914:60;:::i;:::-;;;;-1:-1:-1;9798:518:30;;-1:-1:-1;9798:518:30;;-1:-1:-1;;9995:34:30;;;;9991:325;;10049:17;;10070:1;10049:22;10045:57;;10080:22;;-1:-1:-1;;;10080:22:30;;;;;;;;;;;10045:57;10164:8;10116:12;:31;;:44;;;:56;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;10186:39:30;;;;;;:30;;;:39;;;;;:52;;:64;;10242:8;;10186:39;:64;;10242:8;;10186:64;:::i;9991:325::-;10288:17;;-1:-1:-1;;;10288:17:30;;;;;;;;;;;9991:325;10330:15;10326:87;;;10361:27;;;:41;;;;;;;-1:-1:-1;10361:41:30;;;;;;;;;;-1:-1:-1;;;;;;10361:41:30;-1:-1:-1;;;;;10361:41:30;;;;;10326:87;-1:-1:-1;;;;;10422:35:30;;;;;;:26;:35;;;;;:47;;10461:8;;10422:35;:47;;10461:8;;10422:47;:::i;:::-;;;;;;;;10497:8;10479:14;;:26;;;;;;;:::i;:::-;;;;-1:-1:-1;;10650:17:30;;:22;10649:49;;;;;10678:14;;10696:1;10678:19;10649:49;10645:693;;;10736:40;;10714:19;10856:22;10870:8;10736:40;10856:22;:::i;:::-;10834:44;-1:-1:-1;11107:15:30;;11103:107;;11142:53;11171:10;11183:11;11142:28;:53::i;:::-;11223:34;;;;:21;:34;;;;;;;:51;;;;;;;;;;;;;;;;11289:38;11302:11;11245;11289:12;:38::i;:::-;10700:638;;10645:693;9416:1928;;9268:2076;;;;;:::o;2647:312:24:-;2761:6;2736:21;:31;;2728:73;;;;-1:-1:-1;;;2728:73:24;;25129:2:37;2728:73:24;;;25111:21:37;25168:2;25148:18;;;25141:30;25207:31;25187:18;;;25180:59;25256:18;;2728:73:24;24927:353:37;2728:73:24;2813:12;2831:9;-1:-1:-1;;;;;2831:14:24;2853:6;2831:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2812:52;;;2882:7;2874:78;;;;-1:-1:-1;;;2874:78:24;;25697:2:37;2874:78:24;;;25679:21:37;25736:2;25716:18;;;25709:30;25775:34;25755:18;;;25748:62;25846:28;25826:18;;;25819:56;25892:19;;2874:78:24;25495:422:37;7618:852:30;7713:39;7755:31;;;:21;:31;;;;;;;;7713:73;;;;;;;;;;;;;;;;;;;7755:31;;7713:73;;;7755:31;7713:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7845:9;7840:624;7864:22;:29;7860:1;:33;7840:624;;;7947:10;7918:22;7941:1;7918:25;;;;;;;;:::i;:::-;;;;;;;:39;7914:540;;8304:22;8359:1;8327:22;:29;:33;;;;:::i;:::-;8304:57;;;;;;;;:::i;:::-;;;;;;;8267:21;:31;8289:8;8267:31;;;;;;;;;;;8299:1;8267:34;;;;;;;;:::i;:::-;;;;;;;;:94;;;;8379:21;:31;8401:8;8379:31;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;8434:5;;7914:540;7895:3;;;;:::i;:::-;;;;7840:624;;9205:147:26;9268:7;9298:1;9294;:5;:51;;9426:13;9517:15;;;9552:4;9545:15;;;9598:4;9582:21;;9294:51;;;9426:13;9517:15;;;9552:4;9545:15;;;9598:4;9582:21;;9302:20;9287:58;9205:147;-1:-1:-1;;;9205:147:26:o;6308:1337:33:-;6413:11;:18;;6485:48;;;;;;;;;;;;;;;;;6413:18;;6385:25;;6485:48;6413:18;;6485:48;;6413:11;:18;6485:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6700:17;6721:1;6700:22;6696:99;;-1:-1:-1;;6738:11:33;:26;;;;;;;-1:-1:-1;6738:26:33;;;;;;;-1:-1:-1;6308:1337:33:o;6696:99::-;7050:17;7068:21;7088:1;7068:17;:21;:::i;:::-;7050:40;;;;;;;;:::i;:::-;;;;;;;7039:8;:51;7035:424;;;7131:9;;7110:17;:30;7106:343;;7248:7;;6308:1337;;:::o;7106:343::-;-1:-1:-1;;7384:11:33;:26;;;;;;;-1:-1:-1;7384:26:33;;;;;;;-1:-1:-1;6308:1337:33:o;7106:343::-;7569:69;7581:8;7591;7601:17;7620;3037:22;;3069:494;3101:17;3093:5;:25;3069:494;;;3248:17;3266:5;3248:24;;;;;;;;:::i;:::-;;;;;;;3236:8;:36;3232:188;;3399:7;;;;3232:188;3449:17;3467:5;3449:24;;;;;;;;:::i;:::-;;;;;;;3438:8;:35;3434:119;;;3510:5;3493:22;;3533:5;;3434:119;3120:7;;;;:::i;:::-;;;;3069:494;;;;3618:21;3654:1;3643:8;:12;3642:70;;;;-1:-1:-1;4932:13:30;4964:31;;;:21;:31;;;;;:38;3661:50:33;3642:70;3618:94;;3797:22;4061:16;:67;;;;;4119:8;4082:17;4100:14;4082:33;;;;;;;;:::i;:::-;;;;;;;:45;4061:67;4055:1656;;4498:21;4518:1;4498:17;:21;:::i;:::-;4480:14;:39;4474:844;;4793:13;4809:18;:14;4826:1;4809:18;:::i;:::-;4793:34;;4788:516;4837:17;4829:5;:25;4788:516;;;4908:17;4926:9;4934:1;4926:5;:9;:::i;:::-;4908:28;;;;;;;;:::i;:::-;;;;;;;4887:11;4899:5;4887:18;;;;;;;;:::i;:::-;;;;;;;;;;:49;5122:16;:58;;;;;5171:8;5143:17;5161:5;5143:24;;;;;;;;:::i;:::-;;;;;;;:36;5122:58;5118:168;;;5228:4;5208:24;;5258:5;;5118:168;4856:7;;;;:::i;:::-;;;;4788:516;;;;4474:844;5556:17;5555:18;:53;;;;;5598:9;;5578:17;:29;5555:53;5551:150;;;5628:11;5645:17;5663:21;5683:1;5663:17;:21;:::i;:::-;5645:40;;;;;;;;:::i;:::-;;;;;;;;;;;;5628:58;;;;;;;-1:-1:-1;5628:58:33;;;;;;;;;5551:150;5872:8;5842:11;5854:14;5842:27;;;;;;;;:::i;:::-;;;;;;;;;;:38;-1:-1:-1;;;2812:3075:33;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;196:180:37;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:37;;196:180;-1:-1:-1;196:180:37:o;381:423::-;423:3;461:5;455:12;488:6;483:3;476:19;513:1;523:162;537:6;534:1;531:13;523:162;;;599:4;655:13;;;651:22;;645:29;627:11;;;623:20;;616:59;552:12;523:162;;;527:3;730:1;723:4;714:6;709:3;705:16;701:27;694:38;793:4;786:2;782:7;777:2;769:6;765:15;761:29;756:3;752:39;748:50;741:57;;;381:423;;;;:::o;809:668::-;937:12;;903:4;958:17;;;1024:19;;894:14;;;1052:20;;;864:3;;1121:4;;1148:21;;;;1099:2;1090:12;;;864:3;1197:201;1211:6;1208:1;1205:13;1197:201;;;1278:13;;-1:-1:-1;;;;;1274:39:37;1260:54;;1373:15;;;;1336:14;;;;1310:1;1226:9;1197:201;;;-1:-1:-1;;1434:14:37;;;1428:21;1414:12;;;;1407:43;;;;-1:-1:-1;1466:5:37;809:668;-1:-1:-1;809:668:37:o;1482:793::-;1828:4;1874:1;1870;1865:3;1861:11;1857:19;1915:2;1907:6;1903:15;1892:9;1885:34;1969:6;1962:14;1955:22;1950:2;1939:9;1935:18;1928:50;2014:3;2009:2;1998:9;1994:18;1987:31;2041:46;2082:3;2071:9;2067:19;2059:6;2041:46;:::i;:::-;2142:2;2133:6;2127:13;2123:22;2118:2;2107:9;2103:18;2096:50;2195:9;2187:6;2183:22;2177:3;2166:9;2162:19;2155:51;2223:46;2262:6;2254;2223:46;:::i;:::-;2215:54;1482:793;-1:-1:-1;;;;;;;;;1482:793:37:o;2488:220::-;2637:2;2626:9;2619:21;2600:4;2657:45;2698:2;2687:9;2683:18;2675:6;2657:45;:::i;2869:257::-;2789:12;;2777:25;;2851:4;2840:16;;;2834:23;2818:14;;;2811:47;3061:2;3046:18;;3073:47;2713:151;3131:435;3184:3;3222:5;3216:12;3249:6;3244:3;3237:19;3275:4;3304:2;3299:3;3295:12;3288:19;;3341:2;3334:5;3330:14;3362:1;3372:169;3386:6;3383:1;3380:13;3372:169;;;3447:13;;3435:26;;3481:12;;;;3516:15;;;;3408:1;3401:9;3372:169;;;-1:-1:-1;3557:3:37;;3131:435;-1:-1:-1;;;;;3131:435:37:o;3571:261::-;3750:2;3739:9;3732:21;3713:4;3770:56;3822:2;3811:9;3807:18;3799:6;3770:56;:::i;3837:131::-;-1:-1:-1;;;;;3912:31:37;;3902:42;;3892:70;;3958:1;3955;3948:12;3973:367;4036:8;4046:6;4100:3;4093:4;4085:6;4081:17;4077:27;4067:55;;4118:1;4115;4108:12;4067:55;-1:-1:-1;4141:20:37;;-1:-1:-1;;;;;4173:30:37;;4170:50;;;4216:1;4213;4206:12;4170:50;4253:4;4245:6;4241:17;4229:29;;4313:3;4306:4;4296:6;4293:1;4289:14;4281:6;4277:27;4273:38;4270:47;4267:67;;;4330:1;4327;4320:12;4345:572;4440:6;4448;4456;4509:2;4497:9;4488:7;4484:23;4480:32;4477:52;;;4525:1;4522;4515:12;4477:52;4564:9;4551:23;4583:31;4608:5;4583:31;:::i;:::-;4633:5;-1:-1:-1;4689:2:37;4674:18;;4661:32;-1:-1:-1;;;;;4705:30:37;;4702:50;;;4748:1;4745;4738:12;4702:50;4787:70;4849:7;4840:6;4829:9;4825:22;4787:70;:::i;:::-;4345:572;;4876:8;;-1:-1:-1;4761:96:37;;-1:-1:-1;;;;4345:572:37:o;4922:658::-;5093:2;5145:21;;;5215:13;;5118:18;;;5237:22;;;5064:4;;5093:2;5316:15;;;;5290:2;5275:18;;;5064:4;5359:195;5373:6;5370:1;5367:13;5359:195;;;5438:13;;-1:-1:-1;;;;;5434:39:37;5422:52;;5529:15;;;;5494:12;;;;5470:1;5388:9;5359:195;;;-1:-1:-1;5571:3:37;;4922:658;-1:-1:-1;;;;;;4922:658:37:o;5585:160::-;5650:20;;5706:13;;5699:21;5689:32;;5679:60;;5735:1;5732;5725:12;5679:60;5585:160;;;:::o;5750:709::-;5860:6;5868;5876;5884;5892;5945:3;5933:9;5924:7;5920:23;5916:33;5913:53;;;5962:1;5959;5952:12;5913:53;6001:9;5988:23;6020:31;6045:5;6020:31;:::i;:::-;6070:5;-1:-1:-1;6122:2:37;6107:18;;6094:32;;-1:-1:-1;6177:2:37;6162:18;;6149:32;-1:-1:-1;;;;;6193:30:37;;6190:50;;;6236:1;6233;6226:12;6190:50;6275:70;6337:7;6328:6;6317:9;6313:22;6275:70;:::i;:::-;6364:8;;-1:-1:-1;6249:96:37;-1:-1:-1;6418:35:37;;-1:-1:-1;6449:2:37;6434:18;;6418:35;:::i;:::-;6408:45;;5750:709;;;;;;;;:::o;6656:156::-;6722:20;;6782:4;6771:16;;6761:27;;6751:55;;6802:1;6799;6792:12;6817:713;6937:6;6945;6953;6961;6969;6977;7030:3;7018:9;7009:7;7005:23;7001:33;6998:53;;;7047:1;7044;7037:12;6998:53;7083:9;7070:23;7060:33;;7112:36;7144:2;7133:9;7129:18;7112:36;:::i;:::-;7102:46;;7195:2;7184:9;7180:18;7167:32;7157:42;;7246:2;7235:9;7231:18;7218:32;7208:42;;7301:3;7290:9;7286:19;7273:33;-1:-1:-1;;;;;7321:6:37;7318:30;7315:50;;;7361:1;7358;7351:12;7315:50;7400:70;7462:7;7453:6;7442:9;7438:22;7400:70;:::i;:::-;6817:713;;;;-1:-1:-1;6817:713:37;;-1:-1:-1;6817:713:37;;7489:8;;6817:713;-1:-1:-1;;;6817:713:37:o;7535:127::-;7596:10;7591:3;7587:20;7584:1;7577:31;7627:4;7624:1;7617:15;7651:4;7648:1;7641:15;7667:257;7739:4;7733:11;;;7771:17;;-1:-1:-1;;;;;7803:34:37;;7839:22;;;7800:62;7797:88;;;7865:18;;:::i;:::-;7901:4;7894:24;7667:257;:::o;7929:253::-;8001:2;7995:9;8043:4;8031:17;;-1:-1:-1;;;;;8063:34:37;;8099:22;;;8060:62;8057:88;;;8125:18;;:::i;8187:275::-;8258:2;8252:9;8323:2;8304:13;;-1:-1:-1;;8300:27:37;8288:40;;-1:-1:-1;;;;;8343:34:37;;8379:22;;;8340:62;8337:88;;;8405:18;;:::i;:::-;8441:2;8434:22;8187:275;;-1:-1:-1;8187:275:37:o;8467:486::-;8528:5;8576:4;8564:9;8559:3;8555:19;8551:30;8548:50;;;8594:1;8591;8584:12;8548:50;8627:2;8621:9;8669:4;8661:6;8657:17;8740:6;8728:10;8725:22;-1:-1:-1;;;;;8692:10:37;8689:34;8686:62;8683:88;;;8751:18;;:::i;:::-;8787:2;8780:22;8820:6;-1:-1:-1;8820:6:37;8850:23;;8882:33;8850:23;8882:33;:::i;:::-;8924:23;;8467:486;;-1:-1:-1;;8467:486:37:o;8958:1103::-;9017:5;9065:4;9053:9;9048:3;9044:19;9040:30;9037:50;;;9083:1;9080;9073:12;9037:50;9105:22;;:::i;:::-;9096:31;;9163:9;9150:23;-1:-1:-1;;;;;9233:2:37;9225:6;9222:14;9219:34;;;9249:1;9246;9239:12;9219:34;9287:6;9276:9;9272:22;9262:32;;9332:3;9325:4;9321:2;9317:13;9313:23;9303:51;;9350:1;9347;9340:12;9303:51;9386:2;9373:16;9408:4;9431:2;9427;9424:10;9421:36;;;9437:18;;:::i;:::-;9483:2;9480:1;9476:10;9466:20;;9506:28;9530:2;9526;9522:11;9506:28;:::i;:::-;9568:15;;;9638:11;;;9634:20;;;9599:12;;;;9666:15;;;9663:35;;;9694:1;9691;9684:12;9663:35;9718:11;;;;9738:223;9754:6;9749:3;9746:15;9738:223;;;9836:3;9823:17;9808:32;;9853:33;9878:7;9853:33;:::i;:::-;9899:20;;;9771:12;;;;9939;;;;9738:223;;;9984:5;9977;9970:20;;;10050:2;10039:9;10035:18;10022:32;10017:2;10010:5;10006:14;9999:56;;;;;8958:1103;;;;:::o;10066:1282::-;10125:5;10173:4;10161:9;10156:3;10152:19;10148:30;10145:50;;;10191:1;10188;10181:12;10145:50;10213:22;;:::i;:::-;10204:31;;10272:9;10259:23;10291:33;10316:7;10291:33;:::i;:::-;10333:22;;10374:2;10408:35;10424:18;;;10408:35;:::i;:::-;10403:2;10396:5;10392:14;10385:59;10495:2;10484:9;10480:18;10467:32;-1:-1:-1;;;;;10559:2:37;10551:6;10548:14;10545:34;;;10575:1;10572;10565:12;10545:34;10613:6;10602:9;10598:22;10588:32;;10658:3;10651:4;10647:2;10643:13;10639:23;10629:51;;10676:1;10673;10666:12;10629:51;10712:2;10699:16;10734:2;10730;10727:10;10724:36;;;10740:18;;:::i;:::-;10782:53;10825:2;10806:13;;-1:-1:-1;;10802:27:37;10798:36;;10782:53;:::i;:::-;10858:2;10851:5;10844:17;10898:3;10893:2;10888;10884;10880:11;10876:20;10873:29;10870:49;;;10915:1;10912;10905:12;10870:49;10970:2;10965;10961;10957:11;10952:2;10945:5;10941:14;10928:45;11014:1;11009:2;11004;10997:5;10993:14;10989:23;10982:34;11048:5;11043:2;11036:5;11032:14;11025:29;;;11086:57;11139:3;11134:2;11123:9;11119:18;11086:57;:::i;:::-;11081:2;11074:5;11070:14;11063:81;11197:3;11186:9;11182:19;11169:33;11153:49;;11227:2;11217:8;11214:16;11211:36;;;11243:1;11240;11233:12;11211:36;;;11280:61;11337:3;11326:8;11315:9;11311:24;11280:61;:::i;:::-;11274:3;11267:5;11263:15;11256:86;;10066:1282;;;;:::o;11353:356::-;11443:6;11496:2;11484:9;11475:7;11471:23;11467:32;11464:52;;;11512:1;11509;11502:12;11464:52;11552:9;11539:23;-1:-1:-1;;;;;11577:6:37;11574:30;11571:50;;;11617:1;11614;11607:12;11571:50;11640:63;11695:7;11686:6;11675:9;11671:22;11640:63;:::i;11714:161::-;11779:5;11824:3;11815:6;11810:3;11806:16;11802:26;11799:46;;;11841:1;11838;11831:12;11799:46;-1:-1:-1;11863:6:37;11714:161;-1:-1:-1;11714:161:37:o;11880:367::-;11972:6;12025:2;12013:9;12004:7;12000:23;11996:32;11993:52;;;12041:1;12038;12031:12;11993:52;12081:9;12068:23;-1:-1:-1;;;;;12106:6:37;12103:30;12100:50;;;12146:1;12143;12136:12;12100:50;12169:72;12233:7;12224:6;12213:9;12209:22;12169:72;:::i;12252:905::-;12530:4;12559:2;12588;12577:9;12570:21;12614:56;12666:2;12655:9;12651:18;12643:6;12614:56;:::i;:::-;12727:22;;;12689:2;12707:18;;;12700:50;;;;12799:13;;12821:22;;;12897:15;;;;12859;;;12930:1;12940:191;12954:6;12951:1;12948:13;12940:191;;;13003:48;13047:3;13038:6;13032:13;2789:12;;2777:25;;2851:4;2840:16;;;2834:23;2818:14;;2811:47;2713:151;13003:48;13106:15;;;;13071:12;;;;12976:1;12969:9;12940:191;;;-1:-1:-1;13148:3:37;;12252:905;-1:-1:-1;;;;;;;;12252:905:37:o;13162:640::-;13266:6;13274;13282;13290;13343:2;13331:9;13322:7;13318:23;13314:32;13311:52;;;13359:1;13356;13349:12;13311:52;13398:9;13385:23;13417:31;13442:5;13417:31;:::i;:::-;13467:5;-1:-1:-1;13519:2:37;13504:18;;13491:32;;-1:-1:-1;13574:2:37;13559:18;;13546:32;-1:-1:-1;;;;;13590:30:37;;13587:50;;;13633:1;13630;13623:12;13587:50;13672:70;13734:7;13725:6;13714:9;13710:22;13672:70;:::i;:::-;13162:640;;;;-1:-1:-1;13761:8:37;-1:-1:-1;;;;13162:640:37:o;14060:318::-;14135:6;14143;14151;14204:2;14192:9;14183:7;14179:23;14175:32;14172:52;;;14220:1;14217;14210:12;14172:52;14256:9;14243:23;14233:33;;14285:36;14317:2;14306:9;14302:18;14285:36;:::i;:::-;14275:46;;14368:2;14357:9;14353:18;14340:32;14330:42;;14060:318;;;;;:::o;14383:315::-;14451:6;14459;14512:2;14500:9;14491:7;14487:23;14483:32;14480:52;;;14528:1;14525;14518:12;14480:52;14564:9;14551:23;14541:33;;14624:2;14613:9;14609:18;14596:32;14637:31;14662:5;14637:31;:::i;:::-;14687:5;14677:15;;;14383:315;;;;;:::o;14703:248::-;14771:6;14779;14832:2;14820:9;14811:7;14807:23;14803:32;14800:52;;;14848:1;14845;14838:12;14800:52;-1:-1:-1;;14871:23:37;;;14941:2;14926:18;;;14913:32;;-1:-1:-1;14703:248:37:o;14956:247::-;15015:6;15068:2;15056:9;15047:7;15043:23;15039:32;15036:52;;;15084:1;15081;15074:12;15036:52;15123:9;15110:23;15142:31;15167:5;15142:31;:::i;15629:703::-;15757:6;15765;15773;15826:2;15814:9;15805:7;15801:23;15797:32;15794:52;;;15842:1;15839;15832:12;15794:52;15882:9;15869:23;-1:-1:-1;;;;;15952:2:37;15944:6;15941:14;15938:34;;;15968:1;15965;15958:12;15938:34;15991:72;16055:7;16046:6;16035:9;16031:22;15991:72;:::i;:::-;15981:82;;16116:2;16105:9;16101:18;16088:32;16072:48;;16145:2;16135:8;16132:16;16129:36;;;16161:1;16158;16151:12;16129:36;;16200:72;16264:7;16253:8;16242:9;16238:24;16200:72;:::i;16337:127::-;16398:10;16393:3;16389:20;16386:1;16379:31;16429:4;16426:1;16419:15;16453:4;16450:1;16443:15;16469:249;16619:2;16604:18;;16652:1;16641:13;;16631:47;;16658:18;;:::i;:::-;16687:25;;;16469:249;:::o;16723:815::-;16914:2;16903:9;16896:21;16877:4;16953:1;16949;16944:3;16940:11;16936:19;17010:2;17001:6;16995:13;16991:22;16986:2;16975:9;16971:18;16964:50;17082:2;17074:6;17070:15;17064:22;17057:30;17050:38;17045:2;17034:9;17030:18;17023:66;17136:2;17128:6;17124:15;17118:22;17176:4;17171:2;17160:9;17156:18;17149:32;17204:52;17251:3;17240:9;17236:19;17222:12;17204:52;:::i;:::-;17190:66;;17328:2;17321;17313:6;17309:15;17303:22;17297:29;17293:38;17287:3;17276:9;17272:19;17265:67;17381:3;17373:6;17369:16;17363:23;17341:45;;17456:2;17452:7;17440:9;17432:6;17428:22;17424:36;17417:4;17406:9;17402:20;17395:66;17478:54;17525:6;17509:14;17478:54;:::i;17543:437::-;17629:6;17637;17690:2;17678:9;17669:7;17665:23;17661:32;17658:52;;;17706:1;17703;17696:12;17658:52;17746:9;17733:23;-1:-1:-1;;;;;17771:6:37;17768:30;17765:50;;;17811:1;17808;17801:12;17765:50;17850:70;17912:7;17903:6;17892:9;17888:22;17850:70;:::i;:::-;17939:8;;17824:96;;-1:-1:-1;17543:437:37;-1:-1:-1;;;;17543:437:37:o;18260:380::-;18339:1;18335:12;;;;18382;;;18403:61;;18457:4;18449:6;18445:17;18435:27;;18403:61;18510:2;18502:6;18499:14;18479:18;18476:38;18473:161;;18556:10;18551:3;18547:20;18544:1;18537:31;18591:4;18588:1;18581:15;18619:4;18616:1;18609:15;18645:127;18706:10;18701:3;18697:20;18694:1;18687:31;18737:4;18734:1;18727:15;18761:4;18758:1;18751:15;18777:125;18842:9;;;18863:10;;;18860:36;;;18876:18;;:::i;19206:210::-;19320:9;19357:53;19395:14;19388:5;19357:53;:::i;19421:127::-;19482:10;19477:3;19473:20;19470:1;19463:31;19513:4;19510:1;19503:15;19537:4;19534:1;19527:15;19553:135;19592:3;19613:17;;;19610:43;;19633:18;;:::i;:::-;-1:-1:-1;19680:1:37;19669:13;;19553:135::o;19693:128::-;19760:9;;;19781:11;;;19778:37;;;19795:18;;:::i;19963:655::-;20131:2;20183:21;;;20253:13;;20156:18;;;20275:22;;;20102:4;20340:17;;;20380:16;;;20102:4;;20131:2;20328;20313:18;;;20102:4;20424:168;20438:6;20435:1;20432:13;20424:168;;;20499:13;;20487:26;;20580:1;20568:14;;;;20533:12;;;;20453:9;20424:168;;21303:246;21450:2;21435:18;;21483:1;21472:13;;21462:47;;21489:18;;:::i;21885:545::-;21987:2;21982:3;21979:11;21976:448;;;22023:1;22048:5;22044:2;22037:17;22093:4;22089:2;22079:19;22163:2;22151:10;22147:19;22144:1;22140:27;22134:4;22130:38;22199:4;22187:10;22184:20;22181:47;;;-1:-1:-1;22222:4:37;22181:47;22277:2;22272:3;22268:12;22265:1;22261:20;22255:4;22251:31;22241:41;;22332:82;22350:2;22343:5;22340:13;22332:82;;;22395:17;;;22376:1;22365:13;22332:82;;;22336:3;;;21885:545;;;:::o;22606:1363::-;22732:3;22726:10;-1:-1:-1;;;;;22751:6:37;22748:30;22745:56;;;22781:18;;:::i;:::-;22810:97;22900:6;22860:38;22892:4;22886:11;22860:38;:::i;:::-;22854:4;22810:97;:::i;:::-;22962:4;;23026:2;23015:14;;23043:1;23038:674;;;;23756:1;23773:6;23770:89;;;-1:-1:-1;23825:19:37;;;23819:26;23770:89;-1:-1:-1;;22563:1:37;22559:11;;;22555:24;22551:29;22541:40;22587:1;22583:11;;;22538:57;23872:81;;23008:955;;23038:674;19910:1;19903:14;;;19947:4;19934:18;;-1:-1:-1;;23074:20:37;;;23203:236;23217:7;23214:1;23211:14;23203:236;;;23306:19;;;23300:26;23285:42;;23398:27;;;;23366:1;23354:14;;;;23233:19;;23203:236;;;23207:3;23467:6;23458:7;23455:19;23452:201;;;23528:19;;;23522:26;-1:-1:-1;;23611:1:37;23607:14;;;23623:3;23603:24;23599:37;23595:42;23580:58;23565:74;;23452:201;-1:-1:-1;;;;;23699:1:37;23683:14;;;23679:22;23666:36;;-1:-1:-1;22606:1363:37:o;24253:168::-;24326:9;;;24357;;24374:15;;;24368:22;;24354:37;24344:71;;24395:18;;:::i;24426:217::-;24466:1;24492;24482:132;;24536:10;24531:3;24527:20;24524:1;24517:31;24571:4;24568:1;24561:15;24599:4;24596:1;24589:15;24482:132;-1:-1:-1;24628:9:37;;24426:217::o;25922:127::-;25983:10;25978:3;25974:20;25971:1;25964:31;26014:4;26011:1;26004:15;26038:4;26035:1;26028:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "AMOUNT_FOR_SUMBITTER_PROOF()": "347cf665",
    "JK_LABS_ADDRESS()": "eef18e17",
    "METADATAS_COUNT()": "4d24a67f",
    "addressSubmitterVerified(address)": "cb853950",
    "addressTotalCastVoteCounts(address)": "a1ac6cb2",
    "addressTotalVotes(address)": "dea5f6a6",
    "addressTotalVotesVerified(address)": "930de979",
    "addressesThatHaveVoted(uint256)": "50c4b616",
    "allProposalTotalVotes()": "50a5e524",
    "allProposalTotalVotesWithoutDeleted()": "d45a010b",
    "cancel()": "ea8a1af0",
    "canceled()": "3f9942ff",
    "castVote(uint256,uint8,uint256,uint256,bytes32[])": "419c533c",
    "castVoteWithoutProof(uint256,uint8,uint256)": "65f16263",
    "checkProof(address,uint256,bytes32[],bool)": "32763c22",
    "contestAddressTotalVotesCast(address)": "aec116b6",
    "contestDeadline()": "262e59e9",
    "contestStart()": "004114a8",
    "costToPropose()": "6ed815ad",
    "creator()": "02d05d3f",
    "deleteProposals(uint256[])": "f0a7db0a",
    "deletedProposalIds(uint256)": "05846cae",
    "downvotingAllowed()": "60506ff6",
    "forVotesToProposalIds(uint256,uint256)": "711effc8",
    "getAllAddressesThatHaveVoted()": "2c39805f",
    "getAllDeletedProposalIds()": "1242b737",
    "getAllProposalAuthors()": "946369b5",
    "getAllProposalIds()": "efa90d36",
    "getNumProposalsWithThisManyForVotes(uint256)": "9ba197af",
    "getOnlyProposalIdWithThisManyForVotes(uint256)": "b66d1da3",
    "getProposal(uint256)": "c7f758a8",
    "getProposalsWithThisManyForVotes(uint256)": "c9a1b6b2",
    "getRankIndex(uint256)": "5c7107d8",
    "getSortedRanks()": "6fd3636b",
    "hashProposal((address,bool,string,(address),(address[],uint256)))": "458da87d",
    "isOrIsBelowTiedRank(uint256)": "9174778c",
    "maxProposalCount()": "fb9bf8d4",
    "name()": "06fdde03",
    "numAllowedProposalSubmissions()": "832009af",
    "numSubmissions(address)": "75e509c5",
    "officialRewardsModule()": "785ddfe5",
    "percentageToCreator()": "edcd1be4",
    "prompt()": "7c65d711",
    "proposalAddressVotes(uint256,address)": "6e4eb810",
    "proposalAddressesHaveVoted(uint256)": "b323580d",
    "proposalAuthors(uint256)": "0aa25e44",
    "proposalIds(uint256)": "9b644a23",
    "proposalIsDeleted(uint256)": "f79c0172",
    "proposalVotes(uint256)": "544ffc9c",
    "proposalVotesStructs(uint256)": "070dc5d9",
    "proposals(uint256)": "013cf08b",
    "propose((address,bool,string,(address),(address[],uint256)),bytes32[])": "c0ffaa78",
    "proposeWithoutProof((address,bool,string,(address),(address[],uint256)))": "476f4d8a",
    "rankLimit()": "0414126a",
    "setOfficialRewardsModule(address)": "f4f3d7ec",
    "sortedRanks(uint256)": "325cc6d9",
    "sortingEnabled()": "366ecf5b",
    "state()": "c19d93fb",
    "submissionMerkleRoot()": "bddc1641",
    "totalVotesCast()": "7de418d5",
    "validateProposalData((address,bool,string,(address),(address[],uint256)))": "fb8ddab4",
    "verifyProposer(address,bytes32[])": "20b3e845",
    "verifyVoter(address,uint256,bytes32[])": "531bd812",
    "version()": "54fd4d50",
    "voteStart()": "e031535b",
    "votingDelay()": "3932abb1",
    "votingMerkleRoot()": "dd96a19d",
    "votingPeriod()": "02a251a3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_prompt\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"_submissionMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_votingMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"_constructorIntParams\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AddressNotPermissionedToSubmit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"AuthorIsNotSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotCancelACompletedContest\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotDeleteWhenCompleted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotVoteOnDeletedProposal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ContestAlreadyCancelled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum Governor.ContestState\",\"name\":\"currentState\",\"type\":\"uint8\"}],\"name\":\"ContestMustBeActiveToVote\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum Governor.ContestState\",\"name\":\"currentState\",\"type\":\"uint8\"}],\"name\":\"ContestMustBeQueuedToPropose\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxProposalCount\",\"type\":\"uint256\"}],\"name\":\"ContestSubmissionLimitReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DownvotingNotEnabled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"DuplicateSubmission\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptyProposalDescription\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"costToPropose\",\"type\":\"uint256\"}],\"name\":\"IncorrectCostToProposeSent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IndexHasNotBeenPopulated\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidVoteType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MoreThanOneProposalWithThisManyVotes\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NeedAtLeastOneVoteToVote\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NeedToSubmitWithProofFirst\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NeedToVoteWithProofFirst\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughVotesLeft\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInMerkle\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyCreatorCanDelete\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyCreatorCanSetRewardsModule\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyJkLabsOrCreatorCanCancel\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RankCannotBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RankIsNotInSortedRanks\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numAllowedProposalSubmissions\",\"type\":\"uint256\"}],\"name\":\"SenderSubmissionLimitReached\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum Governor.Metadatas\",\"name\":\"unexpectedMetadata\",\"type\":\"uint8\"}],\"name\":\"UnexpectedMetadata\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroSignersInSafeMetadata\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroThresholdInSafeMetadata\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ContestCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"JokeraceCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract RewardsModule\",\"name\":\"oldOfficialRewardsModule\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract RewardsModule\",\"name\":\"newOfficialRewardsModule\",\"type\":\"address\"}],\"name\":\"OfficialRewardsModuleSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PaymentReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"proposalIds\",\"type\":\"uint256[]\"}],\"name\":\"ProposalsDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"numVotes\",\"type\":\"uint256\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AMOUNT_FOR_SUMBITTER_PROOF\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"JK_LABS_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"METADATAS_COUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressSubmitterVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressTotalCastVoteCounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressTotalVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressTotalVotesVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addressesThatHaveVoted\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allProposalTotalVotes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"proposalIdsReturn\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"internalType\":\"struct GovernorCountingSimple.VoteCounts[]\",\"name\":\"proposalVoteCountsArrayReturn\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allProposalTotalVotesWithoutDeleted\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"proposalIdsReturn\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"internalType\":\"struct GovernorCountingSimple.VoteCounts[]\",\"name\":\"proposalVoteCountsArrayReturn\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canceled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numVotes\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"castVote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"numVotes\",\"type\":\"uint256\"}],\"name\":\"castVoteWithoutProof\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressToCheck\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool\",\"name\":\"voting\",\"type\":\"bool\"}],\"name\":\"checkProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"contestAddressTotalVotesCast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"userTotalVotesCast\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contestDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contestStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"costToPropose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"proposalIdsToDelete\",\"type\":\"uint256[]\"}],\"name\":\"deleteProposals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deletedProposalIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"downvotingAllowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"forVotesToProposalIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllAddressesThatHaveVoted\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllDeletedProposalIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllProposalAuthors\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllProposalIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"}],\"name\":\"getNumProposalsWithThisManyForVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"}],\"name\":\"getOnlyProposalIdWithThisManyForVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposal\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Governor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct Governor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct Governor.ProposalCore\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"}],\"name\":\"getProposalsWithThisManyForVotes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"proposalsWithThisManyForVotes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rank\",\"type\":\"uint256\"}],\"name\":\"getRankIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rankIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSortedRanks\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"sortedRanksArray\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Governor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct Governor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct Governor.ProposalCore\",\"name\":\"proposal\",\"type\":\"tuple\"}],\"name\":\"hashProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"isOrIsBelowTiedRank\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"atOrBelowTiedRank\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxProposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numAllowedProposalSubmissions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"numSubmissions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"officialRewardsModule\",\"outputs\":[{\"internalType\":\"contract RewardsModule\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"percentageToCreator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prompt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"proposalAddressVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalAddressesHaveVoted\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalAuthors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalIsDeleted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalVotesStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"internalType\":\"struct GovernorCountingSimple.VoteCounts\",\"name\":\"proposalVoteCounts\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Governor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct Governor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Governor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct Governor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct Governor.ProposalCore\",\"name\":\"proposal\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Governor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct Governor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct Governor.ProposalCore\",\"name\":\"proposal\",\"type\":\"tuple\"}],\"name\":\"proposeWithoutProof\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rankLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract RewardsModule\",\"name\":\"officialRewardsModule_\",\"type\":\"address\"}],\"name\":\"setOfficialRewardsModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sortedRanks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sortingEnabled\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum Governor.ContestState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"submissionMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVotesCast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Governor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct Governor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct Governor.ProposalCore\",\"name\":\"proposal\",\"type\":\"tuple\"}],\"name\":\"validateProposalData\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"verifyProposer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"verifyVoter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voteStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allProposalTotalVotes()\":{\"details\":\"Accessor to the internal vote counts for a given proposal.\"},\"allProposalTotalVotesWithoutDeleted()\":{\"details\":\"Accessor to the internal vote counts for a given proposal that excludes deleted proposals.\"},\"cancel()\":{\"details\":\"Cancels the contest. Emits a {IGovernor-ContestCanceled} event.\"},\"castVote(uint256,uint8,uint256,uint256,bytes32[])\":{\"details\":\"Cast a vote with a merkle proof.\"},\"castVoteWithoutProof(uint256,uint8,uint256)\":{\"details\":\"Cast a vote without a proof if you have already voted with a proof.\"},\"checkProof(address,uint256,bytes32[],bool)\":{\"params\":{\"addressToCheck\":\"address of participant\",\"amount\":\"to check that the participant has the correct amount\",\"proof\":\"merkle proof to prove address and amount are in tree\",\"voting\":\"true if this is for a voting proof, false if this is for a submission proof\"}},\"contestAddressTotalVotesCast(address)\":{\"details\":\"Accessor to how many votes an address has cast total for the contest so far.\"},\"contestDeadline()\":{\"details\":\"Returns if a proposal has been deleted or not.\"},\"deleteProposals(uint256[])\":{\"details\":\"Delete proposals. Emits a {IGovernor-ProposalsDeleted} event.\"},\"getAllAddressesThatHaveVoted()\":{\"details\":\"Return all addresses that have voted.\"},\"getAllDeletedProposalIds()\":{\"details\":\"Return all deleted proposals.\"},\"getAllProposalAuthors()\":{\"details\":\"Return all proposal authors.\"},\"getAllProposalIds()\":{\"details\":\"Return all proposals.\"},\"getNumProposalsWithThisManyForVotes(uint256)\":{\"details\":\"Get the number of proposals that have `forVotes` number of for votes.\"},\"getOnlyProposalIdWithThisManyForVotes(uint256)\":{\"details\":\"Get the only proposal id with this many for votes. NOTE: Should only get called at a point at which you are sure there is only one proposal id       with a certain number of forVotes (we only use it in the RewardsModule after ties have       been checked for).\"},\"getProposal(uint256)\":{\"details\":\"Retrieve proposal data.\"},\"getProposalsWithThisManyForVotes(uint256)\":{\"details\":\"Get the whole array in `forVotesToProposalIds` for a given `forVotes` amount.\"},\"getRankIndex(uint256)\":{\"details\":\"Get the idx of sortedRanks considered to hold the queried rank taking deleted proposals into account.      A rank has to have > 0 votes to be considered valid.\"},\"getSortedRanks()\":{\"details\":\"Get the sortedRanks array.\"},\"isOrIsBelowTiedRank(uint256)\":{\"details\":\"Returns whether a given index in sortedRanks is tied or is below a tied rank.\"},\"proposalAddressVotes(uint256,address)\":{\"details\":\"Accessor to how many votes an address has cast for a given proposal.\"},\"proposalAddressesHaveVoted(uint256)\":{\"details\":\"Accessor to which addresses have cast a vote for a given proposal.\"},\"proposalVotes(uint256)\":{\"details\":\"Accessor to the internal vote counts for a given proposal.\"},\"propose((address,bool,string,(address),(address[],uint256)),bytes32[])\":{\"details\":\"Create a new proposal.\"},\"proposeWithoutProof((address,bool,string,(address),(address[],uint256)))\":{\"details\":\"Create a new proposal without a proof if you have already proposed with a proof.\"},\"setOfficialRewardsModule(address)\":{\"details\":\"Get the official rewards module contract for this contest (effectively reverse record).\"},\"validateProposalData((address,bool,string,(address),(address[],uint256)))\":{\"details\":\"Verifies that all of the metadata in the proposal is valid.\"},\"verifyProposer(address,bytes32[])\":{\"details\":\"Verifies that `account` is permissioned to propose via merkle proof.\"},\"verifyVoter(address,uint256,bytes32[])\":{\"details\":\"Verifies that `account` is permissioned to vote with `totalVotes` via merkle proof.\"},\"voteStart()\":{\"details\":\"Timestamp the contest vote begins. Votes open at the end of this block, so it is possible to propose during this block.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"NotInMerkle()\":[{\"notice\":\"Thrown if address/amount are not part of Merkle tree\"}]},\"kind\":\"user\",\"methods\":{\"checkProof(address,uint256,bytes32[],bool)\":{\"notice\":\"Allows checking of proofs for an address\"},\"submissionMerkleRoot()\":{\"notice\":\"Participant inclusion roots\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Contest.sol\":\"Contest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4\",\"dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"src/Contest.sol\":{\"keccak256\":\"0x1bd729629ebddbbf52eabdf470166df45123d43b0e7668840c2928f5c3c8d0db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18144a26cf50df08c132f8fc7b2c9c9d40e78bb09658f19d6761721106707d90\",\"dweb:/ipfs/QmWehFeNC4gMoiQjoWBkdtgTzHAKvH89om7mnLnAHZBF1c\"]},\"src/governance/Governor.sol\":{\"keccak256\":\"0xfceca2ad60bd835915a247f0d1a064e7fa6a8aacb8b05c59ab89cb25f94d82b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43061fa5dbf8d3cbb98e8c722ce708d896a054d9c21a3b21d961b9fccaf50643\",\"dweb:/ipfs/QmchwquKq5qQBqketAQU7dVvfoqSi1kvxDwsZbd83fe8yK\"]},\"src/governance/extensions/GovernorCountingSimple.sol\":{\"keccak256\":\"0x2fe4650775071b89ef1969eb85670a156ac76bbbc83c87c3f7036379dc8e2d73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb1bf4651ebcead31587b2b6e85d452466fe4d01712551bcc094a71eba3b39f2\",\"dweb:/ipfs/QmUZbZFr8B4keFBuewHKNBRDNzttYy85Vezy7QMtcMA8FN\"]},\"src/governance/extensions/GovernorModuleRegistry.sol\":{\"keccak256\":\"0x125d25059bc535ebe7b693655f4f659e9094142d4214a0d7c0fcf5a40abbd09f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9bbacb3d06b816012e6eb700a12e5bfc2b574d2cd7c7b7ce9ce4fc94ee7396a\",\"dweb:/ipfs/QmPA9As3fYH7uj8h1YijwK4Sh93AnRbuBBQMqxzjMBndWh\"]},\"src/governance/utils/GovernorMerkleVotes.sol\":{\"keccak256\":\"0x86a4459ec25486a65bd3a4bbbd9dab7c70c30a1f13839cffc03dcab372c58f7f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://da7278d541df3a2ca19c2e364f508b21a2d16551d50818dd21b32ea606401417\",\"dweb:/ipfs/QmP3bgW4D9yPF8YyrnSvSR5t2VNM4SAU32XzsgG3CGom32\"]},\"src/governance/utils/GovernorSorting.sol\":{\"keccak256\":\"0x3c34f027313e32b0f82f267f42deab9b37293c3c4b238880487a1abd6d8a091b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7566a7ea9c346cdaf30de3cd8ffb30da05d5c06b5ffdcf357fd439bd4dd54a1\",\"dweb:/ipfs/QmWrZ9gkqgn35Dp4AhTNr78jnZpSp1HNn1LMTrfwVwC6wU\"]},\"src/modules/RewardsModule.sol\":{\"keccak256\":\"0x06cfb084cfb354d0fb330037494922ff38511fb04b0b116b4f31f5f7de7f3e43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07cc98d8bc8e8392ff6d5d3538c073b5f0f3a0771f409080810e0f6ad8f776f3\",\"dweb:/ipfs/QmZMuMzidmADJCRVvL1td78PP4hcrUjBLVrqVhrf28N8P7\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_prompt",
              "type": "string"
            },
            {
              "internalType": "bytes32",
              "name": "_submissionMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "_votingMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256[]",
              "name": "_constructorIntParams",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AddressNotPermissionedToSubmit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AuthorIsNotSender"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CannotCancelACompletedContest"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CannotDeleteWhenCompleted"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CannotVoteOnDeletedProposal"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ContestAlreadyCancelled"
        },
        {
          "inputs": [
            {
              "internalType": "enum Governor.ContestState",
              "name": "currentState",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "ContestMustBeActiveToVote"
        },
        {
          "inputs": [
            {
              "internalType": "enum Governor.ContestState",
              "name": "currentState",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "ContestMustBeQueuedToPropose"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "maxProposalCount",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ContestSubmissionLimitReached"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DownvotingNotEnabled"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "DuplicateSubmission"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EmptyProposalDescription"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "msgValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "costToPropose",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "IncorrectCostToProposeSent"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IndexHasNotBeenPopulated"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidVoteType"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MoreThanOneProposalWithThisManyVotes"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NeedAtLeastOneVoteToVote"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NeedToSubmitWithProofFirst"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NeedToVoteWithProofFirst"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotEnoughVotesLeft"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotInMerkle"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyCreatorCanDelete"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyCreatorCanSetRewardsModule"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyJkLabsOrCreatorCanCancel"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RankCannotBeZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RankIsNotInSortedRanks"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "numAllowedProposalSubmissions",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "SenderSubmissionLimitReached"
        },
        {
          "inputs": [
            {
              "internalType": "enum Governor.Metadatas",
              "name": "unexpectedMetadata",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "UnexpectedMetadata"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroSignersInSafeMetadata"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroThresholdInSafeMetadata"
        },
        {
          "inputs": [],
          "type": "event",
          "name": "ContestCanceled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "JokeraceCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract RewardsModule",
              "name": "oldOfficialRewardsModule",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract RewardsModule",
              "name": "newOfficialRewardsModule",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OfficialRewardsModuleSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PaymentReleased",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "proposer",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProposalCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalIds",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProposalsDeleted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "voter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "numVotes",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VoteCast",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "AMOUNT_FOR_SUMBITTER_PROOF",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "JK_LABS_ADDRESS",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "METADATAS_COUNT",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressSubmitterVerified",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressTotalCastVoteCounts",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressTotalVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressTotalVotesVerified",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressesThatHaveVoted",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allProposalTotalVotes",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalIdsReturn",
              "type": "uint256[]"
            },
            {
              "internalType": "struct GovernorCountingSimple.VoteCounts[]",
              "name": "proposalVoteCountsArrayReturn",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "forVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "againstVotes",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allProposalTotalVotesWithoutDeleted",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalIdsReturn",
              "type": "uint256[]"
            },
            {
              "internalType": "struct GovernorCountingSimple.VoteCounts[]",
              "name": "proposalVoteCountsArrayReturn",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "forVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "againstVotes",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancel"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "canceled",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "totalVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "numVotes",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "castVote",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "numVotes",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "castVoteWithoutProof",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "addressToCheck",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "bool",
              "name": "voting",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkProof",
          "outputs": [
            {
              "internalType": "bool",
              "name": "verified",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "userAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "contestAddressTotalVotesCast",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "userTotalVotesCast",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contestDeadline",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contestStart",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "costToPropose",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "creator",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalIdsToDelete",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteProposals"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "deletedProposalIds",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "downvotingAllowed",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "forVotesToProposalIds",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllAddressesThatHaveVoted",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllDeletedProposalIds",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllProposalAuthors",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllProposalIds",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getNumProposalsWithThisManyForVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOnlyProposalIdWithThisManyForVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProposal",
          "outputs": [
            {
              "internalType": "struct Governor.ProposalCore",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "struct Governor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct Governor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProposalsWithThisManyForVotes",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalsWithThisManyForVotes",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "rank",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRankIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "rankIndex",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getSortedRanks",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "sortedRanksArray",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Governor.ProposalCore",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "struct Governor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct Governor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "hashProposal",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "idx",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOrIsBelowTiedRank",
          "outputs": [
            {
              "internalType": "bool",
              "name": "atOrBelowTiedRank",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxProposalCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "numAllowedProposalSubmissions",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "numSubmissions",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "officialRewardsModule",
          "outputs": [
            {
              "internalType": "contract RewardsModule",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "percentageToCreator",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "prompt",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "userAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalAddressVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalAddressesHaveVoted",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalAuthors",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalIds",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalIsDeleted",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalVotesStructs",
          "outputs": [
            {
              "internalType": "struct GovernorCountingSimple.VoteCounts",
              "name": "proposalVoteCounts",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "forVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "againstVotes",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposals",
          "outputs": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "struct Governor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct Governor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Governor.ProposalCore",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "struct Governor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct Governor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "propose",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Governor.ProposalCore",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "struct Governor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct Governor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "proposeWithoutProof",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rankLimit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract RewardsModule",
              "name": "officialRewardsModule_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOfficialRewardsModule"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "sortedRanks",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sortingEnabled",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "state",
          "outputs": [
            {
              "internalType": "enum Governor.ContestState",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "submissionMerkleRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalVotesCast",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Governor.ProposalCore",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "struct Governor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct Governor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "validateProposalData"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyProposer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalVotes",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyVoter"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "voteStart",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "votingDelay",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "votingMerkleRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "votingPeriod",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allProposalTotalVotes()": {
            "details": "Accessor to the internal vote counts for a given proposal."
          },
          "allProposalTotalVotesWithoutDeleted()": {
            "details": "Accessor to the internal vote counts for a given proposal that excludes deleted proposals."
          },
          "cancel()": {
            "details": "Cancels the contest. Emits a {IGovernor-ContestCanceled} event."
          },
          "castVote(uint256,uint8,uint256,uint256,bytes32[])": {
            "details": "Cast a vote with a merkle proof."
          },
          "castVoteWithoutProof(uint256,uint8,uint256)": {
            "details": "Cast a vote without a proof if you have already voted with a proof."
          },
          "checkProof(address,uint256,bytes32[],bool)": {
            "params": {
              "addressToCheck": "address of participant",
              "amount": "to check that the participant has the correct amount",
              "proof": "merkle proof to prove address and amount are in tree",
              "voting": "true if this is for a voting proof, false if this is for a submission proof"
            }
          },
          "contestAddressTotalVotesCast(address)": {
            "details": "Accessor to how many votes an address has cast total for the contest so far."
          },
          "contestDeadline()": {
            "details": "Returns if a proposal has been deleted or not."
          },
          "deleteProposals(uint256[])": {
            "details": "Delete proposals. Emits a {IGovernor-ProposalsDeleted} event."
          },
          "getAllAddressesThatHaveVoted()": {
            "details": "Return all addresses that have voted."
          },
          "getAllDeletedProposalIds()": {
            "details": "Return all deleted proposals."
          },
          "getAllProposalAuthors()": {
            "details": "Return all proposal authors."
          },
          "getAllProposalIds()": {
            "details": "Return all proposals."
          },
          "getNumProposalsWithThisManyForVotes(uint256)": {
            "details": "Get the number of proposals that have `forVotes` number of for votes."
          },
          "getOnlyProposalIdWithThisManyForVotes(uint256)": {
            "details": "Get the only proposal id with this many for votes. NOTE: Should only get called at a point at which you are sure there is only one proposal id       with a certain number of forVotes (we only use it in the RewardsModule after ties have       been checked for)."
          },
          "getProposal(uint256)": {
            "details": "Retrieve proposal data."
          },
          "getProposalsWithThisManyForVotes(uint256)": {
            "details": "Get the whole array in `forVotesToProposalIds` for a given `forVotes` amount."
          },
          "getRankIndex(uint256)": {
            "details": "Get the idx of sortedRanks considered to hold the queried rank taking deleted proposals into account.      A rank has to have > 0 votes to be considered valid."
          },
          "getSortedRanks()": {
            "details": "Get the sortedRanks array."
          },
          "isOrIsBelowTiedRank(uint256)": {
            "details": "Returns whether a given index in sortedRanks is tied or is below a tied rank."
          },
          "proposalAddressVotes(uint256,address)": {
            "details": "Accessor to how many votes an address has cast for a given proposal."
          },
          "proposalAddressesHaveVoted(uint256)": {
            "details": "Accessor to which addresses have cast a vote for a given proposal."
          },
          "proposalVotes(uint256)": {
            "details": "Accessor to the internal vote counts for a given proposal."
          },
          "propose((address,bool,string,(address),(address[],uint256)),bytes32[])": {
            "details": "Create a new proposal."
          },
          "proposeWithoutProof((address,bool,string,(address),(address[],uint256)))": {
            "details": "Create a new proposal without a proof if you have already proposed with a proof."
          },
          "setOfficialRewardsModule(address)": {
            "details": "Get the official rewards module contract for this contest (effectively reverse record)."
          },
          "validateProposalData((address,bool,string,(address),(address[],uint256)))": {
            "details": "Verifies that all of the metadata in the proposal is valid."
          },
          "verifyProposer(address,bytes32[])": {
            "details": "Verifies that `account` is permissioned to propose via merkle proof."
          },
          "verifyVoter(address,uint256,bytes32[])": {
            "details": "Verifies that `account` is permissioned to vote with `totalVotes` via merkle proof."
          },
          "voteStart()": {
            "details": "Timestamp the contest vote begins. Votes open at the end of this block, so it is possible to propose during this block."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "checkProof(address,uint256,bytes32[],bool)": {
            "notice": "Allows checking of proofs for an address"
          },
          "submissionMerkleRoot()": {
            "notice": "Participant inclusion roots"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@forge-std/=lib/forge-std/src/",
        "@openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Contest.sol": "Contest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa",
        "urls": [
          "bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4",
          "dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol": {
        "keccak256": "0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac",
        "urls": [
          "bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04",
          "dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "src/Contest.sol": {
        "keccak256": "0x1bd729629ebddbbf52eabdf470166df45123d43b0e7668840c2928f5c3c8d0db",
        "urls": [
          "bzz-raw://18144a26cf50df08c132f8fc7b2c9c9d40e78bb09658f19d6761721106707d90",
          "dweb:/ipfs/QmWehFeNC4gMoiQjoWBkdtgTzHAKvH89om7mnLnAHZBF1c"
        ],
        "license": "MIT"
      },
      "src/governance/Governor.sol": {
        "keccak256": "0xfceca2ad60bd835915a247f0d1a064e7fa6a8aacb8b05c59ab89cb25f94d82b6",
        "urls": [
          "bzz-raw://43061fa5dbf8d3cbb98e8c722ce708d896a054d9c21a3b21d961b9fccaf50643",
          "dweb:/ipfs/QmchwquKq5qQBqketAQU7dVvfoqSi1kvxDwsZbd83fe8yK"
        ],
        "license": "MIT"
      },
      "src/governance/extensions/GovernorCountingSimple.sol": {
        "keccak256": "0x2fe4650775071b89ef1969eb85670a156ac76bbbc83c87c3f7036379dc8e2d73",
        "urls": [
          "bzz-raw://bb1bf4651ebcead31587b2b6e85d452466fe4d01712551bcc094a71eba3b39f2",
          "dweb:/ipfs/QmUZbZFr8B4keFBuewHKNBRDNzttYy85Vezy7QMtcMA8FN"
        ],
        "license": "MIT"
      },
      "src/governance/extensions/GovernorModuleRegistry.sol": {
        "keccak256": "0x125d25059bc535ebe7b693655f4f659e9094142d4214a0d7c0fcf5a40abbd09f",
        "urls": [
          "bzz-raw://d9bbacb3d06b816012e6eb700a12e5bfc2b574d2cd7c7b7ce9ce4fc94ee7396a",
          "dweb:/ipfs/QmPA9As3fYH7uj8h1YijwK4Sh93AnRbuBBQMqxzjMBndWh"
        ],
        "license": "MIT"
      },
      "src/governance/utils/GovernorMerkleVotes.sol": {
        "keccak256": "0x86a4459ec25486a65bd3a4bbbd9dab7c70c30a1f13839cffc03dcab372c58f7f",
        "urls": [
          "bzz-raw://da7278d541df3a2ca19c2e364f508b21a2d16551d50818dd21b32ea606401417",
          "dweb:/ipfs/QmP3bgW4D9yPF8YyrnSvSR5t2VNM4SAU32XzsgG3CGom32"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/governance/utils/GovernorSorting.sol": {
        "keccak256": "0x3c34f027313e32b0f82f267f42deab9b37293c3c4b238880487a1abd6d8a091b",
        "urls": [
          "bzz-raw://e7566a7ea9c346cdaf30de3cd8ffb30da05d5c06b5ffdcf357fd439bd4dd54a1",
          "dweb:/ipfs/QmWrZ9gkqgn35Dp4AhTNr78jnZpSp1HNn1LMTrfwVwC6wU"
        ],
        "license": "MIT"
      },
      "src/modules/RewardsModule.sol": {
        "keccak256": "0x06cfb084cfb354d0fb330037494922ff38511fb04b0b116b4f31f5f7de7f3e43",
        "urls": [
          "bzz-raw://07cc98d8bc8e8392ff6d5d3538c073b5f0f3a0771f409080810e0f6ad8f776f3",
          "dweb:/ipfs/QmZMuMzidmADJCRVvL1td78PP4hcrUjBLVrqVhrf28N8P7"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Contest.sol",
    "id": 32634,
    "exportedSymbols": {
      "Address": [
        30478
      ],
      "Contest": [
        32633
      ],
      "Governor": [
        33804
      ],
      "GovernorCountingSimple": [
        34560
      ],
      "GovernorMerkleVotes": [
        34693
      ],
      "GovernorModuleRegistry": [
        34611
      ],
      "GovernorSorting": [
        34953
      ],
      "IERC20": [
        29638
      ],
      "IERC20Permit": [
        29743
      ],
      "MerkleProof": [
        31028
      ],
      "RewardsModule": [
        35659
      ],
      "SafeCast": [
        32569
      ],
      "SafeERC20": [
        30148
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1257:28",
    "nodes": [
      {
        "id": 32571,
        "nodeType": "PragmaDirective",
        "src": "32:23:28",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 32572,
        "nodeType": "ImportDirective",
        "src": "57:35:28",
        "nodes": [],
        "absolutePath": "src/governance/Governor.sol",
        "file": "./governance/Governor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32634,
        "sourceUnit": 33805,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32573,
        "nodeType": "ImportDirective",
        "src": "93:60:28",
        "nodes": [],
        "absolutePath": "src/governance/extensions/GovernorCountingSimple.sol",
        "file": "./governance/extensions/GovernorCountingSimple.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32634,
        "sourceUnit": 34561,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32574,
        "nodeType": "ImportDirective",
        "src": "154:60:28",
        "nodes": [],
        "absolutePath": "src/governance/extensions/GovernorModuleRegistry.sol",
        "file": "./governance/extensions/GovernorModuleRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32634,
        "sourceUnit": 34612,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32575,
        "nodeType": "ImportDirective",
        "src": "215:48:28",
        "nodes": [],
        "absolutePath": "src/governance/utils/GovernorSorting.sol",
        "file": "./governance/utils/GovernorSorting.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32634,
        "sourceUnit": 34954,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32633,
        "nodeType": "ContractDefinition",
        "src": "265:1023:28",
        "nodes": [
          {
            "id": 32632,
            "nodeType": "FunctionDefinition",
            "src": "338:948:28",
            "nodes": [],
            "body": {
              "id": 32631,
              "nodeType": "Block",
              "src": "1284:2:28",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 32593,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32581,
                    "src": "568:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 32594,
                    "name": "_prompt",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32583,
                    "src": "587:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 32595,
                    "name": "_submissionMerkleRoot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32585,
                    "src": "608:21:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "id": 32596,
                    "name": "_votingMerkleRoot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32587,
                    "src": "643:17:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 32597,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32590,
                      "src": "674:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 32599,
                    "indexExpression": {
                      "hexValue": "30",
                      "id": 32598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "696:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "674:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 32600,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32590,
                      "src": "728:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 32602,
                    "indexExpression": {
                      "hexValue": "31",
                      "id": 32601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "750:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "728:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 32603,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32590,
                      "src": "782:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 32605,
                    "indexExpression": {
                      "hexValue": "32",
                      "id": 32604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "804:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "782:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 32606,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32590,
                      "src": "837:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 32608,
                    "indexExpression": {
                      "hexValue": "33",
                      "id": 32607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "859:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "837:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 32609,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32590,
                      "src": "909:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 32611,
                    "indexExpression": {
                      "hexValue": "34",
                      "id": 32610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "931:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "909:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 32612,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32590,
                      "src": "967:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 32614,
                    "indexExpression": {
                      "hexValue": "35",
                      "id": 32613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "989:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "967:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 32615,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32590,
                      "src": "1026:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 32617,
                    "indexExpression": {
                      "hexValue": "36",
                      "id": 32616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1048:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_6_by_1",
                        "typeString": "int_const 6"
                      },
                      "value": "6"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1026:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 32618,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32590,
                      "src": "1081:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 32620,
                    "indexExpression": {
                      "hexValue": "37",
                      "id": 32619,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1103:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_7_by_1",
                        "typeString": "int_const 7"
                      },
                      "value": "7"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1081:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 32621,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 32592,
                  "name": "Governor",
                  "nameLocations": [
                    "546:8:28"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33804,
                  "src": "546:8:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "546:592:28"
              },
              {
                "arguments": [
                  {
                    "baseExpression": {
                      "id": 32623,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32590,
                      "src": "1176:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 32625,
                    "indexExpression": {
                      "hexValue": "38",
                      "id": 32624,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1198:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_8_by_1",
                        "typeString": "int_const 8"
                      },
                      "value": "8"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1176:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 32626,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32590,
                      "src": "1232:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 32628,
                    "indexExpression": {
                      "hexValue": "39",
                      "id": 32627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1254:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_9_by_1",
                        "typeString": "int_const 9"
                      },
                      "value": "9"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1232:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 32629,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 32622,
                  "name": "GovernorSorting",
                  "nameLocations": [
                    "1147:15:28"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34953,
                  "src": "1147:15:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "1147:132:28"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 32591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32581,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "373:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 32632,
                  "src": "359:19:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32580,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "359:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32583,
                  "mutability": "mutable",
                  "name": "_prompt",
                  "nameLocation": "402:7:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 32632,
                  "src": "388:21:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32582,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "388:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32585,
                  "mutability": "mutable",
                  "name": "_submissionMerkleRoot",
                  "nameLocation": "427:21:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 32632,
                  "src": "419:29:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 32584,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "419:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32587,
                  "mutability": "mutable",
                  "name": "_votingMerkleRoot",
                  "nameLocation": "466:17:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 32632,
                  "src": "458:25:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 32586,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "458:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32590,
                  "mutability": "mutable",
                  "name": "_constructorIntParams",
                  "nameLocation": "510:21:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 32632,
                  "src": "493:38:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 32588,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "493:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 32589,
                    "nodeType": "ArrayTypeName",
                    "src": "493:9:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "349:188:28"
            },
            "returnParameters": {
              "id": 32630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1284:0:28"
            },
            "scope": 32633,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 32576,
              "name": "GovernorCountingSimple",
              "nameLocations": [
                "285:22:28"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34560,
              "src": "285:22:28"
            },
            "id": 32577,
            "nodeType": "InheritanceSpecifier",
            "src": "285:22:28"
          },
          {
            "baseName": {
              "id": 32578,
              "name": "GovernorModuleRegistry",
              "nameLocations": [
                "309:22:28"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34611,
              "src": "309:22:28"
            },
            "id": 32579,
            "nodeType": "InheritanceSpecifier",
            "src": "309:22:28"
          }
        ],
        "canonicalName": "Contest",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          32633,
          34611,
          34560,
          33804,
          34693,
          34953
        ],
        "name": "Contest",
        "nameLocation": "274:7:28",
        "scope": 32634,
        "usedErrors": [
          32797,
          32799,
          32801,
          32806,
          32808,
          32814,
          32816,
          32821,
          32826,
          32830,
          32834,
          32838,
          32840,
          32842,
          32844,
          32846,
          32848,
          32850,
          32852,
          32854,
          32856,
          33848,
          33850,
          33852,
          33854,
          33856,
          33858,
          33860,
          34580,
          34624
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 28
}