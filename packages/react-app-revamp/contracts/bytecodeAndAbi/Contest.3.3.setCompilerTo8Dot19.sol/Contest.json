{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_prompt",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "_submissionMerkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_votingMerkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "_constructorIntParams",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "InvalidShortString",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotInMerkle",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "str",
          "type": "string"
        }
      ],
      "name": "StringTooLong",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TooManyMetadatas",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "ContestCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldContestStart",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newContestStart",
          "type": "uint256"
        }
      ],
      "name": "ContestStartSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldCreator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newCreator",
          "type": "address"
        }
      ],
      "name": "CreatorSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldDownvotingAllowed",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDownvotingAllowed",
          "type": "uint256"
        }
      ],
      "name": "DownvotingAllowedSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "EIP712DomainChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldMaxProposalCount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newMaxProposalCount",
          "type": "uint256"
        }
      ],
      "name": "MaxProposalCountSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldNumAllowedProposalSubmissions",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newNumAllowedProposalSubmissions",
          "type": "uint256"
        }
      ],
      "name": "NumAllowedProposalSubmissionsSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract RewardsModule",
          "name": "oldOfficialRewardsModule",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract RewardsModule",
          "name": "newOfficialRewardsModule",
          "type": "address"
        }
      ],
      "name": "OfficialRewardsModuleSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "proposalIds",
          "type": "uint256[]"
        }
      ],
      "name": "ProposalsDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "numVotes",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "VoteCast",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldVotingDelay",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newVotingDelay",
          "type": "uint256"
        }
      ],
      "name": "VotingDelaySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldVotingPeriod",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newVotingPeriod",
          "type": "uint256"
        }
      ],
      "name": "VotingPeriodSet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "AMOUNT_FOR_SUMBITTER_PROOF",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BALLOT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "COUNTING_MODE",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "METADATAS_COUNT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressSubmitterVerified",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressTotalCastVoteCounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressTotalVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressTotalVotesVerified",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allProposalTotalVotes",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "proposalIdsReturn",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ],
          "internalType": "struct GovernorCountingSimple.VoteCounts[]",
          "name": "proposalVoteCountsArrayReturn",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allProposalTotalVotesWithoutDeleted",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "proposalIdsReturn",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ],
          "internalType": "struct GovernorCountingSimple.VoteCounts[]",
          "name": "proposalVoteCountsArrayReturn",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "totalVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "numVotes",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "castVote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "numVotes",
          "type": "uint256"
        }
      ],
      "name": "castVoteWithoutProof",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addressToCheck",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        },
        {
          "internalType": "bool",
          "name": "voting",
          "type": "bool"
        }
      ],
      "name": "checkProof",
      "outputs": [
        {
          "internalType": "bool",
          "name": "verified",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "contestAddressTotalVotesCast",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "userTotalVotesCast",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contestDeadline",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contestStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "proposalIds",
          "type": "uint256[]"
        }
      ],
      "name": "deleteProposals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "downvotingAllowed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eip712Domain",
      "outputs": [
        {
          "internalType": "bytes1",
          "name": "fields",
          "type": "bytes1"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "version",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "verifyingContract",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "extensions",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllProposalIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getNumSubmissions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getProposal",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct IGovernor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IGovernor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct IGovernor.ProposalCore",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct IGovernor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IGovernor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct IGovernor.ProposalCore",
          "name": "proposal",
          "type": "tuple"
        }
      ],
      "name": "hashProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "highestTiedRanking",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "isProposalDeleted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ranking",
          "type": "uint256"
        }
      ],
      "name": "isTied",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lowestRanking",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxProposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numAllowedProposalSubmissions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "officialRewardsModule",
      "outputs": [
        {
          "internalType": "contract RewardsModule",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "prompt",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "proposalAddressVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "proposalAddressesHaveVoted",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "proposalVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalVotesStructs",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ],
          "internalType": "struct GovernorCountingSimple.VoteCounts",
          "name": "proposalVoteCounts",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct IGovernor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IGovernor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct IGovernor.ProposalCore",
          "name": "proposal",
          "type": "tuple"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "propose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct IGovernor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IGovernor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct IGovernor.ProposalCore",
          "name": "proposal",
          "type": "tuple"
        }
      ],
      "name": "proposeWithoutProof",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ranking",
          "type": "uint256"
        }
      ],
      "name": "rankingPosition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract RewardsModule",
          "name": "officialRewardsModule_",
          "type": "address"
        }
      ],
      "name": "setOfficialRewardsModule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setSortedAndTiedProposals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setSortedAndTiedProposalsHasBeenRun",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sortedProposalIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "excludeDeletedProposals",
          "type": "bool"
        }
      ],
      "name": "sortedProposals",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "sortedProposalIdsReturn",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum IGovernor.ContestState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "submissionMerkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tiedAdjustedRankingPosition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalVotesCast",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct IGovernor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IGovernor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct IGovernor.ProposalCore",
          "name": "proposal",
          "type": "tuple"
        }
      ],
      "name": "validateProposalData",
      "outputs": [
        {
          "internalType": "bool",
          "name": "dataValidated",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "verifyProposer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "verified",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "totalVotes",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "verifyVoter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "verified",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "voteStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingMerkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x6101a06040526016805460ff191690553480156200001c57600080fd5b50604051620046a0380380620046a08339810160408190526200003f9162000621565b8060008151811062000055576200005562000732565b60200260200101518160018151811062000073576200007362000732565b60200260200101518260028151811062000091576200009162000732565b602002602001015183600381518110620000af57620000af62000732565b602002602001015184600481518110620000cd57620000cd62000732565b602002602001015185600581518110620000eb57620000eb62000732565b60200260200101518a8a8a8a8181856200010a6200025060201b60201c565b620001178260006200026d565b61012052620001288160016200026d565b61014052815160208084019190912060e052815190820120610100524660a052620001b660e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c05261016091909152610180526007620001d88582620007d7565b506008620001e78482620007d7565b5050505050620001fd86620002a660201b60201c565b6200020885620002e7565b620002138462000328565b6200021e83620003cf565b620002298262000410565b620002348162000451565b6200023f3362000492565b5050505050505050505050620008fd565b604080518082019091526003815262332e3360e81b602082015290565b60006020835110156200028d576200028583620004fb565b9050620002a0565b816200029a8482620007d7565b5060ff90505b92915050565b600c5460408051918252602082018390527fd299feb1d7d9345a48559601c471c3be7eea9a11f21d5e86809198f40a974db4910160405180910390a1600c55565b600d5460408051918252602082018390527fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a93910160405180910390a1600d55565b600081116200038e5760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f7253657474696e67733a20766f74696e6720706572696f6420604482015266746f6f206c6f7760c81b60648201526084015b60405180910390fd5b600e5460408051918252602082018390527f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e8828910160405180910390a1600e55565b600f5460408051918252602082018390527fe971b819c7fb95c72451f557226aceb5baaf4994a9d39a79bbfa0040e87500b9910160405180910390a1600f55565b60105460408051918252602082018390527f4984ec996723330ee95979ed65a2a4b41edd914e68a187efe92596474643bdff910160405180910390a1601055565b60115460408051918252602082018390527f9c7b27f091caef3a83be73d89320404fa0c4a52993685ff0651672e49e6e55ab910160405180910390a1601155565b601254604080516001600160a01b03928316815291831660208301527fc30034fc2e9697980e08935bbc287db3eaa44a4aa113ef4c108b356adbf911ce910160405180910390a1601280546001600160a01b0319166001600160a01b0392909216919091179055565b600080829050601f8151111562000529578260405163305a27a960e01b8152600401620003859190620008a3565b80516200053682620008d8565b179392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156200057f576200057f6200053e565b604052919050565b60005b83811015620005a45781810151838201526020016200058a565b50506000910152565b600082601f830112620005bf57600080fd5b81516001600160401b03811115620005db57620005db6200053e565b620005f0601f8201601f191660200162000554565b8181528460208386010111156200060657600080fd5b6200061982602083016020870162000587565b949350505050565b600080600080600060a086880312156200063a57600080fd5b85516001600160401b03808211156200065257600080fd5b6200066089838a01620005ad565b96506020915081880151818111156200067857600080fd5b620006868a828b01620005ad565b9650506040880151945060608801519350608088015181811115620006aa57600080fd5b8801601f81018a13620006bc57600080fd5b805182811115620006d157620006d16200053e565b8060051b9250620006e484840162000554565b818152928201840192848101908c851115620006ff57600080fd5b928501925b848410156200071f5783518252928501929085019062000704565b8096505050505050509295509295909350565b634e487b7160e01b600052603260045260246000fd5b600181811c908216806200075d57607f821691505b6020821081036200077e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620007d257600081815260208120601f850160051c81016020861015620007ad5750805b601f850160051c820191505b81811015620007ce57828155600101620007b9565b5050505b505050565b81516001600160401b03811115620007f357620007f36200053e565b6200080b8162000804845462000748565b8462000784565b602080601f8311600181146200084357600084156200082a5750858301515b600019600386901b1c1916600185901b178555620007ce565b600085815260208120601f198616915b82811015620008745788860151825594840194600190910190840162000853565b5085821015620008935787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6020815260008251806020840152620008c481604085016020870162000587565b601f01601f19169190910160400192915050565b805160208083015191908110156200077e5760001960209190910360031b1b16919050565b60805160a05160c05160e0516101005161012051610140516101605161018051613d256200097b60003960008181610a620152610ead01526000818161091a01528181610cf501528181610e480152611116015260006114730152600061144901526000505060005050600050506000505060005050613d256000f3fe60806040526004361061038f5760003560e01c80637de418d5116101dc578063d45a010b11610102578063e5eb5a48116100a0578063f0a7db0a1161006f578063f0a7db0a14610b66578063f4f3d7ec14610b86578063fb8ddab414610ba6578063fb9bf8d414610bc657600080fd5b8063e5eb5a4814610afa578063ea8a1af014610b27578063ebc18b9b14610b3c578063efa90d3614610b5157600080fd5b8063dd96a19d116100dc578063dd96a19d14610a50578063dea5f6a614610a84578063deaaa7cc14610ab1578063e031535b14610ae557600080fd5b8063d45a010b146109db578063d8891619146109f0578063dd4e2ba514610a0a57600080fd5b8063a1ac6cb21161017a578063c0ffaa7811610149578063c0ffaa781461093c578063c19d93fb1461095c578063c7f758a81461097e578063cb853950146109ab57600080fd5b8063a1ac6cb214610878578063aec116b6146108a5578063b323580d146108db578063bddc16411461090857600080fd5b806386187488116101b657806386187488146107fe5780638a9cd5501461081e578063930de9791461083357806396f0e9621461086357600080fd5b80637de418d5146107ab578063832009af146107c157806384b0196e146107d657600080fd5b8063427d56c2116102c157806354fd4d501161025f5780636ca1a2c71161022e5780636ca1a2c7146107435780636e4eb81014610758578063785ddfe5146107785780637c65d7111461079657600080fd5b806354fd4d50146106ac5780635f953a03146106d857806360506ff61461070e57806365f162631461072357600080fd5b80634d24a67f1161029b5780634d24a67f1461060a57806350a5e5241461061f578063531bd81214610642578063544ffc9c1461066257600080fd5b8063427d56c21461059d578063458da87d146105ca578063476f4d8a146105ea57600080fd5b80632399c6601161032e578063347cf66511610308578063347cf6651461051f5780633932abb11461053b5780633b6d199b14610550578063419c533c1461057d57600080fd5b80632399c660146104ca578063262e59e9146104ea57806332763c22146104ff57600080fd5b806302d05d3f1161036a57806302d05d3f1461040a57806306fdde0314610437578063070dc5d91461045957806320b3e845146104aa57600080fd5b80624114a81461039d57806301ffc9a7146103c557806302a251a3146103f557600080fd5b3661039857005b005b600080fd5b3480156103a957600080fd5b506103b2610bdb565b6040519081526020015b60405180910390f35b3480156103d157600080fd5b506103e56103e036600461308a565b610beb565b60405190151581526020016103bc565b34801561040157600080fd5b506103b2610c22565b34801561041657600080fd5b5061041f610c2d565b6040516001600160a01b0390911681526020016103bc565b34801561044357600080fd5b5061044c610c41565b6040516103bc91906130fa565b34801561046557600080fd5b5061049d61047436600461310d565b601560209081526000918252604091829020825180840190935280548352600101549082015281565b6040516103bc9190613126565b3480156104b657600080fd5b506103e56104c5366004613199565b610cd3565b3480156104d657600080fd5b506103e56104e536600461310d565b610d69565b3480156104f657600080fd5b506103b2610dad565b34801561050b57600080fd5b506103e561051a366004613202565b610dc9565b34801561052b57600080fd5b506103b2678ac7230489e8000081565b34801561054757600080fd5b506103b2610f06565b34801561055c57600080fd5b506103b261056b36600461310d565b60009081526006602052604090205490565b34801561058957600080fd5b506103b2610598366004613283565b610f11565b3480156105a957600080fd5b506105bd6105b83660046132f3565b610f49565b6040516103bc9190613349565b3480156105d657600080fd5b506103b26105e5366004613607565b6110e1565b3480156105f657600080fd5b506103b2610605366004613607565b611112565b34801561061657600080fd5b506103b2600281565b34801561062b57600080fd5b5061063461117c565b6040516103bc92919061363b565b34801561064e57600080fd5b506103e561065d3660046136a4565b611282565b34801561066e57600080fd5b5061069761067d36600461310d565b600090815260156020526040902080546001909101549091565b604080519283526020830191909152016103bc565b3480156106b857600080fd5b50604080518082019091526003815262332e3360e81b602082015261044c565b3480156106e457600080fd5b506103b26106f33660046136ff565b6001600160a01b03166000908152600b602052604090205490565b34801561071a57600080fd5b506103b26112ed565b34801561072f57600080fd5b506103b261073e36600461371c565b6112f8565b34801561074f57600080fd5b506103b26113c0565b34801561076457600080fd5b50610697610773366004613751565b6113ec565b34801561078457600080fd5b50601c546001600160a01b031661041f565b3480156107a257600080fd5b5061044c611421565b3480156107b757600080fd5b506103b260135481565b3480156107cd57600080fd5b506103b2611430565b3480156107e257600080fd5b506107eb61143b565b6040516103bc9796959493929190613781565b34801561080a57600080fd5b506103b261081936600461310d565b6114c3565b34801561082a57600080fd5b506105bd6114fb565b34801561083f57600080fd5b506103e561084e3660046136ff565b60036020526000908152604090205460ff1681565b34801561086f57600080fd5b50610396611575565b34801561088457600080fd5b506103b26108933660046136ff565b60146020526000908152604090205481565b3480156108b157600080fd5b506103b26108c03660046136ff565b6001600160a01b031660009081526014602052604090205490565b3480156108e757600080fd5b506108fb6108f636600461310d565b611889565b6040516103bc919061382a565b34801561091457600080fd5b506103b27f000000000000000000000000000000000000000000000000000000000000000081565b34801561094857600080fd5b506103b261095736600461383d565b6118fb565b34801561096857600080fd5b5061097161193f565b6040516103bc91906138ae565b34801561098a57600080fd5b5061099e61099936600461310d565b6119b1565b6040516103bc91906138d6565b3480156109b757600080fd5b506103e56109c63660046136ff565b60046020526000908152604090205460ff1681565b3480156109e757600080fd5b50610634611b2b565b3480156109fc57600080fd5b506016546103e59060ff1681565b348015610a1657600080fd5b5060408051808201909152601881527f737570706f72743d627261766f2671756f72756d3d666f720000000000000000602082015261044c565b348015610a5c57600080fd5b506103b27f000000000000000000000000000000000000000000000000000000000000000081565b348015610a9057600080fd5b506103b2610a9f3660046136ff565b60026020526000908152604090205481565b348015610abd57600080fd5b506103b27f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f81565b348015610af157600080fd5b506103b2611cf6565b348015610b0657600080fd5b506103b2610b1536600461310d565b60176020526000908152604090205481565b348015610b3357600080fd5b50610396611d08565b348015610b4857600080fd5b506103b2611df2565b348015610b5d57600080fd5b506105bd611e1e565b348015610b7257600080fd5b50610396610b8136600461395c565b611e74565b348015610b9257600080fd5b50610396610ba13660046136ff565b6120b7565b348015610bb257600080fd5b506103e5610bc1366004613607565b612152565b348015610bd257600080fd5b506103b26123dd565b6000610be6600c5490565b905090565b60006001600160e01b0319821663eed9776760e01b1480610c1c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000610be6600e5490565b6000610be66012546001600160a01b031690565b606060078054610c50906139ec565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7c906139ec565b8015610cc95780601f10610c9e57610100808354040283529160200191610cc9565b820191906000526020600020905b815481529060010190602001808311610cac57829003601f168201915b5050505050905090565b6001600160a01b03831660009081526004602052604081205460ff16610d5e577f0000000000000000000000000000000000000000000000000000000000000000600003610d2357506001610d62565b610d3984678ac7230489e8000085856000610dc9565b506001600160a01b0384166000908152600460205260409020805460ff191660011790555b5060015b9392505050565b60165460009060ff16610d975760405162461bcd60e51b8152600401610d8e90613a26565b60405180910390fd5b5060009081526018602052604090205460ff1690565b6000610db7610c22565b610dbf611cf6565b610be69190613aa7565b6040516bffffffffffffffffffffffff19606087901b166020820152603481018590526000908190605401604051602081830303815290604052805190602001209050600083610e7857610e738686808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f000000000000000000000000000000000000000000000000000000000000000092508691506123e89050565b610ed8565b610ed88686808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f000000000000000000000000000000000000000000000000000000000000000092508691506123e89050565b905080610ef85760405163452c2df160e11b815260040160405180910390fd5b506001979650505050505050565b6000610be6600d5490565b600033610f2081878686611282565b50610f3d88828988604051806020016040528060008152506123fe565b98975050505050505050565b606060008083610f6057610f5b61117c565b610f68565b610f68611b2b565b915091506000825111610fd85760405162461bcd60e51b815260206004820152603260248201527f476f7665726e6f72536f7274696e673a2063616e6e6f7420736f72742061206c6044820152710d2e6e840decc40f4cae4de40d8cadccee8d60731b6064820152608401610d8e565b600082516001600160401b03811115610ff357610ff361335c565b60405190808252806020026020018201604052801561101c578160200160208202803683370190505b50905060005b82518110156110a05782818151811061103d5761103d613aba565b60200260200101516020015183828151811061105b5761105b613aba565b6020026020010151600001516110719190613ad0565b82828151811061108357611083613aba565b60209081029190910101528061109881613af7565b915050611022565b5060005b600184516110b29190613b10565b8110156110d7576110c4818386612618565b50806110cf81613af7565b9150506110a4565b5091949350505050565b6000816040516020016110f491906138d6565b60408051601f19818403018152919052805160209091012092915050565b60007f000000000000000000000000000000000000000000000000000000000000000015611169573360009081526004602052604090205460ff166111695760405162461bcd60e51b8152600401610d8e90613b23565b61117282612152565b50610c1c8261277e565b6060806000611189611e1e565b9050600081516001600160401b038111156111a6576111a661335c565b6040519080825280602002602001820160405280156111eb57816020015b60408051808201909152600080825260208201528152602001906001900390816111c45790505b50905060005b8251811015611278576015600084838151811061121057611210613aba565b602002602001015181526020019081526020016000206000016040518060400160405290816000820154815260200160018201548152505082828151811061125a5761125a613aba565b6020026020010181905250808061127090613af7565b9150506111f1565b5090939092509050565b6001600160a01b03841660009081526003602052604081205460ff166112e2576112b0858585856001610dc9565b506001600160a01b038516600090815260026020908152604080832087905560039091529020805460ff191660011790555b506001949350505050565b6000610be660115490565b3360008181526003602052604081205490919060ff1661139b5760405162461bcd60e51b815260206004820152605260248201527f476f7665726e6f723a20796f75206e65656420746f2063617374206120766f7460448201527f652077697468207468652070726f6f66206174206c65617374206f6e636520616064820152711b99081e5bdd481a185d995b89dd081e595d60721b608482015260a401610d8e565b6113b785828686604051806020016040528060008152506123fe565b95945050505050565b60165460009060ff166113e55760405162461bcd60e51b8152600401610d8e90613a26565b50601a5490565b60008281526015602090815260408083206001600160a01b0385168452600301909152902080546001909101545b9250929050565b606060088054610c50906139ec565b6000610be6600f5490565b60006060808280808361146e7f000000000000000000000000000000000000000000000000000000000000000083612b0b565b6114997f00000000000000000000000000000000000000000000000000000000000000006001612b0b565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60165460009060ff166114e85760405162461bcd60e51b8152600401610d8e90613a26565b5060009081526017602052604090205490565b60165460609060ff166115205760405162461bcd60e51b8152600401610d8e90613a26565b6019805480602002602001604051908101604052809291908181526020018280548015610cc957602002820191906000526020600020905b815481526020019060010190808311611558575050505050905090565b600461157f61193f565b600481111561159057611590613898565b146116135760405162461bcd60e51b815260206004820152604760248201527f476f7665726e6f72536f7274696e673a20636f6e74657374206d75737420626560448201527f20746f2063616c63756c61746520736f7274656420616e6420746965642070726064820152666f706f73616c7360c81b608482015260a401610d8e565b60165460ff16156116b25760405162461bcd60e51b815260206004820152605f60248201527f476f7665726e6f72536f7274696e673a20736574536f72746564416e6454696560448201527f6450726f706f73616c7328292068617320616c7265616479206265656e20727560648201527f6e20616e642069747320726573706563746976652076616c7565732073657400608482015260a401610d8e565b6116bc6001610f49565b80516116d091601991602090910190612f64565b506019546000906001906116e49082613aa7565b601b5560005b6019548110156118775760195460009061170690600190613b10565b905060008061174f601961171a8686613b10565b8154811061172a5761172a613aba565b9060005260206000200154600090815260156020526040902080546001909101549091565b909250905060006117608284613ad0565b9050846000036117a1576019549096508690600103611798576117838585613b10565b600087815260176020526040902055601a8690555b50505050611865565b8681036117f45760008681526018602052604090205460ff166117d8576000868152601860205260409020805460ff191660011790555b6019546117e6906001613aa7565b601b54036117f457601b8690555b86811461182d576118058585613b10565b611810906001613aa7565b6000878152601760205260409020558561182981613af7565b9650505b60195461183b866001613aa7565b0361185f5761184a8585613b10565b600087815260176020526040902055601a8690555b95505050505b8061186f81613af7565b9150506116ea565b50506016805460ff1916600117905550565b60008181526015602090815260409182902060028101805484518185028101850190955280855260609492938301828280156118ee57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116118d0575b5050505050915050919050565b6000611908338484610cd3565b6119245760405162461bcd60e51b8152600401610d8e90613b23565b61192d84612152565b506119378461277e565b949350505050565b60095460009060ff16156119535750600290565b600061195d610bdb565b905042811061196e57600091505090565b6000611978611cf6565b905042811061198a5760039250505090565b6000611994610dad565b90504281106119a7576001935050505090565b6004935050505090565b6119b9612faf565b6000828152600a6020908152604091829020825160a08101845281546001600160a01b0381168252600160a01b900460ff161515928101929092526001810180549293919291840191611a0b906139ec565b80601f0160208091040260200160405190810160405280929190818152602001828054611a37906139ec565b8015611a845780601f10611a5957610100808354040283529160200191611a84565b820191906000526020600020905b815481529060010190602001808311611a6757829003601f168201915b5050509183525050604080516020818101835260028501546001600160a01b03168252808401919091528151600385018054606093810283018401855282850181815294909501949193909284928491840182828015611b0d57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611aef575b50505050508152602001600182015481525050815250509050919050565b6060806000611b38611e1e565b9050600081516001600160401b03811115611b5557611b5561335c565b604051908082528060200260200182016040528015611b7e578160200160208202803683370190505b509050600082516001600160401b03811115611b9c57611b9c61335c565b604051908082528060200260200182016040528015611be157816020015b6040805180820190915260008082526020820152815260200190600190039081611bba5790505b5090506000805b8451811015611cea57611c20858281518110611c0657611c06613aba565b602002602001015160009081526006602052604090205490565b600114611cd857848181518110611c3957611c39613aba565b6020026020010151848381518110611c5357611c53613aba565b60200260200101818152505060156000868381518110611c7557611c75613aba565b6020026020010151815260200190815260200160002060000160405180604001604052908160008201548152602001600182015481525050838381518110611cbf57611cbf613aba565b6020908102919091010152611cd5600183613aa7565b91505b80611ce281613af7565b915050611be8565b50919590945092505050565b6000611d00610f06565b610dbf610bdb565b611d10610c2d565b6001600160a01b0316336001600160a01b031614611d2d57600080fd5b6000611d3761193f565b90506002816004811115611d4d57611d4d613898565b14158015611d6d57506004816004811115611d6a57611d6a613898565b14155b611db95760405162461bcd60e51b815260206004820152601c60248201527f476f7665726e6f723a20636f6e74657374206e6f7420616374697665000000006044820152606401610d8e565b6009805460ff191660011790556040517f4cd963a081760a54f571abc0f1db4dde31b4a07d8d6da3e844b8c6f47eeaaa4290600090a150565b60165460009060ff16611e175760405162461bcd60e51b8152600401610d8e90613a26565b50601b5490565b60606005805480602002602001604051908101604052809291908181526020018280548015610cc95760200282019190600052602060002090815481526020019060010190808311611558575050505050905090565b611e7c610c2d565b6001600160a01b0316336001600160a01b031614611f025760405162461bcd60e51b815260206004820152603760248201527f476f7665726e6f723a206f6e6c792074686520636f6e7465737420637265617460448201527f6f722063616e2064656c6574652070726f706f73616c730000000000000000006064820152608401610d8e565b6004611f0c61193f565b6004811115611f1d57611f1d613898565b03611fa25760405162461bcd60e51b815260206004820152604960248201527f476f7665726e6f723a2064656c6574696f6e206f662070726f706f73616c732060448201527f61667465722074686520656e64206f66206120636f6e74657374206973206e6f6064820152681d08185b1b1bddd95960ba1b608482015260a401610d8e565b60005b815181101561207c5760066000838381518110611fc457611fc4613aba565b602002602001015181526020019081526020016000205460011461206a57600160066000848481518110611ffa57611ffa613aba565b60200260200101518152602001908152602001600020819055506040518060600160405280603d8152602001613cb3603d9139600a600084848151811061204357612043613aba565b6020026020010151815260200190815260200160002060010190816120689190613bc1565b505b8061207481613af7565b915050611fa5565b507f75a75cf5c561892f4cc5b26c1b8e933849b42238c96dd073d080d1ae96c51416816040516120ac9190613349565b60405180910390a150565b6120bf610c2d565b6001600160a01b0316336001600160a01b0316146120dc57600080fd5b60006120f0601c546001600160a01b031690565b601c80546001600160a01b0319166001600160a01b0385811691821790925560408051928416835260208301919091529192507f753a2cf8d360cff631674504210913e48247f8e56b3e6d2006c2103d4095999f910160405180910390a15050565b80516000906001600160a01b031633146121c75760405162461bcd60e51b815260206004820152603060248201527f476f7665726e6f723a207468652070726f706f73616c20617574686f72206d7560448201526f39ba1031329036b9b39739b2b73232b960811b6064820152608401610d8e565b60005b600281101561237f5760008160018111156121e7576121e7613898565b905060008160018111156121fd576121fd613898565b03612208575061236d565b600181600181111561221c5761221c613898565b0361235257608084015151516000036122ae5760405162461bcd60e51b815260206004820152604860248201527f476f7665726e6f724d6574616461746156616c69646174696f6e3a207468657260448201527f652063616e6e6f74206265207a65726f207369676e65727320696e20736166656064820152674d6574616461746160c01b608482015260a401610d8e565b83608001516020015160000361233a5760405162461bcd60e51b8152602060048201526044602482018190527f476f7665726e6f724d6574616461746156616c69646174696f6e3a2074687265908201527f73686f6c642063616e6e6f74206265207a65726f20696e20736166654d6574616064820152636461746160e01b608482015260a401610d8e565b6080840151515160000361234d57600080fd5b61236b565b6040516308b6566d60e11b815260040160405180910390fd5b505b8061237781613af7565b9150506121ca565b508160400151516000036123d55760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a20656d7074792070726f706f73616c00000000000000006044820152606401610d8e565b506001919050565b6000610be660105490565b6000826123f58584612bb7565b14949350505050565b6000600161240a61193f565b600481111561241b5761241b613898565b146124745760405162461bcd60e51b815260206004820152602360248201527f476f7665726e6f723a20766f7465206e6f742063757272656e746c792061637460448201526269766560e81b6064820152608401610d8e565b600083116124d85760405162461bcd60e51b815260206004820152602b60248201527f476f7665726e6f723a2063616e6e6f7420766f746520776974682030206f722060448201526a666577657220766f74657360a81b6064820152608401610d8e565b6001600160a01b03851660009081526003602052604090205460ff1661257e5760405162461bcd60e51b815260206004820152604f60248201527f476f7665726e6f723a20796f75206e65656420746f2076657269667920796f7560448201527f72206e756d626572206f6620766f74657320616761696e737420746865206d6560648201526e1c9adb19481c9bdbdd08199a5c9cdd608a1b608482015260a401610d8e565b6125b086868686600260008b6001600160a01b03166001600160a01b0316815260200190815260200160002054612c04565b846001600160a01b03167fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda4878686866040516125ef9493929190613c80565b60405180910390a2505050506001600160a01b0316600090815260026020526040902054919050565b600083805b84518110156126765784828151811061263857612638613aba565b602002602001015185828151811061265257612652613aba565b60200260200101511215612664578091505b8061266e81613af7565b91505061261d565b50848103612688576000915050610d62565b600084868151811061269c5761269c613aba565b602002602001015190508482815181106126b8576126b8613aba565b60200260200101518587815181106126d2576126d2613aba565b602002602001018181525050808583815181106126f1576126f1613aba565b602002602001018181525050600084878151811061271157612711613aba565b6020026020010151905084838151811061272d5761272d613aba565b602002602001015185888151811061274757612747613aba565b6020026020010181815250508085848151811061276657612766613aba565b60209081029190910101525060019695505050505050565b6000600361278a61193f565b600481111561279b5761279b613898565b1461280e5760405162461bcd60e51b815260206004820152603e60248201527f476f7665726e6f723a20636f6e74657374206d7573742062652071756575656460448201527f20666f722070726f706f73616c7320746f206265207375626d697474656400006064820152608401610d8e565b612816611430565b336000908152600b6020526040902054106128cd5760405162461bcd60e51b815260206004820152606560248201527f476f7665726e6f723a207468652073616d6520616464726573732063616e6e6f60448201527f74207375626d6974206d6f7265207468616e20746865206e756d416c6c6f776560648201527f6450726f706f73616c5375626d697373696f6e7320666f72207468697320636f6084820152641b9d195cdd60da1b60a482015260c401610d8e565b6128d56123dd565b6005541061294b5760405162461bcd60e51b815260206004820152603960248201527f476f7665726e6f723a20746865206d6178206e756d626572206f662070726f7060448201527f6f73616c732068617665206265656e207375626d6974746564000000000000006064820152608401610d8e565b6000612956836110e1565b6000818152600a6020526040902054909150600160a01b900460ff16156129d15760405162461bcd60e51b815260206004820152602960248201527f476f7665726e6f723a206475706c69636174652070726f706f73616c73206e6f6044820152681d08185b1b1bddd95960ba1b6064820152608401610d8e565b6005805460018181019092557f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0018290556000828152600a602090815260409182902086518154928801511515600160a01b026001600160a81b03199093166001600160a01b0390911617919091178155908501518592820190612a559082613bc1565b506060820151516002820180546001600160a01b0319166001600160a01b039092169190911790556080820151805180516003840191612a9a91839160200190613020565b50602091820151600191820155336000908152600b9092526040822080549194509250612ac8908490613aa7565b9091555050604080518281523360208201527fcd423cc1203c0af96b9b3d68d73b3064a69de2d14450bb7181c5e5df2132b358910160405180910390a192915050565b606060ff8314612b2557612b1e83612ed1565b9050610c1c565b818054612b31906139ec565b80601f0160208091040260200160405190810160405280929190818152602001828054612b5d906139ec565b8015612baa5780601f10612b7f57610100808354040283529160200191612baa565b820191906000526020600020905b815481529060010190602001808311612b8d57829003601f168201915b5050505050905092915050565b600081815b8451811015612bfc57612be882868381518110612bdb57612bdb613aba565b6020026020010151612f10565b915080612bf481613af7565b915050612bbc565b509392505050565b60008581526015602090815260408083206001600160a01b0388168452601490925290912054612c349083613b10565b831115612c9f5760405162461bcd60e51b815260206004820152603360248201527f476f7665726e6f72566f74696e6753696d706c653a206e6f7420656e6f756768604482015272081d9bdd195cc81b19599d081d1bc818d85cdd606a1b6064820152608401610d8e565b6001600160a01b03851660009081526003820160205260409020541560ff8516612d1157815484908390600090612cd7908490613aa7565b90915550506001600160a01b038616600090815260038301602052604081208054869290612d06908490613aa7565b90915550612e4b9050565b60001960ff861601612de557612d256112ed565b600114612d9c576040805162461bcd60e51b81526020600482015260248101919091527f476f7665726e6f72566f74696e6753696d706c653a20646f776e766f74696e6760448201527f206973206e6f7420656e61626c656420666f72207468697320436f6e746573746064820152608401610d8e565b83826000016001016000828254612db39190613aa7565b90915550506001600160a01b038616600090815260038301602052604081206001018054869290612d06908490613aa7565b60405162461bcd60e51b815260206004820152603560248201527f476f7665726e6f72566f74696e6753696d706c653a20696e76616c69642076616044820152746c756520666f7220656e756d20566f74655479706560581b6064820152608401610d8e565b8015612e8257600282018054600181018255600091825260209091200180546001600160a01b0319166001600160a01b0388161790555b6001600160a01b03861660009081526014602052604081208054869290612eaa908490613aa7565b925050819055508360136000828254612ec39190613aa7565b909155505050505050505050565b60606000612ede83612f3c565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000818310612f2c576000828152602084905260409020610d62565b5060009182526020526040902090565b600060ff8216601f811115610c1c57604051632cd44ac360e21b815260040160405180910390fd5b828054828255906000526020600020908101928215612f9f579160200282015b82811115612f9f578251825591602001919060010190612f84565b50612fab929150613075565b5090565b6040518060a0016040528060006001600160a01b0316815260200160001515815260200160608152602001612ff9604051806020016040528060006001600160a01b031681525090565b815260200161301b604051806040016040528060608152602001600081525090565b905290565b828054828255906000526020600020908101928215612f9f579160200282015b82811115612f9f57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190613040565b5b80821115612fab5760008155600101613076565b60006020828403121561309c57600080fd5b81356001600160e01b031981168114610d6257600080fd5b6000815180845260005b818110156130da576020818501810151868301820152016130be565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610d6260208301846130b4565b60006020828403121561311f57600080fd5b5035919050565b815181526020808301519082015260408101610c1c565b6001600160a01b038116811461315257600080fd5b50565b60008083601f84011261316757600080fd5b5081356001600160401b0381111561317e57600080fd5b6020830191508360208260051b850101111561141a57600080fd5b6000806000604084860312156131ae57600080fd5b83356131b98161313d565b925060208401356001600160401b038111156131d457600080fd5b6131e086828701613155565b9497909650939450505050565b803580151581146131fd57600080fd5b919050565b60008060008060006080868803121561321a57600080fd5b85356132258161313d565b94506020860135935060408601356001600160401b0381111561324757600080fd5b61325388828901613155565b90945092506132669050606087016131ed565b90509295509295909350565b803560ff811681146131fd57600080fd5b60008060008060008060a0878903121561329c57600080fd5b863595506132ac60208801613272565b9450604087013593506060870135925060808701356001600160401b038111156132d557600080fd5b6132e189828a01613155565b979a9699509497509295939492505050565b60006020828403121561330557600080fd5b610d62826131ed565b600081518084526020808501945080840160005b8381101561333e57815187529582019590820190600101613322565b509495945050505050565b602081526000610d62602083018461330e565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156133945761339461335c565b60405290565b60405160a081016001600160401b03811182821017156133945761339461335c565b604051601f8201601f191681016001600160401b03811182821017156133e4576133e461335c565b604052919050565b6000602082840312156133fe57600080fd5b604051602081018181106001600160401b03821117156134205761342061335c565b60405290508082356134318161313d565b905292915050565b60006001600160401b038211156134525761345261335c565b5060051b60200190565b60006040828403121561346e57600080fd5b613476613372565b905081356001600160401b0381111561348e57600080fd5b8201601f8101841361349f57600080fd5b803560206134b46134af83613439565b6133bc565b82815260059290921b830181019181810190878411156134d357600080fd5b938201935b838510156134fa5784356134eb8161313d565b825293820193908201906134d8565b85525093840135938301939093525092915050565b600060a0828403121561352157600080fd5b61352961339a565b905081356135368161313d565b815260206135458382016131ed565b8183015260408301356001600160401b038082111561356357600080fd5b818501915085601f83011261357757600080fd5b8135818111156135895761358961335c565b61359b601f8201601f191685016133bc565b81815287858386010111156135af57600080fd5b8185850186830137600085838301015280604087015250506135d486606087016133ec565b606085015260808501359250808311156135ed57600080fd5b50506135fb8482850161345c565b60808301525092915050565b60006020828403121561361957600080fd5b81356001600160401b0381111561362f57600080fd5b6119378482850161350f565b6000604080835261364e8184018661330e565b83810360208581019190915285518083528682019282019060005b818110156136965761368683865180518252602090810151910152565b9383019391850191600101613669565b509098975050505050505050565b600080600080606085870312156136ba57600080fd5b84356136c58161313d565b93506020850135925060408501356001600160401b038111156136e757600080fd5b6136f387828801613155565b95989497509550505050565b60006020828403121561371157600080fd5b8135610d628161313d565b60008060006060848603121561373157600080fd5b8335925061374160208501613272565b9150604084013590509250925092565b6000806040838503121561376457600080fd5b8235915060208301356137768161313d565b809150509250929050565b60ff60f81b8816815260e0602082015260006137a060e08301896130b4565b82810360408401526137b281896130b4565b606084018890526001600160a01b038716608085015260a0840186905283810360c085015290506137e3818561330e565b9a9950505050505050505050565b600081518084526020808501945080840160005b8381101561333e5781516001600160a01b031687529582019590820190600101613805565b602081526000610d6260208301846137f1565b60008060006040848603121561385257600080fd5b83356001600160401b038082111561386957600080fd5b6138758783880161350f565b9450602086013591508082111561388b57600080fd5b506131e086828701613155565b634e487b7160e01b600052602160045260246000fd5b60208101600583106138d057634e487b7160e01b600052602160045260246000fd5b91905290565b60208152600060018060a01b03808451166020840152602084015115156040840152604084015160a0606085015261391160c08501826130b4565b90508160608601515116608085015260808501519150601f198482030160a085015281516040825261394660408301826137f1565b6020938401519290930191909152509392505050565b6000602080838503121561396f57600080fd5b82356001600160401b0381111561398557600080fd5b8301601f8101851361399657600080fd5b80356139a46134af82613439565b81815260059190911b820183019083810190878311156139c357600080fd5b928401925b828410156139e1578335825292840192908401906139c8565b979650505050505050565b600181811c90821680613a0057607f821691505b602082108103613a2057634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526045908201527f526577617264734d6f64756c653a2072756e20736574536f72746564416e645460408201527f69656450726f706f73616c73282920746f20706f70756c61746520746869732060608201526476616c756560d81b608082015260a00190565b634e487b7160e01b600052601160045260246000fd5b80820180821115610c1c57610c1c613a91565b634e487b7160e01b600052603260045260246000fd5b8181036000831280158383131683831282161715613af057613af0613a91565b5092915050565b600060018201613b0957613b09613a91565b5060010190565b81810381811115610c1c57610c1c613a91565b6020808252602f908201527f476f7665726e6f723a2061646472657373206973206e6f74207065726d69737360408201526e1a5bdb9959081d1bc81cdd589b5a5d608a1b606082015260800190565b601f821115613bbc57600081815260208120601f850160051c81016020861015613b995750805b601f850160051c820191505b81811015613bb857828155600101613ba5565b5050505b505050565b81516001600160401b03811115613bda57613bda61335c565b613bee81613be884546139ec565b84613b72565b602080601f831160018114613c235760008415613c0b5750858301515b600019600386901b1c1916600185901b178555613bb8565b600085815260208120601f198616915b82811015613c5257888601518255948401946001909101908401613c33565b5085821015613c705787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b84815260ff84166020820152826040820152608060608201526000613ca860808301846130b4565b969550505050505056fe546869732070726f706f73616c20686173206265656e2064656c65746564206279207468652063726561746f72206f662074686520636f6e746573742ea264697066735822122024bf350849a566b9406441513436ab64c28ff31946a37b3a3a3504e93acb68ff64736f6c63430008130033",
    "sourceMap": "271:1911:40:-:0;;;273:55:47;;;-1:-1:-1;;273:55:47;;;365:716:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;678:21;700:1;678:24;;;;;;;;:::i;:::-;;;;;;;740:21;762:1;740:24;;;;;;;;:::i;:::-;;;;;;;802:21;824:1;802:24;;;;;;;;:::i;:::-;;;;;;;865:21;887:1;865:24;;;;;;;;:::i;:::-;;;;;;;945:21;967:1;945:24;;;;;;;;:::i;:::-;;;;;;;1011:21;1033:1;1011:24;;;;;;;;:::i;:::-;;;;;;;582:5;589:7;598:21;621:17;1957:21:41;1980:17;2014:5;2021:9;:7;;;:9;;:::i;:::-;3251:45:32;:4;3282:13;3251:30;:45::i;:::-;3243:53;;3317:51;:7;3351:16;3317:33;:51::i;:::-;3306:62;;3392:22;;;;;;;;;;3378:36;;3441:25;;;;;;3424:42;;3494:13;3477:30;;3542:23;4077:11;;4090:14;;4054:81;;;1929:95;4054:81;;;5649:25:51;5690:18;;;5683:34;;;;5733:18;;;5726:34;4106:13:32;5776:18:51;;;5769:34;4129:4:32;5819:19:51;;;5812:61;4018:7:32;;5621:19:51;;4054:81:32;;;;;;;;;;;;4044:92;;;;;;4037:99;;3963:180;;3542:23;3517:48;;-1:-1:-1;;3597:4:32;3575:27;;894:44:42;;;;;963:36;;2046:5:41::2;:13;2054:5:::0;2046;:13:::2;:::i;:::-;-1:-1:-1::0;2069:7:41::2;:17;2079:7:::0;2069;:17:::2;:::i;:::-;;1815:278:::0;;;;1483:37:46;1500:19;1483:16;;;:37;;:::i;:::-;1530:35;1546:18;1530:15;:35::i;:::-;1575:37;1592:19;1575:16;:37::i;:::-;1622:71;1656:36;1622:33;:71::i;:::-;1703:45;1724:23;1703:20;:45::i;:::-;1758:47;1780:24;1758:21;:47::i;:::-;1815:23;1827:10;1815:11;:23::i;:::-;1208:637;;;;;;365:716:40;;;;;271:1911;;2987:101:41;3069:12;;;;;;;;;;;;-1:-1:-1;;;3069:12:41;;;;;2987:101::o;2895:341:27:-;2991:11;3040:2;3024:5;3018:19;:24;3014:216;;;3065:20;3079:5;3065:13;:20::i;:::-;3058:27;;;;3014:216;3142:5;3116:46;3157:5;3142;3116:46;:::i;:::-;-1:-1:-1;1371:66:27;;-1:-1:-1;3014:216:27;2895:341;;;;:::o;3247:178:46:-;3346:13;;3330:47;;;6058:25:51;;;6114:2;6099:18;;6092:34;;;3330:47:46;;6031:18:51;3330:47:46;;;;;;;3387:13;:31;3247:178::o;3543:171::-;3639:12;;3624:44;;;6058:25:51;;;6114:2;6099:18;;6092:34;;;3624:44:46;;6031:18:51;3624:44:46;;;;;;;3678:12;:29;3543:171::o;3834:316::-;3995:1;3977:15;:19;3969:71;;;;-1:-1:-1;;;3969:71:46;;6339:2:51;3969:71:46;;;6321:21:51;6378:2;6358:18;;;6351:30;6417:34;6397:18;;;6390:62;-1:-1:-1;;;6468:18:51;;;6461:37;6515:19;;3969:71:46;;;;;;;;;4071:13;;4055:47;;;6058:25:51;;;6114:2;6099:18;;6092:34;;;4055:47:46;;6031:18:51;4055:47:46;;;;;;;4112:13;:31;3834:316::o;4337:297::-;4487:30;;4454:98;;;6058:25:51;;;6114:2;6099:18;;6092:34;;;4454:98:46;;6031:18:51;4454:98:46;;;;;;;4562:30;:65;4337:297::o;4763:206::-;4874:17;;4854:59;;;6058:25:51;;;6114:2;6099:18;;6092:34;;;4854:59:46;;6031:18:51;4854:59:46;;;;;;;4923:17;:39;4763:206::o;5101:213::-;5215:18;;5194:62;;;6058:25:51;;;6114:2;6099:18;;6092:34;;;5194:62:46;;6031:18:51;5194:62:46;;;;;;;5266:18;:41;5101:213::o;5419:143::-;5503:8;;5492:32;;;-1:-1:-1;;;;;5503:8:46;;;6757:34:51;;6827:15;;;6822:2;6807:18;;6800:43;5492:32:46;;6692:18:51;5492:32:46;;;;;;;5534:8;:21;;-1:-1:-1;;;;;;5534:21:46;-1:-1:-1;;;;;5534:21:46;;;;;;;;;;5419:143::o;1689:286:27:-;1754:11;1777:17;1803:3;1777:30;;1835:2;1821:4;:11;:16;1817:72;;;1874:3;1860:18;;-1:-1:-1;;;1860:18:27;;;;;;;;:::i;1817:72::-;1955:11;;1938:13;1955:4;1938:13;:::i;:::-;1930:36;;1689:286;-1:-1:-1;;;1689:286:27:o;14:127:51:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:51;247:40;;-1:-1:-1;;;;;302:34:51;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:51:o;426:250::-;511:1;521:113;535:6;532:1;529:13;521:113;;;611:11;;;605:18;592:11;;;585:39;557:2;550:10;521:113;;;-1:-1:-1;;668:1:51;650:16;;643:27;426:250::o;681:510::-;735:5;788:3;781:4;773:6;769:17;765:27;755:55;;806:1;803;796:12;755:55;829:13;;-1:-1:-1;;;;;854:26:51;;851:52;;;883:18;;:::i;:::-;927:55;970:2;951:13;;-1:-1:-1;;947:27:51;976:4;943:38;927:55;:::i;:::-;1007:2;998:7;991:19;1053:3;1046:4;1041:2;1033:6;1029:15;1025:26;1022:35;1019:55;;;1070:1;1067;1060:12;1019:55;1083:77;1157:2;1150:4;1141:7;1137:18;1130:4;1122:6;1118:17;1083:77;:::i;:::-;1178:7;681:510;-1:-1:-1;;;;681:510:51:o;1196:1468::-;1347:6;1355;1363;1371;1379;1432:3;1420:9;1411:7;1407:23;1403:33;1400:53;;;1449:1;1446;1439:12;1400:53;1476:16;;-1:-1:-1;;;;;1541:14:51;;;1538:34;;;1568:1;1565;1558:12;1538:34;1591:61;1644:7;1635:6;1624:9;1620:22;1591:61;:::i;:::-;1581:71;;1671:2;1661:12;;1719:2;1708:9;1704:18;1698:25;1748:2;1738:8;1735:16;1732:36;;;1764:1;1761;1754:12;1732:36;1787:63;1842:7;1831:8;1820:9;1816:24;1787:63;:::i;:::-;1777:73;;;1890:2;1879:9;1875:18;1869:25;1859:35;;1934:2;1923:9;1919:18;1913:25;1903:35;;1984:3;1973:9;1969:19;1963:26;2014:2;2004:8;2001:16;1998:36;;;2030:1;2027;2020:12;1998:36;2053:24;;2108:4;2100:13;;2096:27;-1:-1:-1;2086:55:51;;2137:1;2134;2127:12;2086:55;2166:2;2160:9;2188:2;2184;2181:10;2178:36;;;2194:18;;:::i;:::-;2240:2;2237:1;2233:10;2223:20;;2263:28;2287:2;2283;2279:11;2263:28;:::i;:::-;2325:15;;;2395:11;;;2391:20;;;2356:12;;;;2423:19;;;2420:39;;;2455:1;2452;2445:12;2420:39;2479:11;;;;2499:135;2515:6;2510:3;2507:15;2499:135;;;2581:10;;2569:23;;2532:12;;;;2612;;;;2499:135;;;2653:5;2643:15;;;;;;;;1196:1468;;;;;;;;:::o;2669:127::-;2730:10;2725:3;2721:20;2718:1;2711:31;2761:4;2758:1;2751:15;2785:4;2782:1;2775:15;2801:380;2880:1;2876:12;;;;2923;;;2944:61;;2998:4;2990:6;2986:17;2976:27;;2944:61;3051:2;3043:6;3040:14;3020:18;3017:38;3014:161;;3097:10;3092:3;3088:20;3085:1;3078:31;3132:4;3129:1;3122:15;3160:4;3157:1;3150:15;3014:161;;2801:380;;;:::o;3312:545::-;3414:2;3409:3;3406:11;3403:448;;;3450:1;3475:5;3471:2;3464:17;3520:4;3516:2;3506:19;3590:2;3578:10;3574:19;3571:1;3567:27;3561:4;3557:38;3626:4;3614:10;3611:20;3608:47;;;-1:-1:-1;3649:4:51;3608:47;3704:2;3699:3;3695:12;3692:1;3688:20;3682:4;3678:31;3668:41;;3759:82;3777:2;3770:5;3767:13;3759:82;;;3822:17;;;3803:1;3792:13;3759:82;;;3763:3;;;3403:448;3312:545;;;:::o;4033:1352::-;4153:10;;-1:-1:-1;;;;;4175:30:51;;4172:56;;;4208:18;;:::i;:::-;4237:97;4327:6;4287:38;4319:4;4313:11;4287:38;:::i;:::-;4281:4;4237:97;:::i;:::-;4389:4;;4453:2;4442:14;;4470:1;4465:663;;;;5172:1;5189:6;5186:89;;;-1:-1:-1;5241:19:51;;;5235:26;5186:89;-1:-1:-1;;3990:1:51;3986:11;;;3982:24;3978:29;3968:40;4014:1;4010:11;;;3965:57;5288:81;;4435:944;;4465:663;3259:1;3252:14;;;3296:4;3283:18;;-1:-1:-1;;4501:20:51;;;4619:236;4633:7;4630:1;4627:14;4619:236;;;4722:19;;;4716:26;4701:42;;4814:27;;;;4782:1;4770:14;;;;4649:19;;4619:236;;;4623:3;4883:6;4874:7;4871:19;4868:201;;;4944:19;;;4938:26;-1:-1:-1;;5027:1:51;5023:14;;;5039:3;5019:24;5015:37;5011:42;4996:58;4981:74;;4868:201;-1:-1:-1;;;;;5115:1:51;5099:14;;;5095:22;5082:36;;-1:-1:-1;4033:1352:51:o;6854:396::-;7003:2;6992:9;6985:21;6966:4;7035:6;7029:13;7078:6;7073:2;7062:9;7058:18;7051:34;7094:79;7166:6;7161:2;7150:9;7146:18;7141:2;7133:6;7129:15;7094:79;:::i;:::-;7234:2;7213:15;-1:-1:-1;;7209:29:51;7194:45;;;;7241:2;7190:54;;6854:396;-1:-1:-1;;6854:396:51:o;7255:297::-;7373:12;;7420:4;7409:16;;;7403:23;;7373:12;7438:16;;7435:111;;;-1:-1:-1;;7512:4:51;7508:17;;;;7505:1;7501:25;7497:38;7486:50;;7255:297;-1:-1:-1;7255:297:51:o;:::-;271:1911:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061038f5760003560e01c80637de418d5116101dc578063d45a010b11610102578063e5eb5a48116100a0578063f0a7db0a1161006f578063f0a7db0a14610b66578063f4f3d7ec14610b86578063fb8ddab414610ba6578063fb9bf8d414610bc657600080fd5b8063e5eb5a4814610afa578063ea8a1af014610b27578063ebc18b9b14610b3c578063efa90d3614610b5157600080fd5b8063dd96a19d116100dc578063dd96a19d14610a50578063dea5f6a614610a84578063deaaa7cc14610ab1578063e031535b14610ae557600080fd5b8063d45a010b146109db578063d8891619146109f0578063dd4e2ba514610a0a57600080fd5b8063a1ac6cb21161017a578063c0ffaa7811610149578063c0ffaa781461093c578063c19d93fb1461095c578063c7f758a81461097e578063cb853950146109ab57600080fd5b8063a1ac6cb214610878578063aec116b6146108a5578063b323580d146108db578063bddc16411461090857600080fd5b806386187488116101b657806386187488146107fe5780638a9cd5501461081e578063930de9791461083357806396f0e9621461086357600080fd5b80637de418d5146107ab578063832009af146107c157806384b0196e146107d657600080fd5b8063427d56c2116102c157806354fd4d501161025f5780636ca1a2c71161022e5780636ca1a2c7146107435780636e4eb81014610758578063785ddfe5146107785780637c65d7111461079657600080fd5b806354fd4d50146106ac5780635f953a03146106d857806360506ff61461070e57806365f162631461072357600080fd5b80634d24a67f1161029b5780634d24a67f1461060a57806350a5e5241461061f578063531bd81214610642578063544ffc9c1461066257600080fd5b8063427d56c21461059d578063458da87d146105ca578063476f4d8a146105ea57600080fd5b80632399c6601161032e578063347cf66511610308578063347cf6651461051f5780633932abb11461053b5780633b6d199b14610550578063419c533c1461057d57600080fd5b80632399c660146104ca578063262e59e9146104ea57806332763c22146104ff57600080fd5b806302d05d3f1161036a57806302d05d3f1461040a57806306fdde0314610437578063070dc5d91461045957806320b3e845146104aa57600080fd5b80624114a81461039d57806301ffc9a7146103c557806302a251a3146103f557600080fd5b3661039857005b005b600080fd5b3480156103a957600080fd5b506103b2610bdb565b6040519081526020015b60405180910390f35b3480156103d157600080fd5b506103e56103e036600461308a565b610beb565b60405190151581526020016103bc565b34801561040157600080fd5b506103b2610c22565b34801561041657600080fd5b5061041f610c2d565b6040516001600160a01b0390911681526020016103bc565b34801561044357600080fd5b5061044c610c41565b6040516103bc91906130fa565b34801561046557600080fd5b5061049d61047436600461310d565b601560209081526000918252604091829020825180840190935280548352600101549082015281565b6040516103bc9190613126565b3480156104b657600080fd5b506103e56104c5366004613199565b610cd3565b3480156104d657600080fd5b506103e56104e536600461310d565b610d69565b3480156104f657600080fd5b506103b2610dad565b34801561050b57600080fd5b506103e561051a366004613202565b610dc9565b34801561052b57600080fd5b506103b2678ac7230489e8000081565b34801561054757600080fd5b506103b2610f06565b34801561055c57600080fd5b506103b261056b36600461310d565b60009081526006602052604090205490565b34801561058957600080fd5b506103b2610598366004613283565b610f11565b3480156105a957600080fd5b506105bd6105b83660046132f3565b610f49565b6040516103bc9190613349565b3480156105d657600080fd5b506103b26105e5366004613607565b6110e1565b3480156105f657600080fd5b506103b2610605366004613607565b611112565b34801561061657600080fd5b506103b2600281565b34801561062b57600080fd5b5061063461117c565b6040516103bc92919061363b565b34801561064e57600080fd5b506103e561065d3660046136a4565b611282565b34801561066e57600080fd5b5061069761067d36600461310d565b600090815260156020526040902080546001909101549091565b604080519283526020830191909152016103bc565b3480156106b857600080fd5b50604080518082019091526003815262332e3360e81b602082015261044c565b3480156106e457600080fd5b506103b26106f33660046136ff565b6001600160a01b03166000908152600b602052604090205490565b34801561071a57600080fd5b506103b26112ed565b34801561072f57600080fd5b506103b261073e36600461371c565b6112f8565b34801561074f57600080fd5b506103b26113c0565b34801561076457600080fd5b50610697610773366004613751565b6113ec565b34801561078457600080fd5b50601c546001600160a01b031661041f565b3480156107a257600080fd5b5061044c611421565b3480156107b757600080fd5b506103b260135481565b3480156107cd57600080fd5b506103b2611430565b3480156107e257600080fd5b506107eb61143b565b6040516103bc9796959493929190613781565b34801561080a57600080fd5b506103b261081936600461310d565b6114c3565b34801561082a57600080fd5b506105bd6114fb565b34801561083f57600080fd5b506103e561084e3660046136ff565b60036020526000908152604090205460ff1681565b34801561086f57600080fd5b50610396611575565b34801561088457600080fd5b506103b26108933660046136ff565b60146020526000908152604090205481565b3480156108b157600080fd5b506103b26108c03660046136ff565b6001600160a01b031660009081526014602052604090205490565b3480156108e757600080fd5b506108fb6108f636600461310d565b611889565b6040516103bc919061382a565b34801561091457600080fd5b506103b27f000000000000000000000000000000000000000000000000000000000000000081565b34801561094857600080fd5b506103b261095736600461383d565b6118fb565b34801561096857600080fd5b5061097161193f565b6040516103bc91906138ae565b34801561098a57600080fd5b5061099e61099936600461310d565b6119b1565b6040516103bc91906138d6565b3480156109b757600080fd5b506103e56109c63660046136ff565b60046020526000908152604090205460ff1681565b3480156109e757600080fd5b50610634611b2b565b3480156109fc57600080fd5b506016546103e59060ff1681565b348015610a1657600080fd5b5060408051808201909152601881527f737570706f72743d627261766f2671756f72756d3d666f720000000000000000602082015261044c565b348015610a5c57600080fd5b506103b27f000000000000000000000000000000000000000000000000000000000000000081565b348015610a9057600080fd5b506103b2610a9f3660046136ff565b60026020526000908152604090205481565b348015610abd57600080fd5b506103b27f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f81565b348015610af157600080fd5b506103b2611cf6565b348015610b0657600080fd5b506103b2610b1536600461310d565b60176020526000908152604090205481565b348015610b3357600080fd5b50610396611d08565b348015610b4857600080fd5b506103b2611df2565b348015610b5d57600080fd5b506105bd611e1e565b348015610b7257600080fd5b50610396610b8136600461395c565b611e74565b348015610b9257600080fd5b50610396610ba13660046136ff565b6120b7565b348015610bb257600080fd5b506103e5610bc1366004613607565b612152565b348015610bd257600080fd5b506103b26123dd565b6000610be6600c5490565b905090565b60006001600160e01b0319821663eed9776760e01b1480610c1c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000610be6600e5490565b6000610be66012546001600160a01b031690565b606060078054610c50906139ec565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7c906139ec565b8015610cc95780601f10610c9e57610100808354040283529160200191610cc9565b820191906000526020600020905b815481529060010190602001808311610cac57829003601f168201915b5050505050905090565b6001600160a01b03831660009081526004602052604081205460ff16610d5e577f0000000000000000000000000000000000000000000000000000000000000000600003610d2357506001610d62565b610d3984678ac7230489e8000085856000610dc9565b506001600160a01b0384166000908152600460205260409020805460ff191660011790555b5060015b9392505050565b60165460009060ff16610d975760405162461bcd60e51b8152600401610d8e90613a26565b60405180910390fd5b5060009081526018602052604090205460ff1690565b6000610db7610c22565b610dbf611cf6565b610be69190613aa7565b6040516bffffffffffffffffffffffff19606087901b166020820152603481018590526000908190605401604051602081830303815290604052805190602001209050600083610e7857610e738686808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f000000000000000000000000000000000000000000000000000000000000000092508691506123e89050565b610ed8565b610ed88686808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f000000000000000000000000000000000000000000000000000000000000000092508691506123e89050565b905080610ef85760405163452c2df160e11b815260040160405180910390fd5b506001979650505050505050565b6000610be6600d5490565b600033610f2081878686611282565b50610f3d88828988604051806020016040528060008152506123fe565b98975050505050505050565b606060008083610f6057610f5b61117c565b610f68565b610f68611b2b565b915091506000825111610fd85760405162461bcd60e51b815260206004820152603260248201527f476f7665726e6f72536f7274696e673a2063616e6e6f7420736f72742061206c6044820152710d2e6e840decc40f4cae4de40d8cadccee8d60731b6064820152608401610d8e565b600082516001600160401b03811115610ff357610ff361335c565b60405190808252806020026020018201604052801561101c578160200160208202803683370190505b50905060005b82518110156110a05782818151811061103d5761103d613aba565b60200260200101516020015183828151811061105b5761105b613aba565b6020026020010151600001516110719190613ad0565b82828151811061108357611083613aba565b60209081029190910101528061109881613af7565b915050611022565b5060005b600184516110b29190613b10565b8110156110d7576110c4818386612618565b50806110cf81613af7565b9150506110a4565b5091949350505050565b6000816040516020016110f491906138d6565b60408051601f19818403018152919052805160209091012092915050565b60007f000000000000000000000000000000000000000000000000000000000000000015611169573360009081526004602052604090205460ff166111695760405162461bcd60e51b8152600401610d8e90613b23565b61117282612152565b50610c1c8261277e565b6060806000611189611e1e565b9050600081516001600160401b038111156111a6576111a661335c565b6040519080825280602002602001820160405280156111eb57816020015b60408051808201909152600080825260208201528152602001906001900390816111c45790505b50905060005b8251811015611278576015600084838151811061121057611210613aba565b602002602001015181526020019081526020016000206000016040518060400160405290816000820154815260200160018201548152505082828151811061125a5761125a613aba565b6020026020010181905250808061127090613af7565b9150506111f1565b5090939092509050565b6001600160a01b03841660009081526003602052604081205460ff166112e2576112b0858585856001610dc9565b506001600160a01b038516600090815260026020908152604080832087905560039091529020805460ff191660011790555b506001949350505050565b6000610be660115490565b3360008181526003602052604081205490919060ff1661139b5760405162461bcd60e51b815260206004820152605260248201527f476f7665726e6f723a20796f75206e65656420746f2063617374206120766f7460448201527f652077697468207468652070726f6f66206174206c65617374206f6e636520616064820152711b99081e5bdd481a185d995b89dd081e595d60721b608482015260a401610d8e565b6113b785828686604051806020016040528060008152506123fe565b95945050505050565b60165460009060ff166113e55760405162461bcd60e51b8152600401610d8e90613a26565b50601a5490565b60008281526015602090815260408083206001600160a01b0385168452600301909152902080546001909101545b9250929050565b606060088054610c50906139ec565b6000610be6600f5490565b60006060808280808361146e7f000000000000000000000000000000000000000000000000000000000000000083612b0b565b6114997f00000000000000000000000000000000000000000000000000000000000000006001612b0b565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60165460009060ff166114e85760405162461bcd60e51b8152600401610d8e90613a26565b5060009081526017602052604090205490565b60165460609060ff166115205760405162461bcd60e51b8152600401610d8e90613a26565b6019805480602002602001604051908101604052809291908181526020018280548015610cc957602002820191906000526020600020905b815481526020019060010190808311611558575050505050905090565b600461157f61193f565b600481111561159057611590613898565b146116135760405162461bcd60e51b815260206004820152604760248201527f476f7665726e6f72536f7274696e673a20636f6e74657374206d75737420626560448201527f20746f2063616c63756c61746520736f7274656420616e6420746965642070726064820152666f706f73616c7360c81b608482015260a401610d8e565b60165460ff16156116b25760405162461bcd60e51b815260206004820152605f60248201527f476f7665726e6f72536f7274696e673a20736574536f72746564416e6454696560448201527f6450726f706f73616c7328292068617320616c7265616479206265656e20727560648201527f6e20616e642069747320726573706563746976652076616c7565732073657400608482015260a401610d8e565b6116bc6001610f49565b80516116d091601991602090910190612f64565b506019546000906001906116e49082613aa7565b601b5560005b6019548110156118775760195460009061170690600190613b10565b905060008061174f601961171a8686613b10565b8154811061172a5761172a613aba565b9060005260206000200154600090815260156020526040902080546001909101549091565b909250905060006117608284613ad0565b9050846000036117a1576019549096508690600103611798576117838585613b10565b600087815260176020526040902055601a8690555b50505050611865565b8681036117f45760008681526018602052604090205460ff166117d8576000868152601860205260409020805460ff191660011790555b6019546117e6906001613aa7565b601b54036117f457601b8690555b86811461182d576118058585613b10565b611810906001613aa7565b6000878152601760205260409020558561182981613af7565b9650505b60195461183b866001613aa7565b0361185f5761184a8585613b10565b600087815260176020526040902055601a8690555b95505050505b8061186f81613af7565b9150506116ea565b50506016805460ff1916600117905550565b60008181526015602090815260409182902060028101805484518185028101850190955280855260609492938301828280156118ee57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116118d0575b5050505050915050919050565b6000611908338484610cd3565b6119245760405162461bcd60e51b8152600401610d8e90613b23565b61192d84612152565b506119378461277e565b949350505050565b60095460009060ff16156119535750600290565b600061195d610bdb565b905042811061196e57600091505090565b6000611978611cf6565b905042811061198a5760039250505090565b6000611994610dad565b90504281106119a7576001935050505090565b6004935050505090565b6119b9612faf565b6000828152600a6020908152604091829020825160a08101845281546001600160a01b0381168252600160a01b900460ff161515928101929092526001810180549293919291840191611a0b906139ec565b80601f0160208091040260200160405190810160405280929190818152602001828054611a37906139ec565b8015611a845780601f10611a5957610100808354040283529160200191611a84565b820191906000526020600020905b815481529060010190602001808311611a6757829003601f168201915b5050509183525050604080516020818101835260028501546001600160a01b03168252808401919091528151600385018054606093810283018401855282850181815294909501949193909284928491840182828015611b0d57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611aef575b50505050508152602001600182015481525050815250509050919050565b6060806000611b38611e1e565b9050600081516001600160401b03811115611b5557611b5561335c565b604051908082528060200260200182016040528015611b7e578160200160208202803683370190505b509050600082516001600160401b03811115611b9c57611b9c61335c565b604051908082528060200260200182016040528015611be157816020015b6040805180820190915260008082526020820152815260200190600190039081611bba5790505b5090506000805b8451811015611cea57611c20858281518110611c0657611c06613aba565b602002602001015160009081526006602052604090205490565b600114611cd857848181518110611c3957611c39613aba565b6020026020010151848381518110611c5357611c53613aba565b60200260200101818152505060156000868381518110611c7557611c75613aba565b6020026020010151815260200190815260200160002060000160405180604001604052908160008201548152602001600182015481525050838381518110611cbf57611cbf613aba565b6020908102919091010152611cd5600183613aa7565b91505b80611ce281613af7565b915050611be8565b50919590945092505050565b6000611d00610f06565b610dbf610bdb565b611d10610c2d565b6001600160a01b0316336001600160a01b031614611d2d57600080fd5b6000611d3761193f565b90506002816004811115611d4d57611d4d613898565b14158015611d6d57506004816004811115611d6a57611d6a613898565b14155b611db95760405162461bcd60e51b815260206004820152601c60248201527f476f7665726e6f723a20636f6e74657374206e6f7420616374697665000000006044820152606401610d8e565b6009805460ff191660011790556040517f4cd963a081760a54f571abc0f1db4dde31b4a07d8d6da3e844b8c6f47eeaaa4290600090a150565b60165460009060ff16611e175760405162461bcd60e51b8152600401610d8e90613a26565b50601b5490565b60606005805480602002602001604051908101604052809291908181526020018280548015610cc95760200282019190600052602060002090815481526020019060010190808311611558575050505050905090565b611e7c610c2d565b6001600160a01b0316336001600160a01b031614611f025760405162461bcd60e51b815260206004820152603760248201527f476f7665726e6f723a206f6e6c792074686520636f6e7465737420637265617460448201527f6f722063616e2064656c6574652070726f706f73616c730000000000000000006064820152608401610d8e565b6004611f0c61193f565b6004811115611f1d57611f1d613898565b03611fa25760405162461bcd60e51b815260206004820152604960248201527f476f7665726e6f723a2064656c6574696f6e206f662070726f706f73616c732060448201527f61667465722074686520656e64206f66206120636f6e74657374206973206e6f6064820152681d08185b1b1bddd95960ba1b608482015260a401610d8e565b60005b815181101561207c5760066000838381518110611fc457611fc4613aba565b602002602001015181526020019081526020016000205460011461206a57600160066000848481518110611ffa57611ffa613aba565b60200260200101518152602001908152602001600020819055506040518060600160405280603d8152602001613cb3603d9139600a600084848151811061204357612043613aba565b6020026020010151815260200190815260200160002060010190816120689190613bc1565b505b8061207481613af7565b915050611fa5565b507f75a75cf5c561892f4cc5b26c1b8e933849b42238c96dd073d080d1ae96c51416816040516120ac9190613349565b60405180910390a150565b6120bf610c2d565b6001600160a01b0316336001600160a01b0316146120dc57600080fd5b60006120f0601c546001600160a01b031690565b601c80546001600160a01b0319166001600160a01b0385811691821790925560408051928416835260208301919091529192507f753a2cf8d360cff631674504210913e48247f8e56b3e6d2006c2103d4095999f910160405180910390a15050565b80516000906001600160a01b031633146121c75760405162461bcd60e51b815260206004820152603060248201527f476f7665726e6f723a207468652070726f706f73616c20617574686f72206d7560448201526f39ba1031329036b9b39739b2b73232b960811b6064820152608401610d8e565b60005b600281101561237f5760008160018111156121e7576121e7613898565b905060008160018111156121fd576121fd613898565b03612208575061236d565b600181600181111561221c5761221c613898565b0361235257608084015151516000036122ae5760405162461bcd60e51b815260206004820152604860248201527f476f7665726e6f724d6574616461746156616c69646174696f6e3a207468657260448201527f652063616e6e6f74206265207a65726f207369676e65727320696e20736166656064820152674d6574616461746160c01b608482015260a401610d8e565b83608001516020015160000361233a5760405162461bcd60e51b8152602060048201526044602482018190527f476f7665726e6f724d6574616461746156616c69646174696f6e3a2074687265908201527f73686f6c642063616e6e6f74206265207a65726f20696e20736166654d6574616064820152636461746160e01b608482015260a401610d8e565b6080840151515160000361234d57600080fd5b61236b565b6040516308b6566d60e11b815260040160405180910390fd5b505b8061237781613af7565b9150506121ca565b508160400151516000036123d55760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a20656d7074792070726f706f73616c00000000000000006044820152606401610d8e565b506001919050565b6000610be660105490565b6000826123f58584612bb7565b14949350505050565b6000600161240a61193f565b600481111561241b5761241b613898565b146124745760405162461bcd60e51b815260206004820152602360248201527f476f7665726e6f723a20766f7465206e6f742063757272656e746c792061637460448201526269766560e81b6064820152608401610d8e565b600083116124d85760405162461bcd60e51b815260206004820152602b60248201527f476f7665726e6f723a2063616e6e6f7420766f746520776974682030206f722060448201526a666577657220766f74657360a81b6064820152608401610d8e565b6001600160a01b03851660009081526003602052604090205460ff1661257e5760405162461bcd60e51b815260206004820152604f60248201527f476f7665726e6f723a20796f75206e65656420746f2076657269667920796f7560448201527f72206e756d626572206f6620766f74657320616761696e737420746865206d6560648201526e1c9adb19481c9bdbdd08199a5c9cdd608a1b608482015260a401610d8e565b6125b086868686600260008b6001600160a01b03166001600160a01b0316815260200190815260200160002054612c04565b846001600160a01b03167fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda4878686866040516125ef9493929190613c80565b60405180910390a2505050506001600160a01b0316600090815260026020526040902054919050565b600083805b84518110156126765784828151811061263857612638613aba565b602002602001015185828151811061265257612652613aba565b60200260200101511215612664578091505b8061266e81613af7565b91505061261d565b50848103612688576000915050610d62565b600084868151811061269c5761269c613aba565b602002602001015190508482815181106126b8576126b8613aba565b60200260200101518587815181106126d2576126d2613aba565b602002602001018181525050808583815181106126f1576126f1613aba565b602002602001018181525050600084878151811061271157612711613aba565b6020026020010151905084838151811061272d5761272d613aba565b602002602001015185888151811061274757612747613aba565b6020026020010181815250508085848151811061276657612766613aba565b60209081029190910101525060019695505050505050565b6000600361278a61193f565b600481111561279b5761279b613898565b1461280e5760405162461bcd60e51b815260206004820152603e60248201527f476f7665726e6f723a20636f6e74657374206d7573742062652071756575656460448201527f20666f722070726f706f73616c7320746f206265207375626d697474656400006064820152608401610d8e565b612816611430565b336000908152600b6020526040902054106128cd5760405162461bcd60e51b815260206004820152606560248201527f476f7665726e6f723a207468652073616d6520616464726573732063616e6e6f60448201527f74207375626d6974206d6f7265207468616e20746865206e756d416c6c6f776560648201527f6450726f706f73616c5375626d697373696f6e7320666f72207468697320636f6084820152641b9d195cdd60da1b60a482015260c401610d8e565b6128d56123dd565b6005541061294b5760405162461bcd60e51b815260206004820152603960248201527f476f7665726e6f723a20746865206d6178206e756d626572206f662070726f7060448201527f6f73616c732068617665206265656e207375626d6974746564000000000000006064820152608401610d8e565b6000612956836110e1565b6000818152600a6020526040902054909150600160a01b900460ff16156129d15760405162461bcd60e51b815260206004820152602960248201527f476f7665726e6f723a206475706c69636174652070726f706f73616c73206e6f6044820152681d08185b1b1bddd95960ba1b6064820152608401610d8e565b6005805460018181019092557f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0018290556000828152600a602090815260409182902086518154928801511515600160a01b026001600160a81b03199093166001600160a01b0390911617919091178155908501518592820190612a559082613bc1565b506060820151516002820180546001600160a01b0319166001600160a01b039092169190911790556080820151805180516003840191612a9a91839160200190613020565b50602091820151600191820155336000908152600b9092526040822080549194509250612ac8908490613aa7565b9091555050604080518281523360208201527fcd423cc1203c0af96b9b3d68d73b3064a69de2d14450bb7181c5e5df2132b358910160405180910390a192915050565b606060ff8314612b2557612b1e83612ed1565b9050610c1c565b818054612b31906139ec565b80601f0160208091040260200160405190810160405280929190818152602001828054612b5d906139ec565b8015612baa5780601f10612b7f57610100808354040283529160200191612baa565b820191906000526020600020905b815481529060010190602001808311612b8d57829003601f168201915b5050505050905092915050565b600081815b8451811015612bfc57612be882868381518110612bdb57612bdb613aba565b6020026020010151612f10565b915080612bf481613af7565b915050612bbc565b509392505050565b60008581526015602090815260408083206001600160a01b0388168452601490925290912054612c349083613b10565b831115612c9f5760405162461bcd60e51b815260206004820152603360248201527f476f7665726e6f72566f74696e6753696d706c653a206e6f7420656e6f756768604482015272081d9bdd195cc81b19599d081d1bc818d85cdd606a1b6064820152608401610d8e565b6001600160a01b03851660009081526003820160205260409020541560ff8516612d1157815484908390600090612cd7908490613aa7565b90915550506001600160a01b038616600090815260038301602052604081208054869290612d06908490613aa7565b90915550612e4b9050565b60001960ff861601612de557612d256112ed565b600114612d9c576040805162461bcd60e51b81526020600482015260248101919091527f476f7665726e6f72566f74696e6753696d706c653a20646f776e766f74696e6760448201527f206973206e6f7420656e61626c656420666f72207468697320436f6e746573746064820152608401610d8e565b83826000016001016000828254612db39190613aa7565b90915550506001600160a01b038616600090815260038301602052604081206001018054869290612d06908490613aa7565b60405162461bcd60e51b815260206004820152603560248201527f476f7665726e6f72566f74696e6753696d706c653a20696e76616c69642076616044820152746c756520666f7220656e756d20566f74655479706560581b6064820152608401610d8e565b8015612e8257600282018054600181018255600091825260209091200180546001600160a01b0319166001600160a01b0388161790555b6001600160a01b03861660009081526014602052604081208054869290612eaa908490613aa7565b925050819055508360136000828254612ec39190613aa7565b909155505050505050505050565b60606000612ede83612f3c565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000818310612f2c576000828152602084905260409020610d62565b5060009182526020526040902090565b600060ff8216601f811115610c1c57604051632cd44ac360e21b815260040160405180910390fd5b828054828255906000526020600020908101928215612f9f579160200282015b82811115612f9f578251825591602001919060010190612f84565b50612fab929150613075565b5090565b6040518060a0016040528060006001600160a01b0316815260200160001515815260200160608152602001612ff9604051806020016040528060006001600160a01b031681525090565b815260200161301b604051806040016040528060608152602001600081525090565b905290565b828054828255906000526020600020908101928215612f9f579160200282015b82811115612f9f57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190613040565b5b80821115612fab5760008155600101613076565b60006020828403121561309c57600080fd5b81356001600160e01b031981168114610d6257600080fd5b6000815180845260005b818110156130da576020818501810151868301820152016130be565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610d6260208301846130b4565b60006020828403121561311f57600080fd5b5035919050565b815181526020808301519082015260408101610c1c565b6001600160a01b038116811461315257600080fd5b50565b60008083601f84011261316757600080fd5b5081356001600160401b0381111561317e57600080fd5b6020830191508360208260051b850101111561141a57600080fd5b6000806000604084860312156131ae57600080fd5b83356131b98161313d565b925060208401356001600160401b038111156131d457600080fd5b6131e086828701613155565b9497909650939450505050565b803580151581146131fd57600080fd5b919050565b60008060008060006080868803121561321a57600080fd5b85356132258161313d565b94506020860135935060408601356001600160401b0381111561324757600080fd5b61325388828901613155565b90945092506132669050606087016131ed565b90509295509295909350565b803560ff811681146131fd57600080fd5b60008060008060008060a0878903121561329c57600080fd5b863595506132ac60208801613272565b9450604087013593506060870135925060808701356001600160401b038111156132d557600080fd5b6132e189828a01613155565b979a9699509497509295939492505050565b60006020828403121561330557600080fd5b610d62826131ed565b600081518084526020808501945080840160005b8381101561333e57815187529582019590820190600101613322565b509495945050505050565b602081526000610d62602083018461330e565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156133945761339461335c565b60405290565b60405160a081016001600160401b03811182821017156133945761339461335c565b604051601f8201601f191681016001600160401b03811182821017156133e4576133e461335c565b604052919050565b6000602082840312156133fe57600080fd5b604051602081018181106001600160401b03821117156134205761342061335c565b60405290508082356134318161313d565b905292915050565b60006001600160401b038211156134525761345261335c565b5060051b60200190565b60006040828403121561346e57600080fd5b613476613372565b905081356001600160401b0381111561348e57600080fd5b8201601f8101841361349f57600080fd5b803560206134b46134af83613439565b6133bc565b82815260059290921b830181019181810190878411156134d357600080fd5b938201935b838510156134fa5784356134eb8161313d565b825293820193908201906134d8565b85525093840135938301939093525092915050565b600060a0828403121561352157600080fd5b61352961339a565b905081356135368161313d565b815260206135458382016131ed565b8183015260408301356001600160401b038082111561356357600080fd5b818501915085601f83011261357757600080fd5b8135818111156135895761358961335c565b61359b601f8201601f191685016133bc565b81815287858386010111156135af57600080fd5b8185850186830137600085838301015280604087015250506135d486606087016133ec565b606085015260808501359250808311156135ed57600080fd5b50506135fb8482850161345c565b60808301525092915050565b60006020828403121561361957600080fd5b81356001600160401b0381111561362f57600080fd5b6119378482850161350f565b6000604080835261364e8184018661330e565b83810360208581019190915285518083528682019282019060005b818110156136965761368683865180518252602090810151910152565b9383019391850191600101613669565b509098975050505050505050565b600080600080606085870312156136ba57600080fd5b84356136c58161313d565b93506020850135925060408501356001600160401b038111156136e757600080fd5b6136f387828801613155565b95989497509550505050565b60006020828403121561371157600080fd5b8135610d628161313d565b60008060006060848603121561373157600080fd5b8335925061374160208501613272565b9150604084013590509250925092565b6000806040838503121561376457600080fd5b8235915060208301356137768161313d565b809150509250929050565b60ff60f81b8816815260e0602082015260006137a060e08301896130b4565b82810360408401526137b281896130b4565b606084018890526001600160a01b038716608085015260a0840186905283810360c085015290506137e3818561330e565b9a9950505050505050505050565b600081518084526020808501945080840160005b8381101561333e5781516001600160a01b031687529582019590820190600101613805565b602081526000610d6260208301846137f1565b60008060006040848603121561385257600080fd5b83356001600160401b038082111561386957600080fd5b6138758783880161350f565b9450602086013591508082111561388b57600080fd5b506131e086828701613155565b634e487b7160e01b600052602160045260246000fd5b60208101600583106138d057634e487b7160e01b600052602160045260246000fd5b91905290565b60208152600060018060a01b03808451166020840152602084015115156040840152604084015160a0606085015261391160c08501826130b4565b90508160608601515116608085015260808501519150601f198482030160a085015281516040825261394660408301826137f1565b6020938401519290930191909152509392505050565b6000602080838503121561396f57600080fd5b82356001600160401b0381111561398557600080fd5b8301601f8101851361399657600080fd5b80356139a46134af82613439565b81815260059190911b820183019083810190878311156139c357600080fd5b928401925b828410156139e1578335825292840192908401906139c8565b979650505050505050565b600181811c90821680613a0057607f821691505b602082108103613a2057634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526045908201527f526577617264734d6f64756c653a2072756e20736574536f72746564416e645460408201527f69656450726f706f73616c73282920746f20706f70756c61746520746869732060608201526476616c756560d81b608082015260a00190565b634e487b7160e01b600052601160045260246000fd5b80820180821115610c1c57610c1c613a91565b634e487b7160e01b600052603260045260246000fd5b8181036000831280158383131683831282161715613af057613af0613a91565b5092915050565b600060018201613b0957613b09613a91565b5060010190565b81810381811115610c1c57610c1c613a91565b6020808252602f908201527f476f7665726e6f723a2061646472657373206973206e6f74207065726d69737360408201526e1a5bdb9959081d1bc81cdd589b5a5d608a1b606082015260800190565b601f821115613bbc57600081815260208120601f850160051c81016020861015613b995750805b601f850160051c820191505b81811015613bb857828155600101613ba5565b5050505b505050565b81516001600160401b03811115613bda57613bda61335c565b613bee81613be884546139ec565b84613b72565b602080601f831160018114613c235760008415613c0b5750858301515b600019600386901b1c1916600185901b178555613bb8565b600085815260208120601f198616915b82811015613c5257888601518255948401946001909101908401613c33565b5085821015613c705787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b84815260ff84166020820152826040820152608060608201526000613ca860808301846130b4565b969550505050505056fe546869732070726f706f73616c20686173206265656e2064656c65746564206279207468652063726561746f72206f662074686520636f6e746573742ea264697066735822122024bf350849a566b9406441513436ab64c28ff31946a37b3a3a3504e93acb68ff64736f6c63430008130033",
    "sourceMapi;:::-;;;160:25:51;;;148:2;133:18;1155:136:40;;;;;;;;2400:214:41;;;;;;;;;;-1:-1:-1;2400:214:41;;;;;:::i;:::-;;:::i;:::-;;;652:14:51;;645:22;627:41;;615:2;600:18;2400:214:41;487:187:51;1437:136:40;;;;;;;;;;;;;:::i;2054:126::-;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;843:32:51;;;825:51;;813:2;798:18;2054:126:40;679:203:51;2670:98:41;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;752:60:44:-;;;;;;;;;;-1:-1:-1;752:60:44;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;7167:528:41:-;;;;;;;;;;-1:-1:-1;7167:528:41;;;;;:::i;:::-;;:::i;950:249:47:-;;;;;;;;;;-1:-1:-1;950:249:47;;;;;:::i;:::-;;:::i;5347:126:41:-;;;;;;;;;;;;;:::i;1304:539:42:-;;;;;;;;;;-1:-1:-1;1304:539:42;;;;;:::i;:::-;;:::i;1054:73:41:-;;;;;;;;;;;;1107:20;1054:73;;1297:134:40;;;;;;;;;;;;;:::i;6619:140:41:-;;;;;;;;;;-1:-1:-1;6619:140:41;;;;;:::i;:::-;6695:7;6721:31;;;:19;:31;;;;;;;6619:140;12649:353;;;;;;;;;;-1:-1:-1;12649:353:41;;;;;:::i;:::-;;:::i;5069:1024:47:-;;;;;;;;;;-1:-1:-1;5069:1024:47;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4034:163:41:-;;;;;;;;;;-1:-1:-1;4034:163:41;;;;;:::i;:::-;;:::i;9440:469::-;;;;;;;;;;-1:-1:-1;9440:469:41;;;;;:::i;:::-;;:::i;328:43:43:-;;;;;;;;;;;;370:1;328:43;;2610:566:47;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;12137:452:41:-;;;;;;;;;;-1:-1:-1;12137:452:41;;;;;:::i;:::-;;:::i;1152:302:44:-;;;;;;;;;;-1:-1:-1;1152:302:44;;;;;:::i;:::-;1224:16;1310:32;;;:20;:32;;;;;1360:40;;1402:44;;;;;1360:40;;1152:302;;;;;11918:25:51;;;11974:2;11959:18;;11952:34;;;;11891:18;1152:302:44;11744:248:51;2987:101:41;;;;;;;;;;-1:-1:-1;3069:12:41;;;;;;;;;;;;-1:-1:-1;;;3069:12:41;;;;2987:101;;6371:130;;;;;;;;;;-1:-1:-1;6371:130:41;;;;;:::i;:::-;-1:-1:-1;;;;;6470:24:41;6444:7;6470:24;;;:15;:24;;;;;;;6371:130;1903:145:40;;;;;;;;;;;;;:::i;13074:443:41:-;;;;;;;;;;-1:-1:-1;13074:443:41;;;;;:::i;:::-;;:::i;1956:242:47:-;;;;;;;;;;;;;:::i;1557:424:44:-;;;;;;;;;;-1:-1:-1;1557:424:44;;;;;:::i;:::-;;:::i;536:123:45:-;;;;;;;;;;-1:-1:-1;630:22:45;;-1:-1:-1;;;;;630:22:45;536:123;;2826:102:41;;;;;;;;;;;;;:::i;612:29:44:-;;;;;;;;;;;;;;;;1579:169:40;;;;;;;;;;;;;:::i;5021:633:32:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;1286:281:47:-;;;;;;;;;;-1:-1:-1;1286:281:47;;;;;:::i;:::-;;:::i;1632:259::-;;;;;;;;;;;;;:::i;1191:57:41:-;;;;;;;;;;-1:-1:-1;1191:57:41;;;;;:::i;:::-;;;;;;;;;;;;;;;;6519:3166:47;;;;;;;;;;;;;:::i;685:61:44:-;;;;;;;;;;-1:-1:-1;685:61:44;;;;;:::i;:::-;;;;;;;;;;;;;;2425:215;;;;;;;;;;-1:-1:-1;2425:215:44;;;;;:::i;:::-;-1:-1:-1;;;;;2594:39:44;2545:26;2594:39;;;:26;:39;;;;;;;2425:215;2082:232;;;;;;;;;;-1:-1:-1;2082:232:44;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;378:45:42:-;;;;;;;;;;;;;;;9028:341:41;;;;;;;;;;-1:-1:-1;9028:341:41;;;;;:::i;:::-;;:::i;4254:675::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;6140:137::-;;;;;;;;;;-1:-1:-1;6140:137:41;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1254:56::-;;;;;;;;;;-1:-1:-1;1254:56:41;;;;;:::i;:::-;;;;;;;;;;;;;;;;3301:952:47;;;;;;;;;;;;;:::i;273:55::-;;;;;;;;;;-1:-1:-1;273:55:47;;;;;;;;931:128:44;;;;;;;;;;-1:-1:-1;1019:33:44;;;;;;;;;;;;;;;;;931:128;;429:41:42;;;;;;;;;;;;;;;1133:52:41;;;;;;;;;;-1:-1:-1;1133:52:41;;;;;:::i;:::-;;;;;;;;;;;;;;953:95;;;;;;;;;;;;995:53;953:95;;5158:122;;;;;;;;;;;;;:::i;334:62:47:-;;;;;;;;;;-1:-1:-1;334:62:47;;;;;:::i;:::-;;;;;;;;;;;;;;11774:300:41;;;;;;;;;;;;;:::i;2265:252:47:-;;;;;;;;;;;;;:::i;4985:112:41:-;;;;;;;;;;;;;:::i;10930:753::-;;;;;;;;;;-1:-1:-1;10930:753:41;;;;;:::i;:::-;;:::i;781:356:45:-;;;;;;;;;;-1:-1:-1;781:356:45;;;;;:::i;:::-;;:::i;7767:1202:41:-;;;;;;;;;;-1:-1:-1;7767:1202:41;;;;;:::i;:::-;;:::i;1754:143:40:-;;;;;;;;;;;;;:::i;1155:136::-;1238:7;1264:20;1997:13:46;;;1909:108;1264:20:40;1257:27;;1155:136;:::o;2400:214:41:-;2502:4;-1:-1:-1;;;;;;2525:42:41;;-1:-1:-1;;;2525:42:41;;:82;;-1:-1:-1;;;;;;;;;;937:40:35;;;2571:36:41;2518:89;2400:214;-1:-1:-1;;2400:214:41:o;1437:136:40:-;1520:7;1546:20;2338:13:46;;;2250:108;2054:126:40;2132:7;2158:15;3113:8:46;;-1:-1:-1;;;;;3113:8:46;;3030:98;2670::41;2724:13;2756:5;2749:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2670:98;:::o;7167:528::-;-1:-1:-1;;;;;7289:33:41;;7259:13;7289:33;;;:24;:33;;;;;;;;7284:384;;7342:20;7366:1;7342:25;7338:146;;-1:-1:-1;7465:4:41;7458:11;;7338:146;7497:61;7508:7;1107:20;7545:5;;7552;7497:10;:61::i;:::-;-1:-1:-1;;;;;;7617:33:41;;;;;;:24;:33;;;;;:40;;-1:-1:-1;;7617:40:41;7653:4;7617:40;;;7284:384;-1:-1:-1;7684:4:41;7167:528;;;;;;:::o;950:249:47:-;1041:35;;1004:4;;1041:35;;1020:139;;;;-1:-1:-1;;;1020:139:47;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;1176:16:47;;;;:7;:16;;;;;;;;;950:249::o;5347:126:41:-;5412:7;5452:14;:12;:14::i;:::-;5438:11;:9;:11::i;:::-;:28;;;;:::i;1304:539:42:-;1559:40;;-1:-1:-1;;19622:2:51;19618:15;;;19614:53;1559:40:42;;;19602:66:51;19684:12;;;19677:28;;;1448:13:42;;;;19721:12:51;;1559:40:42;;;;;;;;;;;;1549:51;;;;;;1534:66;;1610:16;1629:6;:138;;1714:53;1733:5;;1714:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1740:20:42;;-1:-1:-1;1762:4:42;;-1:-1:-1;1714:18:42;;-1:-1:-1;1714:53:42:i;:::-;1629:138;;;1650:49;1669:5;;1650:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1676:16:42;;-1:-1:-1;1694:4:42;;-1:-1:-1;1650:18:42;;-1:-1:-1;1650:49:42:i;:::-;1610:157;;1782:11;1777:38;;1802:13;;-1:-1:-1;;;1802:13:42;;;;;;;;;;;1777:38;-1:-1:-1;1832:4:42;;1304:539;-1:-1:-1;;;;;;;1304:539:42:o;1297:134:40:-;1379:7;1405:19;2167:12:46;;;2080:106;12649:353:41;12831:7;12870:10;12890:37;12870:10;12909;12921:5;;12890:11;:37::i;:::-;;12944:51;12954:10;12966:5;12973:7;12982:8;12944:51;;;;;;;;;;;;:9;:51::i;:::-;12937:58;12649:353;-1:-1:-1;;;;;;;;12649:353:41:o;5069:1024:47:-;5185:40;5242:31;5275:43;5334:23;:89;;5400:23;:21;:23::i;:::-;5334:89;;;5360:37;:35;:37::i;:::-;5241:182;;;;5465:1;5441:14;:21;:25;5433:88;;;;-1:-1:-1;;;5433:88:47;;19946:2:51;5433:88:47;;;19928:21:51;19985:2;19965:18;;;19958:30;20024:34;20004:18;;;19997:62;-1:-1:-1;;;20075:18:51;;;20068:48;20133:19;;5433:88:47;19744:414:51;5433:88:47;5531:32;5579:14;:21;-1:-1:-1;;;;;5566:35:47;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5566:35:47;;5531:70;;5616:9;5611:217;5635:23;:30;5631:1;:34;5611:217;;;5777:23;5801:1;5777:26;;;;;;;;:::i;:::-;;;;;;;:39;;;5731:23;5755:1;5731:26;;;;;;;;:::i;:::-;;;;;;;:35;;;5724:93;;;;:::i;:::-;5686:16;5703:1;5686:19;;;;;;;;:::i;:::-;;;;;;;;;;:131;5667:3;;;;:::i;:::-;;;;5611:217;;;;5842:9;5837:219;5885:1;5861:14;:21;:25;;;;:::i;:::-;5857:1;:29;5837:219;;;5999:46;6009:1;6012:16;6030:14;5999:9;:46::i;:::-;-1:-1:-1;5888:3:47;;;;:::i;:::-;;;;5837:219;;;-1:-1:-1;6072:14:47;;5069:1024;-1:-1:-1;;;;5069:1024:47:o;4034:163:41:-;4124:7;4179:8;4168:20;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4168:20:41;;;;;;;;;4158:31;;4168:20;4158:31;;;;;4034:163;-1:-1:-1;;4034:163:41:o;9440:469::-;9532:7;9555:20;:25;9551:272;;9749:10;9724:36;;;;:24;:36;;;;;;;;9716:96;;;;-1:-1:-1;;;9716:96:41;;;;;;;:::i;:::-;9832:30;9853:8;9832:20;:30::i;:::-;;9879:23;9893:8;9879:13;:23::i;2610:566:47:-;2704:34;2740:49;2805:28;2836:19;:17;:19::i;:::-;2805:50;;2865:43;2928:11;:18;-1:-1:-1;;;;;2911:36:47;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;2911:36:47;;;;;;;;;;;;;;;;2865:82;;2962:9;2957:158;2981:11;:18;2977:1;:22;2957:158;;;3049:20;:36;3070:11;3082:1;3070:14;;;;;;;;:::i;:::-;;;;;;;3049:36;;;;;;;;;;;:55;;3020:84;;;;;;;;;;;;;;;;;;;;;;;;;:23;3044:1;3020:26;;;;;;;;:::i;:::-;;;;;;:84;;;;3001:3;;;;;:::i;:::-;;;;2957:158;;;-1:-1:-1;3132:11:47;;3145:23;;-1:-1:-1;2610:566:47;-1:-1:-1;2610:566:47:o;12137:452:41:-;-1:-1:-1;;;;;12304:34:41;;12270:13;12304:34;;;:25;:34;;;;;;;;12299:263;;12354:44;12365:7;12374:10;12386:5;;12393:4;12354:10;:44::i;:::-;-1:-1:-1;;;;;;12457:26:41;;;;;;:17;:26;;;;;;;;:39;;;12510:25;:34;;;;;:41;;-1:-1:-1;;12510:41:41;12547:4;12510:41;;;12299:263;-1:-1:-1;12578:4:41;12137:452;;;;;;:::o;1903:145:40:-;1990:7;2016:25;2946:18:46;;;2853:118;13074:443:41;13261:10;13222:7;13302:32;;;:25;:32;;;;;;13222:7;;13261:10;13302:32;;13281:161;;;;-1:-1:-1;;;13281:161:41;;21391:2:51;13281:161:41;;;21373:21:51;21430:2;21410:18;;;21403:30;21469:34;21449:18;;;21442:62;21540:34;21520:18;;;21513:62;-1:-1:-1;;;21591:19:51;;;21584:49;21650:19;;13281:161:41;21189:486:51;13281:161:41;13459:51;13469:10;13481:5;13488:7;13497:8;13459:51;;;;;;;;;;;;:9;:51::i;:::-;13452:58;13074:443;-1:-1:-1;;;;;13074:443:41:o;1956:242:47:-;2042:35;;2002:7;;2042:35;;2021:139;;;;-1:-1:-1;;;2021:139:47;;;;;;;:::i;:::-;-1:-1:-1;2177:14:47;;;1956:242::o;1557:424:44:-;1689:16;1779:32;;;:20;:32;;;;;;;;-1:-1:-1;;;;;1842:43:44;;;;:30;;:43;;;;;:52;;1908:56;;;;;1557:424;;;;;;:::o;2826:102:41:-;2882:13;2914:7;2907:14;;;;;:::i;1579:169:40:-;1678:7;1704:37;2543:30:46;;;2438:142;5021:633:32;5136:13;5163:18;;5136:13;;;5163:18;5427:41;:5;5136:13;5427:26;:41::i;:::-;5482:47;:8;5512:16;5482:29;:47::i;:::-;5621:16;;;5605:1;5621:16;;;;;;;;;-1:-1:-1;;;5376:271:32;;;-1:-1:-1;5376:271:32;;-1:-1:-1;5543:13:32;;-1:-1:-1;5578:4:32;;-1:-1:-1;5605:1:32;-1:-1:-1;5621:16:32;-1:-1:-1;5376:271:32;-1:-1:-1;5021:633:32:o;1286:281:47:-;1389:35;;1349:7;;1389:35;;1368:139;;;;-1:-1:-1;;;1368:139:47;;;;;;;:::i;:::-;-1:-1:-1;1524:36:47;;;;:27;:36;;;;;;;1286:281::o;1632:259::-;1731:35;;1682:16;;1731:35;;1710:139;;;;-1:-1:-1;;;1710:139:47;;;;;;;:::i;:::-;1866:18;1859:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1632:259;:::o;6519:3166::-;6613:32;6602:7;:5;:7::i;:::-;:43;;;;;;;;:::i;:::-;;6581:161;;;;-1:-1:-1;;;6581:161:47;;21882:2:51;6581:161:47;;;21864:21:51;21921:2;21901:18;;;21894:30;21960:34;21940:18;;;21933:62;22031:34;22011:18;;;22004:62;-1:-1:-1;;;22082:19:51;;;22075:38;22130:19;;6581:161:47;21680:475:51;6581:161:47;6773:35;;;;:44;6752:186;;;;-1:-1:-1;;;6752:186:47;;22362:2:51;6752:186:47;;;22344:21:51;22401:2;22381:18;;;22374:30;22440:34;22420:18;;;22413:62;22511:34;22491:18;;;22484:62;22583:33;22562:19;;;22555:62;22634:19;;6752:186:47;22160:499:51;6752:186:47;6970:21;6986:4;6970:15;:21::i;:::-;6949:42;;;;:18;;:42;;;;;;:::i;:::-;-1:-1:-1;7096:18:47;:25;7002:21;;7063:1;;7096:29;;7063:1;7096:29;:::i;:::-;7074:19;:51;7198:9;7193:2433;7217:18;:25;7213:29;;7193:2433;;;7293:18;:25;7263:27;;7293:29;;7321:1;;7293:29;:::i;:::-;7263:59;-1:-1:-1;7397:23:47;;7469:58;7483:18;7502:23;7524:1;7263:59;7502:23;:::i;:::-;7483:43;;;;;;;;:::i;:::-;;;;;;;;;1224:16:44;1310:32;;;:20;:32;;;;;1360:40;;1402:44;;;;;1360:40;;1152:302;7469:58:47;7396:131;;-1:-1:-1;7396:131:47;-1:-1:-1;7541:24:47;7568:53;7396:131;;7568:53;:::i;:::-;7541:80;;7705:1;7710;7705:6;7701:474;;7929:18;:25;7748:17;;-1:-1:-1;7748:17:47;;7958:1;7929:30;7925:209;;8034:23;8056:1;8034:19;:23;:::i;:::-;7983:48;;;;:27;:48;;;;;:74;8079:14;:36;;;7925:209;8152:8;;;;;;7701:474;8279:14;8258:17;:35;8254:481;;8318:28;;;;:7;:28;;;;;;;;8313:161;;8420:28;;;;:7;:28;;;;;:35;;-1:-1:-1;;8420:35:47;8451:4;8420:35;;;8313:161;8518:18;:25;:29;;8546:1;8518:29;:::i;:::-;8495:19;;:52;8491:230;;8661:19;:41;;;8491:230;8968:14;8947:17;:35;8943:291;;9153:23;9175:1;9153:19;:23;:::i;:::-;:27;;9179:1;9153:27;:::i;:::-;9102:48;;;;:27;:48;;;;;:78;9130:19;9198:21;9130:19;9198:21;:::i;:::-;;;;8943:291;9379:18;:25;9370:5;:1;9374;9370:5;:::i;:::-;:34;9366:201;;9475:23;9497:1;9475:19;:23;:::i;:::-;9424:48;;;;:27;:48;;;;;:74;9516:14;:36;;;9366:201;9598:17;-1:-1:-1;;;;7193:2433:47;7244:3;;;;:::i;:::-;;;;7193:2433;;;-1:-1:-1;;9636:35:47;:42;;-1:-1:-1;;9636:42:47;9674:4;9636:42;;;-1:-1:-1;6519:3166:47:o;2082:232:44:-;2195:33;2231:32;;;:20;:32;;;;;;;;;2280:27;;;2273:34;;;;;;;;;;;;;;;;;2167:16;;2231:32;;2273:34;;2280:27;2273:34;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:34:44;;;;;;;;;;;;;;;;;;;;;;;;2082:232;;;:::o;9028:341:41:-;9166:7;9197:33;9212:10;9224:5;;9197:14;:33::i;:::-;9189:93;;;;-1:-1:-1;;;9189:93:41;;;;;;;:::i;:::-;9292:30;9313:8;9292:20;:30::i;:::-;;9339:23;9353:8;9339:13;:23::i;:::-;9332:30;9028:341;-1:-1:-1;;;;9028:341:41:o;4254:675::-;4337:9;;4309:12;;4337:9;;4333:68;;;-1:-1:-1;4369:21:41;;4254:675::o;4333:68::-;4411:29;4443:14;:12;:14::i;:::-;4411:46;;4497:15;4472:21;:40;4468:101;;4535:23;4528:30;;;4254:675;:::o;4468:101::-;4579:26;4608:11;:9;:11::i;:::-;4579:40;;4656:15;4634:18;:37;4630:94;;4694:19;4687:26;;;;4254:675;:::o;4630:94::-;4734:25;4762:17;:15;:17::i;:::-;4734:45;;4815:15;4794:17;:36;4790:93;;4853:19;4846:26;;;;;4254:675;:::o;4790:93::-;4900:22;4893:29;;;;;4254:675;:::o;6140:137::-;6210:19;;:::i;:::-;6248:22;;;;:10;:22;;;;;;;;;6241:29;;;;;;;;;-1:-1:-1;;;;;6241:29:41;;;;-1:-1:-1;;;6241:29:41;;;;;;;;;;;;;;;;;;;;6248:22;;6241:29;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6241:29:41;;;-1:-1:-1;;6241:29:41;;;;;;;;;;;;;-1:-1:-1;;;;;6241:29:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6241:29:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6140:137;;;:::o;3301:952:47:-;3409:34;3445:49;3510:28;3541:19;:17;:19::i;:::-;3510:50;;3570:42;3629:11;:18;-1:-1:-1;;;;;3615:33:47;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3615:33:47;;3570:78;;3658:43;3721:11;:18;-1:-1:-1;;;;;3704:36:47;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;3704:36:47;;;;;;;;;;;;;;;;3658:82;;3751:29;3799:9;3794:384;3818:11;:18;3814:1;:22;3794:384;;;3863:33;3881:11;3893:1;3881:14;;;;;;;;:::i;:::-;;;;;;;6695:7:41;6721:31;;;:19;:31;;;;;;;6619:140;3863:33:47;3900:1;3863:38;3857:311;;3973:11;3985:1;3973:14;;;;;;;;:::i;:::-;;;;;;;3922:25;3948:21;3922:48;;;;;;;;:::i;:::-;;;;;;:65;;;;;4054:20;:36;4075:11;4087:1;4075:14;;;;;;;;:::i;:::-;;;;;;;4054:36;;;;;;;;;;;:55;;4005:104;;;;;;;;;;;;;;;;;;;;;;;;;:23;4029:21;4005:46;;;;;;;;:::i;:::-;;;;;;;;;;:104;4127:26;4152:1;4127:26;;:::i;:::-;;;3857:311;3838:3;;;;:::i;:::-;;;;3794:384;;;-1:-1:-1;4195:25:47;;4222:23;;-1:-1:-1;3301:952:47;-1:-1:-1;;;3301:952:47:o;5158:122:41:-;5217:7;5260:13;:11;:13::i;:::-;5243:14;:12;:14::i;11774:300::-;11839:9;:7;:9::i;:::-;-1:-1:-1;;;;;11825:23:41;:10;-1:-1:-1;;;;;11825:23:41;;11817:32;;;;;;11860:19;11882:7;:5;:7::i;:::-;11860:29;-1:-1:-1;11918:21:41;11908:6;:31;;;;;;;;:::i;:::-;;;:67;;;;-1:-1:-1;11953:22:41;11943:6;:32;;;;;;;;:::i;:::-;;;11908:67;11900:108;;;;-1:-1:-1;;;11900:108:41;;22866:2:51;11900:108:41;;;22848:21:51;22905:2;22885:18;;;22878:30;22944;22924:18;;;22917:58;22992:18;;11900:108:41;22664:352:51;11900:108:41;12018:9;:16;;-1:-1:-1;;12018:16:41;12030:4;12018:16;;;12050:17;;;;12018:9;;12050:17;11807:267;11774:300::o;2265:252:47:-;2356:35;;2316:7;;2356:35;;2335:139;;;;-1:-1:-1;;;2335:139:47;;;;;;;:::i;:::-;-1:-1:-1;2491:19:47;;;2265:252::o;4985:112:41:-;5043:16;5078:12;5071:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4985:112;:::o;10930:753::-;11032:9;:7;:9::i;:::-;-1:-1:-1;;;;;11018:23:41;:10;-1:-1:-1;;;;;11018:23:41;;11010:91;;;;-1:-1:-1;;;11010:91:41;;23223:2:51;11010:91:41;;;23205:21:51;23262:2;23242:18;;;23235:30;23301:34;23281:18;;;23274:62;23372:25;23352:18;;;23345:53;23415:19;;11010:91:41;23021:419:51;11010:91:41;11143:22;11132:7;:5;:7::i;:::-;:33;;;;;;;;:::i;:::-;;11111:153;;;;-1:-1:-1;;;11111:153:41;;23647:2:51;11111:153:41;;;23629:21:51;23686:2;23666:18;;;23659:30;23725:34;23705:18;;;23698:62;23796:34;23776:18;;;23769:62;-1:-1:-1;;;23847:19:51;;;23840:40;23897:19;;11111:153:41;23445:477:51;11111:153:41;11280:13;11275:357;11307:11;:18;11299:5;:26;11275:357;;;11354:19;:39;11374:11;11386:5;11374:18;;;;;;;;:::i;:::-;;;;;;;11354:39;;;;;;;;;;;;11397:1;11354:44;11350:272;;11460:1;11418:19;:39;11438:11;11450:5;11438:18;;;;;;;;:::i;:::-;;;;;;;11418:39;;;;;;;;;;;:43;;;;11479:128;;;;;;;;;;;;;;;;;:10;:30;11490:11;11502:5;11490:18;;;;;;;;:::i;:::-;;;;;;;11479:30;;;;;;;;;;;:42;;:128;;;;;;:::i;:::-;;11350:272;11327:7;;;;:::i;:::-;;;;11275:357;;;;11647:29;11664:11;11647:29;;;;;;:::i;:::-;;;;;;;;10930:753;:::o;781:356:45:-;900:9;:7;:9::i;:::-;-1:-1:-1;;;;;886:23:45;:10;-1:-1:-1;;;;;886:23:45;;878:32;;;;;;920:38;961:23;630:22;;-1:-1:-1;;;;;630:22:45;;536:123;961:23;994:22;:47;;-1:-1:-1;;;;;;994:47:45;-1:-1:-1;;;;;994:47:45;;;;;;;;;1056:74;;;26423:15:51;;;26405:34;;26470:2;26455:18;;26448:43;;;;920:64:45;;-1:-1:-1;1056:74:45;;26340:18:51;1056:74:45;;;;;;;868:269;781:356;:::o;7767:1202:41:-;7898:15;;7860:18;;-1:-1:-1;;;;;7898:29:41;7917:10;7898:29;7890:90;;;;-1:-1:-1;;;7890:90:41;;26704:2:51;7890:90:41;;;26686:21:51;26743:2;26723:18;;;26716:30;26782:34;26762:18;;;26755:62;-1:-1:-1;;;26833:18:51;;;26826:46;26889:19;;7890:90:41;26502:412:51;7890:90:41;7995:13;7990:866;370:1:43;8014:5:41;:23;7990:866;;;8062:25;8100:5;8090:16;;;;;;;;:::i;:::-;8062:44;-1:-1:-1;8143:16:41;8124:15;:35;;;;;;;;:::i;:::-;;8120:726;;8179:8;;;8120:726;8288:14;8269:15;:33;;;;;;;;:::i;:::-;;8265:581;;8351:21;;;;:29;:36;:29;:41;8322:184;;;;-1:-1:-1;;;8322:184:41;;27121:2:51;8322:184:41;;;27103:21:51;27160:2;27140:18;;;27133:30;27199:34;27179:18;;;27172:62;27270:34;27250:18;;;27243:62;-1:-1:-1;;;27321:19:51;;;27314:39;27370:19;;8322:184:41;26919:476:51;8322:184:41;8553:8;:21;;;:31;;;8588:1;8553:36;8524:175;;;;-1:-1:-1;;;8524:175:41;;27602:2:51;8524:175:41;;;27584:21:51;27641:2;27621:18;;;27614:30;;;27680:34;27660:18;;;27653:62;27751:34;27731:18;;;27724:62;-1:-1:-1;;;27802:19:51;;;27795:35;27847:19;;8524:175:41;27400:472:51;8524:175:41;8725:21;;;;:29;:36;:29;:41;8717:50;;;;;;8265:581;;;8813:18;;-1:-1:-1;;;8813:18:41;;;;;;;;;;;8265:581;8048:808;7990:866;8039:7;;;;:::i;:::-;;;;7990:866;;;;8879:8;:20;;;8873:34;8911:1;8873:39;8865:76;;;;-1:-1:-1;;;8865:76:41;;28079:2:51;8865:76:41;;;28061:21:51;28118:2;28098:18;;;28091:30;28157:26;28137:18;;;28130:54;28201:18;;8865:76:41;27877:348:51;8865:76:41;-1:-1:-1;8958:4:41;;7767:1202;-1:-1:-1;7767:1202:41:o;1754:143:40:-;1840:7;1866:24;2754:17:46;;;2662:116;1156:154:33;1247:4;1299;1270:25;1283:5;1290:4;1270:12;:25::i;:::-;:33;;1156:154;-1:-1:-1;;;;1156:154:33:o;13798:722:41:-;13959:7;14001:19;13990:7;:5;:7::i;:::-;:30;;;;;;;;:::i;:::-;;13982:78;;;;-1:-1:-1;;;13982:78:41;;28432:2:51;13982:78:41;;;28414:21:51;28471:2;28451:18;;;28444:30;28510:34;28490:18;;;28483:62;-1:-1:-1;;;28561:18:51;;;28554:33;28604:19;;13982:78:41;28230:399:51;13982:78:41;14089:1;14078:8;:12;14070:68;;;;-1:-1:-1;;;14070:68:41;;28836:2:51;14070:68:41;;;28818:21:51;28875:2;28855:18;;;28848:30;28914:34;28894:18;;;28887:62;-1:-1:-1;;;28965:18:51;;;28958:41;29016:19;;14070:68:41;28634:407:51;14070:68:41;-1:-1:-1;;;;;14170:34:41;;;;;;:25;:34;;;;;;;;14149:160;;;;-1:-1:-1;;;14149:160:41;;29248:2:51;14149:160:41;;;29230:21:51;29287:2;29267:18;;;29260:30;29326:34;29306:18;;;29299:62;29397:34;29377:18;;;29370:62;-1:-1:-1;;;29448:19:51;;;29441:46;29504:19;;14149:160:41;29046:483:51;14149:160:41;14319:78;14330:10;14342:7;14351;14360:8;14370:17;:26;14388:7;-1:-1:-1;;;;;14370:26:41;-1:-1:-1;;;;;14370:26:41;;;;;;;;;;;;;14319:10;:78::i;:::-;14422:7;-1:-1:-1;;;;;14413:56:41;;14431:10;14443:7;14452:8;14462:6;14413:56;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;14487:26:41;;;;;:17;:26;;;;;;;13798:722;-1:-1:-1;13798:722:41:o;4259:717:47:-;4402:4;4437:3;;4450:171;4476:16;:23;4472:1;:27;4450:171;;;4546:16;4563:4;4546:22;;;;;;;;:::i;:::-;;;;;;;4524:16;4541:1;4524:19;;;;;;;;:::i;:::-;;;;;;;:44;4520:91;;;4595:1;4588:8;;4520:91;4501:3;;;;:::i;:::-;;;;4450:171;;;;4642:3;4634:4;:11;4630:29;;4654:5;4647:12;;;;;4630:29;4669:15;4687:16;4704:3;4687:21;;;;;;;;:::i;:::-;;;;;;;4669:39;;4742:16;4759:4;4742:22;;;;;;;;:::i;:::-;;;;;;;4718:16;4735:3;4718:21;;;;;;;;:::i;:::-;;;;;;:46;;;;;4799:8;4774:16;4791:4;4774:22;;;;;;;;:::i;:::-;;;;;;:33;;;;;4817:22;4842:11;4854:3;4842:16;;;;;;;;:::i;:::-;;;;;;;4817:41;;4887:11;4899:4;4887:17;;;;;;;;:::i;:::-;;;;;;;4868:11;4880:3;4868:16;;;;;;;;:::i;:::-;;;;;;:36;;;;;4934:14;4914:11;4926:4;4914:17;;;;;;;;:::i;:::-;;;;;;;;;;:34;-1:-1:-1;4965:4:47;;4259:717;-1:-1:-1;;;;;;4259:717:47:o;9915:905:41:-;9994:7;10032:19;10021:7;:5;:7::i;:::-;:30;;;;;;;;:::i;:::-;;10013:105;;;;-1:-1:-1;;;10013:105:41;;30183:2:51;10013:105:41;;;30165:21:51;30222:2;30202:18;;;30195:30;30261:34;30241:18;;;30234:62;30332:32;30312:18;;;30305:60;30382:19;;10013:105:41;29981:426:51;10013:105:41;10179:31;:29;:31::i;:::-;10165:10;10149:27;;;;:15;:27;;;;;;:61;10128:209;;;;-1:-1:-1;;;10128:209:41;;30614:2:51;10128:209:41;;;30596:21:51;30653:3;30633:18;;;30626:31;30693:34;30673:18;;;30666:62;30764:34;30744:18;;;30737:62;30836:34;30815:19;;;30808:63;-1:-1:-1;;;30887:19:51;;;30880:36;30933:19;;10128:209:41;30412:546:51;10128:209:41;10377:18;:16;:18::i;:::-;10355:12;:19;:40;10347:110;;;;-1:-1:-1;;;10347:110:41;;31165:2:51;10347:110:41;;;31147:21:51;31204:2;31184:18;;;31177:30;31243:34;31223:18;;;31216:62;31314:27;31294:18;;;31287:55;31359:19;;10347:110:41;30963:421:51;10347:110:41;10468:18;10489:22;10502:8;10489:12;:22::i;:::-;10530;;;;:10;:22;;;;;:29;:22;;-1:-1:-1;;;;10530:29:41;;;;10529:30;10521:84;;;;-1:-1:-1;;;10521:84:41;;31591:2:51;10521:84:41;;;31573:21:51;31630:2;31610:18;;;31603:30;31669:34;31649:18;;;31642:62;-1:-1:-1;;;31720:18:51;;;31713:39;31769:19;;10521:84:41;31389:405:51;10521:84:41;10616:12;:29;;;;;;;;;;;;;;-1:-1:-1;10655:22:41;;;:10;10616:29;10655:22;;;;;;;;:33;;;;;;;;;;-1:-1:-1;;;10655:33:41;-1:-1:-1;;;;;;10655:33:41;;;-1:-1:-1;;;;;10655:33:41;;;;;;;;;;;;;;10680:8;;10655:33;;;;;;;:::i;:::-;-1:-1:-1;10655:33:41;;;;;;;;;;-1:-1:-1;;;;;;10655:33:41;-1:-1:-1;;;;;10655:33:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10655:33:41;;;;;;;;;;10714:10;10698:27;;;;:15;:27;;;;;;:32;;10655:33;;-1:-1:-1;10698:27:41;-1:-1:-1;10698:32:41;;10655:33;;10698:32;:::i;:::-;;;;-1:-1:-1;;10746:39:41;;;31973:25:51;;;10774:10:41;32029:2:51;32014:18;;32007:60;10746:39:41;;31946:18:51;10746:39:41;;;;;;;10803:10;9915:905;-1:-1:-1;;9915:905:41:o;3367:268:27:-;3461:13;1371:66;3490:47;;3486:143;;3560:15;3569:5;3560:8;:15::i;:::-;3553:22;;;;3486:143;3613:5;3606:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3367:268;;;;:::o;1934:290:33:-;2017:7;2059:4;2017:7;2073:116;2097:5;:12;2093:1;:16;2073:116;;;2145:33;2155:12;2169:5;2175:1;2169:8;;;;;;;;:::i;:::-;;;;;;;2145:9;:33::i;:::-;2130:48;-1:-1:-1;2111:3:33;;;;:::i;:::-;;;;2073:116;;;-1:-1:-1;2205:12:33;1934:290;-1:-1:-1;;;1934:290:33:o;2780:1308:44:-;2954:33;2990:32;;;:20;:32;;;;;;;;-1:-1:-1;;;;;3080:35:44;;;;:26;:35;;;;;;;3067:48;;:10;:48;:::i;:::-;3054:8;:62;;3033:160;;;;-1:-1:-1;;;3033:160:44;;32280:2:51;3033:160:44;;;32262:21:51;32319:2;32299:18;;;32292:30;32358:34;32338:18;;;32331:62;-1:-1:-1;;;32409:18:51;;;32402:49;32468:19;;3033:160:44;32078:415:51;3033:160:44;-1:-1:-1;;;;;3227:39:44;;3204:20;3227:39;;;:30;;;:39;;;;;:48;:53;3295:30;;;3291:601;;3341:52;;3385:8;;3341:12;;:31;;:52;;3385:8;;3341:52;:::i;:::-;;;;-1:-1:-1;;;;;;;3407:39:44;;;;;;:30;;;:39;;;;;:60;;3459:8;;3407:39;:60;;3459:8;;3407:60;:::i;:::-;;;;-1:-1:-1;3291:601:44;;-1:-1:-1;3291:601:44;;-1:-1:-1;;3488:34:44;;;;3484:408;;3546:19;:17;:19::i;:::-;3569:1;3546:24;3538:101;;;;;-1:-1:-1;;;3538:101:44;;32700:2:51;3538:101:44;;;32682:21:51;32719:18;;;32712:30;;;;32778:34;32758:18;;;32751:62;32849:34;32829:18;;;32822:62;32901:19;;3538:101:44;32498:428:51;3538:101:44;3701:8;3653:12;:31;;:44;;;:56;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;3723:39:44;;;;;;:30;;;:39;;;;;:52;;:64;;3779:8;;3723:39;:64;;3779:8;;3723:64;:::i;3484:408::-;3818:63;;-1:-1:-1;;;3818:63:44;;33133:2:51;3818:63:44;;;33115:21:51;33172:2;33152:18;;;33145:30;33211:34;33191:18;;;33184:62;-1:-1:-1;;;33262:18:51;;;33255:51;33323:19;;3818:63:44;32931:417:51;3484:408:44;3906:15;3902:87;;;3937:27;;;:41;;;;;;;-1:-1:-1;3937:41:44;;;;;;;;;;-1:-1:-1;;;;;;3937:41:44;-1:-1:-1;;;;;3937:41:44;;;;;3902:87;-1:-1:-1;;;;;3998:35:44;;;;;;:26;:35;;;;;:47;;4037:8;;3998:35;:47;;4037:8;;3998:47;:::i;:::-;;;;;;;;4073:8;4055:14;;:26;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;;;2780:1308:44:o;2059:405:27:-;2118:13;2143:11;2157:16;2168:4;2157:10;:16::i;:::-;2281:14;;;2292:2;2281:14;;;;;;;;;2143:30;;-1:-1:-1;2261:17:27;;2281:14;;;;;;;;;-1:-1:-1;;;2371:16:27;;;-1:-1:-1;2416:4:27;2407:14;;2400:28;;;;-1:-1:-1;2371:16:27;2059:405::o;9205:147:33:-;9268:7;9298:1;9294;:5;:51;;9426:13;9517:15;;;9552:4;9545:15;;;9598:4;9582:21;;9294:51;;;-1:-1:-1;9426:13:33;9517:15;;;9552:4;9545:15;9598:4;9582:21;;;9205:147::o;2536:245:27:-;2597:7;2669:4;2633:40;;2696:2;2687:11;;2683:69;;;2721:20;;-1:-1:-1;;;2721:20:27;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;196:286:51;254:6;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;349:23;;-1:-1:-1;;;;;;401:32:51;;391:43;;381:71;;448:1;445;438:12;887:423;929:3;967:5;961:12;994:6;989:3;982:19;1019:1;1029:162;1043:6;1040:1;1037:13;1029:162;;;1105:4;1161:13;;;1157:22;;1151:29;1133:11;;;1129:20;;1122:59;1058:12;1029:162;;;1033:3;1236:1;1229:4;1220:6;1215:3;1211:16;1207:27;1200:38;1299:4;1292:2;1288:7;1283:2;1275:6;1271:15;1267:29;1262:3;1258:39;1254:50;1247:57;;;887:423;;;;:::o;1315:220::-;1464:2;1453:9;1446:21;1427:4;1484:45;1525:2;1514:9;1510:18;1502:6;1484:45;:::i;1540:180::-;1599:6;1652:2;1640:9;1631:7;1627:23;1623:32;1620:52;;;1668:1;1665;1658:12;1620:52;-1:-1:-1;1691:23:51;;1540:180;-1:-1:-1;1540:180:51:o;1881:257::-;1801:12;;1789:25;;1863:4;1852:16;;;1846:23;1830:14;;;1823:47;2073:2;2058:18;;2085:47;1725:151;2143:131;-1:-1:-1;;;;;2218:31:51;;2208:42;;2198:70;;2264:1;2261;2254:12;2198:70;2143:131;:::o;2279:367::-;2342:8;2352:6;2406:3;2399:4;2391:6;2387:17;2383:27;2373:55;;2424:1;2421;2414:12;2373:55;-1:-1:-1;2447:20:51;;-1:-1:-1;;;;;2479:30:51;;2476:50;;;2522:1;2519;2512:12;2476:50;2559:4;2551:6;2547:17;2535:29;;2619:3;2612:4;2602:6;2599:1;2595:14;2587:6;2583:27;2579:38;2576:47;2573:67;;;2636:1;2633;2626:12;2651:572;2746:6;2754;2762;2815:2;2803:9;2794:7;2790:23;2786:32;2783:52;;;2831:1;2828;2821:12;2783:52;2870:9;2857:23;2889:31;2914:5;2889:31;:::i;:::-;2939:5;-1:-1:-1;2995:2:51;2980:18;;2967:32;-1:-1:-1;;;;;3011:30:51;;3008:50;;;3054:1;3051;3044:12;3008:50;3093:70;3155:7;3146:6;3135:9;3131:22;3093:70;:::i;:::-;2651:572;;3182:8;;-1:-1:-1;3067:96:51;;-1:-1:-1;;;;2651:572:51:o;3228:160::-;3293:20;;3349:13;;3342:21;3332:32;;3322:60;;3378:1;3375;3368:12;3322:60;3228:160;;;:::o;3393:709::-;3503:6;3511;3519;3527;3535;3588:3;3576:9;3567:7;3563:23;3559:33;3556:53;;;3605:1;3602;3595:12;3556:53;3644:9;3631:23;3663:31;3688:5;3663:31;:::i;:::-;3713:5;-1:-1:-1;3765:2:51;3750:18;;3737:32;;-1:-1:-1;3820:2:51;3805:18;;3792:32;-1:-1:-1;;;;;3836:30:51;;3833:50;;;3879:1;3876;3869:12;3833:50;3918:70;3980:7;3971:6;3960:9;3956:22;3918:70;:::i;:::-;4007:8;;-1:-1:-1;3892:96:51;-1:-1:-1;4061:35:51;;-1:-1:-1;4092:2:51;4077:18;;4061:35;:::i;:::-;4051:45;;3393:709;;;;;;;;:::o;4107:156::-;4173:20;;4233:4;4222:16;;4212:27;;4202:55;;4253:1;4250;4243:12;4268:713;4388:6;4396;4404;4412;4420;4428;4481:3;4469:9;4460:7;4456:23;4452:33;4449:53;;;4498:1;4495;4488:12;4449:53;4534:9;4521:23;4511:33;;4563:36;4595:2;4584:9;4580:18;4563:36;:::i;:::-;4553:46;;4646:2;4635:9;4631:18;4618:32;4608:42;;4697:2;4686:9;4682:18;4669:32;4659:42;;4752:3;4741:9;4737:19;4724:33;-1:-1:-1;;;;;4772:6:51;4769:30;4766:50;;;4812:1;4809;4802:12;4766:50;4851:70;4913:7;4904:6;4893:9;4889:22;4851:70;:::i;:::-;4268:713;;;;-1:-1:-1;4268:713:51;;-1:-1:-1;4268:713:51;;4940:8;;4268:713;-1:-1:-1;;;4268:713:51:o;4986:180::-;5042:6;5095:2;5083:9;5074:7;5070:23;5066:32;5063:52;;;5111:1;5108;5101:12;5063:52;5134:26;5150:9;5134:26;:::i;5171:435::-;5224:3;5262:5;5256:12;5289:6;5284:3;5277:19;5315:4;5344:2;5339:3;5335:12;5328:19;;5381:2;5374:5;5370:14;5402:1;5412:169;5426:6;5423:1;5420:13;5412:169;;;5487:13;;5475:26;;5521:12;;;;5556:15;;;;5448:1;5441:9;5412:169;;;-1:-1:-1;5597:3:51;;5171:435;-1:-1:-1;;;;;5171:435:51:o;5611:261::-;5790:2;5779:9;5772:21;5753:4;5810:56;5862:2;5851:9;5847:18;5839:6;5810:56;:::i;5877:127::-;5938:10;5933:3;5929:20;5926:1;5919:31;5969:4;5966:1;5959:15;5993:4;5990:1;5983:15;6009:257;6081:4;6075:11;;;6113:17;;-1:-1:-1;;;;;6145:34:51;;6181:22;;;6142:62;6139:88;;;6207:18;;:::i;:::-;6243:4;6236:24;6009:257;:::o;6271:253::-;6343:2;6337:9;6385:4;6373:17;;-1:-1:-1;;;;;6405:34:51;;6441:22;;;6402:62;6399:88;;;6467:18;;:::i;6529:275::-;6600:2;6594:9;6665:2;6646:13;;-1:-1:-1;;6642:27:51;6630:40;;-1:-1:-1;;;;;6685:34:51;;6721:22;;;6682:62;6679:88;;;6747:18;;:::i;:::-;6783:2;6776:22;6529:275;;-1:-1:-1;6529:275:51:o;6809:486::-;6870:5;6918:4;6906:9;6901:3;6897:19;6893:30;6890:50;;;6936:1;6933;6926:12;6890:50;6969:2;6963:9;7011:4;7003:6;6999:17;7082:6;7070:10;7067:22;-1:-1:-1;;;;;7034:10:51;7031:34;7028:62;7025:88;;;7093:18;;:::i;:::-;7129:2;7122:22;7162:6;-1:-1:-1;7162:6:51;7192:23;;7224:33;7192:23;7224:33;:::i;:::-;7266:23;;6809:486;;-1:-1:-1;;6809:486:51:o;7300:183::-;7360:4;-1:-1:-1;;;;;7385:6:51;7382:30;7379:56;;;7415:18;;:::i;:::-;-1:-1:-1;7460:1:51;7456:14;7472:4;7452:25;;7300:183::o;7488:1048::-;7547:5;7595:4;7583:9;7578:3;7574:19;7570:30;7567:50;;;7613:1;7610;7603:12;7567:50;7635:22;;:::i;:::-;7626:31;;7693:9;7680:23;-1:-1:-1;;;;;7718:6:51;7715:30;7712:50;;;7758:1;7755;7748:12;7712:50;7781:22;;7834:4;7826:13;;7822:23;-1:-1:-1;7812:51:51;;7859:1;7856;7849:12;7812:51;7895:2;7882:16;7917:4;7941:60;7957:43;7997:2;7957:43;:::i;:::-;7941:60;:::i;:::-;8035:15;;;8117:1;8113:10;;;;8105:19;;8101:28;;;8066:12;;;;8141:15;;;8138:35;;;8169:1;8166;8159:12;8138:35;8193:11;;;;8213:223;8229:6;8224:3;8221:15;8213:223;;;8311:3;8298:17;8328:33;8353:7;8328:33;:::i;:::-;8374:20;;8246:12;;;;8414;;;;8213:223;;;8445:20;;-1:-1:-1;8510:18:51;;;8497:32;8481:14;;;8474:56;;;;-1:-1:-1;8452:5:51;7488:1048;-1:-1:-1;;7488:1048:51:o;8541:1282::-;8600:5;8648:4;8636:9;8631:3;8627:19;8623:30;8620:50;;;8666:1;8663;8656:12;8620:50;8688:22;;:::i;:::-;8679:31;;8747:9;8734:23;8766:33;8791:7;8766:33;:::i;:::-;8808:22;;8849:2;8883:35;8899:18;;;8883:35;:::i;:::-;8878:2;8871:5;8867:14;8860:59;8970:2;8959:9;8955:18;8942:32;-1:-1:-1;;;;;9034:2:51;9026:6;9023:14;9020:34;;;9050:1;9047;9040:12;9020:34;9088:6;9077:9;9073:22;9063:32;;9133:3;9126:4;9122:2;9118:13;9114:23;9104:51;;9151:1;9148;9141:12;9104:51;9187:2;9174:16;9209:2;9205;9202:10;9199:36;;;9215:18;;:::i;:::-;9257:53;9300:2;9281:13;;-1:-1:-1;;9277:27:51;9273:36;;9257:53;:::i;:::-;9333:2;9326:5;9319:17;9373:3;9368:2;9363;9359;9355:11;9351:20;9348:29;9345:49;;;9390:1;9387;9380:12;9345:49;9445:2;9440;9436;9432:11;9427:2;9420:5;9416:14;9403:45;9489:1;9484:2;9479;9472:5;9468:14;9464:23;9457:34;9523:5;9518:2;9511:5;9507:14;9500:29;;;9561:57;9614:3;9609:2;9598:9;9594:18;9561:57;:::i;:::-;9556:2;9549:5;9545:14;9538:81;9672:3;9661:9;9657:19;9644:33;9628:49;;9702:2;9692:8;9689:16;9686:36;;;9718:1;9715;9708:12;9686:36;;;9755:61;9812:3;9801:8;9790:9;9786:24;9755:61;:::i;:::-;9749:3;9742:5;9738:15;9731:86;;8541:1282;;;;:::o;9828:356::-;9918:6;9971:2;9959:9;9950:7;9946:23;9942:32;9939:52;;;9987:1;9984;9977:12;9939:52;10027:9;10014:23;-1:-1:-1;;;;;10052:6:51;10049:30;10046:50;;;10092:1;10089;10082:12;10046:50;10115:63;10170:7;10161:6;10150:9;10146:22;10115:63;:::i;10189:905::-;10467:4;10496:2;10525;10514:9;10507:21;10551:56;10603:2;10592:9;10588:18;10580:6;10551:56;:::i;:::-;10664:22;;;10626:2;10644:18;;;10637:50;;;;10736:13;;10758:22;;;10834:15;;;;10796;;;10867:1;10877:191;10891:6;10888:1;10885:13;10877:191;;;10940:48;10984:3;10975:6;10969:13;1801:12;;1789:25;;1863:4;1852:16;;;1846:23;1830:14;;1823:47;1725:151;10940:48;11043:15;;;;11008:12;;;;10913:1;10906:9;10877:191;;;-1:-1:-1;11085:3:51;;10189:905;-1:-1:-1;;;;;;;;10189:905:51:o;11099:640::-;11203:6;11211;11219;11227;11280:2;11268:9;11259:7;11255:23;11251:32;11248:52;;;11296:1;11293;11286:12;11248:52;11335:9;11322:23;11354:31;11379:5;11354:31;:::i;:::-;11404:5;-1:-1:-1;11456:2:51;11441:18;;11428:32;;-1:-1:-1;11511:2:51;11496:18;;11483:32;-1:-1:-1;;;;;11527:30:51;;11524:50;;;11570:1;11567;11560:12;11524:50;11609:70;11671:7;11662:6;11651:9;11647:22;11609:70;:::i;:::-;11099:640;;;;-1:-1:-1;11698:8:51;-1:-1:-1;;;;11099:640:51:o;11997:247::-;12056:6;12109:2;12097:9;12088:7;12084:23;12080:32;12077:52;;;12125:1;12122;12115:12;12077:52;12164:9;12151:23;12183:31;12208:5;12183:31;:::i;12249:318::-;12324:6;12332;12340;12393:2;12381:9;12372:7;12368:23;12364:32;12361:52;;;12409:1;12406;12399:12;12361:52;12445:9;12432:23;12422:33;;12474:36;12506:2;12495:9;12491:18;12474:36;:::i;:::-;12464:46;;12557:2;12546:9;12542:18;12529:32;12519:42;;12249:318;;;;;:::o;12572:315::-;12640:6;12648;12701:2;12689:9;12680:7;12676:23;12672:32;12669:52;;;12717:1;12714;12707:12;12669:52;12753:9;12740:23;12730:33;;12813:2;12802:9;12798:18;12785:32;12826:31;12851:5;12826:31;:::i;:::-;12876:5;12866:15;;;12572:315;;;;;:::o;13131:920::-;13537:3;13532;13528:13;13520:6;13516:26;13505:9;13498:45;13579:3;13574:2;13563:9;13559:18;13552:31;13479:4;13606:46;13647:3;13636:9;13632:19;13624:6;13606:46;:::i;:::-;13700:9;13692:6;13688:22;13683:2;13672:9;13668:18;13661:50;13734:33;13760:6;13752;13734:33;:::i;:::-;13798:2;13783:18;;13776:34;;;-1:-1:-1;;;;;13847:32:51;;13841:3;13826:19;;13819:61;13867:3;13896:19;;13889:35;;;13961:22;;;13955:3;13940:19;;13933:51;13720:47;-1:-1:-1;14001:44:51;13720:47;14030:6;14001:44;:::i;:::-;13993:52;13131:920;-1:-1:-1;;;;;;;;;;13131:920:51:o;14056:461::-;14109:3;14147:5;14141:12;14174:6;14169:3;14162:19;14200:4;14229:2;14224:3;14220:12;14213:19;;14266:2;14259:5;14255:14;14287:1;14297:195;14311:6;14308:1;14305:13;14297:195;;;14376:13;;-1:-1:-1;;;;;14372:39:51;14360:52;;14432:12;;;;14467:15;;;;14408:1;14326:9;14297:195;;14522:261;14701:2;14690:9;14683:21;14664:4;14721:56;14773:2;14762:9;14758:18;14750:6;14721:56;:::i;14970:692::-;15096:6;15104;15112;15165:2;15153:9;15144:7;15140:23;15136:32;15133:52;;;15181:1;15178;15171:12;15133:52;15221:9;15208:23;-1:-1:-1;;;;;15291:2:51;15283:6;15280:14;15277:34;;;15307:1;15304;15297:12;15277:34;15330:63;15385:7;15376:6;15365:9;15361:22;15330:63;:::i;:::-;15320:73;;15446:2;15435:9;15431:18;15418:32;15402:48;;15475:2;15465:8;15462:16;15459:36;;;15491:1;15488;15481:12;15459:36;;15530:72;15594:7;15583:8;15572:9;15568:24;15530:72;:::i;15667:127::-;15728:10;15723:3;15719:20;15716:1;15709:31;15759:4;15756:1;15749:15;15783:4;15780:1;15773:15;15799:346;15949:2;15934:18;;15982:1;15971:13;;15961:144;;16027:10;16022:3;16018:20;16015:1;16008:31;16062:4;16059:1;16052:15;16090:4;16087:1;16080:15;15961:144;16114:25;;;15799:346;:::o;16150:994::-;16341:2;16330:9;16323:21;16304:4;16380:1;16376;16371:3;16367:11;16363:19;16437:2;16428:6;16422:13;16418:22;16413:2;16402:9;16398:18;16391:50;16509:2;16501:6;16497:15;16491:22;16484:30;16477:38;16472:2;16461:9;16457:18;16450:66;16563:2;16555:6;16551:15;16545:22;16603:4;16598:2;16587:9;16583:18;16576:32;16631:52;16678:3;16667:9;16663:19;16649:12;16631:52;:::i;:::-;16617:66;;16755:2;16748;16740:6;16736:15;16730:22;16724:29;16720:38;16714:3;16703:9;16699:19;16692:67;16808:3;16800:6;16796:16;16790:23;16768:45;;16883:2;16879:7;16867:9;16859:6;16855:22;16851:36;16844:4;16833:9;16829:20;16822:66;16925:14;16919:21;16964:2;16956:6;16949:18;16990:61;17047:2;17039:6;17035:15;17019:14;16990:61;:::i;:::-;17110:2;17090:23;;;17084:30;17067:15;;;;17060:55;;;;-1:-1:-1;16976:75:51;16150:994;-1:-1:-1;;;16150:994:51:o;17149:891::-;17233:6;17264:2;17307;17295:9;17286:7;17282:23;17278:32;17275:52;;;17323:1;17320;17313:12;17275:52;17363:9;17350:23;-1:-1:-1;;;;;17388:6:51;17385:30;17382:50;;;17428:1;17425;17418:12;17382:50;17451:22;;17504:4;17496:13;;17492:27;-1:-1:-1;17482:55:51;;17533:1;17530;17523:12;17482:55;17569:2;17556:16;17592:60;17608:43;17648:2;17608:43;:::i;17592:60::-;17686:15;;;17768:1;17764:10;;;;17756:19;;17752:28;;;17717:12;;;;17792:19;;;17789:39;;;17824:1;17821;17814:12;17789:39;17848:11;;;;17868:142;17884:6;17879:3;17876:15;17868:142;;;17950:17;;17938:30;;17901:12;;;;17988;;;;17868:142;;;18029:5;17149:891;-1:-1:-1;;;;;;;17149:891:51:o;18320:380::-;18399:1;18395:12;;;;18442;;;18463:61;;18517:4;18509:6;18505:17;18495:27;;18463:61;18570:2;18562:6;18559:14;18539:18;18536:38;18533:161;;18616:10;18611:3;18607:20;18604:1;18597:31;18651:4;18648:1;18641:15;18679:4;18676:1;18669:15;18533:161;;18320:380;;;:::o;18705:473::-;18907:2;18889:21;;;18946:2;18926:18;;;18919:30;18985:34;18980:2;18965:18;;18958:62;19056:34;19051:2;19036:18;;19029:62;-1:-1:-1;;;19122:3:51;19107:19;;19100:36;19168:3;19153:19;;18705:473::o;19183:127::-;19244:10;19239:3;19235:20;19232:1;19225:31;19275:4;19272:1;19265:15;19299:4;19296:1;19289:15;19315:125;19380:9;;;19401:10;;;19398:36;;;19414:18;;:::i;20163:127::-;20224:10;20219:3;20215:20;20212:1;20205:31;20255:4;20252:1;20245:15;20279:4;20276:1;20269:15;20295:200;20361:9;;;20334:4;20389:9;;20417:10;;20429:12;;;20413:29;20452:12;;;20444:21;;20410:56;20407:82;;;20469:18;;:::i;:::-;20407:82;20295:200;;;;:::o;20500:135::-;20539:3;20560:17;;;20557:43;;20580:18;;:::i;:::-;-1:-1:-1;20627:1:51;20616:13;;20500:135::o;20640:128::-;20707:9;;;20728:11;;;20725:37;;;20742:18;;:::i;20773:411::-;20975:2;20957:21;;;21014:2;20994:18;;;20987:30;21053:34;21048:2;21033:18;;21026:62;-1:-1:-1;;;21119:2:51;21104:18;;21097:45;21174:3;21159:19;;20773:411::o;24053:545::-;24155:2;24150:3;24147:11;24144:448;;;24191:1;24216:5;24212:2;24205:17;24261:4;24257:2;24247:19;24331:2;24319:10;24315:19;24312:1;24308:27;24302:4;24298:38;24367:4;24355:10;24352:20;24349:47;;;-1:-1:-1;24390:4:51;24349:47;24445:2;24440:3;24436:12;24433:1;24429:20;24423:4;24419:31;24409:41;;24500:82;24518:2;24511:5;24508:13;24500:82;;;24563:17;;;24544:1;24533:13;24500:82;;;24504:3;;;24144:448;24053:545;;;:::o;24774:1352::-;24900:3;24894:10;-1:-1:-1;;;;;24919:6:51;24916:30;24913:56;;;24949:18;;:::i;:::-;24978:97;25068:6;25028:38;25060:4;25054:11;25028:38;:::i;:::-;25022:4;24978:97;:::i;:::-;25130:4;;25194:2;25183:14;;25211:1;25206:663;;;;25913:1;25930:6;25927:89;;;-1:-1:-1;25982:19:51;;;25976:26;25927:89;-1:-1:-1;;24731:1:51;24727:11;;;24723:24;24719:29;24709:40;24755:1;24751:11;;;24706:57;26029:81;;25176:944;;25206:663;24000:1;23993:14;;;24037:4;24024:18;;-1:-1:-1;;25242:20:51;;;25360:236;25374:7;25371:1;25368:14;25360:236;;;25463:19;;;25457:26;25442:42;;25555:27;;;;25523:1;25511:14;;;;25390:19;;25360:236;;;25364:3;25624:6;25615:7;25612:19;25609:201;;;25685:19;;;25679:26;-1:-1:-1;;25768:1:51;25764:14;;;25780:3;25760:24;25756:37;25752:42;25737:58;25722:74;;25609:201;-1:-1:-1;;;;;25856:1:51;25840:14;;;25836:22;25823:36;;-1:-1:-1;24774:1352:51:o;29534:442::-;29763:6;29752:9;29745:25;29818:4;29810:6;29806:17;29801:2;29790:9;29786:18;29779:45;29860:6;29855:2;29844:9;29840:18;29833:34;29903:3;29898:2;29887:9;29883:18;29876:31;29726:4;29924:46;29965:3;29954:9;29950:19;29942:6;29924:46;:::i;:::-;29916:54;29534:442;-1:-1:-1;;;;;;29534:442:51:o",
    "linkReferences": {},
    "immutableReferences": {
      "31688": [
        {
          "start": 5193,
          "length": 32
        }
      ],
      "31691": [
        {
          "start": 5235,
          "length": 32
        }
      ],
      "36045": [
        {
          "start": 2330,
          "length": 32
        },
        {
          "start": 3317,
          "length": 32
        },
        {
          "start": 3656,
          "length": 32
        },
        {
          "start": 4374,
          "length": 32
        }
      ],
      "36047": [
        {
          "start": 2658,
          "length": 32
        },
        {
          "start": 3757,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "AMOUNT_FOR_SUMBITTER_PROOF()": "347cf665",
    "BALLOT_TYPEHASH()": "deaaa7cc",
    "COUNTING_MODE()": "dd4e2ba5",
    "METADATAS_COUNT()": "4d24a67f",
    "addressSubmitterVerified(address)": "cb853950",
    "addressTotalCastVoteCounts(address)": "a1ac6cb2",
    "addressTotalVotes(address)": "dea5f6a6",
    "addressTotalVotesVerified(address)": "930de979",
    "allProposalTotalVotes()": "50a5e524",
    "allProposalTotalVotesWithoutDeleted()": "d45a010b",
    "cancel()": "ea8a1af0",
    "castVote(uint256,uint8,uint256,uint256,bytes32[])": "419c533c",
    "castVoteWithoutProof(uint256,uint8,uint256)": "65f16263",
    "checkProof(address,uint256,bytes32[],bool)": "32763c22",
    "contestAddressTotalVotesCast(address)": "aec116b6",
    "contestDeadline()": "262e59e9",
    "contestStart()": "004114a8",
    "creator()": "02d05d3f",
    "deleteProposals(uint256[])": "f0a7db0a",
    "downvotingAllowed()": "60506ff6",
    "eip712Domain()": "84b0196e",
    "getAllProposalIds()": "efa90d36",
    "getNumSubmissions(address)": "5f953a03",
    "getProposal(uint256)": "c7f758a8",
    "hashProposal((address,bool,string,(address),(address[],uint256)))": "458da87d",
    "highestTiedRanking()": "ebc18b9b",
    "isProposalDeleted(uint256)": "3b6d199b",
    "isTied(uint256)": "2399c660",
    "lowestRanking()": "6ca1a2c7",
    "maxProposalCount()": "fb9bf8d4",
    "name()": "06fdde03",
    "numAllowedProposalSubmissions()": "832009af",
    "officialRewardsModule()": "785ddfe5",
    "prompt()": "7c65d711",
    "proposalAddressVotes(uint256,address)": "6e4eb810",
    "proposalAddressesHaveVoted(uint256)": "b323580d",
    "proposalVotes(uint256)": "544ffc9c",
    "proposalVotesStructs(uint256)": "070dc5d9",
    "propose((address,bool,string,(address),(address[],uint256)),bytes32[])": "c0ffaa78",
    "proposeWithoutProof((address,bool,string,(address),(address[],uint256)))": "476f4d8a",
    "rankingPosition(uint256)": "86187488",
    "setOfficialRewardsModule(address)": "f4f3d7ec",
    "setSortedAndTiedProposals()": "96f0e962",
    "setSortedAndTiedProposalsHasBeenRun()": "d8891619",
    "sortedProposalIds()": "8a9cd550",
    "sortedProposals(bool)": "427d56c2",
    "state()": "c19d93fb",
    "submissionMerkleRoot()": "bddc1641",
    "supportsInterface(bytes4)": "01ffc9a7",
    "tiedAdjustedRankingPosition(uint256)": "e5eb5a48",
    "totalVotesCast()": "7de418d5",
    "validateProposalData((address,bool,string,(address),(address[],uint256)))": "fb8ddab4",
    "verifyProposer(address,bytes32[])": "20b3e845",
    "verifyVoter(address,uint256,bytes32[])": "531bd812",
    "version()": "54fd4d50",
    "voteStart()": "e031535b",
    "votingDelay()": "3932abb1",
    "votingMerkleRoot()": "dd96a19d",
    "votingPeriod()": "02a251a3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_prompt\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"_submissionMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_votingMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"_constructorIntParams\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInMerkle\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TooManyMetadatas\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ContestCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldContestStart\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newContestStart\",\"type\":\"uint256\"}],\"name\":\"ContestStartSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldCreator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newCreator\",\"type\":\"address\"}],\"name\":\"CreatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldDownvotingAllowed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDownvotingAllowed\",\"type\":\"uint256\"}],\"name\":\"DownvotingAllowedSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldMaxProposalCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaxProposalCount\",\"type\":\"uint256\"}],\"name\":\"MaxProposalCountSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldNumAllowedProposalSubmissions\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newNumAllowedProposalSubmissions\",\"type\":\"uint256\"}],\"name\":\"NumAllowedProposalSubmissionsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract RewardsModule\",\"name\":\"oldOfficialRewardsModule\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract RewardsModule\",\"name\":\"newOfficialRewardsModule\",\"type\":\"address\"}],\"name\":\"OfficialRewardsModuleSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"proposalIds\",\"type\":\"uint256[]\"}],\"name\":\"ProposalsDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"numVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingDelay\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingDelay\",\"type\":\"uint256\"}],\"name\":\"VotingDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingPeriod\",\"type\":\"uint256\"}],\"name\":\"VotingPeriodSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AMOUNT_FOR_SUMBITTER_PROOF\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COUNTING_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"METADATAS_COUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressSubmitterVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressTotalCastVoteCounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressTotalVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressTotalVotesVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allProposalTotalVotes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"proposalIdsReturn\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"internalType\":\"struct GovernorCountingSimple.VoteCounts[]\",\"name\":\"proposalVoteCountsArrayReturn\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allProposalTotalVotesWithoutDeleted\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"proposalIdsReturn\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"internalType\":\"struct GovernorCountingSimple.VoteCounts[]\",\"name\":\"proposalVoteCountsArrayReturn\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numVotes\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"castVote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"numVotes\",\"type\":\"uint256\"}],\"name\":\"castVoteWithoutProof\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressToCheck\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool\",\"name\":\"voting\",\"type\":\"bool\"}],\"name\":\"checkProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"contestAddressTotalVotesCast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"userTotalVotesCast\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contestDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contestStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"proposalIds\",\"type\":\"uint256[]\"}],\"name\":\"deleteProposals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"downvotingAllowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllProposalIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNumSubmissions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposal\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct IGovernor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct IGovernor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct IGovernor.ProposalCore\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct IGovernor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct IGovernor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct IGovernor.ProposalCore\",\"name\":\"proposal\",\"type\":\"tuple\"}],\"name\":\"hashProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"highestTiedRanking\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"isProposalDeleted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ranking\",\"type\":\"uint256\"}],\"name\":\"isTied\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lowestRanking\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxProposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numAllowedProposalSubmissions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"officialRewardsModule\",\"outputs\":[{\"internalType\":\"contract RewardsModule\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prompt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"proposalAddressVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalAddressesHaveVoted\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalVotesStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"internalType\":\"struct GovernorCountingSimple.VoteCounts\",\"name\":\"proposalVoteCounts\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct IGovernor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct IGovernor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct IGovernor.ProposalCore\",\"name\":\"proposal\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct IGovernor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct IGovernor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct IGovernor.ProposalCore\",\"name\":\"proposal\",\"type\":\"tuple\"}],\"name\":\"proposeWithoutProof\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ranking\",\"type\":\"uint256\"}],\"name\":\"rankingPosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract RewardsModule\",\"name\":\"officialRewardsModule_\",\"type\":\"address\"}],\"name\":\"setOfficialRewardsModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setSortedAndTiedProposals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setSortedAndTiedProposalsHasBeenRun\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sortedProposalIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"excludeDeletedProposals\",\"type\":\"bool\"}],\"name\":\"sortedProposals\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"sortedProposalIdsReturn\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum IGovernor.ContestState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"submissionMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tiedAdjustedRankingPosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVotesCast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct IGovernor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct IGovernor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct IGovernor.ProposalCore\",\"name\":\"proposal\",\"type\":\"tuple\"}],\"name\":\"validateProposalData\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"dataValidated\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"verifyProposer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"verifyVoter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voteStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"ContestCanceled()\":{\"details\":\"Emitted when a contest is canceled.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"ProposalCreated(uint256,address)\":{\"details\":\"Emitted when a proposal is created.\"},\"ProposalsDeleted(uint256[])\":{\"details\":\"Emitted when proposals are deleted.\"},\"VoteCast(address,uint256,uint8,uint256,string)\":{\"details\":\"Emitted when a vote is cast. Note: `support` values should be seen as buckets. There interpretation depends on the voting module used.\"}},\"kind\":\"dev\",\"methods\":{\"COUNTING_MODE()\":{\"details\":\"See {IGovernor-COUNTING_MODE}.\"},\"allProposalTotalVotes()\":{\"details\":\"Accessor to the internal vote counts for a given proposal.\"},\"allProposalTotalVotesWithoutDeleted()\":{\"details\":\"Accessor to the internal vote counts for a given proposal that excludes deleted proposals.\"},\"cancel()\":{\"details\":\"Emits a {IGovernor-ContestCanceled} event.\"},\"castVote(uint256,uint8,uint256,uint256,bytes32[])\":{\"details\":\"See {IGovernor-castVote}.\"},\"castVoteWithoutProof(uint256,uint8,uint256)\":{\"details\":\"See {IGovernor-castVoteWithoutProof}.\"},\"checkProof(address,uint256,bytes32[],bool)\":{\"params\":{\"addressToCheck\":\"address of claimee\",\"amount\":\"to check that the claimee has\",\"proof\":\"merkle proof to prove address and amount are in tree\"}},\"contestAddressTotalVotesCast(address)\":{\"details\":\"Accessor to how many votes an address has cast total for the contest so far.\"},\"contestDeadline()\":{\"details\":\"See {IGovernor-contestDeadline}.\"},\"deleteProposals(uint256[])\":{\"details\":\"Delete proposals. Emits a {IGovernor-ProposalsDeleted} event.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"getAllProposalIds()\":{\"details\":\"Return all proposals.\"},\"getNumSubmissions(address)\":{\"details\":\"Get the number of proposal submissions for a given address.\"},\"getProposal(uint256)\":{\"details\":\"Retrieve proposal data\\\"_.\"},\"hashProposal((address,bool,string,(address),(address[],uint256)))\":{\"details\":\"See {IGovernor-hashProposal}. The proposal id is produced by hashing the RLC encoded `targets` array, the `values` array, the `calldatas` array and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in advance, before the proposal is submitted. Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the same proposal (with same operation and same description) will have the same id if submitted on multiple governors accross multiple networks. This also means that in order to execute the same operation twice (on the same governor) the proposer will have to change the description in order to avoid proposal id conflicts.\"},\"highestTiedRanking()\":{\"details\":\"Getter for highest tied ranking.\"},\"isProposalDeleted(uint256)\":{\"details\":\"Returns if a proposal has been deleted or not (0 if not, 1 if it has been deleted).\"},\"isTied(uint256)\":{\"details\":\"Getter if a given ranking is tied.\"},\"lowestRanking()\":{\"details\":\"Getter for the lowest ranking.\"},\"name()\":{\"details\":\"See {IGovernor-name}.\"},\"officialRewardsModule()\":{\"details\":\"Get the official rewards module contract for this contest (effectively reverse record).\"},\"prompt()\":{\"details\":\"See {IGovernor-prompt}.\"},\"proposalAddressVotes(uint256,address)\":{\"details\":\"Accessor to how many votes an address has cast for a given proposal.\"},\"proposalAddressesHaveVoted(uint256)\":{\"details\":\"Accessor to which addresses have cast a vote for a given proposal.\"},\"proposalVotes(uint256)\":{\"details\":\"Accessor to the internal vote counts for a given proposal.\"},\"propose((address,bool,string,(address),(address[],uint256)),bytes32[])\":{\"details\":\"See {IGovernor-propose}.\"},\"proposeWithoutProof((address,bool,string,(address),(address[],uint256)))\":{\"details\":\"See {IGovernor-proposeWithoutProof}.\"},\"rankingPosition(uint256)\":{\"details\":\"Getter for tiedAdjustedRankingPosition of a ranking.\"},\"setOfficialRewardsModule(address)\":{\"details\":\"Get the official rewards module contract for this contest (effectively reverse record).\"},\"setSortedAndTiedProposals()\":{\"details\":\"Setter for _sortedProposalIds, tiedAdjustedRankingPosition, _isTied, _lowestRanking, and _highestTiedRanking. Will only be called once and only needs to be called once because once the contest is complete these values don't change. Determines if a ranking is tied and also where the last iteration of a ranking is in the _sortedProposalIds list taking ties into account.\"},\"sortedProposalIds()\":{\"details\":\"Getter for _sortedProposalIds.\"},\"sortedProposals(bool)\":{\"details\":\"Accessor to sorted list of proposalIds in ascending order.\"},\"state()\":{\"details\":\"See {IGovernor-state}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"validateProposalData((address,bool,string,(address),(address[],uint256)))\":{\"details\":\"See {IGovernor-validateProposalData}.\"},\"verifyProposer(address,bytes32[])\":{\"details\":\"See {IGovernor-verifyProposer}.\"},\"verifyVoter(address,uint256,bytes32[])\":{\"details\":\"See {IGovernor-verifyVoter}.\"},\"version()\":{\"details\":\"See {IGovernor-version}.\"},\"voteStart()\":{\"details\":\"See {IGovernor-voteStart}.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"NotInMerkle()\":[{\"notice\":\"Thrown if address/amount are not part of Merkle tree\"}],\"TooManyMetadatas()\":[{\"notice\":\"Thrown if there is metadata included in a proposal that isn't covered in data validation\"}]},\"kind\":\"user\",\"methods\":{\"checkProof(address,uint256,bytes32[],bool)\":{\"notice\":\"Allows checking of proofs for an address\"},\"submissionMerkleRoot()\":{\"notice\":\"ERC20-claimee inclusion root\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Contest.sol\":\"Contest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4\",\"dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/Timers.sol\":{\"keccak256\":\"0x413dd6eccfbd25fff5e6c45500e049fc3b66f1a6c7d482d3ab88b8f4a5060ede\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f12296326560a2591d1e8d5cabcb55a1a82209a6752fe6a08b46bd9a3f9835f\",\"dweb:/ipfs/QmTgY5GkmvuMsrB4bzsfXj6SALnshYyXpKKR8WCXaMpoPM\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0xea30c402170bc240354b74e6c6f6a8e5bdb1935d90d168cc58c0654461c6a72b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95cbddf89006e6dbbc200eb091eb90025c97a9980310f2325c9bda2c4fdc97e3\",\"dweb:/ipfs/QmT67Dt3xrKEQSDC4XyDcrKwZUYsJzddrRFjEopRZNP9yR\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"src/Contest.sol\":{\"keccak256\":\"0xa471cab034594f2c2abee2478c60c024de57070152038716d4deaf704f79143c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19bde157cbcdaa4bc4a6e28390bc2f06a558abcf594d70038e0e4f7cab6ba363\",\"dweb:/ipfs/QmW8Hi3fPYwekpdzPuiYATh5NrHz9RkDSr1LjvTPXnG46V\"]},\"src/governance/Governor.sol\":{\"keccak256\":\"0x616e1eb65f309c5c1edd1da86dbfc208f35f3708491d9aad4e4086183b3796db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://381cb39be64c591cc745b858c5e6c21cf32f50227ec294e492fb032307cedcdd\",\"dweb:/ipfs/Qme7TpULoczTp2qUSd3SfKQ6JqJggPVnfHMd9Z38jxa9yB\"]},\"src/governance/GovernorMerkleVotes.sol\":{\"keccak256\":\"0xdf37902c07f4229349c80ae7335d7d7112265e62428a38e2786584382bc8f0ec\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://73866fb05fb57229990cbb10d7788098ad66e0a821bb8622d91eb0e9cb836d5d\",\"dweb:/ipfs/Qmeg5mnXTsXYyrkGhMYfX1XjBAT6Y2wwwrcQZxKVkKHRgU\"]},\"src/governance/IGovernor.sol\":{\"keccak256\":\"0x9f376eceb5dc9f607aef2f32a689e4d3da0138c9ff3df736de980a58857dc767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d6e4fe4cebd0e609645ff903f971af4b7397187c8443cee7d38ed256688df0d\",\"dweb:/ipfs/QmYWVLSsbmJngrvAvEnJAS6S3nJUGDDdyHeF4tQGhwcVSK\"]},\"src/governance/extensions/GovernorCountingSimple.sol\":{\"keccak256\":\"0x0826e704a30c41b3b862a0ab49aa7b6b304df357b36ae01c594f1a06eefe706d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ca6a0f71e0d3f52c5adf79ec69425925d5399edd47305b1c178100f6c26563\",\"dweb:/ipfs/QmaYWdZYwt4Tv86gzytWBZyPY2uiLCo2gtPcAhpQ5v7PRe\"]},\"src/governance/extensions/GovernorModuleRegistry.sol\":{\"keccak256\":\"0x62c9d2a2dcaeccf1b6b801595f34abf893416964997e6ba699c9828ada1abefc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18672ac920d4749fec025a7c8610c8cb866addb0ba20e9cfce5bedd91e062776\",\"dweb:/ipfs/QmNPWkqouY45jCeeFYi5metLX9d8BpSuGXLG55A5BZjH4D\"]},\"src/governance/extensions/GovernorSettings.sol\":{\"keccak256\":\"0x03baf7fa5c11f3d9b50c9df1d193a73bf1e6799f792ce510ccdb4dc86a82d9a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d78ca667bc09e43d8abf0f9ac4e17deaea1a0196aa1bc78c9ac66d734e81cf95\",\"dweb:/ipfs/QmRwfFjbCA6HAn1SRDJ4CKSvmzBqyjce1sDfuwBThj7PWi\"]},\"src/governance/extensions/GovernorSorting.sol\":{\"keccak256\":\"0x11308fa953975df46225fbae1cc0281a3595f45a47ce2c74580e314fd4b18a04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ba97efac2b0c511a82011f729d185bc8b1f2ebcfb2fa94bf28e5562c1c03b0d\",\"dweb:/ipfs/QmWSKMU5WmsPxk3bSwhFPR9qBJnA9DXAnqGz1MdtSJDJSa\"]},\"src/modules/RewardsModule.sol\":{\"keccak256\":\"0x004bce7bf1082d08bbd432a403101f4056ec33f28ea2bb37bb983b0a0a930e9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6930e806ac71b39efa5a8d614667f8fef805da5a5b41a13735f5846f5249163e\",\"dweb:/ipfs/QmZecCnubKk7AmbZH5sjJv16qN6A31MgpmYwqLvVku93SA\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_prompt",
              "type": "string"
            },
            {
              "internalType": "bytes32",
              "name": "_submissionMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "_votingMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256[]",
              "name": "_constructorIntParams",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidShortString"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotInMerkle"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "str",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "StringTooLong"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TooManyMetadatas"
        },
        {
          "inputs": [],
          "type": "event",
          "name": "ContestCanceled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldContestStart",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newContestStart",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContestStartSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldCreator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newCreator",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CreatorSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldDownvotingAllowed",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newDownvotingAllowed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DownvotingAllowedSet",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "EIP712DomainChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldMaxProposalCount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newMaxProposalCount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MaxProposalCountSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldNumAllowedProposalSubmissions",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newNumAllowedProposalSubmissions",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NumAllowedProposalSubmissionsSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract RewardsModule",
              "name": "oldOfficialRewardsModule",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract RewardsModule",
              "name": "newOfficialRewardsModule",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OfficialRewardsModuleSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "proposer",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProposalCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalIds",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProposalsDeleted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "voter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "numVotes",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "reason",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VoteCast",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldVotingDelay",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newVotingDelay",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VotingDelaySet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldVotingPeriod",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newVotingPeriod",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VotingPeriodSet",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "AMOUNT_FOR_SUMBITTER_PROOF",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BALLOT_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "COUNTING_MODE",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "METADATAS_COUNT",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressSubmitterVerified",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressTotalCastVoteCounts",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressTotalVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressTotalVotesVerified",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allProposalTotalVotes",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalIdsReturn",
              "type": "uint256[]"
            },
            {
              "internalType": "struct GovernorCountingSimple.VoteCounts[]",
              "name": "proposalVoteCountsArrayReturn",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "forVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "againstVotes",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allProposalTotalVotesWithoutDeleted",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalIdsReturn",
              "type": "uint256[]"
            },
            {
              "internalType": "struct GovernorCountingSimple.VoteCounts[]",
              "name": "proposalVoteCountsArrayReturn",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "forVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "againstVotes",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancel"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "totalVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "numVotes",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "castVote",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "numVotes",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "castVoteWithoutProof",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "addressToCheck",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "bool",
              "name": "voting",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkProof",
          "outputs": [
            {
              "internalType": "bool",
              "name": "verified",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "userAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "contestAddressTotalVotesCast",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "userTotalVotesCast",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contestDeadline",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contestStart",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "creator",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalIds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteProposals"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "downvotingAllowed",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eip712Domain",
          "outputs": [
            {
              "internalType": "bytes1",
              "name": "fields",
              "type": "bytes1"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "version",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "chainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "verifyingContract",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "uint256[]",
              "name": "extensions",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllProposalIds",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getNumSubmissions",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProposal",
          "outputs": [
            {
              "internalType": "struct IGovernor.ProposalCore",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "struct IGovernor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct IGovernor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IGovernor.ProposalCore",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "struct IGovernor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct IGovernor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "hashProposal",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "highestTiedRanking",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isProposalDeleted",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "ranking",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTied",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lowestRanking",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxProposalCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "numAllowedProposalSubmissions",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "officialRewardsModule",
          "outputs": [
            {
              "internalType": "contract RewardsModule",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "prompt",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "userAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalAddressVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalAddressesHaveVoted",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalVotesStructs",
          "outputs": [
            {
              "internalType": "struct GovernorCountingSimple.VoteCounts",
              "name": "proposalVoteCounts",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "forVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "againstVotes",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IGovernor.ProposalCore",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "struct IGovernor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct IGovernor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "propose",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IGovernor.ProposalCore",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "struct IGovernor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct IGovernor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "proposeWithoutProof",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "ranking",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "rankingPosition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract RewardsModule",
              "name": "officialRewardsModule_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOfficialRewardsModule"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSortedAndTiedProposals"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "setSortedAndTiedProposalsHasBeenRun",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sortedProposalIds",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "excludeDeletedProposals",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "sortedProposals",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "sortedProposalIdsReturn",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "state",
          "outputs": [
            {
              "internalType": "enum IGovernor.ContestState",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "submissionMerkleRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tiedAdjustedRankingPosition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalVotesCast",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IGovernor.ProposalCore",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "struct IGovernor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct IGovernor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "validateProposalData",
          "outputs": [
            {
              "internalType": "bool",
              "name": "dataValidated",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyProposer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "verified",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalVotes",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyVoter",
          "outputs": [
            {
              "internalType": "bool",
              "name": "verified",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "voteStart",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "votingDelay",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "votingMerkleRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "votingPeriod",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "COUNTING_MODE()": {
            "details": "See {IGovernor-COUNTING_MODE}."
          },
          "allProposalTotalVotes()": {
            "details": "Accessor to the internal vote counts for a given proposal."
          },
          "allProposalTotalVotesWithoutDeleted()": {
            "details": "Accessor to the internal vote counts for a given proposal that excludes deleted proposals."
          },
          "cancel()": {
            "details": "Emits a {IGovernor-ContestCanceled} event."
          },
          "castVote(uint256,uint8,uint256,uint256,bytes32[])": {
            "details": "See {IGovernor-castVote}."
          },
          "castVoteWithoutProof(uint256,uint8,uint256)": {
            "details": "See {IGovernor-castVoteWithoutProof}."
          },
          "checkProof(address,uint256,bytes32[],bool)": {
            "params": {
              "addressToCheck": "address of claimee",
              "amount": "to check that the claimee has",
              "proof": "merkle proof to prove address and amount are in tree"
            }
          },
          "contestAddressTotalVotesCast(address)": {
            "details": "Accessor to how many votes an address has cast total for the contest so far."
          },
          "contestDeadline()": {
            "details": "See {IGovernor-contestDeadline}."
          },
          "deleteProposals(uint256[])": {
            "details": "Delete proposals. Emits a {IGovernor-ProposalsDeleted} event."
          },
          "eip712Domain()": {
            "details": "See {EIP-5267}. _Available since v4.9._"
          },
          "getAllProposalIds()": {
            "details": "Return all proposals."
          },
          "getNumSubmissions(address)": {
            "details": "Get the number of proposal submissions for a given address."
          },
          "getProposal(uint256)": {
            "details": "Retrieve proposal data\"_."
          },
          "hashProposal((address,bool,string,(address),(address[],uint256)))": {
            "details": "See {IGovernor-hashProposal}. The proposal id is produced by hashing the RLC encoded `targets` array, the `values` array, the `calldatas` array and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in advance, before the proposal is submitted. Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the same proposal (with same operation and same description) will have the same id if submitted on multiple governors accross multiple networks. This also means that in order to execute the same operation twice (on the same governor) the proposer will have to change the description in order to avoid proposal id conflicts."
          },
          "highestTiedRanking()": {
            "details": "Getter for highest tied ranking."
          },
          "isProposalDeleted(uint256)": {
            "details": "Returns if a proposal has been deleted or not (0 if not, 1 if it has been deleted)."
          },
          "isTied(uint256)": {
            "details": "Getter if a given ranking is tied."
          },
          "lowestRanking()": {
            "details": "Getter for the lowest ranking."
          },
          "name()": {
            "details": "See {IGovernor-name}."
          },
          "officialRewardsModule()": {
            "details": "Get the official rewards module contract for this contest (effectively reverse record)."
          },
          "prompt()": {
            "details": "See {IGovernor-prompt}."
          },
          "proposalAddressVotes(uint256,address)": {
            "details": "Accessor to how many votes an address has cast for a given proposal."
          },
          "proposalAddressesHaveVoted(uint256)": {
            "details": "Accessor to which addresses have cast a vote for a given proposal."
          },
          "proposalVotes(uint256)": {
            "details": "Accessor to the internal vote counts for a given proposal."
          },
          "propose((address,bool,string,(address),(address[],uint256)),bytes32[])": {
            "details": "See {IGovernor-propose}."
          },
          "proposeWithoutProof((address,bool,string,(address),(address[],uint256)))": {
            "details": "See {IGovernor-proposeWithoutProof}."
          },
          "rankingPosition(uint256)": {
            "details": "Getter for tiedAdjustedRankingPosition of a ranking."
          },
          "setOfficialRewardsModule(address)": {
            "details": "Get the official rewards module contract for this contest (effectively reverse record)."
          },
          "setSortedAndTiedProposals()": {
            "details": "Setter for _sortedProposalIds, tiedAdjustedRankingPosition, _isTied, _lowestRanking, and _highestTiedRanking. Will only be called once and only needs to be called once because once the contest is complete these values don't change. Determines if a ranking is tied and also where the last iteration of a ranking is in the _sortedProposalIds list taking ties into account."
          },
          "sortedProposalIds()": {
            "details": "Getter for _sortedProposalIds."
          },
          "sortedProposals(bool)": {
            "details": "Accessor to sorted list of proposalIds in ascending order."
          },
          "state()": {
            "details": "See {IGovernor-state}."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "validateProposalData((address,bool,string,(address),(address[],uint256)))": {
            "details": "See {IGovernor-validateProposalData}."
          },
          "verifyProposer(address,bytes32[])": {
            "details": "See {IGovernor-verifyProposer}."
          },
          "verifyVoter(address,uint256,bytes32[])": {
            "details": "See {IGovernor-verifyVoter}."
          },
          "version()": {
            "details": "See {IGovernor-version}."
          },
          "voteStart()": {
            "details": "See {IGovernor-voteStart}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "checkProof(address,uint256,bytes32[],bool)": {
            "notice": "Allows checking of proofs for an address"
          },
          "submissionMerkleRoot()": {
            "notice": "ERC20-claimee inclusion root"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@forge-std/=lib/forge-std/src/",
        "@openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Contest.sol": "Contest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol": {
        "keccak256": "0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f",
        "urls": [
          "bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc",
          "dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa",
        "urls": [
          "bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4",
          "dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol": {
        "keccak256": "0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256",
        "urls": [
          "bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516",
          "dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899",
        "urls": [
          "bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da",
          "dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Timers.sol": {
        "keccak256": "0x413dd6eccfbd25fff5e6c45500e049fc3b66f1a6c7d482d3ab88b8f4a5060ede",
        "urls": [
          "bzz-raw://6f12296326560a2591d1e8d5cabcb55a1a82209a6752fe6a08b46bd9a3f9835f",
          "dweb:/ipfs/QmTgY5GkmvuMsrB4bzsfXj6SALnshYyXpKKR8WCXaMpoPM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58",
        "urls": [
          "bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2",
          "dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol": {
        "keccak256": "0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd",
        "urls": [
          "bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a",
          "dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol": {
        "keccak256": "0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac",
        "urls": [
          "bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04",
          "dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol": {
        "keccak256": "0xea30c402170bc240354b74e6c6f6a8e5bdb1935d90d168cc58c0654461c6a72b",
        "urls": [
          "bzz-raw://95cbddf89006e6dbbc200eb091eb90025c97a9980310f2325c9bda2c4fdc97e3",
          "dweb:/ipfs/QmT67Dt3xrKEQSDC4XyDcrKwZUYsJzddrRFjEopRZNP9yR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "src/Contest.sol": {
        "keccak256": "0xa471cab034594f2c2abee2478c60c024de57070152038716d4deaf704f79143c",
        "urls": [
          "bzz-raw://19bde157cbcdaa4bc4a6e28390bc2f06a558abcf594d70038e0e4f7cab6ba363",
          "dweb:/ipfs/QmW8Hi3fPYwekpdzPuiYATh5NrHz9RkDSr1LjvTPXnG46V"
        ],
        "license": "MIT"
      },
      "src/governance/Governor.sol": {
        "keccak256": "0x616e1eb65f309c5c1edd1da86dbfc208f35f3708491d9aad4e4086183b3796db",
        "urls": [
          "bzz-raw://381cb39be64c591cc745b858c5e6c21cf32f50227ec294e492fb032307cedcdd",
          "dweb:/ipfs/Qme7TpULoczTp2qUSd3SfKQ6JqJggPVnfHMd9Z38jxa9yB"
        ],
        "license": "MIT"
      },
      "src/governance/GovernorMerkleVotes.sol": {
        "keccak256": "0xdf37902c07f4229349c80ae7335d7d7112265e62428a38e2786584382bc8f0ec",
        "urls": [
          "bzz-raw://73866fb05fb57229990cbb10d7788098ad66e0a821bb8622d91eb0e9cb836d5d",
          "dweb:/ipfs/Qmeg5mnXTsXYyrkGhMYfX1XjBAT6Y2wwwrcQZxKVkKHRgU"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/governance/IGovernor.sol": {
        "keccak256": "0x9f376eceb5dc9f607aef2f32a689e4d3da0138c9ff3df736de980a58857dc767",
        "urls": [
          "bzz-raw://4d6e4fe4cebd0e609645ff903f971af4b7397187c8443cee7d38ed256688df0d",
          "dweb:/ipfs/QmYWVLSsbmJngrvAvEnJAS6S3nJUGDDdyHeF4tQGhwcVSK"
        ],
        "license": "MIT"
      },
      "src/governance/extensions/GovernorCountingSimple.sol": {
        "keccak256": "0x0826e704a30c41b3b862a0ab49aa7b6b304df357b36ae01c594f1a06eefe706d",
        "urls": [
          "bzz-raw://c9ca6a0f71e0d3f52c5adf79ec69425925d5399edd47305b1c178100f6c26563",
          "dweb:/ipfs/QmaYWdZYwt4Tv86gzytWBZyPY2uiLCo2gtPcAhpQ5v7PRe"
        ],
        "license": "MIT"
      },
      "src/governance/extensions/GovernorModuleRegistry.sol": {
        "keccak256": "0x62c9d2a2dcaeccf1b6b801595f34abf893416964997e6ba699c9828ada1abefc",
        "urls": [
          "bzz-raw://18672ac920d4749fec025a7c8610c8cb866addb0ba20e9cfce5bedd91e062776",
          "dweb:/ipfs/QmNPWkqouY45jCeeFYi5metLX9d8BpSuGXLG55A5BZjH4D"
        ],
        "license": "MIT"
      },
      "src/governance/extensions/GovernorSettings.sol": {
        "keccak256": "0x03baf7fa5c11f3d9b50c9df1d193a73bf1e6799f792ce510ccdb4dc86a82d9a4",
        "urls": [
          "bzz-raw://d78ca667bc09e43d8abf0f9ac4e17deaea1a0196aa1bc78c9ac66d734e81cf95",
          "dweb:/ipfs/QmRwfFjbCA6HAn1SRDJ4CKSvmzBqyjce1sDfuwBThj7PWi"
        ],
        "license": "MIT"
      },
      "src/governance/extensions/GovernorSorting.sol": {
        "keccak256": "0x11308fa953975df46225fbae1cc0281a3595f45a47ce2c74580e314fd4b18a04",
        "urls": [
          "bzz-raw://4ba97efac2b0c511a82011f729d185bc8b1f2ebcfb2fa94bf28e5562c1c03b0d",
          "dweb:/ipfs/QmWSKMU5WmsPxk3bSwhFPR9qBJnA9DXAnqGz1MdtSJDJSa"
        ],
        "license": "MIT"
      },
      "src/modules/RewardsModule.sol": {
        "keccak256": "0x004bce7bf1082d08bbd432a403101f4056ec33f28ea2bb37bb983b0a0a930e9a",
        "urls": [
          "bzz-raw://6930e806ac71b39efa5a8d614667f8fef805da5a5b41a13735f5846f5249163e",
          "dweb:/ipfs/QmZecCnubKk7AmbZH5sjJv16qN6A31MgpmYwqLvVku93SA"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Contest.sol",
    "id": 35091,
    "exportedSymbols": {
      "Address": [
        30503
      ],
      "Contest": [
        35090
      ],
      "Context": [
        30525
      ],
      "ECDSA": [
        31660
      ],
      "EIP712": [
        31864
      ],
      "ERC165": [
        32419
      ],
      "Governor": [
        36037
      ],
      "GovernorCountingSimple": [
        36618
      ],
      "GovernorMerkleVotes": [
        36119
      ],
      "GovernorModuleRegistry": [
        36678
      ],
      "GovernorSettings": [
        36977
      ],
      "GovernorSorting": [
        37625
      ],
      "IERC165": [
        32431
      ],
      "IERC20": [
        29663
      ],
      "IERC20Permit": [
        29768
      ],
      "IERC5267": [
        28998
      ],
      "IGovernor": [
        36348
      ],
      "Math": [
        33297
      ],
      "MerkleProof": [
        32392
      ],
      "RewardsModule": [
        38438
      ],
      "SafeCast": [
        34838
      ],
      "SafeERC20": [
        30173
      ],
      "ShortString": [
        30530
      ],
      "ShortStrings": [
        30741
      ],
      "SignedMath": [
        34943
      ],
      "StorageSlot": [
        30851
      ],
      "Strings": [
        31080
      ],
      "Timers": [
        31294
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2151:40",
    "nodes": [
      {
        "id": 34945,
        "nodeType": "PragmaDirective",
        "src": "32:23:40",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 34946,
        "nodeType": "ImportDirective",
        "src": "57:35:40",
        "nodes": [],
        "absolutePath": "src/governance/Governor.sol",
        "file": "./governance/Governor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35091,
        "sourceUnit": 36038,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34947,
        "nodeType": "ImportDirective",
        "src": "93:54:40",
        "nodes": [],
        "absolutePath": "src/governance/extensions/GovernorSettings.sol",
        "file": "./governance/extensions/GovernorSettings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35091,
        "sourceUnit": 36978,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34948,
        "nodeType": "ImportDirective",
        "src": "148:60:40",
        "nodes": [],
        "absolutePath": "src/governance/extensions/GovernorCountingSimple.sol",
        "file": "./governance/extensions/GovernorCountingSimple.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35091,
        "sourceUnit": 36619,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34949,
        "nodeType": "ImportDirective",
        "src": "209:60:40",
        "nodes": [],
        "absolutePath": "src/governance/extensions/GovernorModuleRegistry.sol",
        "file": "./governance/extensions/GovernorModuleRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35091,
        "sourceUnit": 36679,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 35090,
        "nodeType": "ContractDefinition",
        "src": "271:1911:40",
        "nodes": [
          {
            "id": 34998,
            "nodeType": "FunctionDefinition",
            "src": "365:716:40",
            "nodes": [],
            "body": {
              "id": 34997,
              "nodeType": "Block",
              "src": "1079:2:40",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 34971,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34959,
                    "src": "582:5:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 34972,
                    "name": "_prompt",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34961,
                    "src": "589:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 34973,
                    "name": "_submissionMerkleRoot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34963,
                    "src": "598:21:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "id": 34974,
                    "name": "_votingMerkleRoot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34965,
                    "src": "621:17:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 34975,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 34970,
                  "name": "Governor",
                  "nameLocations": [
                    "573:8:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36037,
                  "src": "573:8:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "573:66:40"
              },
              {
                "arguments": [
                  {
                    "baseExpression": {
                      "id": 34977,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34968,
                      "src": "678:21:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 34979,
                    "indexExpression": {
                      "hexValue": "30",
                      "id": 34978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "700:1:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "678:24:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 34980,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34968,
                      "src": "740:21:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 34982,
                    "indexExpression": {
                      "hexValue": "31",
                      "id": 34981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "762:1:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "740:24:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 34983,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34968,
                      "src": "802:21:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 34985,
                    "indexExpression": {
                      "hexValue": "32",
                      "id": 34984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "824:1:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "802:24:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 34986,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34968,
                      "src": "865:21:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 34988,
                    "indexExpression": {
                      "hexValue": "33",
                      "id": 34987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "887:1:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "865:24:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 34989,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34968,
                      "src": "945:21:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 34991,
                    "indexExpression": {
                      "hexValue": "34",
                      "id": 34990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "967:1:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "945:24:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 34992,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34968,
                      "src": "1011:21:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 34994,
                    "indexExpression": {
                      "hexValue": "35",
                      "id": 34993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1033:1:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1011:24:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 34995,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 34976,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "648:16:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36977,
                  "src": "648:16:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "648:426:40"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 34969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34959,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "400:5:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 34998,
                  "src": "386:19:40",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 34958,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "386:6:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34961,
                  "mutability": "mutable",
                  "name": "_prompt",
                  "nameLocation": "429:7:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 34998,
                  "src": "415:21:40",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 34960,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "415:6:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34963,
                  "mutability": "mutable",
                  "name": "_submissionMerkleRoot",
                  "nameLocation": "454:21:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 34998,
                  "src": "446:29:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 34962,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "446:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34965,
                  "mutability": "mutable",
                  "name": "_votingMerkleRoot",
                  "nameLocation": "493:17:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 34998,
                  "src": "485:25:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 34964,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "485:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34968,
                  "mutability": "mutable",
                  "name": "_constructorIntParams",
                  "nameLocation": "537:21:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 34998,
                  "src": "520:38:40",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 34966,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "520:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 34967,
                    "nodeType": "ArrayTypeName",
                    "src": "520:9:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "376:188:40"
            },
            "returnParameters": {
              "id": 34996,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1079:0:40"
            },
            "scope": 35090,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35011,
            "nodeType": "FunctionDefinition",
            "src": "1155:136:40",
            "nodes": [],
            "body": {
              "id": 35010,
              "nodeType": "Block",
              "src": "1247:44:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 35006,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1264:5:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Contest_$35090_$",
                          "typeString": "type(contract super Contest)"
                        }
                      },
                      "id": 35007,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1270:12:40",
                      "memberName": "contestStart",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36797,
                      "src": "1264:18:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 35008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1264:20:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 35005,
                  "id": 35009,
                  "nodeType": "Return",
                  "src": "1257:27:40"
                }
              ]
            },
            "baseFunctions": [
              36234,
              36797
            ],
            "functionSelector": "004114a8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contestStart",
            "nameLocation": "1164:12:40",
            "overrides": {
              "id": 35002,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 35000,
                  "name": "IGovernor",
                  "nameLocations": [
                    "1200:9:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36348,
                  "src": "1200:9:40"
                },
                {
                  "id": 35001,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "1211:16:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36977,
                  "src": "1211:16:40"
                }
              ],
              "src": "1191:37:40"
            },
            "parameters": {
              "id": 34999,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1176:2:40"
            },
            "returnParameters": {
              "id": 35005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35004,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35011,
                  "src": "1238:7:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35003,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1238:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1237:9:40"
            },
            "scope": 35090,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35024,
            "nodeType": "FunctionDefinition",
            "src": "1297:134:40",
            "nodes": [],
            "body": {
              "id": 35023,
              "nodeType": "Block",
              "src": "1388:43:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 35019,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1405:5:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Contest_$35090_$",
                          "typeString": "type(contract super Contest)"
                        }
                      },
                      "id": 35020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1411:11:40",
                      "memberName": "votingDelay",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36807,
                      "src": "1405:17:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 35021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1405:19:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 35018,
                  "id": 35022,
                  "nodeType": "Return",
                  "src": "1398:26:40"
                }
              ]
            },
            "baseFunctions": [
              36252,
              36807
            ],
            "functionSelector": "3932abb1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "votingDelay",
            "nameLocation": "1306:11:40",
            "overrides": {
              "id": 35015,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 35013,
                  "name": "IGovernor",
                  "nameLocations": [
                    "1341:9:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36348,
                  "src": "1341:9:40"
                },
                {
                  "id": 35014,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "1352:16:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36977,
                  "src": "1352:16:40"
                }
              ],
              "src": "1332:37:40"
            },
            "parameters": {
              "id": 35012,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1317:2:40"
            },
            "returnParameters": {
              "id": 35018,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35017,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35024,
                  "src": "1379:7:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35016,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1379:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1378:9:40"
            },
            "scope": 35090,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35037,
            "nodeType": "FunctionDefinition",
            "src": "1437:136:40",
            "nodes": [],
            "body": {
              "id": 35036,
              "nodeType": "Block",
              "src": "1529:44:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 35032,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1546:5:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Contest_$35090_$",
                          "typeString": "type(contract super Contest)"
                        }
                      },
                      "id": 35033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1552:12:40",
                      "memberName": "votingPeriod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36817,
                      "src": "1546:18:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 35034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1546:20:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 35031,
                  "id": 35035,
                  "nodeType": "Return",
                  "src": "1539:27:40"
                }
              ]
            },
            "baseFunctions": [
              36258,
              36817
            ],
            "functionSelector": "02a251a3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "votingPeriod",
            "nameLocation": "1446:12:40",
            "overrides": {
              "id": 35028,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 35026,
                  "name": "IGovernor",
                  "nameLocations": [
                    "1482:9:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36348,
                  "src": "1482:9:40"
                },
                {
                  "id": 35027,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "1493:16:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36977,
                  "src": "1493:16:40"
                }
              ],
              "src": "1473:37:40"
            },
            "parameters": {
              "id": 35025,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1458:2:40"
            },
            "returnParameters": {
              "id": 35031,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35030,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35037,
                  "src": "1520:7:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35029,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1520:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1519:9:40"
            },
            "scope": 35090,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35050,
            "nodeType": "FunctionDefinition",
            "src": "1579:169:40",
            "nodes": [],
            "body": {
              "id": 35049,
              "nodeType": "Block",
              "src": "1687:61:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 35045,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1704:5:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Contest_$35090_$",
                          "typeString": "type(contract super Contest)"
                        }
                      },
                      "id": 35046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1710:29:40",
                      "memberName": "numAllowedProposalSubmissions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36827,
                      "src": "1704:35:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 35047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1704:37:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 35044,
                  "id": 35048,
                  "nodeType": "Return",
                  "src": "1697:44:40"
                }
              ]
            },
            "baseFunctions": [
              35386,
              36827
            ],
            "functionSelector": "832009af",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "numAllowedProposalSubmissions",
            "nameLocation": "1588:29:40",
            "overrides": {
              "id": 35041,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 35039,
                  "name": "Governor",
                  "nameLocations": [
                    "1641:8:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36037,
                  "src": "1641:8:40"
                },
                {
                  "id": 35040,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "1651:16:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36977,
                  "src": "1651:16:40"
                }
              ],
              "src": "1632:36:40"
            },
            "parameters": {
              "id": 35038,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1617:2:40"
            },
            "returnParameters": {
              "id": 35044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35043,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35050,
                  "src": "1678:7:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35042,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1678:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1677:9:40"
            },
            "scope": 35090,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35063,
            "nodeType": "FunctionDefinition",
            "src": "1754:143:40",
            "nodes": [],
            "body": {
              "id": 35062,
              "nodeType": "Block",
              "src": "1849:48:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 35058,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1866:5:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Contest_$35090_$",
                          "typeString": "type(contract super Contest)"
                        }
                      },
                      "id": 35059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1872:16:40",
                      "memberName": "maxProposalCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36837,
                      "src": "1866:22:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 35060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1866:24:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 35057,
                  "id": 35061,
                  "nodeType": "Return",
                  "src": "1859:31:40"
                }
              ]
            },
            "baseFunctions": [
              35395,
              36837
            ],
            "functionSelector": "fb9bf8d4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "maxProposalCount",
            "nameLocation": "1763:16:40",
            "overrides": {
              "id": 35054,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 35052,
                  "name": "Governor",
                  "nameLocations": [
                    "1803:8:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36037,
                  "src": "1803:8:40"
                },
                {
                  "id": 35053,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "1813:16:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36977,
                  "src": "1813:16:40"
                }
              ],
              "src": "1794:36:40"
            },
            "parameters": {
              "id": 35051,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1779:2:40"
            },
            "returnParameters": {
              "id": 35057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35056,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35063,
                  "src": "1840:7:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35055,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1840:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1839:9:40"
            },
            "scope": 35090,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35076,
            "nodeType": "FunctionDefinition",
            "src": "1903:145:40",
            "nodes": [],
            "body": {
              "id": 35075,
              "nodeType": "Block",
              "src": "1999:49:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 35071,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "2016:5:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Contest_$35090_$",
                          "typeString": "type(contract super Contest)"
                        }
                      },
                      "id": 35072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2022:17:40",
                      "memberName": "downvotingAllowed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36847,
                      "src": "2016:23:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 35073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2016:25:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 35070,
                  "id": 35074,
                  "nodeType": "Return",
                  "src": "2009:32:40"
                }
              ]
            },
            "baseFunctions": [
              35404,
              36847
            ],
            "functionSelector": "60506ff6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "downvotingAllowed",
            "nameLocation": "1912:17:40",
            "overrides": {
              "id": 35067,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 35065,
                  "name": "Governor",
                  "nameLocations": [
                    "1953:8:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36037,
                  "src": "1953:8:40"
                },
                {
                  "id": 35066,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "1963:16:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36977,
                  "src": "1963:16:40"
                }
              ],
              "src": "1944:36:40"
            },
            "parameters": {
              "id": 35064,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1929:2:40"
            },
            "returnParameters": {
              "id": 35070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35069,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35076,
                  "src": "1990:7:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35068,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1990:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1989:9:40"
            },
            "scope": 35090,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35089,
            "nodeType": "FunctionDefinition",
            "src": "2054:126:40",
            "nodes": [],
            "body": {
              "id": 35088,
              "nodeType": "Block",
              "src": "2141:39:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 35084,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "2158:5:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Contest_$35090_$",
                          "typeString": "type(contract super Contest)"
                        }
                      },
                      "id": 35085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2164:7:40",
                      "memberName": "creator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36857,
                      "src": "2158:13:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 35086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2158:15:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 35083,
                  "id": 35087,
                  "nodeType": "Return",
                  "src": "2151:22:40"
                }
              ]
            },
            "baseFunctions": [
              36264,
              36857
            ],
            "functionSelector": "02d05d3f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "creator",
            "nameLocation": "2063:7:40",
            "overrides": {
              "id": 35080,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 35078,
                  "name": "IGovernor",
                  "nameLocations": [
                    "2094:9:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36348,
                  "src": "2094:9:40"
                },
                {
                  "id": 35079,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "2105:16:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36977,
                  "src": "2105:16:40"
                }
              ],
              "src": "2085:37:40"
            },
            "parameters": {
              "id": 35077,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2070:2:40"
            },
            "returnParameters": {
              "id": 35083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35082,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35089,
                  "src": "2132:7:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35081,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2132:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2131:9:40"
            },
            "scope": 35090,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 34950,
              "name": "Governor",
              "nameLocations": [
                "291:8:40"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36037,
              "src": "291:8:40"
            },
            "id": 34951,
            "nodeType": "InheritanceSpecifier",
            "src": "291:8:40"
          },
          {
            "baseName": {
              "id": 34952,
              "name": "GovernorSettings",
              "nameLocations": [
                "301:16:40"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36977,
              "src": "301:16:40"
            },
            "id": 34953,
            "nodeType": "InheritanceSpecifier",
            "src": "301:16:40"
          },
          {
            "baseName": {
              "id": 34954,
              "name": "GovernorSorting",
              "nameLocations": [
                "319:15:40"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37625,
              "src": "319:15:40"
            },
            "id": 34955,
            "nodeType": "InheritanceSpecifier",
            "src": "319:15:40"
          },
          {
            "baseName": {
              "id": 34956,
              "name": "GovernorModuleRegistry",
              "nameLocations": [
                "336:22:40"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36678,
              "src": "336:22:40"
            },
            "id": 34957,
            "nodeType": "InheritanceSpecifier",
            "src": "336:22:40"
          }
        ],
        "canonicalName": "Contest",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          35090,
          36678,
          37625,
          36618,
          36977,
          36037,
          36348,
          36119,
          31864,
          28998,
          32419,
          32431,
          30525
        ],
        "name": "Contest",
        "nameLocation": "280:7:40",
        "scope": 35091,
        "usedErrors": [
          30538,
          30540,
          35159,
          36050
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 40
}