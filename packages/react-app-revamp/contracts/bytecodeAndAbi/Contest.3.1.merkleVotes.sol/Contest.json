{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_prompt",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "_submissionMerkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_votingMerkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "_constructorIntParams",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "InvalidShortString",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotInMerkle",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "str",
          "type": "string"
        }
      ],
      "name": "StringTooLong",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TooManyMetadatas",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "ContestCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldContestStart",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newContestStart",
          "type": "uint256"
        }
      ],
      "name": "ContestStartSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldCreator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newCreator",
          "type": "address"
        }
      ],
      "name": "CreatorSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldDownvotingAllowed",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDownvotingAllowed",
          "type": "uint256"
        }
      ],
      "name": "DownvotingAllowedSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "EIP712DomainChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldMaxProposalCount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newMaxProposalCount",
          "type": "uint256"
        }
      ],
      "name": "MaxProposalCountSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldNumAllowedProposalSubmissions",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newNumAllowedProposalSubmissions",
          "type": "uint256"
        }
      ],
      "name": "NumAllowedProposalSubmissionsSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract RewardsModule",
          "name": "oldOfficialRewardsModule",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract RewardsModule",
          "name": "newOfficialRewardsModule",
          "type": "address"
        }
      ],
      "name": "OfficialRewardsModuleSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "proposalIds",
          "type": "uint256[]"
        }
      ],
      "name": "ProposalsDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "numVotes",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "VoteCast",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldVotingDelay",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newVotingDelay",
          "type": "uint256"
        }
      ],
      "name": "VotingDelaySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldVotingPeriod",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newVotingPeriod",
          "type": "uint256"
        }
      ],
      "name": "VotingPeriodSet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "AMOUNT_FOR_SUMBITTER_PROOF",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BALLOT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "COUNTING_MODE",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "METADATAS_COUNT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressSubmitterVerified",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressTotalCastVoteCounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressTotalVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressTotalVotesVerified",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allProposalTotalVotes",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "proposalIdsReturn",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ],
          "internalType": "struct GovernorCountingSimple.VoteCounts[]",
          "name": "proposalVoteCountsArrayReturn",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allProposalTotalVotesWithoutDeleted",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "proposalIdsReturn",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ],
          "internalType": "struct GovernorCountingSimple.VoteCounts[]",
          "name": "proposalVoteCountsArrayReturn",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "totalVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "numVotes",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "castVote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "numVotes",
          "type": "uint256"
        }
      ],
      "name": "castVoteWithoutProof",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addressToCheck",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        },
        {
          "internalType": "bool",
          "name": "voting",
          "type": "bool"
        }
      ],
      "name": "checkProof",
      "outputs": [
        {
          "internalType": "bool",
          "name": "verified",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "contestAddressTotalVotesCast",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalVotesCast",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contestDeadline",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contestStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "proposalIds",
          "type": "uint256[]"
        }
      ],
      "name": "deleteProposals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "downvotingAllowed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eip712Domain",
      "outputs": [
        {
          "internalType": "bytes1",
          "name": "fields",
          "type": "bytes1"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "version",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "verifyingContract",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "extensions",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllProposalIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getNumSubmissions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getProposal",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct IGovernor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IGovernor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct IGovernor.ProposalCore",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct IGovernor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IGovernor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct IGovernor.ProposalCore",
          "name": "proposal",
          "type": "tuple"
        }
      ],
      "name": "hashProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "highestTiedRanking",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "isProposalDeleted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ranking",
          "type": "uint256"
        }
      ],
      "name": "isTied",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lowestRanking",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxProposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numAllowedProposalSubmissions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "officialRewardsModule",
      "outputs": [
        {
          "internalType": "contract RewardsModule",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "prompt",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "proposalAddressVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "proposalAddressesHaveVoted",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "proposalVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalVotesStructs",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ],
          "internalType": "struct GovernorCountingSimple.VoteCounts",
          "name": "proposalVoteCounts",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct IGovernor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IGovernor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct IGovernor.ProposalCore",
          "name": "proposal",
          "type": "tuple"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "propose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct IGovernor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IGovernor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct IGovernor.ProposalCore",
          "name": "proposal",
          "type": "tuple"
        }
      ],
      "name": "proposeWithoutProof",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ranking",
          "type": "uint256"
        }
      ],
      "name": "rankingPosition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract RewardsModule",
          "name": "officialRewardsModule_",
          "type": "address"
        }
      ],
      "name": "setOfficialRewardsModule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setSortedAndTiedProposals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setSortedAndTiedProposalsHasBeenRun",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sortedProposalIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "excludeDeletedProposals",
          "type": "bool"
        }
      ],
      "name": "sortedProposals",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "sortedProposalIdsReturn",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum IGovernor.ContestState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "submissionMerkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tiedAdjustedRankingPosition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct IGovernor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IGovernor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct IGovernor.ProposalCore",
          "name": "proposal",
          "type": "tuple"
        }
      ],
      "name": "validateProposalData",
      "outputs": [
        {
          "internalType": "bool",
          "name": "dataValidated",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "verifyProposer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "verified",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "totalVotes",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "verifyVoter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "verified",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "voteStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingMerkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x6101a06040526015805460ff191690553480156200001c57600080fd5b50604051620045be380380620045be8339810160408190526200003f9162000622565b8060008151811062000055576200005562000733565b60200260200101518160018151811062000073576200007362000733565b60200260200101518260028151811062000091576200009162000733565b602002602001015183600381518110620000af57620000af62000733565b602002602001015184600481518110620000cd57620000cd62000733565b602002602001015185600581518110620000eb57620000eb62000733565b60200260200101518a8a8a8a8181856200010a6200025160201b60201c565b620001178260006200026e565b60e052620001278160016200026e565b61010052815160208084019190912061012052815190820120610140524660a052620001b76101205161014051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c05261016091909152610180526007620001d98582620007d8565b506008620001e88482620007d8565b5050505050620001fe86620002a760201b60201c565b6200020985620002e8565b620002148462000329565b6200021f83620003d0565b6200022a8262000411565b620002358162000452565b620002403362000493565b5050505050505050505050620008fe565b604080518082019091526003815262332e3160e81b602082015290565b60006020835110156200028e576200028683620004fc565b9050620002a1565b816200029b8482620007d8565b5060ff90505b92915050565b600c5460408051918252602082018390527fd299feb1d7d9345a48559601c471c3be7eea9a11f21d5e86809198f40a974db4910160405180910390a1600c55565b600d5460408051918252602082018390527fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a93910160405180910390a1600d55565b600081116200038f5760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f7253657474696e67733a20766f74696e6720706572696f6420604482015266746f6f206c6f7760c81b60648201526084015b60405180910390fd5b600e5460408051918252602082018390527f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e8828910160405180910390a1600e55565b600f5460408051918252602082018390527fe971b819c7fb95c72451f557226aceb5baaf4994a9d39a79bbfa0040e87500b9910160405180910390a1600f55565b60105460408051918252602082018390527f4984ec996723330ee95979ed65a2a4b41edd914e68a187efe92596474643bdff910160405180910390a1601055565b60115460408051918252602082018390527f9c7b27f091caef3a83be73d89320404fa0c4a52993685ff0651672e49e6e55ab910160405180910390a1601155565b601254604080516001600160a01b03928316815291831660208301527fc30034fc2e9697980e08935bbc287db3eaa44a4aa113ef4c108b356adbf911ce910160405180910390a1601280546001600160a01b0319166001600160a01b0392909216919091179055565b600080829050601f815111156200052a578260405163305a27a960e01b8152600401620003869190620008a4565b80516200053782620008d9565b179392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156200058057620005806200053f565b604052919050565b60005b83811015620005a55781810151838201526020016200058b565b50506000910152565b600082601f830112620005c057600080fd5b81516001600160401b03811115620005dc57620005dc6200053f565b620005f1601f8201601f191660200162000555565b8181528460208386010111156200060757600080fd5b6200061a82602083016020870162000588565b949350505050565b600080600080600060a086880312156200063b57600080fd5b85516001600160401b03808211156200065357600080fd5b6200066189838a01620005ae565b96506020915081880151818111156200067957600080fd5b620006878a828b01620005ae565b9650506040880151945060608801519350608088015181811115620006ab57600080fd5b8801601f81018a13620006bd57600080fd5b805182811115620006d257620006d26200053f565b8060051b9250620006e584840162000555565b818152928201840192848101908c8511156200070057600080fd5b928501925b84841015620007205783518252928501929085019062000705565b8096505050505050509295509295909350565b634e487b7160e01b600052603260045260246000fd5b600181811c908216806200075e57607f821691505b6020821081036200077f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620007d357600081815260208120601f850160051c81016020861015620007ae5750805b601f850160051c820191505b81811015620007cf57828155600101620007ba565b5050505b505050565b81516001600160401b03811115620007f457620007f46200053f565b6200080c8162000805845462000749565b8462000785565b602080601f8311600181146200084457600084156200082b5750858301515b600019600386901b1c1916600185901b178555620007cf565b600085815260208120601f198616915b82811015620008755788860151825594840194600190910190840162000854565b5085821015620008945787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6020815260008251806020840152620008c581604085016020870162000588565b601f01601f19169190910160400192915050565b805160208083015191908110156200077f5760001960209190910360031b1b16919050565b60805160a05160c05160e0516101005161012051610140516101605161018051613c496200097560003960008181610a410152610e8c0152600081816108f901528181610cd40152610e270152600050506000505060006113be015260006113940152600050506000505060005050613c496000f3fe6080604052600436106103845760003560e01c8063832009af116101d1578063d45a010b11610102578063e5eb5a48116100a0578063f0a7db0a1161006f578063f0a7db0a14610b45578063f4f3d7ec14610b65578063fb8ddab414610b85578063fb9bf8d414610ba557600080fd5b8063e5eb5a4814610ad9578063ea8a1af014610b06578063ebc18b9b14610b1b578063efa90d3614610b3057600080fd5b8063dd96a19d116100dc578063dd96a19d14610a2f578063dea5f6a614610a63578063deaaa7cc14610a90578063e031535b14610ac457600080fd5b8063d45a010b146109ba578063d8891619146109cf578063dd4e2ba5146109e957600080fd5b8063aec116b61161016f578063c0ffaa7811610149578063c0ffaa781461091b578063c19d93fb1461093b578063c7f758a81461095d578063cb8539501461098a57600080fd5b8063aec116b614610884578063b323580d146108ba578063bddc1641146108e757600080fd5b80638a9cd550116101ab5780638a9cd550146107fd578063930de9791461081257806396f0e96214610842578063a1ac6cb21461085757600080fd5b8063832009af146107a057806384b0196e146107b557806386187488146107dd57600080fd5b8063427d56c2116102b657806354fd4d50116102545780636ca1a2c7116102235780636ca1a2c7146107385780636e4eb8101461074d578063785ddfe51461076d5780637c65d7111461078b57600080fd5b806354fd4d50146106a15780635f953a03146106cd57806360506ff61461070357806365f162631461071857600080fd5b80634d24a67f116102905780634d24a67f146105ff57806350a5e52414610614578063531bd81214610637578063544ffc9c1461065757600080fd5b8063427d56c214610592578063458da87d146105bf578063476f4d8a146105df57600080fd5b80632399c66011610323578063347cf665116102fd578063347cf665146105145780633932abb1146105305780633b6d199b14610545578063419c533c1461057257600080fd5b80632399c660146104bf578063262e59e9146104df57806332763c22146104f457600080fd5b806302d05d3f1161035f57806302d05d3f146103ff57806306fdde031461042c578063070dc5d91461044e57806320b3e8451461049f57600080fd5b80624114a81461039257806301ffc9a7146103ba57806302a251a3146103ea57600080fd5b3661038d57005b005b600080fd5b34801561039e57600080fd5b506103a7610bba565b6040519081526020015b60405180910390f35b3480156103c657600080fd5b506103da6103d5366004612fae565b610bca565b60405190151581526020016103b1565b3480156103f657600080fd5b506103a7610c01565b34801561040b57600080fd5b50610414610c0c565b6040516001600160a01b0390911681526020016103b1565b34801561043857600080fd5b50610441610c20565b6040516103b1919061301e565b34801561045a57600080fd5b50610492610469366004613031565b601460209081526000918252604091829020825180840190935280548352600101549082015281565b6040516103b1919061304a565b3480156104ab57600080fd5b506103da6104ba3660046130bd565b610cb2565b3480156104cb57600080fd5b506103da6104da366004613031565b610d48565b3480156104eb57600080fd5b506103a7610d8c565b34801561050057600080fd5b506103da61050f366004613126565b610da8565b34801561052057600080fd5b506103a7678ac7230489e8000081565b34801561053c57600080fd5b506103a7610ee5565b34801561055157600080fd5b506103a7610560366004613031565b60009081526006602052604090205490565b34801561057e57600080fd5b506103a761058d3660046131a7565b610ef0565b34801561059e57600080fd5b506105b26105ad366004613217565b610f28565b6040516103b1919061326d565b3480156105cb57600080fd5b506103a76105da36600461352b565b611054565b3480156105eb57600080fd5b506103a76105fa36600461352b565b611085565b34801561060b57600080fd5b506103a7600281565b34801561062057600080fd5b506106296110c7565b6040516103b192919061355f565b34801561064357600080fd5b506103da6106523660046135c8565b6111cd565b34801561066357600080fd5b5061068c610672366004613031565b600090815260146020526040902080546001909101549091565b604080519283526020830191909152016103b1565b3480156106ad57600080fd5b50604080518082019091526003815262332e3160e81b6020820152610441565b3480156106d957600080fd5b506103a76106e8366004613623565b6001600160a01b03166000908152600b602052604090205490565b34801561070f57600080fd5b506103a7611238565b34801561072457600080fd5b506103a7610733366004613640565b611243565b34801561074457600080fd5b506103a761130b565b34801561075957600080fd5b5061068c610768366004613675565b611337565b34801561077957600080fd5b50601b546001600160a01b0316610414565b34801561079757600080fd5b5061044161136c565b3480156107ac57600080fd5b506103a761137b565b3480156107c157600080fd5b506107ca611386565b6040516103b197969594939291906136a5565b3480156107e957600080fd5b506103a76107f8366004613031565b61140e565b34801561080957600080fd5b506105b2611446565b34801561081e57600080fd5b506103da61082d366004613623565b60036020526000908152604090205460ff1681565b34801561084e57600080fd5b5061038b6114c0565b34801561086357600080fd5b506103a7610872366004613623565b60136020526000908152604090205481565b34801561089057600080fd5b506103a761089f366004613623565b6001600160a01b031660009081526013602052604090205490565b3480156108c657600080fd5b506108da6108d5366004613031565b6117d4565b6040516103b1919061374e565b3480156108f357600080fd5b506103a77f000000000000000000000000000000000000000000000000000000000000000081565b34801561092757600080fd5b506103a7610936366004613761565b611846565b34801561094757600080fd5b5061095061188a565b6040516103b191906137d2565b34801561096957600080fd5b5061097d610978366004613031565b6118fc565b6040516103b191906137fa565b34801561099657600080fd5b506103da6109a5366004613623565b60046020526000908152604090205460ff1681565b3480156109c657600080fd5b50610629611a76565b3480156109db57600080fd5b506015546103da9060ff1681565b3480156109f557600080fd5b5060408051808201909152601881527f737570706f72743d627261766f2671756f72756d3d666f7200000000000000006020820152610441565b348015610a3b57600080fd5b506103a77f000000000000000000000000000000000000000000000000000000000000000081565b348015610a6f57600080fd5b506103a7610a7e366004613623565b60026020526000908152604090205481565b348015610a9c57600080fd5b506103a77f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f81565b348015610ad057600080fd5b506103a7611c41565b348015610ae557600080fd5b506103a7610af4366004613031565b60166020526000908152604090205481565b348015610b1257600080fd5b5061038b611c53565b348015610b2757600080fd5b506103a7611d3d565b348015610b3c57600080fd5b506105b2611d69565b348015610b5157600080fd5b5061038b610b60366004613880565b611dbf565b348015610b7157600080fd5b5061038b610b80366004613623565b612002565b348015610b9157600080fd5b506103da610ba036600461352b565b61209d565b348015610bb157600080fd5b506103a7612328565b6000610bc5600c5490565b905090565b60006001600160e01b0319821663eed9776760e01b1480610bfb57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000610bc5600e5490565b6000610bc56012546001600160a01b031690565b606060078054610c2f90613910565b80601f0160208091040260200160405190810160405280929190818152602001828054610c5b90613910565b8015610ca85780601f10610c7d57610100808354040283529160200191610ca8565b820191906000526020600020905b815481529060010190602001808311610c8b57829003601f168201915b5050505050905090565b6001600160a01b03831660009081526004602052604081205460ff16610d3d577f0000000000000000000000000000000000000000000000000000000000000000600003610d0257506001610d41565b610d1884678ac7230489e8000085856000610da8565b506001600160a01b0384166000908152600460205260409020805460ff191660011790555b5060015b9392505050565b60155460009060ff16610d765760405162461bcd60e51b8152600401610d6d9061394a565b60405180910390fd5b5060009081526017602052604090205460ff1690565b6000610d96610c01565b610d9e611c41565b610bc591906139cb565b6040516bffffffffffffffffffffffff19606087901b166020820152603481018590526000908190605401604051602081830303815290604052805190602001209050600083610e5757610e528686808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f000000000000000000000000000000000000000000000000000000000000000092508691506123339050565b610eb7565b610eb78686808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f000000000000000000000000000000000000000000000000000000000000000092508691506123339050565b905080610ed75760405163452c2df160e11b815260040160405180910390fd5b506001979650505050505050565b6000610bc5600d5490565b600033610eff818786866111cd565b50610f1c8882898860405180602001604052806000815250612349565b98975050505050505050565b606060008083610f3f57610f3a6110c7565b610f47565b610f47611a76565b91509150600082516001600160401b03811115610f6657610f66613280565b604051908082528060200260200182016040528015610f8f578160200160208202803683370190505b50905060005b825181101561101357828181518110610fb057610fb06139de565b602002602001015160200151838281518110610fce57610fce6139de565b602002602001015160000151610fe491906139f4565b828281518110610ff657610ff66139de565b60209081029190910101528061100b81613a1b565b915050610f95565b5060005b600184516110259190613a34565b81101561104a57611037818386612563565b508061104281613a1b565b915050611017565b5091949350505050565b60008160405160200161106791906137fa565b60408051601f19818403018152919052805160209091012092915050565b3360009081526004602052604081205460ff166110b45760405162461bcd60e51b8152600401610d6d90613a47565b6110bd8261209d565b50610bfb826126c9565b60608060006110d4611d69565b9050600081516001600160401b038111156110f1576110f1613280565b60405190808252806020026020018201604052801561113657816020015b604080518082019091526000808252602082015281526020019060019003908161110f5790505b50905060005b82518110156111c3576014600084838151811061115b5761115b6139de565b60200260200101518152602001908152602001600020600001604051806040016040529081600082015481526020016001820154815250508282815181106111a5576111a56139de565b602002602001018190525080806111bb90613a1b565b91505061113c565b5090939092509050565b6001600160a01b03841660009081526003602052604081205460ff1661122d576111fb858585856000610da8565b506001600160a01b038516600090815260026020908152604080832087905560039091529020805460ff191660011790555b506001949350505050565b6000610bc560115490565b3360008181526003602052604081205490919060ff166112e65760405162461bcd60e51b815260206004820152605260248201527f476f7665726e6f723a20796f75206e65656420746f2063617374206120766f7460448201527f652077697468207468652070726f6f66206174206c65617374206f6e636520616064820152711b99081e5bdd481a185d995b89dd081e595d60721b608482015260a401610d6d565b6113028582868660405180602001604052806000815250612349565b95945050505050565b60155460009060ff166113305760405162461bcd60e51b8152600401610d6d9061394a565b5060195490565b60008281526014602090815260408083206001600160a01b0385168452600301909152902080546001909101545b9250929050565b606060088054610c2f90613910565b6000610bc5600f5490565b6000606080828080836113b97f000000000000000000000000000000000000000000000000000000000000000083612a48565b6113e47f00000000000000000000000000000000000000000000000000000000000000006001612a48565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60155460009060ff166114335760405162461bcd60e51b8152600401610d6d9061394a565b5060009081526016602052604090205490565b60155460609060ff1661146b5760405162461bcd60e51b8152600401610d6d9061394a565b6018805480602002602001604051908101604052809291908181526020018280548015610ca857602002820191906000526020600020905b8154815260200190600101908083116114a3575050505050905090565b60046114ca61188a565b60048111156114db576114db6137bc565b1461155e5760405162461bcd60e51b815260206004820152604760248201527f476f7665726e6f72536f7274696e673a20636f6e74657374206d75737420626560448201527f20746f2063616c63756c61746520736f7274656420616e6420746965642070726064820152666f706f73616c7360c81b608482015260a401610d6d565b60155460ff16156115fd5760405162461bcd60e51b815260206004820152605f60248201527f476f7665726e6f72536f7274696e673a20736574536f72746564416e6454696560448201527f6450726f706f73616c7328292068617320616c7265616479206265656e20727560648201527f6e20616e642069747320726573706563746976652076616c7565732073657400608482015260a401610d6d565b6116076001610f28565b805161161b91601891602090910190612e88565b5060185460009060019061162f90826139cb565b601a5560005b6018548110156117c25760185460009061165190600190613a34565b905060008061169a60186116658686613a34565b81548110611675576116756139de565b9060005260206000200154600090815260146020526040902080546001909101549091565b909250905060006116ab82846139f4565b9050846000036116ec5760185490965086906001036116e3576116ce8585613a34565b60008781526016602052604090205560198690555b505050506117b0565b86810361173f5760008681526017602052604090205460ff16611723576000868152601760205260409020805460ff191660011790555b6018546117319060016139cb565b601a540361173f57601a8690555b868114611778576117508585613a34565b61175b9060016139cb565b6000878152601660205260409020558561177481613a1b565b9650505b6018546117868660016139cb565b036117aa576117958585613a34565b60008781526016602052604090205560198690555b95505050505b806117ba81613a1b565b915050611635565b50506015805460ff1916600117905550565b600081815260146020908152604091829020600281018054845181850281018501909552808552606094929383018282801561183957602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161181b575b5050505050915050919050565b6000611853338484610cb2565b61186f5760405162461bcd60e51b8152600401610d6d90613a47565b6118788461209d565b50611882846126c9565b949350505050565b60095460009060ff161561189e5750600290565b60006118a8610bba565b90504281106118b957600091505090565b60006118c3611c41565b90504281106118d55760039250505090565b60006118df610d8c565b90504281106118f2576001935050505090565b6004935050505090565b611904612ed3565b6000828152600a6020908152604091829020825160a08101845281546001600160a01b0381168252600160a01b900460ff16151592810192909252600181018054929391929184019161195690613910565b80601f016020809104026020016040519081016040528092919081815260200182805461198290613910565b80156119cf5780601f106119a4576101008083540402835291602001916119cf565b820191906000526020600020905b8154815290600101906020018083116119b257829003601f168201915b5050509183525050604080516020818101835260028501546001600160a01b03168252808401919091528151600385018054606093810283018401855282850181815294909501949193909284928491840182828015611a5857602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611a3a575b50505050508152602001600182015481525050815250509050919050565b6060806000611a83611d69565b9050600081516001600160401b03811115611aa057611aa0613280565b604051908082528060200260200182016040528015611ac9578160200160208202803683370190505b509050600082516001600160401b03811115611ae757611ae7613280565b604051908082528060200260200182016040528015611b2c57816020015b6040805180820190915260008082526020820152815260200190600190039081611b055790505b5090506000805b8451811015611c3557611b6b858281518110611b5157611b516139de565b602002602001015160009081526006602052604090205490565b600114611c2357848181518110611b8457611b846139de565b6020026020010151848381518110611b9e57611b9e6139de565b60200260200101818152505060146000868381518110611bc057611bc06139de565b6020026020010151815260200190815260200160002060000160405180604001604052908160008201548152602001600182015481525050838381518110611c0a57611c0a6139de565b6020908102919091010152611c206001836139cb565b91505b80611c2d81613a1b565b915050611b33565b50919590945092505050565b6000611c4b610ee5565b610d9e610bba565b611c5b610c0c565b6001600160a01b0316336001600160a01b031614611c7857600080fd5b6000611c8261188a565b90506002816004811115611c9857611c986137bc565b14158015611cb857506004816004811115611cb557611cb56137bc565b14155b611d045760405162461bcd60e51b815260206004820152601c60248201527f476f7665726e6f723a20636f6e74657374206e6f7420616374697665000000006044820152606401610d6d565b6009805460ff191660011790556040517f4cd963a081760a54f571abc0f1db4dde31b4a07d8d6da3e844b8c6f47eeaaa4290600090a150565b60155460009060ff16611d625760405162461bcd60e51b8152600401610d6d9061394a565b50601a5490565b60606005805480602002602001604051908101604052809291908181526020018280548015610ca857602002820191906000526020600020908154815260200190600101908083116114a3575050505050905090565b611dc7610c0c565b6001600160a01b0316336001600160a01b031614611e4d5760405162461bcd60e51b815260206004820152603760248201527f476f7665726e6f723a206f6e6c792074686520636f6e7465737420637265617460448201527f6f722063616e2064656c6574652070726f706f73616c730000000000000000006064820152608401610d6d565b6004611e5761188a565b6004811115611e6857611e686137bc565b03611eed5760405162461bcd60e51b815260206004820152604960248201527f476f7665726e6f723a2064656c6574696f6e206f662070726f706f73616c732060448201527f61667465722074686520656e64206f66206120636f6e74657374206973206e6f6064820152681d08185b1b1bddd95960ba1b608482015260a401610d6d565b60005b8151811015611fc75760066000838381518110611f0f57611f0f6139de565b6020026020010151815260200190815260200160002054600114611fb557600160066000848481518110611f4557611f456139de565b60200260200101518152602001908152602001600020819055506040518060600160405280603d8152602001613bd7603d9139600a6000848481518110611f8e57611f8e6139de565b602002602001015181526020019081526020016000206001019081611fb39190613ae5565b505b80611fbf81613a1b565b915050611ef0565b507f75a75cf5c561892f4cc5b26c1b8e933849b42238c96dd073d080d1ae96c5141681604051611ff7919061326d565b60405180910390a150565b61200a610c0c565b6001600160a01b0316336001600160a01b03161461202757600080fd5b600061203b601b546001600160a01b031690565b601b80546001600160a01b0319166001600160a01b0385811691821790925560408051928416835260208301919091529192507f753a2cf8d360cff631674504210913e48247f8e56b3e6d2006c2103d4095999f910160405180910390a15050565b80516000906001600160a01b031633146121125760405162461bcd60e51b815260206004820152603060248201527f476f7665726e6f723a207468652070726f706f73616c20617574686f72206d7560448201526f39ba1031329036b9b39739b2b73232b960811b6064820152608401610d6d565b60005b60028110156122ca576000816001811115612132576121326137bc565b90506000816001811115612148576121486137bc565b0361215357506122b8565b6001816001811115612167576121676137bc565b0361229d57608084015151516000036121f95760405162461bcd60e51b815260206004820152604860248201527f476f7665726e6f724d6574616461746156616c69646174696f6e3a207468657260448201527f652063616e6e6f74206265207a65726f207369676e65727320696e20736166656064820152674d6574616461746160c01b608482015260a401610d6d565b8360800151602001516000036122855760405162461bcd60e51b8152602060048201526044602482018190527f476f7665726e6f724d6574616461746156616c69646174696f6e3a2074687265908201527f73686f6c642063616e6e6f74206265207a65726f20696e20736166654d6574616064820152636461746160e01b608482015260a401610d6d565b6080840151515160000361229857600080fd5b6122b6565b6040516308b6566d60e11b815260040160405180910390fd5b505b806122c281613a1b565b915050612115565b508160400151516000036123205760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a20656d7074792070726f706f73616c00000000000000006044820152606401610d6d565b506001919050565b6000610bc560105490565b6000826123408584612af4565b14949350505050565b6000600161235561188a565b6004811115612366576123666137bc565b146123bf5760405162461bcd60e51b815260206004820152602360248201527f476f7665726e6f723a20766f7465206e6f742063757272656e746c792061637460448201526269766560e81b6064820152608401610d6d565b600083116124235760405162461bcd60e51b815260206004820152602b60248201527f476f7665726e6f723a2063616e6e6f7420766f746520776974682030206f722060448201526a666577657220766f74657360a81b6064820152608401610d6d565b6001600160a01b03851660009081526003602052604090205460ff166124c95760405162461bcd60e51b815260206004820152604f60248201527f476f7665726e6f723a20796f75206e65656420746f2076657269667920796f7560448201527f72206e756d626572206f6620766f74657320616761696e737420746865206d6560648201526e1c9adb19481c9bdbdd08199a5c9cdd608a1b608482015260a401610d6d565b6124fb86868686600260008b6001600160a01b03166001600160a01b0316815260200190815260200160002054612b41565b846001600160a01b03167fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda48786868660405161253a9493929190613ba4565b60405180910390a2505050506001600160a01b0316600090815260026020526040902054919050565b600083805b84518110156125c157848281518110612583576125836139de565b602002602001015185828151811061259d5761259d6139de565b602002602001015112156125af578091505b806125b981613a1b565b915050612568565b508481036125d3576000915050610d41565b60008486815181106125e7576125e76139de565b60200260200101519050848281518110612603576126036139de565b602002602001015185878151811061261d5761261d6139de565b6020026020010181815250508085838151811061263c5761263c6139de565b602002602001018181525050600084878151811061265c5761265c6139de565b60200260200101519050848381518110612678576126786139de565b6020026020010151858881518110612692576126926139de565b602002602001018181525050808584815181106126b1576126b16139de565b60209081029190910101525060019695505050505050565b600060036126d561188a565b60048111156126e6576126e66137bc565b146127595760405162461bcd60e51b815260206004820152603e60248201527f476f7665726e6f723a20636f6e74657374206d7573742062652071756575656460448201527f20666f722070726f706f73616c7320746f206265207375626d697474656400006064820152608401610d6d565b61276161137b565b336000908152600b60205260409020541061280a5760405162461bcd60e51b815260206004820152605d60248201527f476f7665726e6f723a207468652073616d652063616e6e6f74207375626d697460448201527f206d6f7265207468616e20746865206e756d416c6c6f77656450726f706f736160648201527f6c5375626d697373696f6e7320666f72207468697320636f6e74657374000000608482015260a401610d6d565b612812612328565b600554106128885760405162461bcd60e51b815260206004820152603960248201527f476f7665726e6f723a20746865206d6178206e756d626572206f662070726f7060448201527f6f73616c732068617665206265656e207375626d6974746564000000000000006064820152608401610d6d565b600061289383611054565b6000818152600a6020526040902054909150600160a01b900460ff161561290e5760405162461bcd60e51b815260206004820152602960248201527f476f7665726e6f723a206475706c69636174652070726f706f73616c73206e6f6044820152681d08185b1b1bddd95960ba1b6064820152608401610d6d565b6005805460018181019092557f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0018290556000828152600a602090815260409182902086518154928801511515600160a01b026001600160a81b03199093166001600160a01b03909116179190911781559085015185928201906129929082613ae5565b506060820151516002820180546001600160a01b0319166001600160a01b0390921691909117905560808201518051805160038401916129d791839160200190612f44565b50602091820151600191820155336000908152600b9092526040822080549194509250612a059084906139cb565b9091555050604080518281523360208201527fcd423cc1203c0af96b9b3d68d73b3064a69de2d14450bb7181c5e5df2132b358910160405180910390a192915050565b606060ff8314612a6257612a5b83612df5565b9050610bfb565b818054612a6e90613910565b80601f0160208091040260200160405190810160405280929190818152602001828054612a9a90613910565b8015612ae75780601f10612abc57610100808354040283529160200191612ae7565b820191906000526020600020905b815481529060010190602001808311612aca57829003601f168201915b5050505050905092915050565b600081815b8451811015612b3957612b2582868381518110612b1857612b186139de565b6020026020010151612e34565b915080612b3181613a1b565b915050612af9565b509392505050565b60008581526014602090815260408083206001600160a01b0388168452601390925290912054612b719083613a34565b831115612bdc5760405162461bcd60e51b815260206004820152603360248201527f476f7665726e6f72566f74696e6753696d706c653a206e6f7420656e6f756768604482015272081d9bdd195cc81b19599d081d1bc818d85cdd606a1b6064820152608401610d6d565b6001600160a01b03851660009081526003820160205260409020541560ff8516612c4e57815484908390600090612c149084906139cb565b90915550506001600160a01b038616600090815260038301602052604081208054869290612c439084906139cb565b90915550612d889050565b60001960ff861601612d2257612c62611238565b600114612cd9576040805162461bcd60e51b81526020600482015260248101919091527f476f7665726e6f72566f74696e6753696d706c653a20646f776e766f74696e6760448201527f206973206e6f7420656e61626c656420666f72207468697320436f6e746573746064820152608401610d6d565b83826000016001016000828254612cf091906139cb565b90915550506001600160a01b038616600090815260038301602052604081206001018054869290612c439084906139cb565b60405162461bcd60e51b815260206004820152603560248201527f476f7665726e6f72566f74696e6753696d706c653a20696e76616c69642076616044820152746c756520666f7220656e756d20566f74655479706560581b6064820152608401610d6d565b8015612dbf57600282018054600181018255600091825260209091200180546001600160a01b0319166001600160a01b0388161790555b6001600160a01b03861660009081526013602052604081208054869290612de79084906139cb565b909155505050505050505050565b60606000612e0283612e60565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000818310612e50576000828152602084905260409020610d41565b5060009182526020526040902090565b600060ff8216601f811115610bfb57604051632cd44ac360e21b815260040160405180910390fd5b828054828255906000526020600020908101928215612ec3579160200282015b82811115612ec3578251825591602001919060010190612ea8565b50612ecf929150612f99565b5090565b6040518060a0016040528060006001600160a01b0316815260200160001515815260200160608152602001612f1d604051806020016040528060006001600160a01b031681525090565b8152602001612f3f604051806040016040528060608152602001600081525090565b905290565b828054828255906000526020600020908101928215612ec3579160200282015b82811115612ec357825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612f64565b5b80821115612ecf5760008155600101612f9a565b600060208284031215612fc057600080fd5b81356001600160e01b031981168114610d4157600080fd5b6000815180845260005b81811015612ffe57602081850181015186830182015201612fe2565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610d416020830184612fd8565b60006020828403121561304357600080fd5b5035919050565b815181526020808301519082015260408101610bfb565b6001600160a01b038116811461307657600080fd5b50565b60008083601f84011261308b57600080fd5b5081356001600160401b038111156130a257600080fd5b6020830191508360208260051b850101111561136557600080fd5b6000806000604084860312156130d257600080fd5b83356130dd81613061565b925060208401356001600160401b038111156130f857600080fd5b61310486828701613079565b9497909650939450505050565b8035801515811461312157600080fd5b919050565b60008060008060006080868803121561313e57600080fd5b853561314981613061565b94506020860135935060408601356001600160401b0381111561316b57600080fd5b61317788828901613079565b909450925061318a905060608701613111565b90509295509295909350565b803560ff8116811461312157600080fd5b60008060008060008060a087890312156131c057600080fd5b863595506131d060208801613196565b9450604087013593506060870135925060808701356001600160401b038111156131f957600080fd5b61320589828a01613079565b979a9699509497509295939492505050565b60006020828403121561322957600080fd5b610d4182613111565b600081518084526020808501945080840160005b8381101561326257815187529582019590820190600101613246565b509495945050505050565b602081526000610d416020830184613232565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156132b8576132b8613280565b60405290565b60405160a081016001600160401b03811182821017156132b8576132b8613280565b604051601f8201601f191681016001600160401b038111828210171561330857613308613280565b604052919050565b60006020828403121561332257600080fd5b604051602081018181106001600160401b038211171561334457613344613280565b604052905080823561335581613061565b905292915050565b60006001600160401b0382111561337657613376613280565b5060051b60200190565b60006040828403121561339257600080fd5b61339a613296565b905081356001600160401b038111156133b257600080fd5b8201601f810184136133c357600080fd5b803560206133d86133d38361335d565b6132e0565b82815260059290921b830181019181810190878411156133f757600080fd5b938201935b8385101561341e57843561340f81613061565b825293820193908201906133fc565b85525093840135938301939093525092915050565b600060a0828403121561344557600080fd5b61344d6132be565b9050813561345a81613061565b81526020613469838201613111565b8183015260408301356001600160401b038082111561348757600080fd5b818501915085601f83011261349b57600080fd5b8135818111156134ad576134ad613280565b6134bf601f8201601f191685016132e0565b81815287858386010111156134d357600080fd5b8185850186830137600085838301015280604087015250506134f88660608701613310565b6060850152608085013592508083111561351157600080fd5b505061351f84828501613380565b60808301525092915050565b60006020828403121561353d57600080fd5b81356001600160401b0381111561355357600080fd5b61188284828501613433565b6000604080835261357281840186613232565b83810360208581019190915285518083528682019282019060005b818110156135ba576135aa83865180518252602090810151910152565b938301939185019160010161358d565b509098975050505050505050565b600080600080606085870312156135de57600080fd5b84356135e981613061565b93506020850135925060408501356001600160401b0381111561360b57600080fd5b61361787828801613079565b95989497509550505050565b60006020828403121561363557600080fd5b8135610d4181613061565b60008060006060848603121561365557600080fd5b8335925061366560208501613196565b9150604084013590509250925092565b6000806040838503121561368857600080fd5b82359150602083013561369a81613061565b809150509250929050565b60ff60f81b8816815260e0602082015260006136c460e0830189612fd8565b82810360408401526136d68189612fd8565b606084018890526001600160a01b038716608085015260a0840186905283810360c085015290506137078185613232565b9a9950505050505050505050565b600081518084526020808501945080840160005b838110156132625781516001600160a01b031687529582019590820190600101613729565b602081526000610d416020830184613715565b60008060006040848603121561377657600080fd5b83356001600160401b038082111561378d57600080fd5b61379987838801613433565b945060208601359150808211156137af57600080fd5b5061310486828701613079565b634e487b7160e01b600052602160045260246000fd5b60208101600583106137f457634e487b7160e01b600052602160045260246000fd5b91905290565b60208152600060018060a01b03808451166020840152602084015115156040840152604084015160a0606085015261383560c0850182612fd8565b90508160608601515116608085015260808501519150601f198482030160a085015281516040825261386a6040830182613715565b6020938401519290930191909152509392505050565b6000602080838503121561389357600080fd5b82356001600160401b038111156138a957600080fd5b8301601f810185136138ba57600080fd5b80356138c86133d38261335d565b81815260059190911b820183019083810190878311156138e757600080fd5b928401925b82841015613905578335825292840192908401906138ec565b979650505050505050565b600181811c9082168061392457607f821691505b60208210810361394457634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526045908201527f526577617264734d6f64756c653a2072756e20736574536f72746564416e645460408201527f69656450726f706f73616c73282920746f20706f70756c61746520746869732060608201526476616c756560d81b608082015260a00190565b634e487b7160e01b600052601160045260246000fd5b80820180821115610bfb57610bfb6139b5565b634e487b7160e01b600052603260045260246000fd5b8181036000831280158383131683831282161715613a1457613a146139b5565b5092915050565b600060018201613a2d57613a2d6139b5565b5060010190565b81810381811115610bfb57610bfb6139b5565b6020808252602f908201527f476f7665726e6f723a2061646472657373206973206e6f74207065726d69737360408201526e1a5bdb9959081d1bc81cdd589b5a5d608a1b606082015260800190565b601f821115613ae057600081815260208120601f850160051c81016020861015613abd5750805b601f850160051c820191505b81811015613adc57828155600101613ac9565b5050505b505050565b81516001600160401b03811115613afe57613afe613280565b613b1281613b0c8454613910565b84613a96565b602080601f831160018114613b475760008415613b2f5750858301515b600019600386901b1c1916600185901b178555613adc565b600085815260208120601f198616915b82811015613b7657888601518255948401946001909101908401613b57565b5085821015613b945787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b84815260ff84166020820152826040820152608060608201526000613bcc6080830184612fd8565b969550505050505056fe546869732070726f706f73616c20686173206265656e2064656c65746564206279207468652063726561746f72206f662074686520636f6e746573742ea26469706673582212205b37fb2fe0b21e4b3b5f342140e444f509ef6a2c67d94cad6a0a2ef8aa18f64164736f6c63430008130033",
    "sourceMap": "271:1911:36:-:0;;;273:55:43;;;-1:-1:-1;;273:55:43;;;365:716:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;678:21;700:1;678:24;;;;;;;;:::i;:::-;;;;;;;740:21;762:1;740:24;;;;;;;;:::i;:::-;;;;;;;802:21;824:1;802:24;;;;;;;;:::i;:::-;;;;;;;865:21;887:1;865:24;;;;;;;;:::i;:::-;;;;;;;945:21;967:1;945:24;;;;;;;;:::i;:::-;;;;;;;1011:21;1033:1;1011:24;;;;;;;;:::i;:::-;;;;;;;582:5;589:7;598:21;621:17;1957:21:37;1980:17;2014:5;2021:9;:7;;;:9;;:::i;:::-;3251:45:28;:4;3282:13;3251:30;:45::i;:::-;3243:53;;3317:51;:7;3351:16;3317:33;:51::i;:::-;3306:62;;3392:22;;;;;;;;;;3378:36;;3441:25;;;;;;3424:42;;3494:13;3477:30;;3542:23;4077:11;;4090:14;;4054:81;;;1929:95;4054:81;;;5649:25:47;5690:18;;;5683:34;;;;5733:18;;;5726:34;4106:13:28;5776:18:47;;;5769:34;4129:4:28;5819:19:47;;;5812:61;4018:7:28;;5621:19:47;;4054:81:28;;;;;;;;;;;;4044:92;;;;;;4037:99;;3963:180;;3542:23;3517:48;;-1:-1:-1;;3597:4:28;3575:27;;894:44:38;;;;;963:36;;2046:5:37::2;:13;2054:5:::0;2046;:13:::2;:::i;:::-;-1:-1:-1::0;2069:7:37::2;:17;2079:7:::0;2069;:17:::2;:::i;:::-;;1815:278:::0;;;;1483:37:42;1500:19;1483:16;;;:37;;:::i;:::-;1530:35;1546:18;1530:15;:35::i;:::-;1575:37;1592:19;1575:16;:37::i;:::-;1622:71;1656:36;1622:33;:71::i;:::-;1703:45;1724:23;1703:20;:45::i;:::-;1758:47;1780:24;1758:21;:47::i;:::-;1815:23;1827:10;1815:11;:23::i;:::-;1208:637;;;;;;365:716:36;;;;;271:1911;;2987:101:37;3069:12;;;;;;;;;;;;-1:-1:-1;;;3069:12:37;;;;;2987:101::o;2457:341:23:-;2553:11;2602:2;2586:5;2580:19;:24;2576:216;;;2627:20;2641:5;2627:13;:20::i;:::-;2620:27;;;;2576:216;2704:5;2678:46;2719:5;2704;2678:46;:::i;:::-;-1:-1:-1;933:66:23;;-1:-1:-1;2576:216:23;2457:341;;;;:::o;3247:178:42:-;3346:13;;3330:47;;;6058:25:47;;;6114:2;6099:18;;6092:34;;;3330:47:42;;6031:18:47;3330:47:42;;;;;;;3387:13;:31;3247:178::o;3543:171::-;3639:12;;3624:44;;;6058:25:47;;;6114:2;6099:18;;6092:34;;;3624:44:42;;6031:18:47;3624:44:42;;;;;;;3678:12;:29;3543:171::o;3834:316::-;3995:1;3977:15;:19;3969:71;;;;-1:-1:-1;;;3969:71:42;;6339:2:47;3969:71:42;;;6321:21:47;6378:2;6358:18;;;6351:30;6417:34;6397:18;;;6390:62;-1:-1:-1;;;6468:18:47;;;6461:37;6515:19;;3969:71:42;;;;;;;;;4071:13;;4055:47;;;6058:25:47;;;6114:2;6099:18;;6092:34;;;4055:47:42;;6031:18:47;4055:47:42;;;;;;;4112:13;:31;3834:316::o;4337:297::-;4487:30;;4454:98;;;6058:25:47;;;6114:2;6099:18;;6092:34;;;4454:98:42;;6031:18:47;4454:98:42;;;;;;;4562:30;:65;4337:297::o;4763:206::-;4874:17;;4854:59;;;6058:25:47;;;6114:2;6099:18;;6092:34;;;4854:59:42;;6031:18:47;4854:59:42;;;;;;;4923:17;:39;4763:206::o;5101:213::-;5215:18;;5194:62;;;6058:25:47;;;6114:2;6099:18;;6092:34;;;5194:62:42;;6031:18:47;5194:62:42;;;;;;;5266:18;:41;5101:213::o;5419:143::-;5503:8;;5492:32;;;-1:-1:-1;;;;;5503:8:42;;;6757:34:47;;6827:15;;;6822:2;6807:18;;6800:43;5492:32:42;;6692:18:47;5492:32:42;;;;;;;5534:8;:21;;-1:-1:-1;;;;;;5534:21:42;-1:-1:-1;;;;;5534:21:42;;;;;;;;;;5419:143::o;1251:286:23:-;1316:11;1339:17;1365:3;1339:30;;1397:2;1383:4;:11;:16;1379:72;;;1436:3;1422:18;;-1:-1:-1;;;1422:18:23;;;;;;;;:::i;1379:72::-;1517:11;;1500:13;1517:4;1500:13;:::i;:::-;1492:36;;1251:286;-1:-1:-1;;;1251:286:23:o;14:127:47:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:47;247:40;;-1:-1:-1;;;;;302:34:47;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:47:o;426:250::-;511:1;521:113;535:6;532:1;529:13;521:113;;;611:11;;;605:18;592:11;;;585:39;557:2;550:10;521:113;;;-1:-1:-1;;668:1:47;650:16;;643:27;426:250::o;681:510::-;735:5;788:3;781:4;773:6;769:17;765:27;755:55;;806:1;803;796:12;755:55;829:13;;-1:-1:-1;;;;;854:26:47;;851:52;;;883:18;;:::i;:::-;927:55;970:2;951:13;;-1:-1:-1;;947:27:47;976:4;943:38;927:55;:::i;:::-;1007:2;998:7;991:19;1053:3;1046:4;1041:2;1033:6;1029:15;1025:26;1022:35;1019:55;;;1070:1;1067;1060:12;1019:55;1083:77;1157:2;1150:4;1141:7;1137:18;1130:4;1122:6;1118:17;1083:77;:::i;:::-;1178:7;681:510;-1:-1:-1;;;;681:510:47:o;1196:1468::-;1347:6;1355;1363;1371;1379;1432:3;1420:9;1411:7;1407:23;1403:33;1400:53;;;1449:1;1446;1439:12;1400:53;1476:16;;-1:-1:-1;;;;;1541:14:47;;;1538:34;;;1568:1;1565;1558:12;1538:34;1591:61;1644:7;1635:6;1624:9;1620:22;1591:61;:::i;:::-;1581:71;;1671:2;1661:12;;1719:2;1708:9;1704:18;1698:25;1748:2;1738:8;1735:16;1732:36;;;1764:1;1761;1754:12;1732:36;1787:63;1842:7;1831:8;1820:9;1816:24;1787:63;:::i;:::-;1777:73;;;1890:2;1879:9;1875:18;1869:25;1859:35;;1934:2;1923:9;1919:18;1913:25;1903:35;;1984:3;1973:9;1969:19;1963:26;2014:2;2004:8;2001:16;1998:36;;;2030:1;2027;2020:12;1998:36;2053:24;;2108:4;2100:13;;2096:27;-1:-1:-1;2086:55:47;;2137:1;2134;2127:12;2086:55;2166:2;2160:9;2188:2;2184;2181:10;2178:36;;;2194:18;;:::i;:::-;2240:2;2237:1;2233:10;2223:20;;2263:28;2287:2;2283;2279:11;2263:28;:::i;:::-;2325:15;;;2395:11;;;2391:20;;;2356:12;;;;2423:19;;;2420:39;;;2455:1;2452;2445:12;2420:39;2479:11;;;;2499:135;2515:6;2510:3;2507:15;2499:135;;;2581:10;;2569:23;;2532:12;;;;2612;;;;2499:135;;;2653:5;2643:15;;;;;;;;1196:1468;;;;;;;;:::o;2669:127::-;2730:10;2725:3;2721:20;2718:1;2711:31;2761:4;2758:1;2751:15;2785:4;2782:1;2775:15;2801:380;2880:1;2876:12;;;;2923;;;2944:61;;2998:4;2990:6;2986:17;2976:27;;2944:61;3051:2;3043:6;3040:14;3020:18;3017:38;3014:161;;3097:10;3092:3;3088:20;3085:1;3078:31;3132:4;3129:1;3122:15;3160:4;3157:1;3150:15;3014:161;;2801:380;;;:::o;3312:545::-;3414:2;3409:3;3406:11;3403:448;;;3450:1;3475:5;3471:2;3464:17;3520:4;3516:2;3506:19;3590:2;3578:10;3574:19;3571:1;3567:27;3561:4;3557:38;3626:4;3614:10;3611:20;3608:47;;;-1:-1:-1;3649:4:47;3608:47;3704:2;3699:3;3695:12;3692:1;3688:20;3682:4;3678:31;3668:41;;3759:82;3777:2;3770:5;3767:13;3759:82;;;3822:17;;;3803:1;3792:13;3759:82;;;3763:3;;;3403:448;3312:545;;;:::o;4033:1352::-;4153:10;;-1:-1:-1;;;;;4175:30:47;;4172:56;;;4208:18;;:::i;:::-;4237:97;4327:6;4287:38;4319:4;4313:11;4287:38;:::i;:::-;4281:4;4237:97;:::i;:::-;4389:4;;4453:2;4442:14;;4470:1;4465:663;;;;5172:1;5189:6;5186:89;;;-1:-1:-1;5241:19:47;;;5235:26;5186:89;-1:-1:-1;;3990:1:47;3986:11;;;3982:24;3978:29;3968:40;4014:1;4010:11;;;3965:57;5288:81;;4435:944;;4465:663;3259:1;3252:14;;;3296:4;3283:18;;-1:-1:-1;;4501:20:47;;;4619:236;4633:7;4630:1;4627:14;4619:236;;;4722:19;;;4716:26;4701:42;;4814:27;;;;4782:1;4770:14;;;;4649:19;;4619:236;;;4623:3;4883:6;4874:7;4871:19;4868:201;;;4944:19;;;4938:26;-1:-1:-1;;5027:1:47;5023:14;;;5039:3;5019:24;5015:37;5011:42;4996:58;4981:74;;4868:201;-1:-1:-1;;;;;5115:1:47;5099:14;;;5095:22;5082:36;;-1:-1:-1;4033:1352:47:o;6854:396::-;7003:2;6992:9;6985:21;6966:4;7035:6;7029:13;7078:6;7073:2;7062:9;7058:18;7051:34;7094:79;7166:6;7161:2;7150:9;7146:18;7141:2;7133:6;7129:15;7094:79;:::i;:::-;7234:2;7213:15;-1:-1:-1;;7209:29:47;7194:45;;;;7241:2;7190:54;;6854:396;-1:-1:-1;;6854:396:47:o;7255:297::-;7373:12;;7420:4;7409:16;;;7403:23;;7373:12;7438:16;;7435:111;;;-1:-1:-1;;7512:4:47;7508:17;;;;7505:1;7501:25;7497:38;7486:50;;7255:297;-1:-1:-1;7255:297:47:o;:::-;271:1911:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106103845760003560e01c8063832009af116101d1578063d45a010b11610102578063e5eb5a48116100a0578063f0a7db0a1161006f578063f0a7db0a14610b45578063f4f3d7ec14610b65578063fb8ddab414610b85578063fb9bf8d414610ba557600080fd5b8063e5eb5a4814610ad9578063ea8a1af014610b06578063ebc18b9b14610b1b578063efa90d3614610b3057600080fd5b8063dd96a19d116100dc578063dd96a19d14610a2f578063dea5f6a614610a63578063deaaa7cc14610a90578063e031535b14610ac457600080fd5b8063d45a010b146109ba578063d8891619146109cf578063dd4e2ba5146109e957600080fd5b8063aec116b61161016f578063c0ffaa7811610149578063c0ffaa781461091b578063c19d93fb1461093b578063c7f758a81461095d578063cb8539501461098a57600080fd5b8063aec116b614610884578063b323580d146108ba578063bddc1641146108e757600080fd5b80638a9cd550116101ab5780638a9cd550146107fd578063930de9791461081257806396f0e96214610842578063a1ac6cb21461085757600080fd5b8063832009af146107a057806384b0196e146107b557806386187488146107dd57600080fd5b8063427d56c2116102b657806354fd4d50116102545780636ca1a2c7116102235780636ca1a2c7146107385780636e4eb8101461074d578063785ddfe51461076d5780637c65d7111461078b57600080fd5b806354fd4d50146106a15780635f953a03146106cd57806360506ff61461070357806365f162631461071857600080fd5b80634d24a67f116102905780634d24a67f146105ff57806350a5e52414610614578063531bd81214610637578063544ffc9c1461065757600080fd5b8063427d56c214610592578063458da87d146105bf578063476f4d8a146105df57600080fd5b80632399c66011610323578063347cf665116102fd578063347cf665146105145780633932abb1146105305780633b6d199b14610545578063419c533c1461057257600080fd5b80632399c660146104bf578063262e59e9146104df57806332763c22146104f457600080fd5b806302d05d3f1161035f57806302d05d3f146103ff57806306fdde031461042c578063070dc5d91461044e57806320b3e8451461049f57600080fd5b80624114a81461039257806301ffc9a7146103ba57806302a251a3146103ea57600080fd5b3661038d57005b005b600080fd5b34801561039e57600080fd5b506103a7610bba565b6040519081526020015b60405180910390f35b3480156103c657600080fd5b506103da6103d5366004612fae565b610bca565b60405190151581526020016103b1565b3480156103f657600080fd5b506103a7610c01565b34801561040b57600080fd5b50610414610c0c565b6040516001600160a01b0390911681526020016103b1565b34801561043857600080fd5b50610441610c20565b6040516103b1919061301e565b34801561045a57600080fd5b50610492610469366004613031565b601460209081526000918252604091829020825180840190935280548352600101549082015281565b6040516103b1919061304a565b3480156104ab57600080fd5b506103da6104ba3660046130bd565b610cb2565b3480156104cb57600080fd5b506103da6104da366004613031565b610d48565b3480156104eb57600080fd5b506103a7610d8c565b34801561050057600080fd5b506103da61050f366004613126565b610da8565b34801561052057600080fd5b506103a7678ac7230489e8000081565b34801561053c57600080fd5b506103a7610ee5565b34801561055157600080fd5b506103a7610560366004613031565b60009081526006602052604090205490565b34801561057e57600080fd5b506103a761058d3660046131a7565b610ef0565b34801561059e57600080fd5b506105b26105ad366004613217565b610f28565b6040516103b1919061326d565b3480156105cb57600080fd5b506103a76105da36600461352b565b611054565b3480156105eb57600080fd5b506103a76105fa36600461352b565b611085565b34801561060b57600080fd5b506103a7600281565b34801561062057600080fd5b506106296110c7565b6040516103b192919061355f565b34801561064357600080fd5b506103da6106523660046135c8565b6111cd565b34801561066357600080fd5b5061068c610672366004613031565b600090815260146020526040902080546001909101549091565b604080519283526020830191909152016103b1565b3480156106ad57600080fd5b50604080518082019091526003815262332e3160e81b6020820152610441565b3480156106d957600080fd5b506103a76106e8366004613623565b6001600160a01b03166000908152600b602052604090205490565b34801561070f57600080fd5b506103a7611238565b34801561072457600080fd5b506103a7610733366004613640565b611243565b34801561074457600080fd5b506103a761130b565b34801561075957600080fd5b5061068c610768366004613675565b611337565b34801561077957600080fd5b50601b546001600160a01b0316610414565b34801561079757600080fd5b5061044161136c565b3480156107ac57600080fd5b506103a761137b565b3480156107c157600080fd5b506107ca611386565b6040516103b197969594939291906136a5565b3480156107e957600080fd5b506103a76107f8366004613031565b61140e565b34801561080957600080fd5b506105b2611446565b34801561081e57600080fd5b506103da61082d366004613623565b60036020526000908152604090205460ff1681565b34801561084e57600080fd5b5061038b6114c0565b34801561086357600080fd5b506103a7610872366004613623565b60136020526000908152604090205481565b34801561089057600080fd5b506103a761089f366004613623565b6001600160a01b031660009081526013602052604090205490565b3480156108c657600080fd5b506108da6108d5366004613031565b6117d4565b6040516103b1919061374e565b3480156108f357600080fd5b506103a77f000000000000000000000000000000000000000000000000000000000000000081565b34801561092757600080fd5b506103a7610936366004613761565b611846565b34801561094757600080fd5b5061095061188a565b6040516103b191906137d2565b34801561096957600080fd5b5061097d610978366004613031565b6118fc565b6040516103b191906137fa565b34801561099657600080fd5b506103da6109a5366004613623565b60046020526000908152604090205460ff1681565b3480156109c657600080fd5b50610629611a76565b3480156109db57600080fd5b506015546103da9060ff1681565b3480156109f557600080fd5b5060408051808201909152601881527f737570706f72743d627261766f2671756f72756d3d666f7200000000000000006020820152610441565b348015610a3b57600080fd5b506103a77f000000000000000000000000000000000000000000000000000000000000000081565b348015610a6f57600080fd5b506103a7610a7e366004613623565b60026020526000908152604090205481565b348015610a9c57600080fd5b506103a77f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f81565b348015610ad057600080fd5b506103a7611c41565b348015610ae557600080fd5b506103a7610af4366004613031565b60166020526000908152604090205481565b348015610b1257600080fd5b5061038b611c53565b348015610b2757600080fd5b506103a7611d3d565b348015610b3c57600080fd5b506105b2611d69565b348015610b5157600080fd5b5061038b610b60366004613880565b611dbf565b348015610b7157600080fd5b5061038b610b80366004613623565b612002565b348015610b9157600080fd5b506103da610ba036600461352b565b61209d565b348015610bb157600080fd5b506103a7612328565b6000610bc5600c5490565b905090565b60006001600160e01b0319821663eed9776760e01b1480610bfb57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000610bc5600e5490565b6000610bc56012546001600160a01b031690565b606060078054610c2f90613910565b80601f0160208091040260200160405190810160405280929190818152602001828054610c5b90613910565b8015610ca85780601f10610c7d57610100808354040283529160200191610ca8565b820191906000526020600020905b815481529060010190602001808311610c8b57829003601f168201915b5050505050905090565b6001600160a01b03831660009081526004602052604081205460ff16610d3d577f0000000000000000000000000000000000000000000000000000000000000000600003610d0257506001610d41565b610d1884678ac7230489e8000085856000610da8565b506001600160a01b0384166000908152600460205260409020805460ff191660011790555b5060015b9392505050565b60155460009060ff16610d765760405162461bcd60e51b8152600401610d6d9061394a565b60405180910390fd5b5060009081526017602052604090205460ff1690565b6000610d96610c01565b610d9e611c41565b610bc591906139cb565b6040516bffffffffffffffffffffffff19606087901b166020820152603481018590526000908190605401604051602081830303815290604052805190602001209050600083610e5757610e528686808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f000000000000000000000000000000000000000000000000000000000000000092508691506123339050565b610eb7565b610eb78686808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f000000000000000000000000000000000000000000000000000000000000000092508691506123339050565b905080610ed75760405163452c2df160e11b815260040160405180910390fd5b506001979650505050505050565b6000610bc5600d5490565b600033610eff818786866111cd565b50610f1c8882898860405180602001604052806000815250612349565b98975050505050505050565b606060008083610f3f57610f3a6110c7565b610f47565b610f47611a76565b91509150600082516001600160401b03811115610f6657610f66613280565b604051908082528060200260200182016040528015610f8f578160200160208202803683370190505b50905060005b825181101561101357828181518110610fb057610fb06139de565b602002602001015160200151838281518110610fce57610fce6139de565b602002602001015160000151610fe491906139f4565b828281518110610ff657610ff66139de565b60209081029190910101528061100b81613a1b565b915050610f95565b5060005b600184516110259190613a34565b81101561104a57611037818386612563565b508061104281613a1b565b915050611017565b5091949350505050565b60008160405160200161106791906137fa565b60408051601f19818403018152919052805160209091012092915050565b3360009081526004602052604081205460ff166110b45760405162461bcd60e51b8152600401610d6d90613a47565b6110bd8261209d565b50610bfb826126c9565b60608060006110d4611d69565b9050600081516001600160401b038111156110f1576110f1613280565b60405190808252806020026020018201604052801561113657816020015b604080518082019091526000808252602082015281526020019060019003908161110f5790505b50905060005b82518110156111c3576014600084838151811061115b5761115b6139de565b60200260200101518152602001908152602001600020600001604051806040016040529081600082015481526020016001820154815250508282815181106111a5576111a56139de565b602002602001018190525080806111bb90613a1b565b91505061113c565b5090939092509050565b6001600160a01b03841660009081526003602052604081205460ff1661122d576111fb858585856000610da8565b506001600160a01b038516600090815260026020908152604080832087905560039091529020805460ff191660011790555b506001949350505050565b6000610bc560115490565b3360008181526003602052604081205490919060ff166112e65760405162461bcd60e51b815260206004820152605260248201527f476f7665726e6f723a20796f75206e65656420746f2063617374206120766f7460448201527f652077697468207468652070726f6f66206174206c65617374206f6e636520616064820152711b99081e5bdd481a185d995b89dd081e595d60721b608482015260a401610d6d565b6113028582868660405180602001604052806000815250612349565b95945050505050565b60155460009060ff166113305760405162461bcd60e51b8152600401610d6d9061394a565b5060195490565b60008281526014602090815260408083206001600160a01b0385168452600301909152902080546001909101545b9250929050565b606060088054610c2f90613910565b6000610bc5600f5490565b6000606080828080836113b97f000000000000000000000000000000000000000000000000000000000000000083612a48565b6113e47f00000000000000000000000000000000000000000000000000000000000000006001612a48565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60155460009060ff166114335760405162461bcd60e51b8152600401610d6d9061394a565b5060009081526016602052604090205490565b60155460609060ff1661146b5760405162461bcd60e51b8152600401610d6d9061394a565b6018805480602002602001604051908101604052809291908181526020018280548015610ca857602002820191906000526020600020905b8154815260200190600101908083116114a3575050505050905090565b60046114ca61188a565b60048111156114db576114db6137bc565b1461155e5760405162461bcd60e51b815260206004820152604760248201527f476f7665726e6f72536f7274696e673a20636f6e74657374206d75737420626560448201527f20746f2063616c63756c61746520736f7274656420616e6420746965642070726064820152666f706f73616c7360c81b608482015260a401610d6d565b60155460ff16156115fd5760405162461bcd60e51b815260206004820152605f60248201527f476f7665726e6f72536f7274696e673a20736574536f72746564416e6454696560448201527f6450726f706f73616c7328292068617320616c7265616479206265656e20727560648201527f6e20616e642069747320726573706563746976652076616c7565732073657400608482015260a401610d6d565b6116076001610f28565b805161161b91601891602090910190612e88565b5060185460009060019061162f90826139cb565b601a5560005b6018548110156117c25760185460009061165190600190613a34565b905060008061169a60186116658686613a34565b81548110611675576116756139de565b9060005260206000200154600090815260146020526040902080546001909101549091565b909250905060006116ab82846139f4565b9050846000036116ec5760185490965086906001036116e3576116ce8585613a34565b60008781526016602052604090205560198690555b505050506117b0565b86810361173f5760008681526017602052604090205460ff16611723576000868152601760205260409020805460ff191660011790555b6018546117319060016139cb565b601a540361173f57601a8690555b868114611778576117508585613a34565b61175b9060016139cb565b6000878152601660205260409020558561177481613a1b565b9650505b6018546117868660016139cb565b036117aa576117958585613a34565b60008781526016602052604090205560198690555b95505050505b806117ba81613a1b565b915050611635565b50506015805460ff1916600117905550565b600081815260146020908152604091829020600281018054845181850281018501909552808552606094929383018282801561183957602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161181b575b5050505050915050919050565b6000611853338484610cb2565b61186f5760405162461bcd60e51b8152600401610d6d90613a47565b6118788461209d565b50611882846126c9565b949350505050565b60095460009060ff161561189e5750600290565b60006118a8610bba565b90504281106118b957600091505090565b60006118c3611c41565b90504281106118d55760039250505090565b60006118df610d8c565b90504281106118f2576001935050505090565b6004935050505090565b611904612ed3565b6000828152600a6020908152604091829020825160a08101845281546001600160a01b0381168252600160a01b900460ff16151592810192909252600181018054929391929184019161195690613910565b80601f016020809104026020016040519081016040528092919081815260200182805461198290613910565b80156119cf5780601f106119a4576101008083540402835291602001916119cf565b820191906000526020600020905b8154815290600101906020018083116119b257829003601f168201915b5050509183525050604080516020818101835260028501546001600160a01b03168252808401919091528151600385018054606093810283018401855282850181815294909501949193909284928491840182828015611a5857602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611a3a575b50505050508152602001600182015481525050815250509050919050565b6060806000611a83611d69565b9050600081516001600160401b03811115611aa057611aa0613280565b604051908082528060200260200182016040528015611ac9578160200160208202803683370190505b509050600082516001600160401b03811115611ae757611ae7613280565b604051908082528060200260200182016040528015611b2c57816020015b6040805180820190915260008082526020820152815260200190600190039081611b055790505b5090506000805b8451811015611c3557611b6b858281518110611b5157611b516139de565b602002602001015160009081526006602052604090205490565b600114611c2357848181518110611b8457611b846139de565b6020026020010151848381518110611b9e57611b9e6139de565b60200260200101818152505060146000868381518110611bc057611bc06139de565b6020026020010151815260200190815260200160002060000160405180604001604052908160008201548152602001600182015481525050838381518110611c0a57611c0a6139de565b6020908102919091010152611c206001836139cb565b91505b80611c2d81613a1b565b915050611b33565b50919590945092505050565b6000611c4b610ee5565b610d9e610bba565b611c5b610c0c565b6001600160a01b0316336001600160a01b031614611c7857600080fd5b6000611c8261188a565b90506002816004811115611c9857611c986137bc565b14158015611cb857506004816004811115611cb557611cb56137bc565b14155b611d045760405162461bcd60e51b815260206004820152601c60248201527f476f7665726e6f723a20636f6e74657374206e6f7420616374697665000000006044820152606401610d6d565b6009805460ff191660011790556040517f4cd963a081760a54f571abc0f1db4dde31b4a07d8d6da3e844b8c6f47eeaaa4290600090a150565b60155460009060ff16611d625760405162461bcd60e51b8152600401610d6d9061394a565b50601a5490565b60606005805480602002602001604051908101604052809291908181526020018280548015610ca857602002820191906000526020600020908154815260200190600101908083116114a3575050505050905090565b611dc7610c0c565b6001600160a01b0316336001600160a01b031614611e4d5760405162461bcd60e51b815260206004820152603760248201527f476f7665726e6f723a206f6e6c792074686520636f6e7465737420637265617460448201527f6f722063616e2064656c6574652070726f706f73616c730000000000000000006064820152608401610d6d565b6004611e5761188a565b6004811115611e6857611e686137bc565b03611eed5760405162461bcd60e51b815260206004820152604960248201527f476f7665726e6f723a2064656c6574696f6e206f662070726f706f73616c732060448201527f61667465722074686520656e64206f66206120636f6e74657374206973206e6f6064820152681d08185b1b1bddd95960ba1b608482015260a401610d6d565b60005b8151811015611fc75760066000838381518110611f0f57611f0f6139de565b6020026020010151815260200190815260200160002054600114611fb557600160066000848481518110611f4557611f456139de565b60200260200101518152602001908152602001600020819055506040518060600160405280603d8152602001613bd7603d9139600a6000848481518110611f8e57611f8e6139de565b602002602001015181526020019081526020016000206001019081611fb39190613ae5565b505b80611fbf81613a1b565b915050611ef0565b507f75a75cf5c561892f4cc5b26c1b8e933849b42238c96dd073d080d1ae96c5141681604051611ff7919061326d565b60405180910390a150565b61200a610c0c565b6001600160a01b0316336001600160a01b03161461202757600080fd5b600061203b601b546001600160a01b031690565b601b80546001600160a01b0319166001600160a01b0385811691821790925560408051928416835260208301919091529192507f753a2cf8d360cff631674504210913e48247f8e56b3e6d2006c2103d4095999f910160405180910390a15050565b80516000906001600160a01b031633146121125760405162461bcd60e51b815260206004820152603060248201527f476f7665726e6f723a207468652070726f706f73616c20617574686f72206d7560448201526f39ba1031329036b9b39739b2b73232b960811b6064820152608401610d6d565b60005b60028110156122ca576000816001811115612132576121326137bc565b90506000816001811115612148576121486137bc565b0361215357506122b8565b6001816001811115612167576121676137bc565b0361229d57608084015151516000036121f95760405162461bcd60e51b815260206004820152604860248201527f476f7665726e6f724d6574616461746156616c69646174696f6e3a207468657260448201527f652063616e6e6f74206265207a65726f207369676e65727320696e20736166656064820152674d6574616461746160c01b608482015260a401610d6d565b8360800151602001516000036122855760405162461bcd60e51b8152602060048201526044602482018190527f476f7665726e6f724d6574616461746156616c69646174696f6e3a2074687265908201527f73686f6c642063616e6e6f74206265207a65726f20696e20736166654d6574616064820152636461746160e01b608482015260a401610d6d565b6080840151515160000361229857600080fd5b6122b6565b6040516308b6566d60e11b815260040160405180910390fd5b505b806122c281613a1b565b915050612115565b508160400151516000036123205760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a20656d7074792070726f706f73616c00000000000000006044820152606401610d6d565b506001919050565b6000610bc560105490565b6000826123408584612af4565b14949350505050565b6000600161235561188a565b6004811115612366576123666137bc565b146123bf5760405162461bcd60e51b815260206004820152602360248201527f476f7665726e6f723a20766f7465206e6f742063757272656e746c792061637460448201526269766560e81b6064820152608401610d6d565b600083116124235760405162461bcd60e51b815260206004820152602b60248201527f476f7665726e6f723a2063616e6e6f7420766f746520776974682030206f722060448201526a666577657220766f74657360a81b6064820152608401610d6d565b6001600160a01b03851660009081526003602052604090205460ff166124c95760405162461bcd60e51b815260206004820152604f60248201527f476f7665726e6f723a20796f75206e65656420746f2076657269667920796f7560448201527f72206e756d626572206f6620766f74657320616761696e737420746865206d6560648201526e1c9adb19481c9bdbdd08199a5c9cdd608a1b608482015260a401610d6d565b6124fb86868686600260008b6001600160a01b03166001600160a01b0316815260200190815260200160002054612b41565b846001600160a01b03167fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda48786868660405161253a9493929190613ba4565b60405180910390a2505050506001600160a01b0316600090815260026020526040902054919050565b600083805b84518110156125c157848281518110612583576125836139de565b602002602001015185828151811061259d5761259d6139de565b602002602001015112156125af578091505b806125b981613a1b565b915050612568565b508481036125d3576000915050610d41565b60008486815181106125e7576125e76139de565b60200260200101519050848281518110612603576126036139de565b602002602001015185878151811061261d5761261d6139de565b6020026020010181815250508085838151811061263c5761263c6139de565b602002602001018181525050600084878151811061265c5761265c6139de565b60200260200101519050848381518110612678576126786139de565b6020026020010151858881518110612692576126926139de565b602002602001018181525050808584815181106126b1576126b16139de565b60209081029190910101525060019695505050505050565b600060036126d561188a565b60048111156126e6576126e66137bc565b146127595760405162461bcd60e51b815260206004820152603e60248201527f476f7665726e6f723a20636f6e74657374206d7573742062652071756575656460448201527f20666f722070726f706f73616c7320746f206265207375626d697474656400006064820152608401610d6d565b61276161137b565b336000908152600b60205260409020541061280a5760405162461bcd60e51b815260206004820152605d60248201527f476f7665726e6f723a207468652073616d652063616e6e6f74207375626d697460448201527f206d6f7265207468616e20746865206e756d416c6c6f77656450726f706f736160648201527f6c5375626d697373696f6e7320666f72207468697320636f6e74657374000000608482015260a401610d6d565b612812612328565b600554106128885760405162461bcd60e51b815260206004820152603960248201527f476f7665726e6f723a20746865206d6178206e756d626572206f662070726f7060448201527f6f73616c732068617665206265656e207375626d6974746564000000000000006064820152608401610d6d565b600061289383611054565b6000818152600a6020526040902054909150600160a01b900460ff161561290e5760405162461bcd60e51b815260206004820152602960248201527f476f7665726e6f723a206475706c69636174652070726f706f73616c73206e6f6044820152681d08185b1b1bddd95960ba1b6064820152608401610d6d565b6005805460018181019092557f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0018290556000828152600a602090815260409182902086518154928801511515600160a01b026001600160a81b03199093166001600160a01b03909116179190911781559085015185928201906129929082613ae5565b506060820151516002820180546001600160a01b0319166001600160a01b0390921691909117905560808201518051805160038401916129d791839160200190612f44565b50602091820151600191820155336000908152600b9092526040822080549194509250612a059084906139cb565b9091555050604080518281523360208201527fcd423cc1203c0af96b9b3d68d73b3064a69de2d14450bb7181c5e5df2132b358910160405180910390a192915050565b606060ff8314612a6257612a5b83612df5565b9050610bfb565b818054612a6e90613910565b80601f0160208091040260200160405190810160405280929190818152602001828054612a9a90613910565b8015612ae75780601f10612abc57610100808354040283529160200191612ae7565b820191906000526020600020905b815481529060010190602001808311612aca57829003601f168201915b5050505050905092915050565b600081815b8451811015612b3957612b2582868381518110612b1857612b186139de565b6020026020010151612e34565b915080612b3181613a1b565b915050612af9565b509392505050565b60008581526014602090815260408083206001600160a01b0388168452601390925290912054612b719083613a34565b831115612bdc5760405162461bcd60e51b815260206004820152603360248201527f476f7665726e6f72566f74696e6753696d706c653a206e6f7420656e6f756768604482015272081d9bdd195cc81b19599d081d1bc818d85cdd606a1b6064820152608401610d6d565b6001600160a01b03851660009081526003820160205260409020541560ff8516612c4e57815484908390600090612c149084906139cb565b90915550506001600160a01b038616600090815260038301602052604081208054869290612c439084906139cb565b90915550612d889050565b60001960ff861601612d2257612c62611238565b600114612cd9576040805162461bcd60e51b81526020600482015260248101919091527f476f7665726e6f72566f74696e6753696d706c653a20646f776e766f74696e6760448201527f206973206e6f7420656e61626c656420666f72207468697320436f6e746573746064820152608401610d6d565b83826000016001016000828254612cf091906139cb565b90915550506001600160a01b038616600090815260038301602052604081206001018054869290612c439084906139cb565b60405162461bcd60e51b815260206004820152603560248201527f476f7665726e6f72566f74696e6753696d706c653a20696e76616c69642076616044820152746c756520666f7220656e756d20566f74655479706560581b6064820152608401610d6d565b8015612dbf57600282018054600181018255600091825260209091200180546001600160a01b0319166001600160a01b0388161790555b6001600160a01b03861660009081526013602052604081208054869290612de79084906139cb565b909155505050505050505050565b60606000612e0283612e60565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000818310612e50576000828152602084905260409020610d41565b5060009182526020526040902090565b600060ff8216601f811115610bfb57604051632cd44ac360e21b815260040160405180910390fd5b828054828255906000526020600020908101928215612ec3579160200282015b82811115612ec3578251825591602001919060010190612ea8565b50612ecf929150612f99565b5090565b6040518060a0016040528060006001600160a01b0316815260200160001515815260200160608152602001612f1d604051806020016040528060006001600160a01b031681525090565b8152602001612f3f604051806040016040528060608152602001600081525090565b905290565b828054828255906000526020600020908101928215612ec3579160200282015b82811115612ec357825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612f64565b5b80821115612ecf5760008155600101612f9a565b600060208284031215612fc057600080fd5b81356001600160e01b031981168114610d4157600080fd5b6000815180845260005b81811015612ffe57602081850181015186830182015201612fe2565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610d416020830184612fd8565b60006020828403121561304357600080fd5b5035919050565b815181526020808301519082015260408101610bfb565b6001600160a01b038116811461307657600080fd5b50565b60008083601f84011261308b57600080fd5b5081356001600160401b038111156130a257600080fd5b6020830191508360208260051b850101111561136557600080fd5b6000806000604084860312156130d257600080fd5b83356130dd81613061565b925060208401356001600160401b038111156130f857600080fd5b61310486828701613079565b9497909650939450505050565b8035801515811461312157600080fd5b919050565b60008060008060006080868803121561313e57600080fd5b853561314981613061565b94506020860135935060408601356001600160401b0381111561316b57600080fd5b61317788828901613079565b909450925061318a905060608701613111565b90509295509295909350565b803560ff8116811461312157600080fd5b60008060008060008060a087890312156131c057600080fd5b863595506131d060208801613196565b9450604087013593506060870135925060808701356001600160401b038111156131f957600080fd5b61320589828a01613079565b979a9699509497509295939492505050565b60006020828403121561322957600080fd5b610d4182613111565b600081518084526020808501945080840160005b8381101561326257815187529582019590820190600101613246565b509495945050505050565b602081526000610d416020830184613232565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156132b8576132b8613280565b60405290565b60405160a081016001600160401b03811182821017156132b8576132b8613280565b604051601f8201601f191681016001600160401b038111828210171561330857613308613280565b604052919050565b60006020828403121561332257600080fd5b604051602081018181106001600160401b038211171561334457613344613280565b604052905080823561335581613061565b905292915050565b60006001600160401b0382111561337657613376613280565b5060051b60200190565b60006040828403121561339257600080fd5b61339a613296565b905081356001600160401b038111156133b257600080fd5b8201601f810184136133c357600080fd5b803560206133d86133d38361335d565b6132e0565b82815260059290921b830181019181810190878411156133f757600080fd5b938201935b8385101561341e57843561340f81613061565b825293820193908201906133fc565b85525093840135938301939093525092915050565b600060a0828403121561344557600080fd5b61344d6132be565b9050813561345a81613061565b81526020613469838201613111565b8183015260408301356001600160401b038082111561348757600080fd5b818501915085601f83011261349b57600080fd5b8135818111156134ad576134ad613280565b6134bf601f8201601f191685016132e0565b81815287858386010111156134d357600080fd5b8185850186830137600085838301015280604087015250506134f88660608701613310565b6060850152608085013592508083111561351157600080fd5b505061351f84828501613380565b60808301525092915050565b60006020828403121561353d57600080fd5b81356001600160401b0381111561355357600080fd5b61188284828501613433565b6000604080835261357281840186613232565b83810360208581019190915285518083528682019282019060005b818110156135ba576135aa83865180518252602090810151910152565b938301939185019160010161358d565b509098975050505050505050565b600080600080606085870312156135de57600080fd5b84356135e981613061565b93506020850135925060408501356001600160401b0381111561360b57600080fd5b61361787828801613079565b95989497509550505050565b60006020828403121561363557600080fd5b8135610d4181613061565b60008060006060848603121561365557600080fd5b8335925061366560208501613196565b9150604084013590509250925092565b6000806040838503121561368857600080fd5b82359150602083013561369a81613061565b809150509250929050565b60ff60f81b8816815260e0602082015260006136c460e0830189612fd8565b82810360408401526136d68189612fd8565b606084018890526001600160a01b038716608085015260a0840186905283810360c085015290506137078185613232565b9a9950505050505050505050565b600081518084526020808501945080840160005b838110156132625781516001600160a01b031687529582019590820190600101613729565b602081526000610d416020830184613715565b60008060006040848603121561377657600080fd5b83356001600160401b038082111561378d57600080fd5b61379987838801613433565b945060208601359150808211156137af57600080fd5b5061310486828701613079565b634e487b7160e01b600052602160045260246000fd5b60208101600583106137f457634e487b7160e01b600052602160045260246000fd5b91905290565b60208152600060018060a01b03808451166020840152602084015115156040840152604084015160a0606085015261383560c0850182612fd8565b90508160608601515116608085015260808501519150601f198482030160a085015281516040825261386a6040830182613715565b6020938401519290930191909152509392505050565b6000602080838503121561389357600080fd5b82356001600160401b038111156138a957600080fd5b8301601f810185136138ba57600080fd5b80356138c86133d38261335d565b81815260059190911b820183019083810190878311156138e757600080fd5b928401925b82841015613905578335825292840192908401906138ec565b979650505050505050565b600181811c9082168061392457607f821691505b60208210810361394457634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526045908201527f526577617264734d6f64756c653a2072756e20736574536f72746564416e645460408201527f69656450726f706f73616c73282920746f20706f70756c61746520746869732060608201526476616c756560d81b608082015260a00190565b634e487b7160e01b600052601160045260246000fd5b80820180821115610bfb57610bfb6139b5565b634e487b7160e01b600052603260045260246000fd5b8181036000831280158383131683831282161715613a1457613a146139b5565b5092915050565b600060018201613a2d57613a2d6139b5565b5060010190565b81810381811115610bfb57610bfb6139b5565b6020808252602f908201527f476f7665726e6f723a2061646472657373206973206e6f74207065726d69737360408201526e1a5bdb9959081d1bc81cdd589b5a5d608a1b606082015260800190565b601f821115613ae057600081815260208120601f850160051c81016020861015613abd5750805b601f850160051c820191505b81811015613adc57828155600101613ac9565b5050505b505050565b81516001600160401b03811115613afe57613afe613280565b613b1281613b0c8454613910565b84613a96565b602080601f831160018114613b475760008415613b2f5750858301515b600019600386901b1c1916600185901b178555613adc565b600085815260208120601f198616915b82811015613b7657888601518255948401946001909101908401613b57565b5085821015613b945787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b84815260ff84166020820152826040820152608060608201526000613bcc6080830184612fd8565b969550505050505056fe546869732070726f706f73616c20686173206265656e2064656c65746564206279207468652063726561746f72206f662074686520636f6e746573742ea26469706673582212205b37fb2fe0b21e4b3b5f342140e444f509ef6a2c67d94cad6a0a2ef8aa18f64164736f6c63430008130033",
    "sourceMapi;:::-;;;160:25:47;;;148:2;133:18;1155:136:36;;;;;;;;2400:214:37;;;;;;;;;;-1:-1:-1;2400:214:37;;;;;:::i;:::-;;:::i;:::-;;;652:14:47;;645:22;627:41;;615:2;600:18;2400:214:37;487:187:47;1437:136:36;;;;;;;;;;;;;:::i;2054:126::-;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;843:32:47;;;825:51;;813:2;798:18;2054:126:36;679:203:47;2670:98:37;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;679:60:40:-;;;;;;;;;;-1:-1:-1;679:60:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;7167:528:37:-;;;;;;;;;;-1:-1:-1;7167:528:37;;;;;:::i;:::-;;:::i;950:249:43:-;;;;;;;;;;-1:-1:-1;950:249:43;;;;;:::i;:::-;;:::i;5347:126:37:-;;;;;;;;;;;;;:::i;1304:539:38:-;;;;;;;;;;-1:-1:-1;1304:539:38;;;;;:::i;:::-;;:::i;1054:73:37:-;;;;;;;;;;;;1107:20;1054:73;;1297:134:36;;;;;;;;;;;;;:::i;6619:140:37:-;;;;;;;;;;-1:-1:-1;6619:140:37;;;;;:::i;:::-;6695:7;6721:31;;;:19;:31;;;;;;;6619:140;12467:353;;;;;;;;;;-1:-1:-1;12467:353:37;;;;;:::i;:::-;;:::i;5069:926:43:-;;;;;;;;;;-1:-1:-1;5069:926:43;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4034:163:37:-;;;;;;;;;;-1:-1:-1;4034:163:37;;;;;:::i;:::-;;:::i;9440:294::-;;;;;;;;;;-1:-1:-1;9440:294:37;;;;;:::i;:::-;;:::i;328:43:39:-;;;;;;;;;;;;370:1;328:43;;2610:566:43;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;11954:453:37:-;;;;;;;;;;-1:-1:-1;11954:453:37;;;;;:::i;:::-;;:::i;1079:302:40:-;;;;;;;;;;-1:-1:-1;1079:302:40;;;;;:::i;:::-;1151:16;1237:32;;;:20;:32;;;;;1287:40;;1329:44;;;;;1287:40;;1079:302;;;;;11918:25:47;;;11974:2;11959:18;;11952:34;;;;11891:18;1079:302:40;11744:248:47;2987:101:37;;;;;;;;;;-1:-1:-1;3069:12:37;;;;;;;;;;;;-1:-1:-1;;;3069:12:37;;;;2987:101;;6371:130;;;;;;;;;;-1:-1:-1;6371:130:37;;;;;:::i;:::-;-1:-1:-1;;;;;6470:24:37;6444:7;6470:24;;;:15;:24;;;;;;;6371:130;1903:145:36;;;;;;;;;;;;;:::i;12892:443:37:-;;;;;;;;;;-1:-1:-1;12892:443:37;;;;;:::i;:::-;;:::i;1956:242:43:-;;;;;;;;;;;;;:::i;1484:424:40:-;;;;;;;;;;-1:-1:-1;1484:424:40;;;;;:::i;:::-;;:::i;536:123:41:-;;;;;;;;;;-1:-1:-1;630:22:41;;-1:-1:-1;;;;;630:22:41;536:123;;2826:102:37;;;;;;;;;;;;;:::i;1579:169:36:-;;;;;;;;;;;;;:::i;4983:633:28:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;1286:281:43:-;;;;;;;;;;-1:-1:-1;1286:281:43;;;;;:::i;:::-;;:::i;1632:259::-;;;;;;;;;;;;;:::i;1191:57:37:-;;;;;;;;;;-1:-1:-1;1191:57:37;;;;;:::i;:::-;;;;;;;;;;;;;;;;6421:3166:43;;;;;;;;;;;;;:::i;612:61:40:-;;;;;;;;;;-1:-1:-1;612:61:40;;;;;:::i;:::-;;;;;;;;;;;;;;2352:175;;;;;;;;;;-1:-1:-1;2352:175:40;;;;;:::i;:::-;-1:-1:-1;;;;;2481:39:40;2440:22;2481:39;;;:26;:39;;;;;;;2352:175;2009:232;;;;;;;;;;-1:-1:-1;2009:232:40;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;378:45:38:-;;;;;;;;;;;;;;;9028:341:37;;;;;;;;;;-1:-1:-1;9028:341:37;;;;;:::i;:::-;;:::i;4254:675::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;6140:137::-;;;;;;;;;;-1:-1:-1;6140:137:37;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1254:56::-;;;;;;;;;;-1:-1:-1;1254:56:37;;;;;:::i;:::-;;;;;;;;;;;;;;;;3301:952:43;;;;;;;;;;;;;:::i;273:55::-;;;;;;;;;;-1:-1:-1;273:55:43;;;;;;;;858:128:40;;;;;;;;;;-1:-1:-1;946:33:40;;;;;;;;;;;;;;;;;858:128;;429:41:38;;;;;;;;;;;;;;;1133:52:37;;;;;;;;;;-1:-1:-1;1133:52:37;;;;;:::i;:::-;;;;;;;;;;;;;;953:95;;;;;;;;;;;;995:53;953:95;;5158:122;;;;;;;;;;;;;:::i;334:62:43:-;;;;;;;;;;-1:-1:-1;334:62:43;;;;;:::i;:::-;;;;;;;;;;;;;;11591:300:37;;;;;;;;;;;;;:::i;2265:252:43:-;;;;;;;;;;;;;:::i;4985:112:37:-;;;;;;;;;;;;;:::i;10747:753::-;;;;;;;;;;-1:-1:-1;10747:753:37;;;;;:::i;:::-;;:::i;781:356:41:-;;;;;;;;;;-1:-1:-1;781:356:41;;;;;:::i;:::-;;:::i;7767:1202:37:-;;;;;;;;;;-1:-1:-1;7767:1202:37;;;;;:::i;:::-;;:::i;1754:143:36:-;;;;;;;;;;;;;:::i;1155:136::-;1238:7;1264:20;1997:13:42;;;1909:108;1264:20:36;1257:27;;1155:136;:::o;2400:214:37:-;2502:4;-1:-1:-1;;;;;;2525:42:37;;-1:-1:-1;;;2525:42:37;;:82;;-1:-1:-1;;;;;;;;;;937:40:31;;;2571:36:37;2518:89;2400:214;-1:-1:-1;;2400:214:37:o;1437:136:36:-;1520:7;1546:20;2338:13:42;;;2250:108;2054:126:36;2132:7;2158:15;3113:8:42;;-1:-1:-1;;;;;3113:8:42;;3030:98;2670::37;2724:13;2756:5;2749:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2670:98;:::o;7167:528::-;-1:-1:-1;;;;;7289:33:37;;7259:13;7289:33;;;:24;:33;;;;;;;;7284:384;;7342:20;7366:1;7342:25;7338:146;;-1:-1:-1;7465:4:37;7458:11;;7338:146;7497:61;7508:7;1107:20;7545:5;;7552;7497:10;:61::i;:::-;-1:-1:-1;;;;;;7617:33:37;;;;;;:24;:33;;;;;:40;;-1:-1:-1;;7617:40:37;7653:4;7617:40;;;7284:384;-1:-1:-1;7684:4:37;7167:528;;;;;;:::o;950:249:43:-;1041:35;;1004:4;;1041:35;;1020:139;;;;-1:-1:-1;;;1020:139:43;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;1176:16:43;;;;:7;:16;;;;;;;;;950:249::o;5347:126:37:-;5412:7;5452:14;:12;:14::i;:::-;5438:11;:9;:11::i;:::-;:28;;;;:::i;1304:539:38:-;1559:40;;-1:-1:-1;;19622:2:47;19618:15;;;19614:53;1559:40:38;;;19602:66:47;19684:12;;;19677:28;;;1448:13:38;;;;19721:12:47;;1559:40:38;;;;;;;;;;;;1549:51;;;;;;1534:66;;1610:16;1629:6;:138;;1714:53;1733:5;;1714:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1740:20:38;;-1:-1:-1;1762:4:38;;-1:-1:-1;1714:18:38;;-1:-1:-1;1714:53:38:i;:::-;1629:138;;;1650:49;1669:5;;1650:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1676:16:38;;-1:-1:-1;1694:4:38;;-1:-1:-1;1650:18:38;;-1:-1:-1;1650:49:38:i;:::-;1610:157;;1782:11;1777:38;;1802:13;;-1:-1:-1;;;1802:13:38;;;;;;;;;;;1777:38;-1:-1:-1;1832:4:38;;1304:539;-1:-1:-1;;;;;;;1304:539:38:o;1297:134:36:-;1379:7;1405:19;2167:12:42;;;2080:106;12467:353:37;12649:7;12688:10;12708:37;12688:10;12727;12739:5;;12708:11;:37::i;:::-;;12762:51;12772:10;12784:5;12791:7;12800:8;12762:51;;;;;;;;;;;;:9;:51::i;:::-;12755:58;12467:353;-1:-1:-1;;;;;;;;12467:353:37:o;5069:926:43:-;5185:40;5242:31;5275:43;5334:23;:89;;5400:23;:21;:23::i;:::-;5334:89;;;5360:37;:35;:37::i;:::-;5241:182;;;;5433:32;5481:14;:21;-1:-1:-1;;;;;5468:35:43;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5468:35:43;;5433:70;;5518:9;5513:217;5537:23;:30;5533:1;:34;5513:217;;;5679:23;5703:1;5679:26;;;;;;;;:::i;:::-;;;;;;;:39;;;5633:23;5657:1;5633:26;;;;;;;;:::i;:::-;;;;;;;:35;;;5626:93;;;;:::i;:::-;5588:16;5605:1;5588:19;;;;;;;;:::i;:::-;;;;;;;;;;:131;5569:3;;;;:::i;:::-;;;;5513:217;;;;5744:9;5739:219;5787:1;5763:14;:21;:25;;;;:::i;:::-;5759:1;:29;5739:219;;;5901:46;5911:1;5914:16;5932:14;5901:9;:46::i;:::-;-1:-1:-1;5790:3:43;;;;:::i;:::-;;;;5739:219;;;-1:-1:-1;5974:14:43;;5069:926;-1:-1:-1;;;;5069:926:43:o;4034:163:37:-;4124:7;4179:8;4168:20;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4168:20:37;;;;;;;;;4158:31;;4168:20;4158:31;;;;;4034:163;-1:-1:-1;;4034:163:37:o;9440:294::-;9584:10;9532:7;9559:36;;;:24;:36;;;;;;;;9551:96;;;;-1:-1:-1;;;9551:96:37;;;;;;;:::i;:::-;9657:30;9678:8;9657:20;:30::i;:::-;;9704:23;9718:8;9704:13;:23::i;2610:566:43:-;2704:34;2740:49;2805:28;2836:19;:17;:19::i;:::-;2805:50;;2865:43;2928:11;:18;-1:-1:-1;;;;;2911:36:43;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;2911:36:43;;;;;;;;;;;;;;;;2865:82;;2962:9;2957:158;2981:11;:18;2977:1;:22;2957:158;;;3049:20;:36;3070:11;3082:1;3070:14;;;;;;;;:::i;:::-;;;;;;;3049:36;;;;;;;;;;;:55;;3020:84;;;;;;;;;;;;;;;;;;;;;;;;;:23;3044:1;3020:26;;;;;;;;:::i;:::-;;;;;;:84;;;;3001:3;;;;;:::i;:::-;;;;2957:158;;;-1:-1:-1;3132:11:43;;3145:23;;-1:-1:-1;2610:566:43;-1:-1:-1;2610:566:43:o;11954:453:37:-;-1:-1:-1;;;;;12121:34:37;;12087:13;12121:34;;;:25;:34;;;;;;;;12116:264;;12171:45;12182:7;12191:10;12203:5;;12210;12171:10;:45::i;:::-;-1:-1:-1;;;;;;12275:26:37;;;;;;:17;:26;;;;;;;;:39;;;12328:25;:34;;;;;:41;;-1:-1:-1;;12328:41:37;12365:4;12328:41;;;12116:264;-1:-1:-1;12396:4:37;11954:453;;;;;;:::o;1903:145:36:-;1990:7;2016:25;2946:18:42;;;2853:118;12892:443:37;13079:10;13040:7;13120:32;;;:25;:32;;;;;;13040:7;;13079:10;13120:32;;13099:161;;;;-1:-1:-1;;;13099:161:37;;20972:2:47;13099:161:37;;;20954:21:47;21011:2;20991:18;;;20984:30;21050:34;21030:18;;;21023:62;21121:34;21101:18;;;21094:62;-1:-1:-1;;;21172:19:47;;;21165:49;21231:19;;13099:161:37;20770:486:47;13099:161:37;13277:51;13287:10;13299:5;13306:7;13315:8;13277:51;;;;;;;;;;;;:9;:51::i;:::-;13270:58;12892:443;-1:-1:-1;;;;;12892:443:37:o;1956:242:43:-;2042:35;;2002:7;;2042:35;;2021:139;;;;-1:-1:-1;;;2021:139:43;;;;;;;:::i;:::-;-1:-1:-1;2177:14:43;;;1956:242::o;1484:424:40:-;1616:16;1706:32;;;:20;:32;;;;;;;;-1:-1:-1;;;;;1769:43:40;;;;:30;;:43;;;;;:52;;1835:56;;;;;1484:424;;;;;;:::o;2826:102:37:-;2882:13;2914:7;2907:14;;;;;:::i;1579:169:36:-;1678:7;1704:37;2543:30:42;;;2438:142;4983:633:28;5098:13;5125:18;;5098:13;;;5125:18;5389:41;:5;5098:13;5389:26;:41::i;:::-;5444:47;:8;5474:16;5444:29;:47::i;:::-;5583:16;;;5567:1;5583:16;;;;;;;;;-1:-1:-1;;;5338:271:28;;;-1:-1:-1;5338:271:28;;-1:-1:-1;5505:13:28;;-1:-1:-1;5540:4:28;;-1:-1:-1;5567:1:28;-1:-1:-1;5583:16:28;-1:-1:-1;5338:271:28;-1:-1:-1;4983:633:28:o;1286:281:43:-;1389:35;;1349:7;;1389:35;;1368:139;;;;-1:-1:-1;;;1368:139:43;;;;;;;:::i;:::-;-1:-1:-1;1524:36:43;;;;:27;:36;;;;;;;1286:281::o;1632:259::-;1731:35;;1682:16;;1731:35;;1710:139;;;;-1:-1:-1;;;1710:139:43;;;;;;;:::i;:::-;1866:18;1859:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1632:259;:::o;6421:3166::-;6515:32;6504:7;:5;:7::i;:::-;:43;;;;;;;;:::i;:::-;;6483:161;;;;-1:-1:-1;;;6483:161:43;;21463:2:47;6483:161:43;;;21445:21:47;21502:2;21482:18;;;21475:30;21541:34;21521:18;;;21514:62;21612:34;21592:18;;;21585:62;-1:-1:-1;;;21663:19:47;;;21656:38;21711:19;;6483:161:43;21261:475:47;6483:161:43;6675:35;;;;:44;6654:186;;;;-1:-1:-1;;;6654:186:43;;21943:2:47;6654:186:43;;;21925:21:47;21982:2;21962:18;;;21955:30;22021:34;22001:18;;;21994:62;22092:34;22072:18;;;22065:62;22164:33;22143:19;;;22136:62;22215:19;;6654:186:43;21741:499:47;6654:186:43;6872:21;6888:4;6872:15;:21::i;:::-;6851:42;;;;:18;;:42;;;;;;:::i;:::-;-1:-1:-1;6998:18:43;:25;6904:21;;6965:1;;6998:29;;6965:1;6998:29;:::i;:::-;6976:19;:51;7100:9;7095:2433;7119:18;:25;7115:29;;7095:2433;;;7195:18;:25;7165:27;;7195:29;;7223:1;;7195:29;:::i;:::-;7165:59;-1:-1:-1;7299:23:43;;7371:58;7385:18;7404:23;7426:1;7165:59;7404:23;:::i;:::-;7385:43;;;;;;;;:::i;:::-;;;;;;;;;1151:16:40;1237:32;;;:20;:32;;;;;1287:40;;1329:44;;;;;1287:40;;1079:302;7371:58:43;7298:131;;-1:-1:-1;7298:131:43;-1:-1:-1;7443:24:43;7470:53;7298:131;;7470:53;:::i;:::-;7443:80;;7607:1;7612;7607:6;7603:474;;7831:18;:25;7650:17;;-1:-1:-1;7650:17:43;;7860:1;7831:30;7827:209;;7936:23;7958:1;7936:19;:23;:::i;:::-;7885:48;;;;:27;:48;;;;;:74;7981:14;:36;;;7827:209;8054:8;;;;;;7603:474;8181:14;8160:17;:35;8156:481;;8220:28;;;;:7;:28;;;;;;;;8215:161;;8322:28;;;;:7;:28;;;;;:35;;-1:-1:-1;;8322:35:43;8353:4;8322:35;;;8215:161;8420:18;:25;:29;;8448:1;8420:29;:::i;:::-;8397:19;;:52;8393:230;;8563:19;:41;;;8393:230;8870:14;8849:17;:35;8845:291;;9055:23;9077:1;9055:19;:23;:::i;:::-;:27;;9081:1;9055:27;:::i;:::-;9004:48;;;;:27;:48;;;;;:78;9032:19;9100:21;9032:19;9100:21;:::i;:::-;;;;8845:291;9281:18;:25;9272:5;:1;9276;9272:5;:::i;:::-;:34;9268:201;;9377:23;9399:1;9377:19;:23;:::i;:::-;9326:48;;;;:27;:48;;;;;:74;9418:14;:36;;;9268:201;9500:17;-1:-1:-1;;;;7095:2433:43;7146:3;;;;:::i;:::-;;;;7095:2433;;;-1:-1:-1;;9538:35:43;:42;;-1:-1:-1;;9538:42:43;9576:4;9538:42;;;-1:-1:-1;6421:3166:43:o;2009:232:40:-;2122:33;2158:32;;;:20;:32;;;;;;;;;2207:27;;;2200:34;;;;;;;;;;;;;;;;;2094:16;;2158:32;;2200:34;;2207:27;2200:34;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2200:34:40;;;;;;;;;;;;;;;;;;;;;;;;2009:232;;;:::o;9028:341:37:-;9166:7;9197:33;9212:10;9224:5;;9197:14;:33::i;:::-;9189:93;;;;-1:-1:-1;;;9189:93:37;;;;;;;:::i;:::-;9292:30;9313:8;9292:20;:30::i;:::-;;9339:23;9353:8;9339:13;:23::i;:::-;9332:30;9028:341;-1:-1:-1;;;;9028:341:37:o;4254:675::-;4337:9;;4309:12;;4337:9;;4333:68;;;-1:-1:-1;4369:21:37;;4254:675::o;4333:68::-;4411:29;4443:14;:12;:14::i;:::-;4411:46;;4497:15;4472:21;:40;4468:101;;4535:23;4528:30;;;4254:675;:::o;4468:101::-;4579:26;4608:11;:9;:11::i;:::-;4579:40;;4656:15;4634:18;:37;4630:94;;4694:19;4687:26;;;;4254:675;:::o;4630:94::-;4734:25;4762:17;:15;:17::i;:::-;4734:45;;4815:15;4794:17;:36;4790:93;;4853:19;4846:26;;;;;4254:675;:::o;4790:93::-;4900:22;4893:29;;;;;4254:675;:::o;6140:137::-;6210:19;;:::i;:::-;6248:22;;;;:10;:22;;;;;;;;;6241:29;;;;;;;;;-1:-1:-1;;;;;6241:29:37;;;;-1:-1:-1;;;6241:29:37;;;;;;;;;;;;;;;;;;;;6248:22;;6241:29;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6241:29:37;;;-1:-1:-1;;6241:29:37;;;;;;;;;;;;;-1:-1:-1;;;;;6241:29:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6241:29:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6140:137;;;:::o;3301:952:43:-;3409:34;3445:49;3510:28;3541:19;:17;:19::i;:::-;3510:50;;3570:42;3629:11;:18;-1:-1:-1;;;;;3615:33:43;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3615:33:43;;3570:78;;3658:43;3721:11;:18;-1:-1:-1;;;;;3704:36:43;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;3704:36:43;;;;;;;;;;;;;;;;3658:82;;3751:29;3799:9;3794:384;3818:11;:18;3814:1;:22;3794:384;;;3863:33;3881:11;3893:1;3881:14;;;;;;;;:::i;:::-;;;;;;;6695:7:37;6721:31;;;:19;:31;;;;;;;6619:140;3863:33:43;3900:1;3863:38;3857:311;;3973:11;3985:1;3973:14;;;;;;;;:::i;:::-;;;;;;;3922:25;3948:21;3922:48;;;;;;;;:::i;:::-;;;;;;:65;;;;;4054:20;:36;4075:11;4087:1;4075:14;;;;;;;;:::i;:::-;;;;;;;4054:36;;;;;;;;;;;:55;;4005:104;;;;;;;;;;;;;;;;;;;;;;;;;:23;4029:21;4005:46;;;;;;;;:::i;:::-;;;;;;;;;;:104;4127:26;4152:1;4127:26;;:::i;:::-;;;3857:311;3838:3;;;;:::i;:::-;;;;3794:384;;;-1:-1:-1;4195:25:43;;4222:23;;-1:-1:-1;3301:952:43;-1:-1:-1;;;3301:952:43:o;5158:122:37:-;5217:7;5260:13;:11;:13::i;:::-;5243:14;:12;:14::i;11591:300::-;11656:9;:7;:9::i;:::-;-1:-1:-1;;;;;11642:23:37;:10;-1:-1:-1;;;;;11642:23:37;;11634:32;;;;;;11677:19;11699:7;:5;:7::i;:::-;11677:29;-1:-1:-1;11735:21:37;11725:6;:31;;;;;;;;:::i;:::-;;;:67;;;;-1:-1:-1;11770:22:37;11760:6;:32;;;;;;;;:::i;:::-;;;11725:67;11717:108;;;;-1:-1:-1;;;11717:108:37;;22447:2:47;11717:108:37;;;22429:21:47;22486:2;22466:18;;;22459:30;22525;22505:18;;;22498:58;22573:18;;11717:108:37;22245:352:47;11717:108:37;11835:9;:16;;-1:-1:-1;;11835:16:37;11847:4;11835:16;;;11867:17;;;;11835:9;;11867:17;11624:267;11591:300::o;2265:252:43:-;2356:35;;2316:7;;2356:35;;2335:139;;;;-1:-1:-1;;;2335:139:43;;;;;;;:::i;:::-;-1:-1:-1;2491:19:43;;;2265:252::o;4985:112:37:-;5043:16;5078:12;5071:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4985:112;:::o;10747:753::-;10849:9;:7;:9::i;:::-;-1:-1:-1;;;;;10835:23:37;:10;-1:-1:-1;;;;;10835:23:37;;10827:91;;;;-1:-1:-1;;;10827:91:37;;22804:2:47;10827:91:37;;;22786:21:47;22843:2;22823:18;;;22816:30;22882:34;22862:18;;;22855:62;22953:25;22933:18;;;22926:53;22996:19;;10827:91:37;22602:419:47;10827:91:37;10960:22;10949:7;:5;:7::i;:::-;:33;;;;;;;;:::i;:::-;;10928:153;;;;-1:-1:-1;;;10928:153:37;;23228:2:47;10928:153:37;;;23210:21:47;23267:2;23247:18;;;23240:30;23306:34;23286:18;;;23279:62;23377:34;23357:18;;;23350:62;-1:-1:-1;;;23428:19:47;;;23421:40;23478:19;;10928:153:37;23026:477:47;10928:153:37;11097:13;11092:357;11124:11;:18;11116:5;:26;11092:357;;;11171:19;:39;11191:11;11203:5;11191:18;;;;;;;;:::i;:::-;;;;;;;11171:39;;;;;;;;;;;;11214:1;11171:44;11167:272;;11277:1;11235:19;:39;11255:11;11267:5;11255:18;;;;;;;;:::i;:::-;;;;;;;11235:39;;;;;;;;;;;:43;;;;11296:128;;;;;;;;;;;;;;;;;:10;:30;11307:11;11319:5;11307:18;;;;;;;;:::i;:::-;;;;;;;11296:30;;;;;;;;;;;:42;;:128;;;;;;:::i;:::-;;11167:272;11144:7;;;;:::i;:::-;;;;11092:357;;;;11464:29;11481:11;11464:29;;;;;;:::i;:::-;;;;;;;;10747:753;:::o;781:356:41:-;900:9;:7;:9::i;:::-;-1:-1:-1;;;;;886:23:41;:10;-1:-1:-1;;;;;886:23:41;;878:32;;;;;;920:38;961:23;630:22;;-1:-1:-1;;;;;630:22:41;;536:123;961:23;994:22;:47;;-1:-1:-1;;;;;;994:47:41;-1:-1:-1;;;;;994:47:41;;;;;;;;;1056:74;;;26004:15:47;;;25986:34;;26051:2;26036:18;;26029:43;;;;920:64:41;;-1:-1:-1;1056:74:41;;25921:18:47;1056:74:41;;;;;;;868:269;781:356;:::o;7767:1202:37:-;7898:15;;7860:18;;-1:-1:-1;;;;;7898:29:37;7917:10;7898:29;7890:90;;;;-1:-1:-1;;;7890:90:37;;26285:2:47;7890:90:37;;;26267:21:47;26324:2;26304:18;;;26297:30;26363:34;26343:18;;;26336:62;-1:-1:-1;;;26414:18:47;;;26407:46;26470:19;;7890:90:37;26083:412:47;7890:90:37;7995:13;7990:866;370:1:39;8014:5:37;:23;7990:866;;;8062:25;8100:5;8090:16;;;;;;;;:::i;:::-;8062:44;-1:-1:-1;8143:16:37;8124:15;:35;;;;;;;;:::i;:::-;;8120:726;;8179:8;;;8120:726;8288:14;8269:15;:33;;;;;;;;:::i;:::-;;8265:581;;8351:21;;;;:29;:36;:29;:41;8322:184;;;;-1:-1:-1;;;8322:184:37;;26702:2:47;8322:184:37;;;26684:21:47;26741:2;26721:18;;;26714:30;26780:34;26760:18;;;26753:62;26851:34;26831:18;;;26824:62;-1:-1:-1;;;26902:19:47;;;26895:39;26951:19;;8322:184:37;26500:476:47;8322:184:37;8553:8;:21;;;:31;;;8588:1;8553:36;8524:175;;;;-1:-1:-1;;;8524:175:37;;27183:2:47;8524:175:37;;;27165:21:47;27222:2;27202:18;;;27195:30;;;27261:34;27241:18;;;27234:62;27332:34;27312:18;;;27305:62;-1:-1:-1;;;27383:19:47;;;27376:35;27428:19;;8524:175:37;26981:472:47;8524:175:37;8725:21;;;;:29;:36;:29;:41;8717:50;;;;;;8265:581;;;8813:18;;-1:-1:-1;;;8813:18:37;;;;;;;;;;;8265:581;8048:808;7990:866;8039:7;;;;:::i;:::-;;;;7990:866;;;;8879:8;:20;;;8873:34;8911:1;8873:39;8865:76;;;;-1:-1:-1;;;8865:76:37;;27660:2:47;8865:76:37;;;27642:21:47;27699:2;27679:18;;;27672:30;27738:26;27718:18;;;27711:54;27782:18;;8865:76:37;27458:348:47;8865:76:37;-1:-1:-1;8958:4:37;;7767:1202;-1:-1:-1;7767:1202:37:o;1754:143:36:-;1840:7;1866:24;2754:17:42;;;2662:116;1156:154:29;1247:4;1299;1270:25;1283:5;1290:4;1270:12;:25::i;:::-;:33;;1156:154;-1:-1:-1;;;;1156:154:29:o;13616:722:37:-;13777:7;13819:19;13808:7;:5;:7::i;:::-;:30;;;;;;;;:::i;:::-;;13800:78;;;;-1:-1:-1;;;13800:78:37;;28013:2:47;13800:78:37;;;27995:21:47;28052:2;28032:18;;;28025:30;28091:34;28071:18;;;28064:62;-1:-1:-1;;;28142:18:47;;;28135:33;28185:19;;13800:78:37;27811:399:47;13800:78:37;13907:1;13896:8;:12;13888:68;;;;-1:-1:-1;;;13888:68:37;;28417:2:47;13888:68:37;;;28399:21:47;28456:2;28436:18;;;28429:30;28495:34;28475:18;;;28468:62;-1:-1:-1;;;28546:18:47;;;28539:41;28597:19;;13888:68:37;28215:407:47;13888:68:37;-1:-1:-1;;;;;13988:34:37;;;;;;:25;:34;;;;;;;;13967:160;;;;-1:-1:-1;;;13967:160:37;;28829:2:47;13967:160:37;;;28811:21:47;28868:2;28848:18;;;28841:30;28907:34;28887:18;;;28880:62;28978:34;28958:18;;;28951:62;-1:-1:-1;;;29029:19:47;;;29022:46;29085:19;;13967:160:37;28627:483:47;13967:160:37;14137:78;14148:10;14160:7;14169;14178:8;14188:17;:26;14206:7;-1:-1:-1;;;;;14188:26:37;-1:-1:-1;;;;;14188:26:37;;;;;;;;;;;;;14137:10;:78::i;:::-;14240:7;-1:-1:-1;;;;;14231:56:37;;14249:10;14261:7;14270:8;14280:6;14231:56;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;14305:26:37;;;;;:17;:26;;;;;;;13616:722;-1:-1:-1;13616:722:37:o;4259:717:43:-;4402:4;4437:3;;4450:171;4476:16;:23;4472:1;:27;4450:171;;;4546:16;4563:4;4546:22;;;;;;;;:::i;:::-;;;;;;;4524:16;4541:1;4524:19;;;;;;;;:::i;:::-;;;;;;;:44;4520:91;;;4595:1;4588:8;;4520:91;4501:3;;;;:::i;:::-;;;;4450:171;;;;4642:3;4634:4;:11;4630:29;;4654:5;4647:12;;;;;4630:29;4669:15;4687:16;4704:3;4687:21;;;;;;;;:::i;:::-;;;;;;;4669:39;;4742:16;4759:4;4742:22;;;;;;;;:::i;:::-;;;;;;;4718:16;4735:3;4718:21;;;;;;;;:::i;:::-;;;;;;:46;;;;;4799:8;4774:16;4791:4;4774:22;;;;;;;;:::i;:::-;;;;;;:33;;;;;4817:22;4842:11;4854:3;4842:16;;;;;;;;:::i;:::-;;;;;;;4817:41;;4887:11;4899:4;4887:17;;;;;;;;:::i;:::-;;;;;;;4868:11;4880:3;4868:16;;;;;;;;:::i;:::-;;;;;;:36;;;;;4934:14;4914:11;4926:4;4914:17;;;;;;;;:::i;:::-;;;;;;;;;;:34;-1:-1:-1;4965:4:43;;4259:717;-1:-1:-1;;;;;;4259:717:43:o;9740:897:37:-;9819:7;9857:19;9846:7;:5;:7::i;:::-;:30;;;;;;;;:::i;:::-;;9838:105;;;;-1:-1:-1;;;9838:105:37;;29764:2:47;9838:105:37;;;29746:21:47;29803:2;29783:18;;;29776:30;29842:34;29822:18;;;29815:62;29913:32;29893:18;;;29886:60;29963:19;;9838:105:37;29562:426:47;9838:105:37;10004:31;:29;:31::i;:::-;9990:10;9974:27;;;;:15;:27;;;;;;:61;9953:201;;;;-1:-1:-1;;;9953:201:37;;30195:2:47;9953:201:37;;;30177:21:47;30234:2;30214:18;;;30207:30;30273:34;30253:18;;;30246:62;30344:34;30324:18;;;30317:62;30416:31;30395:19;;;30388:60;30465:19;;9953:201:37;29993:497:47;9953:201:37;10194:18;:16;:18::i;:::-;10172:12;:19;:40;10164:110;;;;-1:-1:-1;;;10164:110:37;;30697:2:47;10164:110:37;;;30679:21:47;30736:2;30716:18;;;30709:30;30775:34;30755:18;;;30748:62;30846:27;30826:18;;;30819:55;30891:19;;10164:110:37;30495:421:47;10164:110:37;10285:18;10306:22;10319:8;10306:12;:22::i;:::-;10347;;;;:10;:22;;;;;:29;:22;;-1:-1:-1;;;;10347:29:37;;;;10346:30;10338:84;;;;-1:-1:-1;;;10338:84:37;;31123:2:47;10338:84:37;;;31105:21:47;31162:2;31142:18;;;31135:30;31201:34;31181:18;;;31174:62;-1:-1:-1;;;31252:18:47;;;31245:39;31301:19;;10338:84:37;30921:405:47;10338:84:37;10433:12;:29;;;;;;;;;;;;;;-1:-1:-1;10472:22:37;;;:10;10433:29;10472:22;;;;;;;;:33;;;;;;;;;;-1:-1:-1;;;10472:33:37;-1:-1:-1;;;;;;10472:33:37;;;-1:-1:-1;;;;;10472:33:37;;;;;;;;;;;;;;10497:8;;10472:33;;;;;;;:::i;:::-;-1:-1:-1;10472:33:37;;;;;;;;;;-1:-1:-1;;;;;;10472:33:37;-1:-1:-1;;;;;10472:33:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10472:33:37;;;;;;;;;;10531:10;10515:27;;;;:15;:27;;;;;;:32;;10472:33;;-1:-1:-1;10515:27:37;-1:-1:-1;10515:32:37;;10472:33;;10515:32;:::i;:::-;;;;-1:-1:-1;;10563:39:37;;;31505:25:47;;;10591:10:37;31561:2:47;31546:18;;31539:60;10563:39:37;;31478:18:47;10563:39:37;;;;;;;10620:10;9740:897;-1:-1:-1;;9740:897:37:o;2929:268:23:-;3023:13;933:66;3052:47;;3048:143;;3122:15;3131:5;3122:8;:15::i;:::-;3115:22;;;;3048:143;3175:5;3168:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2929:268;;;;:::o;1934:290:29:-;2017:7;2059:4;2017:7;2073:116;2097:5;:12;2093:1;:16;2073:116;;;2145:33;2155:12;2169:5;2175:1;2169:8;;;;;;;;:::i;:::-;;;;;;;2145:9;:33::i;:::-;2130:48;-1:-1:-1;2111:3:29;;;;:::i;:::-;;;;2073:116;;;-1:-1:-1;2205:12:29;1934:290;-1:-1:-1;;;1934:290:29:o;2667:1272:40:-;2841:33;2877:32;;;:20;:32;;;;;;;;-1:-1:-1;;;;;2967:35:40;;;;:26;:35;;;;;;;2954:48;;:10;:48;:::i;:::-;2941:8;:62;;2920:160;;;;-1:-1:-1;;;2920:160:40;;31812:2:47;2920:160:40;;;31794:21:47;31851:2;31831:18;;;31824:30;31890:34;31870:18;;;31863:62;-1:-1:-1;;;31941:18:47;;;31934:49;32000:19;;2920:160:40;31610:415:47;2920:160:40;-1:-1:-1;;;;;3114:39:40;;3091:20;3114:39;;;:30;;;:39;;;;;:48;:53;3182:30;;;3178:601;;3228:52;;3272:8;;3228:12;;:31;;:52;;3272:8;;3228:52;:::i;:::-;;;;-1:-1:-1;;;;;;;3294:39:40;;;;;;:30;;;:39;;;;;:60;;3346:8;;3294:39;:60;;3346:8;;3294:60;:::i;:::-;;;;-1:-1:-1;3178:601:40;;-1:-1:-1;3178:601:40;;-1:-1:-1;;3375:34:40;;;;3371:408;;3433:19;:17;:19::i;:::-;3456:1;3433:24;3425:101;;;;;-1:-1:-1;;;3425:101:40;;32232:2:47;3425:101:40;;;32214:21:47;32251:18;;;32244:30;;;;32310:34;32290:18;;;32283:62;32381:34;32361:18;;;32354:62;32433:19;;3425:101:40;32030:428:47;3425:101:40;3588:8;3540:12;:31;;:44;;;:56;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;3610:39:40;;;;;;:30;;;:39;;;;;:52;;:64;;3666:8;;3610:39;:64;;3666:8;;3610:64;:::i;3371:408::-;3705:63;;-1:-1:-1;;;3705:63:40;;32665:2:47;3705:63:40;;;32647:21:47;32704:2;32684:18;;;32677:30;32743:34;32723:18;;;32716:62;-1:-1:-1;;;32794:18:47;;;32787:51;32855:19;;3705:63:40;32463:417:47;3371:408:40;3793:15;3789:87;;;3824:27;;;:41;;;;;;;-1:-1:-1;3824:41:40;;;;;;;;;;-1:-1:-1;;;;;;3824:41:40;-1:-1:-1;;;;;3824:41:40;;;;;3789:87;-1:-1:-1;;;;;3885:35:40;;;;;;:26;:35;;;;;:47;;3924:8;;3885:35;:47;;3924:8;;3885:47;:::i;:::-;;;;-1:-1:-1;;;;;;;;;2667:1272:40:o;1621:405:23:-;1680:13;1705:11;1719:16;1730:4;1719:10;:16::i;:::-;1843:14;;;1854:2;1843:14;;;;;;;;;1705:30;;-1:-1:-1;1823:17:23;;1843:14;;;;;;;;;-1:-1:-1;;;1933:16:23;;;-1:-1:-1;1978:4:23;1969:14;;1962:28;;;;-1:-1:-1;1933:16:23;1621:405::o;8975:147:29:-;9038:7;9068:1;9064;:5;:51;;9196:13;9287:15;;;9322:4;9315:15;;;9368:4;9352:21;;9064:51;;;-1:-1:-1;9196:13:29;9287:15;;;9322:4;9315:15;9368:4;9352:21;;;8975:147::o;2098:245:23:-;2159:7;2231:4;2195:40;;2258:2;2249:11;;2245:69;;;2283:20;;-1:-1:-1;;;2283:20:23;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;196:286:47;254:6;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;349:23;;-1:-1:-1;;;;;;401:32:47;;391:43;;381:71;;448:1;445;438:12;887:423;929:3;967:5;961:12;994:6;989:3;982:19;1019:1;1029:162;1043:6;1040:1;1037:13;1029:162;;;1105:4;1161:13;;;1157:22;;1151:29;1133:11;;;1129:20;;1122:59;1058:12;1029:162;;;1033:3;1236:1;1229:4;1220:6;1215:3;1211:16;1207:27;1200:38;1299:4;1292:2;1288:7;1283:2;1275:6;1271:15;1267:29;1262:3;1258:39;1254:50;1247:57;;;887:423;;;;:::o;1315:220::-;1464:2;1453:9;1446:21;1427:4;1484:45;1525:2;1514:9;1510:18;1502:6;1484:45;:::i;1540:180::-;1599:6;1652:2;1640:9;1631:7;1627:23;1623:32;1620:52;;;1668:1;1665;1658:12;1620:52;-1:-1:-1;1691:23:47;;1540:180;-1:-1:-1;1540:180:47:o;1881:257::-;1801:12;;1789:25;;1863:4;1852:16;;;1846:23;1830:14;;;1823:47;2073:2;2058:18;;2085:47;1725:151;2143:131;-1:-1:-1;;;;;2218:31:47;;2208:42;;2198:70;;2264:1;2261;2254:12;2198:70;2143:131;:::o;2279:367::-;2342:8;2352:6;2406:3;2399:4;2391:6;2387:17;2383:27;2373:55;;2424:1;2421;2414:12;2373:55;-1:-1:-1;2447:20:47;;-1:-1:-1;;;;;2479:30:47;;2476:50;;;2522:1;2519;2512:12;2476:50;2559:4;2551:6;2547:17;2535:29;;2619:3;2612:4;2602:6;2599:1;2595:14;2587:6;2583:27;2579:38;2576:47;2573:67;;;2636:1;2633;2626:12;2651:572;2746:6;2754;2762;2815:2;2803:9;2794:7;2790:23;2786:32;2783:52;;;2831:1;2828;2821:12;2783:52;2870:9;2857:23;2889:31;2914:5;2889:31;:::i;:::-;2939:5;-1:-1:-1;2995:2:47;2980:18;;2967:32;-1:-1:-1;;;;;3011:30:47;;3008:50;;;3054:1;3051;3044:12;3008:50;3093:70;3155:7;3146:6;3135:9;3131:22;3093:70;:::i;:::-;2651:572;;3182:8;;-1:-1:-1;3067:96:47;;-1:-1:-1;;;;2651:572:47:o;3228:160::-;3293:20;;3349:13;;3342:21;3332:32;;3322:60;;3378:1;3375;3368:12;3322:60;3228:160;;;:::o;3393:709::-;3503:6;3511;3519;3527;3535;3588:3;3576:9;3567:7;3563:23;3559:33;3556:53;;;3605:1;3602;3595:12;3556:53;3644:9;3631:23;3663:31;3688:5;3663:31;:::i;:::-;3713:5;-1:-1:-1;3765:2:47;3750:18;;3737:32;;-1:-1:-1;3820:2:47;3805:18;;3792:32;-1:-1:-1;;;;;3836:30:47;;3833:50;;;3879:1;3876;3869:12;3833:50;3918:70;3980:7;3971:6;3960:9;3956:22;3918:70;:::i;:::-;4007:8;;-1:-1:-1;3892:96:47;-1:-1:-1;4061:35:47;;-1:-1:-1;4092:2:47;4077:18;;4061:35;:::i;:::-;4051:45;;3393:709;;;;;;;;:::o;4107:156::-;4173:20;;4233:4;4222:16;;4212:27;;4202:55;;4253:1;4250;4243:12;4268:713;4388:6;4396;4404;4412;4420;4428;4481:3;4469:9;4460:7;4456:23;4452:33;4449:53;;;4498:1;4495;4488:12;4449:53;4534:9;4521:23;4511:33;;4563:36;4595:2;4584:9;4580:18;4563:36;:::i;:::-;4553:46;;4646:2;4635:9;4631:18;4618:32;4608:42;;4697:2;4686:9;4682:18;4669:32;4659:42;;4752:3;4741:9;4737:19;4724:33;-1:-1:-1;;;;;4772:6:47;4769:30;4766:50;;;4812:1;4809;4802:12;4766:50;4851:70;4913:7;4904:6;4893:9;4889:22;4851:70;:::i;:::-;4268:713;;;;-1:-1:-1;4268:713:47;;-1:-1:-1;4268:713:47;;4940:8;;4268:713;-1:-1:-1;;;4268:713:47:o;4986:180::-;5042:6;5095:2;5083:9;5074:7;5070:23;5066:32;5063:52;;;5111:1;5108;5101:12;5063:52;5134:26;5150:9;5134:26;:::i;5171:435::-;5224:3;5262:5;5256:12;5289:6;5284:3;5277:19;5315:4;5344:2;5339:3;5335:12;5328:19;;5381:2;5374:5;5370:14;5402:1;5412:169;5426:6;5423:1;5420:13;5412:169;;;5487:13;;5475:26;;5521:12;;;;5556:15;;;;5448:1;5441:9;5412:169;;;-1:-1:-1;5597:3:47;;5171:435;-1:-1:-1;;;;;5171:435:47:o;5611:261::-;5790:2;5779:9;5772:21;5753:4;5810:56;5862:2;5851:9;5847:18;5839:6;5810:56;:::i;5877:127::-;5938:10;5933:3;5929:20;5926:1;5919:31;5969:4;5966:1;5959:15;5993:4;5990:1;5983:15;6009:257;6081:4;6075:11;;;6113:17;;-1:-1:-1;;;;;6145:34:47;;6181:22;;;6142:62;6139:88;;;6207:18;;:::i;:::-;6243:4;6236:24;6009:257;:::o;6271:253::-;6343:2;6337:9;6385:4;6373:17;;-1:-1:-1;;;;;6405:34:47;;6441:22;;;6402:62;6399:88;;;6467:18;;:::i;6529:275::-;6600:2;6594:9;6665:2;6646:13;;-1:-1:-1;;6642:27:47;6630:40;;-1:-1:-1;;;;;6685:34:47;;6721:22;;;6682:62;6679:88;;;6747:18;;:::i;:::-;6783:2;6776:22;6529:275;;-1:-1:-1;6529:275:47:o;6809:486::-;6870:5;6918:4;6906:9;6901:3;6897:19;6893:30;6890:50;;;6936:1;6933;6926:12;6890:50;6969:2;6963:9;7011:4;7003:6;6999:17;7082:6;7070:10;7067:22;-1:-1:-1;;;;;7034:10:47;7031:34;7028:62;7025:88;;;7093:18;;:::i;:::-;7129:2;7122:22;7162:6;-1:-1:-1;7162:6:47;7192:23;;7224:33;7192:23;7224:33;:::i;:::-;7266:23;;6809:486;;-1:-1:-1;;6809:486:47:o;7300:183::-;7360:4;-1:-1:-1;;;;;7385:6:47;7382:30;7379:56;;;7415:18;;:::i;:::-;-1:-1:-1;7460:1:47;7456:14;7472:4;7452:25;;7300:183::o;7488:1048::-;7547:5;7595:4;7583:9;7578:3;7574:19;7570:30;7567:50;;;7613:1;7610;7603:12;7567:50;7635:22;;:::i;:::-;7626:31;;7693:9;7680:23;-1:-1:-1;;;;;7718:6:47;7715:30;7712:50;;;7758:1;7755;7748:12;7712:50;7781:22;;7834:4;7826:13;;7822:23;-1:-1:-1;7812:51:47;;7859:1;7856;7849:12;7812:51;7895:2;7882:16;7917:4;7941:60;7957:43;7997:2;7957:43;:::i;:::-;7941:60;:::i;:::-;8035:15;;;8117:1;8113:10;;;;8105:19;;8101:28;;;8066:12;;;;8141:15;;;8138:35;;;8169:1;8166;8159:12;8138:35;8193:11;;;;8213:223;8229:6;8224:3;8221:15;8213:223;;;8311:3;8298:17;8328:33;8353:7;8328:33;:::i;:::-;8374:20;;8246:12;;;;8414;;;;8213:223;;;8445:20;;-1:-1:-1;8510:18:47;;;8497:32;8481:14;;;8474:56;;;;-1:-1:-1;8452:5:47;7488:1048;-1:-1:-1;;7488:1048:47:o;8541:1282::-;8600:5;8648:4;8636:9;8631:3;8627:19;8623:30;8620:50;;;8666:1;8663;8656:12;8620:50;8688:22;;:::i;:::-;8679:31;;8747:9;8734:23;8766:33;8791:7;8766:33;:::i;:::-;8808:22;;8849:2;8883:35;8899:18;;;8883:35;:::i;:::-;8878:2;8871:5;8867:14;8860:59;8970:2;8959:9;8955:18;8942:32;-1:-1:-1;;;;;9034:2:47;9026:6;9023:14;9020:34;;;9050:1;9047;9040:12;9020:34;9088:6;9077:9;9073:22;9063:32;;9133:3;9126:4;9122:2;9118:13;9114:23;9104:51;;9151:1;9148;9141:12;9104:51;9187:2;9174:16;9209:2;9205;9202:10;9199:36;;;9215:18;;:::i;:::-;9257:53;9300:2;9281:13;;-1:-1:-1;;9277:27:47;9273:36;;9257:53;:::i;:::-;9333:2;9326:5;9319:17;9373:3;9368:2;9363;9359;9355:11;9351:20;9348:29;9345:49;;;9390:1;9387;9380:12;9345:49;9445:2;9440;9436;9432:11;9427:2;9420:5;9416:14;9403:45;9489:1;9484:2;9479;9472:5;9468:14;9464:23;9457:34;9523:5;9518:2;9511:5;9507:14;9500:29;;;9561:57;9614:3;9609:2;9598:9;9594:18;9561:57;:::i;:::-;9556:2;9549:5;9545:14;9538:81;9672:3;9661:9;9657:19;9644:33;9628:49;;9702:2;9692:8;9689:16;9686:36;;;9718:1;9715;9708:12;9686:36;;;9755:61;9812:3;9801:8;9790:9;9786:24;9755:61;:::i;:::-;9749:3;9742:5;9738:15;9731:86;;8541:1282;;;;:::o;9828:356::-;9918:6;9971:2;9959:9;9950:7;9946:23;9942:32;9939:52;;;9987:1;9984;9977:12;9939:52;10027:9;10014:23;-1:-1:-1;;;;;10052:6:47;10049:30;10046:50;;;10092:1;10089;10082:12;10046:50;10115:63;10170:7;10161:6;10150:9;10146:22;10115:63;:::i;10189:905::-;10467:4;10496:2;10525;10514:9;10507:21;10551:56;10603:2;10592:9;10588:18;10580:6;10551:56;:::i;:::-;10664:22;;;10626:2;10644:18;;;10637:50;;;;10736:13;;10758:22;;;10834:15;;;;10796;;;10867:1;10877:191;10891:6;10888:1;10885:13;10877:191;;;10940:48;10984:3;10975:6;10969:13;1801:12;;1789:25;;1863:4;1852:16;;;1846:23;1830:14;;1823:47;1725:151;10940:48;11043:15;;;;11008:12;;;;10913:1;10906:9;10877:191;;;-1:-1:-1;11085:3:47;;10189:905;-1:-1:-1;;;;;;;;10189:905:47:o;11099:640::-;11203:6;11211;11219;11227;11280:2;11268:9;11259:7;11255:23;11251:32;11248:52;;;11296:1;11293;11286:12;11248:52;11335:9;11322:23;11354:31;11379:5;11354:31;:::i;:::-;11404:5;-1:-1:-1;11456:2:47;11441:18;;11428:32;;-1:-1:-1;11511:2:47;11496:18;;11483:32;-1:-1:-1;;;;;11527:30:47;;11524:50;;;11570:1;11567;11560:12;11524:50;11609:70;11671:7;11662:6;11651:9;11647:22;11609:70;:::i;:::-;11099:640;;;;-1:-1:-1;11698:8:47;-1:-1:-1;;;;11099:640:47:o;11997:247::-;12056:6;12109:2;12097:9;12088:7;12084:23;12080:32;12077:52;;;12125:1;12122;12115:12;12077:52;12164:9;12151:23;12183:31;12208:5;12183:31;:::i;12249:318::-;12324:6;12332;12340;12393:2;12381:9;12372:7;12368:23;12364:32;12361:52;;;12409:1;12406;12399:12;12361:52;12445:9;12432:23;12422:33;;12474:36;12506:2;12495:9;12491:18;12474:36;:::i;:::-;12464:46;;12557:2;12546:9;12542:18;12529:32;12519:42;;12249:318;;;;;:::o;12572:315::-;12640:6;12648;12701:2;12689:9;12680:7;12676:23;12672:32;12669:52;;;12717:1;12714;12707:12;12669:52;12753:9;12740:23;12730:33;;12813:2;12802:9;12798:18;12785:32;12826:31;12851:5;12826:31;:::i;:::-;12876:5;12866:15;;;12572:315;;;;;:::o;13131:920::-;13537:3;13532;13528:13;13520:6;13516:26;13505:9;13498:45;13579:3;13574:2;13563:9;13559:18;13552:31;13479:4;13606:46;13647:3;13636:9;13632:19;13624:6;13606:46;:::i;:::-;13700:9;13692:6;13688:22;13683:2;13672:9;13668:18;13661:50;13734:33;13760:6;13752;13734:33;:::i;:::-;13798:2;13783:18;;13776:34;;;-1:-1:-1;;;;;13847:32:47;;13841:3;13826:19;;13819:61;13867:3;13896:19;;13889:35;;;13961:22;;;13955:3;13940:19;;13933:51;13720:47;-1:-1:-1;14001:44:47;13720:47;14030:6;14001:44;:::i;:::-;13993:52;13131:920;-1:-1:-1;;;;;;;;;;13131:920:47:o;14056:461::-;14109:3;14147:5;14141:12;14174:6;14169:3;14162:19;14200:4;14229:2;14224:3;14220:12;14213:19;;14266:2;14259:5;14255:14;14287:1;14297:195;14311:6;14308:1;14305:13;14297:195;;;14376:13;;-1:-1:-1;;;;;14372:39:47;14360:52;;14432:12;;;;14467:15;;;;14408:1;14326:9;14297:195;;14522:261;14701:2;14690:9;14683:21;14664:4;14721:56;14773:2;14762:9;14758:18;14750:6;14721:56;:::i;14970:692::-;15096:6;15104;15112;15165:2;15153:9;15144:7;15140:23;15136:32;15133:52;;;15181:1;15178;15171:12;15133:52;15221:9;15208:23;-1:-1:-1;;;;;15291:2:47;15283:6;15280:14;15277:34;;;15307:1;15304;15297:12;15277:34;15330:63;15385:7;15376:6;15365:9;15361:22;15330:63;:::i;:::-;15320:73;;15446:2;15435:9;15431:18;15418:32;15402:48;;15475:2;15465:8;15462:16;15459:36;;;15491:1;15488;15481:12;15459:36;;15530:72;15594:7;15583:8;15572:9;15568:24;15530:72;:::i;15667:127::-;15728:10;15723:3;15719:20;15716:1;15709:31;15759:4;15756:1;15749:15;15783:4;15780:1;15773:15;15799:346;15949:2;15934:18;;15982:1;15971:13;;15961:144;;16027:10;16022:3;16018:20;16015:1;16008:31;16062:4;16059:1;16052:15;16090:4;16087:1;16080:15;15961:144;16114:25;;;15799:346;:::o;16150:994::-;16341:2;16330:9;16323:21;16304:4;16380:1;16376;16371:3;16367:11;16363:19;16437:2;16428:6;16422:13;16418:22;16413:2;16402:9;16398:18;16391:50;16509:2;16501:6;16497:15;16491:22;16484:30;16477:38;16472:2;16461:9;16457:18;16450:66;16563:2;16555:6;16551:15;16545:22;16603:4;16598:2;16587:9;16583:18;16576:32;16631:52;16678:3;16667:9;16663:19;16649:12;16631:52;:::i;:::-;16617:66;;16755:2;16748;16740:6;16736:15;16730:22;16724:29;16720:38;16714:3;16703:9;16699:19;16692:67;16808:3;16800:6;16796:16;16790:23;16768:45;;16883:2;16879:7;16867:9;16859:6;16855:22;16851:36;16844:4;16833:9;16829:20;16822:66;16925:14;16919:21;16964:2;16956:6;16949:18;16990:61;17047:2;17039:6;17035:15;17019:14;16990:61;:::i;:::-;17110:2;17090:23;;;17084:30;17067:15;;;;17060:55;;;;-1:-1:-1;16976:75:47;16150:994;-1:-1:-1;;;16150:994:47:o;17149:891::-;17233:6;17264:2;17307;17295:9;17286:7;17282:23;17278:32;17275:52;;;17323:1;17320;17313:12;17275:52;17363:9;17350:23;-1:-1:-1;;;;;17388:6:47;17385:30;17382:50;;;17428:1;17425;17418:12;17382:50;17451:22;;17504:4;17496:13;;17492:27;-1:-1:-1;17482:55:47;;17533:1;17530;17523:12;17482:55;17569:2;17556:16;17592:60;17608:43;17648:2;17608:43;:::i;17592:60::-;17686:15;;;17768:1;17764:10;;;;17756:19;;17752:28;;;17717:12;;;;17792:19;;;17789:39;;;17824:1;17821;17814:12;17789:39;17848:11;;;;17868:142;17884:6;17879:3;17876:15;17868:142;;;17950:17;;17938:30;;17901:12;;;;17988;;;;17868:142;;;18029:5;17149:891;-1:-1:-1;;;;;;;17149:891:47:o;18320:380::-;18399:1;18395:12;;;;18442;;;18463:61;;18517:4;18509:6;18505:17;18495:27;;18463:61;18570:2;18562:6;18559:14;18539:18;18536:38;18533:161;;18616:10;18611:3;18607:20;18604:1;18597:31;18651:4;18648:1;18641:15;18679:4;18676:1;18669:15;18533:161;;18320:380;;;:::o;18705:473::-;18907:2;18889:21;;;18946:2;18926:18;;;18919:30;18985:34;18980:2;18965:18;;18958:62;19056:34;19051:2;19036:18;;19029:62;-1:-1:-1;;;19122:3:47;19107:19;;19100:36;19168:3;19153:19;;18705:473::o;19183:127::-;19244:10;19239:3;19235:20;19232:1;19225:31;19275:4;19272:1;19265:15;19299:4;19296:1;19289:15;19315:125;19380:9;;;19401:10;;;19398:36;;;19414:18;;:::i;19744:127::-;19805:10;19800:3;19796:20;19793:1;19786:31;19836:4;19833:1;19826:15;19860:4;19857:1;19850:15;19876:200;19942:9;;;19915:4;19970:9;;19998:10;;20010:12;;;19994:29;20033:12;;;20025:21;;19991:56;19988:82;;;20050:18;;:::i;:::-;19988:82;19876:200;;;;:::o;20081:135::-;20120:3;20141:17;;;20138:43;;20161:18;;:::i;:::-;-1:-1:-1;20208:1:47;20197:13;;20081:135::o;20221:128::-;20288:9;;;20309:11;;;20306:37;;;20323:18;;:::i;20354:411::-;20556:2;20538:21;;;20595:2;20575:18;;;20568:30;20634:34;20629:2;20614:18;;20607:62;-1:-1:-1;;;20700:2:47;20685:18;;20678:45;20755:3;20740:19;;20354:411::o;23634:545::-;23736:2;23731:3;23728:11;23725:448;;;23772:1;23797:5;23793:2;23786:17;23842:4;23838:2;23828:19;23912:2;23900:10;23896:19;23893:1;23889:27;23883:4;23879:38;23948:4;23936:10;23933:20;23930:47;;;-1:-1:-1;23971:4:47;23930:47;24026:2;24021:3;24017:12;24014:1;24010:20;24004:4;24000:31;23990:41;;24081:82;24099:2;24092:5;24089:13;24081:82;;;24144:17;;;24125:1;24114:13;24081:82;;;24085:3;;;23725:448;23634:545;;;:::o;24355:1352::-;24481:3;24475:10;-1:-1:-1;;;;;24500:6:47;24497:30;24494:56;;;24530:18;;:::i;:::-;24559:97;24649:6;24609:38;24641:4;24635:11;24609:38;:::i;:::-;24603:4;24559:97;:::i;:::-;24711:4;;24775:2;24764:14;;24792:1;24787:663;;;;25494:1;25511:6;25508:89;;;-1:-1:-1;25563:19:47;;;25557:26;25508:89;-1:-1:-1;;24312:1:47;24308:11;;;24304:24;24300:29;24290:40;24336:1;24332:11;;;24287:57;25610:81;;24757:944;;24787:663;23581:1;23574:14;;;23618:4;23605:18;;-1:-1:-1;;24823:20:47;;;24941:236;24955:7;24952:1;24949:14;24941:236;;;25044:19;;;25038:26;25023:42;;25136:27;;;;25104:1;25092:14;;;;24971:19;;24941:236;;;24945:3;25205:6;25196:7;25193:19;25190:201;;;25266:19;;;25260:26;-1:-1:-1;;25349:1:47;25345:14;;;25361:3;25341:24;25337:37;25333:42;25318:58;25303:74;;25190:201;-1:-1:-1;;;;;25437:1:47;25421:14;;;25417:22;25404:36;;-1:-1:-1;24355:1352:47:o;29115:442::-;29344:6;29333:9;29326:25;29399:4;29391:6;29387:17;29382:2;29371:9;29367:18;29360:45;29441:6;29436:2;29425:9;29421:18;29414:34;29484:3;29479:2;29468:9;29464:18;29457:31;29307:4;29505:46;29546:3;29535:9;29531:19;29523:6;29505:46;:::i;:::-;29497:54;29115:442;-1:-1:-1;;;;;;29115:442:47:o",
    "linkReferences": {},
    "immutableReferences": {
      "30999": [
        {
          "start": 5012,
          "length": 32
        }
      ],
      "31002": [
        {
          "start": 5054,
          "length": 32
        }
      ],
      "35333": [
        {
          "start": 2297,
          "length": 32
        },
        {
          "start": 3284,
          "length": 32
        },
        {
          "start": 3623,
          "length": 32
        }
      ],
      "35335": [
        {
          "start": 2625,
          "length": 32
        },
        {
          "start": 3724,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "AMOUNT_FOR_SUMBITTER_PROOF()": "347cf665",
    "BALLOT_TYPEHASH()": "deaaa7cc",
    "COUNTING_MODE()": "dd4e2ba5",
    "METADATAS_COUNT()": "4d24a67f",
    "addressSubmitterVerified(address)": "cb853950",
    "addressTotalCastVoteCounts(address)": "a1ac6cb2",
    "addressTotalVotes(address)": "dea5f6a6",
    "addressTotalVotesVerified(address)": "930de979",
    "allProposalTotalVotes()": "50a5e524",
    "allProposalTotalVotesWithoutDeleted()": "d45a010b",
    "cancel()": "ea8a1af0",
    "castVote(uint256,uint8,uint256,uint256,bytes32[])": "419c533c",
    "castVoteWithoutProof(uint256,uint8,uint256)": "65f16263",
    "checkProof(address,uint256,bytes32[],bool)": "32763c22",
    "contestAddressTotalVotesCast(address)": "aec116b6",
    "contestDeadline()": "262e59e9",
    "contestStart()": "004114a8",
    "creator()": "02d05d3f",
    "deleteProposals(uint256[])": "f0a7db0a",
    "downvotingAllowed()": "60506ff6",
    "eip712Domain()": "84b0196e",
    "getAllProposalIds()": "efa90d36",
    "getNumSubmissions(address)": "5f953a03",
    "getProposal(uint256)": "c7f758a8",
    "hashProposal((address,bool,string,(address),(address[],uint256)))": "458da87d",
    "highestTiedRanking()": "ebc18b9b",
    "isProposalDeleted(uint256)": "3b6d199b",
    "isTied(uint256)": "2399c660",
    "lowestRanking()": "6ca1a2c7",
    "maxProposalCount()": "fb9bf8d4",
    "name()": "06fdde03",
    "numAllowedProposalSubmissions()": "832009af",
    "officialRewardsModule()": "785ddfe5",
    "prompt()": "7c65d711",
    "proposalAddressVotes(uint256,address)": "6e4eb810",
    "proposalAddressesHaveVoted(uint256)": "b323580d",
    "proposalVotes(uint256)": "544ffc9c",
    "proposalVotesStructs(uint256)": "070dc5d9",
    "propose((address,bool,string,(address),(address[],uint256)),bytes32[])": "c0ffaa78",
    "proposeWithoutProof((address,bool,string,(address),(address[],uint256)))": "476f4d8a",
    "rankingPosition(uint256)": "86187488",
    "setOfficialRewardsModule(address)": "f4f3d7ec",
    "setSortedAndTiedProposals()": "96f0e962",
    "setSortedAndTiedProposalsHasBeenRun()": "d8891619",
    "sortedProposalIds()": "8a9cd550",
    "sortedProposals(bool)": "427d56c2",
    "state()": "c19d93fb",
    "submissionMerkleRoot()": "bddc1641",
    "supportsInterface(bytes4)": "01ffc9a7",
    "tiedAdjustedRankingPosition(uint256)": "e5eb5a48",
    "validateProposalData((address,bool,string,(address),(address[],uint256)))": "fb8ddab4",
    "verifyProposer(address,bytes32[])": "20b3e845",
    "verifyVoter(address,uint256,bytes32[])": "531bd812",
    "version()": "54fd4d50",
    "voteStart()": "e031535b",
    "votingDelay()": "3932abb1",
    "votingMerkleRoot()": "dd96a19d",
    "votingPeriod()": "02a251a3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_prompt\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"_submissionMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_votingMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"_constructorIntParams\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInMerkle\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TooManyMetadatas\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ContestCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldContestStart\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newContestStart\",\"type\":\"uint256\"}],\"name\":\"ContestStartSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldCreator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newCreator\",\"type\":\"address\"}],\"name\":\"CreatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldDownvotingAllowed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDownvotingAllowed\",\"type\":\"uint256\"}],\"name\":\"DownvotingAllowedSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldMaxProposalCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaxProposalCount\",\"type\":\"uint256\"}],\"name\":\"MaxProposalCountSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldNumAllowedProposalSubmissions\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newNumAllowedProposalSubmissions\",\"type\":\"uint256\"}],\"name\":\"NumAllowedProposalSubmissionsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract RewardsModule\",\"name\":\"oldOfficialRewardsModule\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract RewardsModule\",\"name\":\"newOfficialRewardsModule\",\"type\":\"address\"}],\"name\":\"OfficialRewardsModuleSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"proposalIds\",\"type\":\"uint256[]\"}],\"name\":\"ProposalsDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"numVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingDelay\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingDelay\",\"type\":\"uint256\"}],\"name\":\"VotingDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingPeriod\",\"type\":\"uint256\"}],\"name\":\"VotingPeriodSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AMOUNT_FOR_SUMBITTER_PROOF\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COUNTING_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"METADATAS_COUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressSubmitterVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressTotalCastVoteCounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressTotalVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressTotalVotesVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allProposalTotalVotes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"proposalIdsReturn\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"internalType\":\"struct GovernorCountingSimple.VoteCounts[]\",\"name\":\"proposalVoteCountsArrayReturn\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allProposalTotalVotesWithoutDeleted\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"proposalIdsReturn\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"internalType\":\"struct GovernorCountingSimple.VoteCounts[]\",\"name\":\"proposalVoteCountsArrayReturn\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numVotes\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"castVote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"numVotes\",\"type\":\"uint256\"}],\"name\":\"castVoteWithoutProof\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressToCheck\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool\",\"name\":\"voting\",\"type\":\"bool\"}],\"name\":\"checkProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"contestAddressTotalVotesCast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalVotesCast\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contestDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contestStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"proposalIds\",\"type\":\"uint256[]\"}],\"name\":\"deleteProposals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"downvotingAllowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllProposalIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNumSubmissions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposal\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct IGovernor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct IGovernor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct IGovernor.ProposalCore\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct IGovernor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct IGovernor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct IGovernor.ProposalCore\",\"name\":\"proposal\",\"type\":\"tuple\"}],\"name\":\"hashProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"highestTiedRanking\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"isProposalDeleted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ranking\",\"type\":\"uint256\"}],\"name\":\"isTied\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lowestRanking\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxProposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numAllowedProposalSubmissions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"officialRewardsModule\",\"outputs\":[{\"internalType\":\"contract RewardsModule\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prompt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"proposalAddressVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalAddressesHaveVoted\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalVotesStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"internalType\":\"struct GovernorCountingSimple.VoteCounts\",\"name\":\"proposalVoteCounts\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct IGovernor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct IGovernor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct IGovernor.ProposalCore\",\"name\":\"proposal\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct IGovernor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct IGovernor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct IGovernor.ProposalCore\",\"name\":\"proposal\",\"type\":\"tuple\"}],\"name\":\"proposeWithoutProof\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ranking\",\"type\":\"uint256\"}],\"name\":\"rankingPosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract RewardsModule\",\"name\":\"officialRewardsModule_\",\"type\":\"address\"}],\"name\":\"setOfficialRewardsModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setSortedAndTiedProposals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setSortedAndTiedProposalsHasBeenRun\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sortedProposalIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"excludeDeletedProposals\",\"type\":\"bool\"}],\"name\":\"sortedProposals\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"sortedProposalIdsReturn\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum IGovernor.ContestState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"submissionMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tiedAdjustedRankingPosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct IGovernor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct IGovernor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct IGovernor.ProposalCore\",\"name\":\"proposal\",\"type\":\"tuple\"}],\"name\":\"validateProposalData\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"dataValidated\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"verifyProposer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"verifyVoter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voteStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"ContestCanceled()\":{\"details\":\"Emitted when a contest is canceled.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"ProposalCreated(uint256,address)\":{\"details\":\"Emitted when a proposal is created.\"},\"ProposalsDeleted(uint256[])\":{\"details\":\"Emitted when proposals are deleted.\"},\"VoteCast(address,uint256,uint8,uint256,string)\":{\"details\":\"Emitted when a vote is cast. Note: `support` values should be seen as buckets. There interpretation depends on the voting module used.\"}},\"kind\":\"dev\",\"methods\":{\"COUNTING_MODE()\":{\"details\":\"See {IGovernor-COUNTING_MODE}.\"},\"allProposalTotalVotes()\":{\"details\":\"Accessor to the internal vote counts for a given proposal.\"},\"allProposalTotalVotesWithoutDeleted()\":{\"details\":\"Accessor to the internal vote counts for a given proposal that excludes deleted proposals.\"},\"cancel()\":{\"details\":\"Emits a {IGovernor-ContestCanceled} event.\"},\"castVote(uint256,uint8,uint256,uint256,bytes32[])\":{\"details\":\"See {IGovernor-castVote}.\"},\"castVoteWithoutProof(uint256,uint8,uint256)\":{\"details\":\"See {IGovernor-castVoteWithoutProof}.\"},\"checkProof(address,uint256,bytes32[],bool)\":{\"params\":{\"addressToCheck\":\"address of claimee\",\"amount\":\"to check that the claimee has\",\"proof\":\"merkle proof to prove address and amount are in tree\"}},\"contestAddressTotalVotesCast(address)\":{\"details\":\"Accessor to how many votes an address has cast total for the contest so far.\"},\"contestDeadline()\":{\"details\":\"See {IGovernor-contestDeadline}.\"},\"deleteProposals(uint256[])\":{\"details\":\"Delete proposals. Emits a {IGovernor-ProposalsDeleted} event.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}.\"},\"getAllProposalIds()\":{\"details\":\"Return all proposals.\"},\"getNumSubmissions(address)\":{\"details\":\"Get the number of proposal submissions for a given address.\"},\"getProposal(uint256)\":{\"details\":\"Retrieve proposal data\\\"_.\"},\"hashProposal((address,bool,string,(address),(address[],uint256)))\":{\"details\":\"See {IGovernor-hashProposal}. The proposal id is produced by hashing the RLC encoded `targets` array, the `values` array, the `calldatas` array and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in advance, before the proposal is submitted. Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the same proposal (with same operation and same description) will have the same id if submitted on multiple governors accross multiple networks. This also means that in order to execute the same operation twice (on the same governor) the proposer will have to change the description in order to avoid proposal id conflicts.\"},\"highestTiedRanking()\":{\"details\":\"Getter for highest tied ranking.\"},\"isProposalDeleted(uint256)\":{\"details\":\"Returns if a proposal has been deleted or not (0 if not, 1 if it has been deleted).\"},\"isTied(uint256)\":{\"details\":\"Getter if a given ranking is tied.\"},\"lowestRanking()\":{\"details\":\"Getter for the lowest ranking.\"},\"name()\":{\"details\":\"See {IGovernor-name}.\"},\"officialRewardsModule()\":{\"details\":\"Get the official rewards module contract for this contest (effectively reverse record).\"},\"prompt()\":{\"details\":\"See {IGovernor-prompt}.\"},\"proposalAddressVotes(uint256,address)\":{\"details\":\"Accessor to how many votes an address has cast for a given proposal.\"},\"proposalAddressesHaveVoted(uint256)\":{\"details\":\"Accessor to which addresses have cast a vote for a given proposal.\"},\"proposalVotes(uint256)\":{\"details\":\"Accessor to the internal vote counts for a given proposal.\"},\"propose((address,bool,string,(address),(address[],uint256)),bytes32[])\":{\"details\":\"See {IGovernor-propose}.\"},\"proposeWithoutProof((address,bool,string,(address),(address[],uint256)))\":{\"details\":\"See {IGovernor-proposeWithoutProof}.\"},\"rankingPosition(uint256)\":{\"details\":\"Getter for tiedAdjustedRankingPosition of a ranking.\"},\"setOfficialRewardsModule(address)\":{\"details\":\"Get the official rewards module contract for this contest (effectively reverse record).\"},\"setSortedAndTiedProposals()\":{\"details\":\"Setter for _sortedProposalIds, tiedAdjustedRankingPosition, _isTied, _lowestRanking, and _highestTiedRanking. Will only be called once and only needs to be called once because once the contest is complete these values don't change. Determines if a ranking is tied and also where the last iteration of a ranking is in the _sortedProposalIds list taking ties into account.\"},\"sortedProposalIds()\":{\"details\":\"Getter for _sortedProposalIds.\"},\"sortedProposals(bool)\":{\"details\":\"Accessor to sorted list of proposalIds in ascending order.\"},\"state()\":{\"details\":\"See {IGovernor-state}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"validateProposalData((address,bool,string,(address),(address[],uint256)))\":{\"details\":\"See {IGovernor-validateProposalData}.\"},\"verifyProposer(address,bytes32[])\":{\"details\":\"See {IGovernor-verifyProposer}.\"},\"verifyVoter(address,uint256,bytes32[])\":{\"details\":\"See {IGovernor-verifyVoter}.\"},\"version()\":{\"details\":\"See {IGovernor-version}.\"},\"voteStart()\":{\"details\":\"See {IGovernor-voteStart}.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"NotInMerkle()\":[{\"notice\":\"Thrown if address/amount are not part of Merkle tree\"}],\"TooManyMetadatas()\":[{\"notice\":\"Thrown if there is metadata included in a proposal that isn't covered in data validation\"}]},\"kind\":\"user\",\"methods\":{\"checkProof(address,uint256,bytes32[],bool)\":{\"notice\":\"Allows checking of proofs for an address\"},\"submissionMerkleRoot()\":{\"notice\":\"ERC20-claimee inclusion root\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Contest.sol\":\"Contest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x6df04f39889de6f277a0e3f2c307f3f0a2dba677d1ed877d50fb39c1184992b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03af6d201c35597a22b7bd24e84b2fffd5821de653d139484d6bf8ea3c86d2ae\",\"dweb:/ipfs/QmV4RfQVsJd86aCRevLmMdbxGrU5QgbffTif1zRTGUR68D\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0\",\"dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577\",\"dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71\",\"dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xf415bea43be5587b449753cfddab434182034ded22e50bc9dce4ac4a613045ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9baf7a59358eef93ae8635d00b89285adc2295870f12f720e5b54800d54568b1\",\"dweb:/ipfs/QmTSKWkpvFdHkT9NrLPmS1SVeSgvV6hbS5xb91giLoEr32\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x20ecf3c67cab5ec0a1d0cc7d980fa236ffdfd8579d8d8b6b89d29329bc6e78ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b52e4581ee6605732661d367845d2c551e0efcf81852f29248aef6d4be0a300b\",\"dweb:/ipfs/QmaLPj2TrVCTPH6D1BEjBVCb9N1dLJ6pTcoJwCmM3HWkfC\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf\",\"dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng\"]},\"lib/openzeppelin-contracts/contracts/utils/Timers.sol\":{\"keccak256\":\"0x3ee0d9289f88556bc231aa720fcf43a31bda1ee164ada26c2048165df71bdaac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8eb8853c016aa7cc6719eccc73df5b3cfc24e62e868e161968cc87e358bcac2\",\"dweb:/ipfs/QmPUDxGwtCJ13ZjDa5bzeCn6iXj4iXvgZg73D8SoKz8nhY\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xbb3a7044647cb4088be40b49b87ff990fac44f2d50569110a2b2ce7942365020\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5deecb9394b327096dee59f6d2600e5dc41795d20d6312b9e17184d04941855e\",\"dweb:/ipfs/QmNRLLFHxfdzPBcUF2NpyGqBoYzGGoR34g7HWFzEcPokEX\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0xa8f005abb8835d40af525bcf3cdc31d7e4a55730ce9b584d3fe4e5db442fb0ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a1184f05c5a953155e11cb977e5c08a3b4442919c7e928d3e3adbf06ae6fff\",\"dweb:/ipfs/QmdRf7Cg7e9va2K29Kb7KLng26GmUmpti7mAEhGbAQXS7r\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcc76dbe53154a5bbd12fdd1613a73f73f3dc7c63d813be36f7ee606f52d6a7b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://345232794f2cfafccfb4371e44910af9fd86f972ecace1bb6843532536590929\",\"dweb:/ipfs/QmSnapDBk6P2JG6LJHwituQq7wMM8DawKj32APiPj5Bzpn\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0xea30c402170bc240354b74e6c6f6a8e5bdb1935d90d168cc58c0654461c6a72b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95cbddf89006e6dbbc200eb091eb90025c97a9980310f2325c9bda2c4fdc97e3\",\"dweb:/ipfs/QmT67Dt3xrKEQSDC4XyDcrKwZUYsJzddrRFjEopRZNP9yR\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4\",\"dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"src/Contest.sol\":{\"keccak256\":\"0xa471cab034594f2c2abee2478c60c024de57070152038716d4deaf704f79143c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19bde157cbcdaa4bc4a6e28390bc2f06a558abcf594d70038e0e4f7cab6ba363\",\"dweb:/ipfs/QmW8Hi3fPYwekpdzPuiYATh5NrHz9RkDSr1LjvTPXnG46V\"]},\"src/governance/Governor.sol\":{\"keccak256\":\"0xe24e1e0e879e775886157a54855eaaf51fba1f834f8fe265bf454127c5405f07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09e06e6133ae63d40e7ede2c2285f2c5ef4643b404ae36ba1409b8816b105220\",\"dweb:/ipfs/QmbS749DAt9qjWADC5JYoqRANd8r21HKpjfnFWpEKyeGMS\"]},\"src/governance/GovernorMerkleVotes.sol\":{\"keccak256\":\"0xdf37902c07f4229349c80ae7335d7d7112265e62428a38e2786584382bc8f0ec\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://73866fb05fb57229990cbb10d7788098ad66e0a821bb8622d91eb0e9cb836d5d\",\"dweb:/ipfs/Qmeg5mnXTsXYyrkGhMYfX1XjBAT6Y2wwwrcQZxKVkKHRgU\"]},\"src/governance/IGovernor.sol\":{\"keccak256\":\"0x9f376eceb5dc9f607aef2f32a689e4d3da0138c9ff3df736de980a58857dc767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d6e4fe4cebd0e609645ff903f971af4b7397187c8443cee7d38ed256688df0d\",\"dweb:/ipfs/QmYWVLSsbmJngrvAvEnJAS6S3nJUGDDdyHeF4tQGhwcVSK\"]},\"src/governance/extensions/GovernorCountingSimple.sol\":{\"keccak256\":\"0x139de3a349d247254cfe21d9b6cb1ce4924f40305da91b3b8dae8110b3757063\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af5296a3eb321e4df44fda317e0547a1ca4f1adff2f07e875c128509b0a5b69f\",\"dweb:/ipfs/QmRGozeRXLtPahHHYyanKgMm4zd2BZpwGXikJJRsrGiua8\"]},\"src/governance/extensions/GovernorModuleRegistry.sol\":{\"keccak256\":\"0x62c9d2a2dcaeccf1b6b801595f34abf893416964997e6ba699c9828ada1abefc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18672ac920d4749fec025a7c8610c8cb866addb0ba20e9cfce5bedd91e062776\",\"dweb:/ipfs/QmNPWkqouY45jCeeFYi5metLX9d8BpSuGXLG55A5BZjH4D\"]},\"src/governance/extensions/GovernorSettings.sol\":{\"keccak256\":\"0x03baf7fa5c11f3d9b50c9df1d193a73bf1e6799f792ce510ccdb4dc86a82d9a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d78ca667bc09e43d8abf0f9ac4e17deaea1a0196aa1bc78c9ac66d734e81cf95\",\"dweb:/ipfs/QmRwfFjbCA6HAn1SRDJ4CKSvmzBqyjce1sDfuwBThj7PWi\"]},\"src/governance/extensions/GovernorSorting.sol\":{\"keccak256\":\"0x5bc2ea4783ad1ba0fc815fda1e45388552cab623f6724f96c10c0349af949692\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95f8c111be345cff755b88d0b6be11f8df0b3279a978112df4a2563f8ef5c52b\",\"dweb:/ipfs/QmVbTgarSwKYm6meSxXpApnQ9gEg15TYNXAamJegBukyKz\"]},\"src/modules/RewardsModule.sol\":{\"keccak256\":\"0x53a60f3d714c1b7f09b040e6132a123a2750c7096e6a063418ac4b1fc3c44cfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ec928057c824750cd3c4af5406d2c0790ab814fbaed315a6ac34e45c6239360\",\"dweb:/ipfs/QmS2gnWfoByPa1S7hLfy5Hq4nfUTVJiJaTXMV5HSRXAXhZ\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_prompt",
              "type": "string"
            },
            {
              "internalType": "bytes32",
              "name": "_submissionMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "_votingMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256[]",
              "name": "_constructorIntParams",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidShortString"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotInMerkle"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "str",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "StringTooLong"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TooManyMetadatas"
        },
        {
          "inputs": [],
          "type": "event",
          "name": "ContestCanceled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldContestStart",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newContestStart",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContestStartSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldCreator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newCreator",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CreatorSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldDownvotingAllowed",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newDownvotingAllowed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DownvotingAllowedSet",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "EIP712DomainChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldMaxProposalCount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newMaxProposalCount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MaxProposalCountSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldNumAllowedProposalSubmissions",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newNumAllowedProposalSubmissions",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NumAllowedProposalSubmissionsSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract RewardsModule",
              "name": "oldOfficialRewardsModule",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract RewardsModule",
              "name": "newOfficialRewardsModule",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OfficialRewardsModuleSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "proposer",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProposalCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalIds",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProposalsDeleted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "voter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "numVotes",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "reason",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VoteCast",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldVotingDelay",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newVotingDelay",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VotingDelaySet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldVotingPeriod",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newVotingPeriod",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VotingPeriodSet",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "AMOUNT_FOR_SUMBITTER_PROOF",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BALLOT_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "COUNTING_MODE",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "METADATAS_COUNT",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressSubmitterVerified",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressTotalCastVoteCounts",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressTotalVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressTotalVotesVerified",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allProposalTotalVotes",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalIdsReturn",
              "type": "uint256[]"
            },
            {
              "internalType": "struct GovernorCountingSimple.VoteCounts[]",
              "name": "proposalVoteCountsArrayReturn",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "forVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "againstVotes",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allProposalTotalVotesWithoutDeleted",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalIdsReturn",
              "type": "uint256[]"
            },
            {
              "internalType": "struct GovernorCountingSimple.VoteCounts[]",
              "name": "proposalVoteCountsArrayReturn",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "forVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "againstVotes",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancel"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "totalVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "numVotes",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "castVote",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "numVotes",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "castVoteWithoutProof",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "addressToCheck",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "bool",
              "name": "voting",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkProof",
          "outputs": [
            {
              "internalType": "bool",
              "name": "verified",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "userAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "contestAddressTotalVotesCast",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "totalVotesCast",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contestDeadline",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contestStart",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "creator",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalIds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteProposals"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "downvotingAllowed",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eip712Domain",
          "outputs": [
            {
              "internalType": "bytes1",
              "name": "fields",
              "type": "bytes1"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "version",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "chainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "verifyingContract",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "uint256[]",
              "name": "extensions",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllProposalIds",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getNumSubmissions",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProposal",
          "outputs": [
            {
              "internalType": "struct IGovernor.ProposalCore",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "struct IGovernor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct IGovernor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IGovernor.ProposalCore",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "struct IGovernor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct IGovernor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "hashProposal",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "highestTiedRanking",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isProposalDeleted",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "ranking",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTied",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lowestRanking",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxProposalCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "numAllowedProposalSubmissions",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "officialRewardsModule",
          "outputs": [
            {
              "internalType": "contract RewardsModule",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "prompt",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "userAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalAddressVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalAddressesHaveVoted",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalVotesStructs",
          "outputs": [
            {
              "internalType": "struct GovernorCountingSimple.VoteCounts",
              "name": "proposalVoteCounts",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "forVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "againstVotes",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IGovernor.ProposalCore",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "struct IGovernor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct IGovernor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "propose",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IGovernor.ProposalCore",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "struct IGovernor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct IGovernor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "proposeWithoutProof",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "ranking",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "rankingPosition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract RewardsModule",
              "name": "officialRewardsModule_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOfficialRewardsModule"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSortedAndTiedProposals"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "setSortedAndTiedProposalsHasBeenRun",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sortedProposalIds",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "excludeDeletedProposals",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "sortedProposals",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "sortedProposalIdsReturn",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "state",
          "outputs": [
            {
              "internalType": "enum IGovernor.ContestState",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "submissionMerkleRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tiedAdjustedRankingPosition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IGovernor.ProposalCore",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "struct IGovernor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct IGovernor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "validateProposalData",
          "outputs": [
            {
              "internalType": "bool",
              "name": "dataValidated",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyProposer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "verified",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalVotes",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyVoter",
          "outputs": [
            {
              "internalType": "bool",
              "name": "verified",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "voteStart",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "votingDelay",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "votingMerkleRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "votingPeriod",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "COUNTING_MODE()": {
            "details": "See {IGovernor-COUNTING_MODE}."
          },
          "allProposalTotalVotes()": {
            "details": "Accessor to the internal vote counts for a given proposal."
          },
          "allProposalTotalVotesWithoutDeleted()": {
            "details": "Accessor to the internal vote counts for a given proposal that excludes deleted proposals."
          },
          "cancel()": {
            "details": "Emits a {IGovernor-ContestCanceled} event."
          },
          "castVote(uint256,uint8,uint256,uint256,bytes32[])": {
            "details": "See {IGovernor-castVote}."
          },
          "castVoteWithoutProof(uint256,uint8,uint256)": {
            "details": "See {IGovernor-castVoteWithoutProof}."
          },
          "checkProof(address,uint256,bytes32[],bool)": {
            "params": {
              "addressToCheck": "address of claimee",
              "amount": "to check that the claimee has",
              "proof": "merkle proof to prove address and amount are in tree"
            }
          },
          "contestAddressTotalVotesCast(address)": {
            "details": "Accessor to how many votes an address has cast total for the contest so far."
          },
          "contestDeadline()": {
            "details": "See {IGovernor-contestDeadline}."
          },
          "deleteProposals(uint256[])": {
            "details": "Delete proposals. Emits a {IGovernor-ProposalsDeleted} event."
          },
          "eip712Domain()": {
            "details": "See {EIP-5267}."
          },
          "getAllProposalIds()": {
            "details": "Return all proposals."
          },
          "getNumSubmissions(address)": {
            "details": "Get the number of proposal submissions for a given address."
          },
          "getProposal(uint256)": {
            "details": "Retrieve proposal data\"_."
          },
          "hashProposal((address,bool,string,(address),(address[],uint256)))": {
            "details": "See {IGovernor-hashProposal}. The proposal id is produced by hashing the RLC encoded `targets` array, the `values` array, the `calldatas` array and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in advance, before the proposal is submitted. Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the same proposal (with same operation and same description) will have the same id if submitted on multiple governors accross multiple networks. This also means that in order to execute the same operation twice (on the same governor) the proposer will have to change the description in order to avoid proposal id conflicts."
          },
          "highestTiedRanking()": {
            "details": "Getter for highest tied ranking."
          },
          "isProposalDeleted(uint256)": {
            "details": "Returns if a proposal has been deleted or not (0 if not, 1 if it has been deleted)."
          },
          "isTied(uint256)": {
            "details": "Getter if a given ranking is tied."
          },
          "lowestRanking()": {
            "details": "Getter for the lowest ranking."
          },
          "name()": {
            "details": "See {IGovernor-name}."
          },
          "officialRewardsModule()": {
            "details": "Get the official rewards module contract for this contest (effectively reverse record)."
          },
          "prompt()": {
            "details": "See {IGovernor-prompt}."
          },
          "proposalAddressVotes(uint256,address)": {
            "details": "Accessor to how many votes an address has cast for a given proposal."
          },
          "proposalAddressesHaveVoted(uint256)": {
            "details": "Accessor to which addresses have cast a vote for a given proposal."
          },
          "proposalVotes(uint256)": {
            "details": "Accessor to the internal vote counts for a given proposal."
          },
          "propose((address,bool,string,(address),(address[],uint256)),bytes32[])": {
            "details": "See {IGovernor-propose}."
          },
          "proposeWithoutProof((address,bool,string,(address),(address[],uint256)))": {
            "details": "See {IGovernor-proposeWithoutProof}."
          },
          "rankingPosition(uint256)": {
            "details": "Getter for tiedAdjustedRankingPosition of a ranking."
          },
          "setOfficialRewardsModule(address)": {
            "details": "Get the official rewards module contract for this contest (effectively reverse record)."
          },
          "setSortedAndTiedProposals()": {
            "details": "Setter for _sortedProposalIds, tiedAdjustedRankingPosition, _isTied, _lowestRanking, and _highestTiedRanking. Will only be called once and only needs to be called once because once the contest is complete these values don't change. Determines if a ranking is tied and also where the last iteration of a ranking is in the _sortedProposalIds list taking ties into account."
          },
          "sortedProposalIds()": {
            "details": "Getter for _sortedProposalIds."
          },
          "sortedProposals(bool)": {
            "details": "Accessor to sorted list of proposalIds in ascending order."
          },
          "state()": {
            "details": "See {IGovernor-state}."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "validateProposalData((address,bool,string,(address),(address[],uint256)))": {
            "details": "See {IGovernor-validateProposalData}."
          },
          "verifyProposer(address,bytes32[])": {
            "details": "See {IGovernor-verifyProposer}."
          },
          "verifyVoter(address,uint256,bytes32[])": {
            "details": "See {IGovernor-verifyVoter}."
          },
          "version()": {
            "details": "See {IGovernor-version}."
          },
          "voteStart()": {
            "details": "See {IGovernor-voteStart}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "checkProof(address,uint256,bytes32[],bool)": {
            "notice": "Allows checking of proofs for an address"
          },
          "submissionMerkleRoot()": {
            "notice": "ERC20-claimee inclusion root"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@forge-std/=lib/forge-std/src/",
        ":@openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Contest.sol": "Contest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol": {
        "keccak256": "0x6df04f39889de6f277a0e3f2c307f3f0a2dba677d1ed877d50fb39c1184992b8",
        "urls": [
          "bzz-raw://03af6d201c35597a22b7bd24e84b2fffd5821de653d139484d6bf8ea3c86d2ae",
          "dweb:/ipfs/QmV4RfQVsJd86aCRevLmMdbxGrU5QgbffTif1zRTGUR68D"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0",
        "urls": [
          "bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1",
          "dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb",
        "urls": [
          "bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0",
          "dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a",
        "urls": [
          "bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577",
          "dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc",
        "urls": [
          "bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71",
          "dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol": {
        "keccak256": "0xf415bea43be5587b449753cfddab434182034ded22e50bc9dce4ac4a613045ee",
        "urls": [
          "bzz-raw://9baf7a59358eef93ae8635d00b89285adc2295870f12f720e5b54800d54568b1",
          "dweb:/ipfs/QmTSKWkpvFdHkT9NrLPmS1SVeSgvV6hbS5xb91giLoEr32"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0x20ecf3c67cab5ec0a1d0cc7d980fa236ffdfd8579d8d8b6b89d29329bc6e78ae",
        "urls": [
          "bzz-raw://b52e4581ee6605732661d367845d2c551e0efcf81852f29248aef6d4be0a300b",
          "dweb:/ipfs/QmaLPj2TrVCTPH6D1BEjBVCb9N1dLJ6pTcoJwCmM3HWkfC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f",
        "urls": [
          "bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf",
          "dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Timers.sol": {
        "keccak256": "0x3ee0d9289f88556bc231aa720fcf43a31bda1ee164ada26c2048165df71bdaac",
        "urls": [
          "bzz-raw://a8eb8853c016aa7cc6719eccc73df5b3cfc24e62e868e161968cc87e358bcac2",
          "dweb:/ipfs/QmPUDxGwtCJ13ZjDa5bzeCn6iXj4iXvgZg73D8SoKz8nhY"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xbb3a7044647cb4088be40b49b87ff990fac44f2d50569110a2b2ce7942365020",
        "urls": [
          "bzz-raw://5deecb9394b327096dee59f6d2600e5dc41795d20d6312b9e17184d04941855e",
          "dweb:/ipfs/QmNRLLFHxfdzPBcUF2NpyGqBoYzGGoR34g7HWFzEcPokEX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol": {
        "keccak256": "0xa8f005abb8835d40af525bcf3cdc31d7e4a55730ce9b584d3fe4e5db442fb0ed",
        "urls": [
          "bzz-raw://a0a1184f05c5a953155e11cb977e5c08a3b4442919c7e928d3e3adbf06ae6fff",
          "dweb:/ipfs/QmdRf7Cg7e9va2K29Kb7KLng26GmUmpti7mAEhGbAQXS7r"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol": {
        "keccak256": "0xcc76dbe53154a5bbd12fdd1613a73f73f3dc7c63d813be36f7ee606f52d6a7b3",
        "urls": [
          "bzz-raw://345232794f2cfafccfb4371e44910af9fd86f972ecace1bb6843532536590929",
          "dweb:/ipfs/QmSnapDBk6P2JG6LJHwituQq7wMM8DawKj32APiPj5Bzpn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol": {
        "keccak256": "0xea30c402170bc240354b74e6c6f6a8e5bdb1935d90d168cc58c0654461c6a72b",
        "urls": [
          "bzz-raw://95cbddf89006e6dbbc200eb091eb90025c97a9980310f2325c9bda2c4fdc97e3",
          "dweb:/ipfs/QmT67Dt3xrKEQSDC4XyDcrKwZUYsJzddrRFjEopRZNP9yR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858",
        "urls": [
          "bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4",
          "dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "src/Contest.sol": {
        "keccak256": "0xa471cab034594f2c2abee2478c60c024de57070152038716d4deaf704f79143c",
        "urls": [
          "bzz-raw://19bde157cbcdaa4bc4a6e28390bc2f06a558abcf594d70038e0e4f7cab6ba363",
          "dweb:/ipfs/QmW8Hi3fPYwekpdzPuiYATh5NrHz9RkDSr1LjvTPXnG46V"
        ],
        "license": "MIT"
      },
      "src/governance/Governor.sol": {
        "keccak256": "0xe24e1e0e879e775886157a54855eaaf51fba1f834f8fe265bf454127c5405f07",
        "urls": [
          "bzz-raw://09e06e6133ae63d40e7ede2c2285f2c5ef4643b404ae36ba1409b8816b105220",
          "dweb:/ipfs/QmbS749DAt9qjWADC5JYoqRANd8r21HKpjfnFWpEKyeGMS"
        ],
        "license": "MIT"
      },
      "src/governance/GovernorMerkleVotes.sol": {
        "keccak256": "0xdf37902c07f4229349c80ae7335d7d7112265e62428a38e2786584382bc8f0ec",
        "urls": [
          "bzz-raw://73866fb05fb57229990cbb10d7788098ad66e0a821bb8622d91eb0e9cb836d5d",
          "dweb:/ipfs/Qmeg5mnXTsXYyrkGhMYfX1XjBAT6Y2wwwrcQZxKVkKHRgU"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/governance/IGovernor.sol": {
        "keccak256": "0x9f376eceb5dc9f607aef2f32a689e4d3da0138c9ff3df736de980a58857dc767",
        "urls": [
          "bzz-raw://4d6e4fe4cebd0e609645ff903f971af4b7397187c8443cee7d38ed256688df0d",
          "dweb:/ipfs/QmYWVLSsbmJngrvAvEnJAS6S3nJUGDDdyHeF4tQGhwcVSK"
        ],
        "license": "MIT"
      },
      "src/governance/extensions/GovernorCountingSimple.sol": {
        "keccak256": "0x139de3a349d247254cfe21d9b6cb1ce4924f40305da91b3b8dae8110b3757063",
        "urls": [
          "bzz-raw://af5296a3eb321e4df44fda317e0547a1ca4f1adff2f07e875c128509b0a5b69f",
          "dweb:/ipfs/QmRGozeRXLtPahHHYyanKgMm4zd2BZpwGXikJJRsrGiua8"
        ],
        "license": "MIT"
      },
      "src/governance/extensions/GovernorModuleRegistry.sol": {
        "keccak256": "0x62c9d2a2dcaeccf1b6b801595f34abf893416964997e6ba699c9828ada1abefc",
        "urls": [
          "bzz-raw://18672ac920d4749fec025a7c8610c8cb866addb0ba20e9cfce5bedd91e062776",
          "dweb:/ipfs/QmNPWkqouY45jCeeFYi5metLX9d8BpSuGXLG55A5BZjH4D"
        ],
        "license": "MIT"
      },
      "src/governance/extensions/GovernorSettings.sol": {
        "keccak256": "0x03baf7fa5c11f3d9b50c9df1d193a73bf1e6799f792ce510ccdb4dc86a82d9a4",
        "urls": [
          "bzz-raw://d78ca667bc09e43d8abf0f9ac4e17deaea1a0196aa1bc78c9ac66d734e81cf95",
          "dweb:/ipfs/QmRwfFjbCA6HAn1SRDJ4CKSvmzBqyjce1sDfuwBThj7PWi"
        ],
        "license": "MIT"
      },
      "src/governance/extensions/GovernorSorting.sol": {
        "keccak256": "0x5bc2ea4783ad1ba0fc815fda1e45388552cab623f6724f96c10c0349af949692",
        "urls": [
          "bzz-raw://95f8c111be345cff755b88d0b6be11f8df0b3279a978112df4a2563f8ef5c52b",
          "dweb:/ipfs/QmVbTgarSwKYm6meSxXpApnQ9gEg15TYNXAamJegBukyKz"
        ],
        "license": "MIT"
      },
      "src/modules/RewardsModule.sol": {
        "keccak256": "0x53a60f3d714c1b7f09b040e6132a123a2750c7096e6a063418ac4b1fc3c44cfc",
        "urls": [
          "bzz-raw://8ec928057c824750cd3c4af5406d2c0790ab814fbaed315a6ac34e45c6239360",
          "dweb:/ipfs/QmS2gnWfoByPa1S7hLfy5Hq4nfUTVJiJaTXMV5HSRXAXhZ"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Contest.sol",
    "id": 34384,
    "exportedSymbols": {
      "Address": [
        29818
      ],
      "Contest": [
        34383
      ],
      "Context": [
        29840
      ],
      "ECDSA": [
        30975
      ],
      "EIP712": [
        31179
      ],
      "ERC165": [
        31712
      ],
      "Governor": [
        35325
      ],
      "GovernorCountingSimple": [
        35900
      ],
      "GovernorMerkleVotes": [
        35407
      ],
      "GovernorModuleRegistry": [
        35960
      ],
      "GovernorSettings": [
        36259
      ],
      "GovernorSorting": [
        36899
      ],
      "IERC165": [
        31724
      ],
      "IERC20": [
        29076
      ],
      "IERC20Permit": [
        29112
      ],
      "IERC5267": [
        28998
      ],
      "IGovernor": [
        35636
      ],
      "Math": [
        32590
      ],
      "MerkleProof": [
        31685
      ],
      "RewardsModule": [
        37712
      ],
      "SafeCast": [
        34131
      ],
      "SafeERC20": [
        29488
      ],
      "ShortString": [
        29845
      ],
      "ShortStrings": [
        30056
      ],
      "SignedMath": [
        34236
      ],
      "StorageSlot": [
        30166
      ],
      "Strings": [
        30395
      ],
      "Timers": [
        30609
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2151:36",
    "nodes": [
      {
        "id": 34238,
        "nodeType": "PragmaDirective",
        "src": "32:23:36",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 34239,
        "nodeType": "ImportDirective",
        "src": "57:35:36",
        "nodes": [],
        "absolutePath": "src/governance/Governor.sol",
        "file": "./governance/Governor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34384,
        "sourceUnit": 35326,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34240,
        "nodeType": "ImportDirective",
        "src": "93:54:36",
        "nodes": [],
        "absolutePath": "src/governance/extensions/GovernorSettings.sol",
        "file": "./governance/extensions/GovernorSettings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34384,
        "sourceUnit": 36260,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34241,
        "nodeType": "ImportDirective",
        "src": "148:60:36",
        "nodes": [],
        "absolutePath": "src/governance/extensions/GovernorCountingSimple.sol",
        "file": "./governance/extensions/GovernorCountingSimple.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34384,
        "sourceUnit": 35901,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34242,
        "nodeType": "ImportDirective",
        "src": "209:60:36",
        "nodes": [],
        "absolutePath": "src/governance/extensions/GovernorModuleRegistry.sol",
        "file": "./governance/extensions/GovernorModuleRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34384,
        "sourceUnit": 35961,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34383,
        "nodeType": "ContractDefinition",
        "src": "271:1911:36",
        "nodes": [
          {
            "id": 34291,
            "nodeType": "FunctionDefinition",
            "src": "365:716:36",
            "nodes": [],
            "body": {
              "id": 34290,
              "nodeType": "Block",
              "src": "1079:2:36",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 34264,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34252,
                    "src": "582:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 34265,
                    "name": "_prompt",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34254,
                    "src": "589:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 34266,
                    "name": "_submissionMerkleRoot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34256,
                    "src": "598:21:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "id": 34267,
                    "name": "_votingMerkleRoot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34258,
                    "src": "621:17:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 34268,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 34263,
                  "name": "Governor",
                  "nameLocations": [
                    "573:8:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35325,
                  "src": "573:8:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "573:66:36"
              },
              {
                "arguments": [
                  {
                    "baseExpression": {
                      "id": 34270,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34261,
                      "src": "678:21:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 34272,
                    "indexExpression": {
                      "hexValue": "30",
                      "id": 34271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "700:1:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "678:24:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 34273,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34261,
                      "src": "740:21:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 34275,
                    "indexExpression": {
                      "hexValue": "31",
                      "id": 34274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "762:1:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "740:24:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 34276,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34261,
                      "src": "802:21:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 34278,
                    "indexExpression": {
                      "hexValue": "32",
                      "id": 34277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "824:1:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "802:24:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 34279,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34261,
                      "src": "865:21:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 34281,
                    "indexExpression": {
                      "hexValue": "33",
                      "id": 34280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "887:1:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "865:24:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 34282,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34261,
                      "src": "945:21:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 34284,
                    "indexExpression": {
                      "hexValue": "34",
                      "id": 34283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "967:1:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "945:24:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 34285,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34261,
                      "src": "1011:21:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 34287,
                    "indexExpression": {
                      "hexValue": "35",
                      "id": 34286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1033:1:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1011:24:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 34288,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 34269,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "648:16:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36259,
                  "src": "648:16:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "648:426:36"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 34262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34252,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "400:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 34291,
                  "src": "386:19:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 34251,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "386:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34254,
                  "mutability": "mutable",
                  "name": "_prompt",
                  "nameLocation": "429:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 34291,
                  "src": "415:21:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 34253,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "415:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34256,
                  "mutability": "mutable",
                  "name": "_submissionMerkleRoot",
                  "nameLocation": "454:21:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 34291,
                  "src": "446:29:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 34255,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "446:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34258,
                  "mutability": "mutable",
                  "name": "_votingMerkleRoot",
                  "nameLocation": "493:17:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 34291,
                  "src": "485:25:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 34257,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "485:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34261,
                  "mutability": "mutable",
                  "name": "_constructorIntParams",
                  "nameLocation": "537:21:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 34291,
                  "src": "520:38:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 34259,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "520:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 34260,
                    "nodeType": "ArrayTypeName",
                    "src": "520:9:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "376:188:36"
            },
            "returnParameters": {
              "id": 34289,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1079:0:36"
            },
            "scope": 34383,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34304,
            "nodeType": "FunctionDefinition",
            "src": "1155:136:36",
            "nodes": [],
            "body": {
              "id": 34303,
              "nodeType": "Block",
              "src": "1247:44:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 34299,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1264:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Contest_$34383_$",
                          "typeString": "type(contract super Contest)"
                        }
                      },
                      "id": 34300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1270:12:36",
                      "memberName": "contestStart",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36079,
                      "src": "1264:18:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 34301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1264:20:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 34298,
                  "id": 34302,
                  "nodeType": "Return",
                  "src": "1257:27:36"
                }
              ]
            },
            "baseFunctions": [
              35522,
              36079
            ],
            "functionSelector": "004114a8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contestStart",
            "nameLocation": "1164:12:36",
            "overrides": {
              "id": 34295,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 34293,
                  "name": "IGovernor",
                  "nameLocations": [
                    "1200:9:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35636,
                  "src": "1200:9:36"
                },
                {
                  "id": 34294,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "1211:16:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36259,
                  "src": "1211:16:36"
                }
              ],
              "src": "1191:37:36"
            },
            "parameters": {
              "id": 34292,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1176:2:36"
            },
            "returnParameters": {
              "id": 34298,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34297,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34304,
                  "src": "1238:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34296,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1238:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1237:9:36"
            },
            "scope": 34383,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34317,
            "nodeType": "FunctionDefinition",
            "src": "1297:134:36",
            "nodes": [],
            "body": {
              "id": 34316,
              "nodeType": "Block",
              "src": "1388:43:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 34312,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1405:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Contest_$34383_$",
                          "typeString": "type(contract super Contest)"
                        }
                      },
                      "id": 34313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1411:11:36",
                      "memberName": "votingDelay",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36089,
                      "src": "1405:17:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 34314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1405:19:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 34311,
                  "id": 34315,
                  "nodeType": "Return",
                  "src": "1398:26:36"
                }
              ]
            },
            "baseFunctions": [
              35540,
              36089
            ],
            "functionSelector": "3932abb1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "votingDelay",
            "nameLocation": "1306:11:36",
            "overrides": {
              "id": 34308,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 34306,
                  "name": "IGovernor",
                  "nameLocations": [
                    "1341:9:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35636,
                  "src": "1341:9:36"
                },
                {
                  "id": 34307,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "1352:16:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36259,
                  "src": "1352:16:36"
                }
              ],
              "src": "1332:37:36"
            },
            "parameters": {
              "id": 34305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1317:2:36"
            },
            "returnParameters": {
              "id": 34311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34310,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34317,
                  "src": "1379:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34309,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1379:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1378:9:36"
            },
            "scope": 34383,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34330,
            "nodeType": "FunctionDefinition",
            "src": "1437:136:36",
            "nodes": [],
            "body": {
              "id": 34329,
              "nodeType": "Block",
              "src": "1529:44:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 34325,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1546:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Contest_$34383_$",
                          "typeString": "type(contract super Contest)"
                        }
                      },
                      "id": 34326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1552:12:36",
                      "memberName": "votingPeriod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36099,
                      "src": "1546:18:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 34327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1546:20:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 34324,
                  "id": 34328,
                  "nodeType": "Return",
                  "src": "1539:27:36"
                }
              ]
            },
            "baseFunctions": [
              35546,
              36099
            ],
            "functionSelector": "02a251a3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "votingPeriod",
            "nameLocation": "1446:12:36",
            "overrides": {
              "id": 34321,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 34319,
                  "name": "IGovernor",
                  "nameLocations": [
                    "1482:9:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35636,
                  "src": "1482:9:36"
                },
                {
                  "id": 34320,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "1493:16:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36259,
                  "src": "1493:16:36"
                }
              ],
              "src": "1473:37:36"
            },
            "parameters": {
              "id": 34318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1458:2:36"
            },
            "returnParameters": {
              "id": 34324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34323,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34330,
                  "src": "1520:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34322,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1520:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1519:9:36"
            },
            "scope": 34383,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34343,
            "nodeType": "FunctionDefinition",
            "src": "1579:169:36",
            "nodes": [],
            "body": {
              "id": 34342,
              "nodeType": "Block",
              "src": "1687:61:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 34338,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1704:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Contest_$34383_$",
                          "typeString": "type(contract super Contest)"
                        }
                      },
                      "id": 34339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1710:29:36",
                      "memberName": "numAllowedProposalSubmissions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36109,
                      "src": "1704:35:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 34340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1704:37:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 34337,
                  "id": 34341,
                  "nodeType": "Return",
                  "src": "1697:44:36"
                }
              ]
            },
            "baseFunctions": [
              34679,
              36109
            ],
            "functionSelector": "832009af",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "numAllowedProposalSubmissions",
            "nameLocation": "1588:29:36",
            "overrides": {
              "id": 34334,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 34332,
                  "name": "Governor",
                  "nameLocations": [
                    "1641:8:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35325,
                  "src": "1641:8:36"
                },
                {
                  "id": 34333,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "1651:16:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36259,
                  "src": "1651:16:36"
                }
              ],
              "src": "1632:36:36"
            },
            "parameters": {
              "id": 34331,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1617:2:36"
            },
            "returnParameters": {
              "id": 34337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34336,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34343,
                  "src": "1678:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34335,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1678:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1677:9:36"
            },
            "scope": 34383,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34356,
            "nodeType": "FunctionDefinition",
            "src": "1754:143:36",
            "nodes": [],
            "body": {
              "id": 34355,
              "nodeType": "Block",
              "src": "1849:48:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 34351,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1866:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Contest_$34383_$",
                          "typeString": "type(contract super Contest)"
                        }
                      },
                      "id": 34352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1872:16:36",
                      "memberName": "maxProposalCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36119,
                      "src": "1866:22:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 34353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1866:24:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 34350,
                  "id": 34354,
                  "nodeType": "Return",
                  "src": "1859:31:36"
                }
              ]
            },
            "baseFunctions": [
              34688,
              36119
            ],
            "functionSelector": "fb9bf8d4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "maxProposalCount",
            "nameLocation": "1763:16:36",
            "overrides": {
              "id": 34347,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 34345,
                  "name": "Governor",
                  "nameLocations": [
                    "1803:8:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35325,
                  "src": "1803:8:36"
                },
                {
                  "id": 34346,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "1813:16:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36259,
                  "src": "1813:16:36"
                }
              ],
              "src": "1794:36:36"
            },
            "parameters": {
              "id": 34344,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1779:2:36"
            },
            "returnParameters": {
              "id": 34350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34349,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34356,
                  "src": "1840:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34348,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1840:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1839:9:36"
            },
            "scope": 34383,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34369,
            "nodeType": "FunctionDefinition",
            "src": "1903:145:36",
            "nodes": [],
            "body": {
              "id": 34368,
              "nodeType": "Block",
              "src": "1999:49:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 34364,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "2016:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Contest_$34383_$",
                          "typeString": "type(contract super Contest)"
                        }
                      },
                      "id": 34365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2022:17:36",
                      "memberName": "downvotingAllowed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36129,
                      "src": "2016:23:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 34366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2016:25:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 34363,
                  "id": 34367,
                  "nodeType": "Return",
                  "src": "2009:32:36"
                }
              ]
            },
            "baseFunctions": [
              34697,
              36129
            ],
            "functionSelector": "60506ff6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "downvotingAllowed",
            "nameLocation": "1912:17:36",
            "overrides": {
              "id": 34360,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 34358,
                  "name": "Governor",
                  "nameLocations": [
                    "1953:8:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35325,
                  "src": "1953:8:36"
                },
                {
                  "id": 34359,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "1963:16:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36259,
                  "src": "1963:16:36"
                }
              ],
              "src": "1944:36:36"
            },
            "parameters": {
              "id": 34357,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1929:2:36"
            },
            "returnParameters": {
              "id": 34363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34362,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34369,
                  "src": "1990:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34361,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1990:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1989:9:36"
            },
            "scope": 34383,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34382,
            "nodeType": "FunctionDefinition",
            "src": "2054:126:36",
            "nodes": [],
            "body": {
              "id": 34381,
              "nodeType": "Block",
              "src": "2141:39:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 34377,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "2158:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Contest_$34383_$",
                          "typeString": "type(contract super Contest)"
                        }
                      },
                      "id": 34378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2164:7:36",
                      "memberName": "creator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36139,
                      "src": "2158:13:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 34379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2158:15:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 34376,
                  "id": 34380,
                  "nodeType": "Return",
                  "src": "2151:22:36"
                }
              ]
            },
            "baseFunctions": [
              35552,
              36139
            ],
            "functionSelector": "02d05d3f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "creator",
            "nameLocation": "2063:7:36",
            "overrides": {
              "id": 34373,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 34371,
                  "name": "IGovernor",
                  "nameLocations": [
                    "2094:9:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35636,
                  "src": "2094:9:36"
                },
                {
                  "id": 34372,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "2105:16:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36259,
                  "src": "2105:16:36"
                }
              ],
              "src": "2085:37:36"
            },
            "parameters": {
              "id": 34370,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2070:2:36"
            },
            "returnParameters": {
              "id": 34376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34375,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34382,
                  "src": "2132:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34374,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2132:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2131:9:36"
            },
            "scope": 34383,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 34243,
              "name": "Governor",
              "nameLocations": [
                "291:8:36"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35325,
              "src": "291:8:36"
            },
            "id": 34244,
            "nodeType": "InheritanceSpecifier",
            "src": "291:8:36"
          },
          {
            "baseName": {
              "id": 34245,
              "name": "GovernorSettings",
              "nameLocations": [
                "301:16:36"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36259,
              "src": "301:16:36"
            },
            "id": 34246,
            "nodeType": "InheritanceSpecifier",
            "src": "301:16:36"
          },
          {
            "baseName": {
              "id": 34247,
              "name": "GovernorSorting",
              "nameLocations": [
                "319:15:36"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36899,
              "src": "319:15:36"
            },
            "id": 34248,
            "nodeType": "InheritanceSpecifier",
            "src": "319:15:36"
          },
          {
            "baseName": {
              "id": 34249,
              "name": "GovernorModuleRegistry",
              "nameLocations": [
                "336:22:36"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35960,
              "src": "336:22:36"
            },
            "id": 34250,
            "nodeType": "InheritanceSpecifier",
            "src": "336:22:36"
          }
        ],
        "canonicalName": "Contest",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          34383,
          35960,
          36899,
          35900,
          36259,
          35325,
          35636,
          35407,
          31179,
          28998,
          31712,
          31724,
          29840
        ],
        "name": "Contest",
        "nameLocation": "280:7:36",
        "scope": 34384,
        "usedErrors": [
          29853,
          29855,
          34452,
          35338
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 36
}