{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_prompt",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "_submissionMerkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_votingMerkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "_constructorIntParams",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "InvalidShortString",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotInMerkle",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "str",
          "type": "string"
        }
      ],
      "name": "StringTooLong",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TooManyMetadatas",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "ContestCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldContestStart",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newContestStart",
          "type": "uint256"
        }
      ],
      "name": "ContestStartSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldCreator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newCreator",
          "type": "address"
        }
      ],
      "name": "CreatorSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldDownvotingAllowed",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDownvotingAllowed",
          "type": "uint256"
        }
      ],
      "name": "DownvotingAllowedSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "EIP712DomainChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldMaxProposalCount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newMaxProposalCount",
          "type": "uint256"
        }
      ],
      "name": "MaxProposalCountSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldNumAllowedProposalSubmissions",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newNumAllowedProposalSubmissions",
          "type": "uint256"
        }
      ],
      "name": "NumAllowedProposalSubmissionsSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract RewardsModule",
          "name": "oldOfficialRewardsModule",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract RewardsModule",
          "name": "newOfficialRewardsModule",
          "type": "address"
        }
      ],
      "name": "OfficialRewardsModuleSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "proposalIds",
          "type": "uint256[]"
        }
      ],
      "name": "ProposalsDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "numVotes",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "VoteCast",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldVotingDelay",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newVotingDelay",
          "type": "uint256"
        }
      ],
      "name": "VotingDelaySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldVotingPeriod",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newVotingPeriod",
          "type": "uint256"
        }
      ],
      "name": "VotingPeriodSet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "AMOUNT_FOR_SUMBITTER_PROOF",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BALLOT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "COUNTING_MODE",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "METADATAS_COUNT",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressSubmitterVerified",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressTotalCastVoteCounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressTotalVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressTotalVotesVerified",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allProposalTotalVotes",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "proposalIdsReturn",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ],
          "internalType": "struct GovernorCountingSimple.VoteCounts[]",
          "name": "proposalVoteCountsArrayReturn",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allProposalTotalVotesWithoutDeleted",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "proposalIdsReturn",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ],
          "internalType": "struct GovernorCountingSimple.VoteCounts[]",
          "name": "proposalVoteCountsArrayReturn",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "totalVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "numVotes",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "castVote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "numVotes",
          "type": "uint256"
        }
      ],
      "name": "castVoteWithoutProof",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addressToCheck",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        },
        {
          "internalType": "bool",
          "name": "voting",
          "type": "bool"
        }
      ],
      "name": "checkProof",
      "outputs": [
        {
          "internalType": "bool",
          "name": "verified",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "contestAddressTotalVotesCast",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalVotesCast",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contestDeadline",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contestStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "proposalIds",
          "type": "uint256[]"
        }
      ],
      "name": "deleteProposals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "downvotingAllowed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eip712Domain",
      "outputs": [
        {
          "internalType": "bytes1",
          "name": "fields",
          "type": "bytes1"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "version",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "verifyingContract",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "extensions",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllProposalIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getNumSubmissions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getProposal",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct IGovernor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IGovernor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct IGovernor.ProposalCore",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct IGovernor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IGovernor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct IGovernor.ProposalCore",
          "name": "proposal",
          "type": "tuple"
        }
      ],
      "name": "hashProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "highestTiedRanking",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "isProposalDeleted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ranking",
          "type": "uint256"
        }
      ],
      "name": "isTied",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lowestRanking",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxProposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numAllowedProposalSubmissions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "officialRewardsModule",
      "outputs": [
        {
          "internalType": "contract RewardsModule",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "prompt",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "proposalAddressVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "proposalAddressesHaveVoted",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "proposalVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalVotesStructs",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ],
          "internalType": "struct GovernorCountingSimple.VoteCounts",
          "name": "proposalVoteCounts",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct IGovernor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IGovernor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct IGovernor.ProposalCore",
          "name": "proposal",
          "type": "tuple"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "propose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct IGovernor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IGovernor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct IGovernor.ProposalCore",
          "name": "proposal",
          "type": "tuple"
        }
      ],
      "name": "proposeWithoutProof",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ranking",
          "type": "uint256"
        }
      ],
      "name": "rankingPosition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract RewardsModule",
          "name": "officialRewardsModule_",
          "type": "address"
        }
      ],
      "name": "setOfficialRewardsModule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setSortedAndTiedProposals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setSortedAndTiedProposalsHasBeenRun",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sortedProposalIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "excludeDeletedProposals",
          "type": "bool"
        }
      ],
      "name": "sortedProposals",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "sortedProposalIdsReturn",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum IGovernor.ContestState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "submissionMerkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tiedAdjustedRankingPosition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct IGovernor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IGovernor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct IGovernor.ProposalCore",
          "name": "proposal",
          "type": "tuple"
        }
      ],
      "name": "validateProposalData",
      "outputs": [
        {
          "internalType": "bool",
          "name": "dataValidated",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "verifyProposer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "verified",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "totalVotes",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "verifyVoter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "verified",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "voteStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingMerkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x6101a06040526015805460ff191690553480156200001c57600080fd5b50604051620045b6380380620045b68339810160408190526200003f9162000622565b8060008151811062000055576200005562000733565b60200260200101518160018151811062000073576200007362000733565b60200260200101518260028151811062000091576200009162000733565b602002602001015183600381518110620000af57620000af62000733565b602002602001015184600481518110620000cd57620000cd62000733565b602002602001015185600581518110620000eb57620000eb62000733565b60200260200101518a8a8a8a8181856200010a6200025160201b60201c565b620001178260006200026e565b60e052620001278160016200026e565b61010052815160208084019190912061012052815190820120610140524660a052620001b76101205161014051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c05261016091909152610180526007620001d98582620007d8565b506008620001e88482620007d8565b5050505050620001fe86620002a760201b60201c565b6200020985620002e8565b620002148462000329565b6200021f83620003d0565b6200022a8262000411565b620002358162000452565b620002403362000493565b5050505050505050505050620008fe565b604080518082019091526003815262332e3160e81b602082015290565b60006020835110156200028e576200028683620004fc565b9050620002a1565b816200029b8482620007d8565b5060ff90505b92915050565b600c5460408051918252602082018390527fd299feb1d7d9345a48559601c471c3be7eea9a11f21d5e86809198f40a974db4910160405180910390a1600c55565b600d5460408051918252602082018390527fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a93910160405180910390a1600d55565b600081116200038f5760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f7253657474696e67733a20766f74696e6720706572696f6420604482015266746f6f206c6f7760c81b60648201526084015b60405180910390fd5b600e5460408051918252602082018390527f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e8828910160405180910390a1600e55565b600f5460408051918252602082018390527fe971b819c7fb95c72451f557226aceb5baaf4994a9d39a79bbfa0040e87500b9910160405180910390a1600f55565b60105460408051918252602082018390527f4984ec996723330ee95979ed65a2a4b41edd914e68a187efe92596474643bdff910160405180910390a1601055565b60115460408051918252602082018390527f9c7b27f091caef3a83be73d89320404fa0c4a52993685ff0651672e49e6e55ab910160405180910390a1601155565b601254604080516001600160a01b03928316815291831660208301527fc30034fc2e9697980e08935bbc287db3eaa44a4aa113ef4c108b356adbf911ce910160405180910390a1601280546001600160a01b0319166001600160a01b0392909216919091179055565b600080829050601f815111156200052a578260405163305a27a960e01b8152600401620003869190620008a4565b80516200053782620008d9565b179392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156200058057620005806200053f565b604052919050565b60005b83811015620005a55781810151838201526020016200058b565b50506000910152565b600082601f830112620005c057600080fd5b81516001600160401b03811115620005dc57620005dc6200053f565b620005f1601f8201601f191660200162000555565b8181528460208386010111156200060757600080fd5b6200061a82602083016020870162000588565b949350505050565b600080600080600060a086880312156200063b57600080fd5b85516001600160401b03808211156200065357600080fd5b6200066189838a01620005ae565b96506020915081880151818111156200067957600080fd5b620006878a828b01620005ae565b9650506040880151945060608801519350608088015181811115620006ab57600080fd5b8801601f81018a13620006bd57600080fd5b805182811115620006d257620006d26200053f565b8060051b9250620006e584840162000555565b818152928201840192848101908c8511156200070057600080fd5b928501925b84841015620007205783518252928501929085019062000705565b8096505050505050509295509295909350565b634e487b7160e01b600052603260045260246000fd5b600181811c908216806200075e57607f821691505b6020821081036200077f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620007d357600081815260208120601f850160051c81016020861015620007ae5750805b601f850160051c820191505b81811015620007cf57828155600101620007ba565b5050505b505050565b81516001600160401b03811115620007f457620007f46200053f565b6200080c8162000805845462000749565b8462000785565b602080601f8311600181146200084457600084156200082b5750858301515b600019600386901b1c1916600185901b178555620007cf565b600085815260208120601f198616915b82811015620008755788860151825594840194600190910190840162000854565b5085821015620008945787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6020815260008251806020840152620008c581604085016020870162000588565b601f01601f19169190910160400192915050565b805160208083015191908110156200077f5760001960209190910360031b1b16919050565b60805160a05160c05160e0516101005161012051610140516101605161018051613c486200096e60003960008181610a8b0152610e860152600081816109230152610e21015260005050600050506000611612015260006115e80152600050506000505060005050613c486000f3fe6080604052600436106103845760003560e01c8063832009af116101d1578063cf6afbae11610102578063e031535b116100a0578063efa90d361161006f578063efa90d3614610b7a578063f0a7db0a14610b8f578063f4f3d7ec14610baf578063fb9bf8d414610bcf57600080fd5b8063e031535b14610b0e578063e5eb5a4814610b23578063ea8a1af014610b50578063ebc18b9b14610b6557600080fd5b8063dd4e2ba5116100dc578063dd4e2ba514610a33578063dd96a19d14610a79578063dea5f6a614610aad578063deaaa7cc14610ada57600080fd5b8063cf6afbae146109e4578063d45a010b14610a04578063d889161914610a1957600080fd5b8063aec116b61161016f578063bfe45b5911610149578063bfe45b5914610945578063c19d93fb14610965578063c7f758a814610987578063cb853950146109b457600080fd5b8063aec116b6146108ae578063b323580d146108e4578063bddc16411461091157600080fd5b80638a9cd550116101ab5780638a9cd55014610827578063930de9791461083c57806396f0e9621461086c578063a1ac6cb21461088157600080fd5b8063832009af146107ca57806384b0196e146107df578063861874881461080757600080fd5b8063427d56c2116102b65780635f953a03116102545780636e4eb810116102235780636e4eb81014610757578063785ddfe5146107775780637c65d711146107955780637f57a0ba146107aa57600080fd5b80635f953a03146106d757806360506ff61461070d57806365f16263146107225780636ca1a2c71461074257600080fd5b806350a5e5241161029057806350a5e5241461061e578063531bd81214610641578063544ffc9c1461066157806354fd4d50146106ab57600080fd5b8063427d56c2146105aa5780634970ab2f146105d75780634d24a67f146105f757600080fd5b80632399c66011610323578063347cf665116102fd578063347cf665146105145780633932abb1146105485780633b6d199b1461055d578063419c533c1461058a57600080fd5b80632399c660146104bf578063262e59e9146104df57806332763c22146104f457600080fd5b806302d05d3f1161035f57806302d05d3f146103ff57806306fdde031461042c578063070dc5d91461044e57806320b3e8451461049f57600080fd5b80624114a81461039257806301ffc9a7146103ba57806302a251a3146103ea57600080fd5b3661038d57005b005b600080fd5b34801561039e57600080fd5b506103a7610be4565b6040519081526020015b60405180910390f35b3480156103c657600080fd5b506103da6103d5366004612fad565b610bf4565b60405190151581526020016103b1565b3480156103f657600080fd5b506103a7610c2b565b34801561040b57600080fd5b50610414610c36565b6040516001600160a01b0390911681526020016103b1565b34801561043857600080fd5b50610441610c4a565b6040516103b1919061301d565b34801561045a57600080fd5b50610492610469366004613030565b601460209081526000918252604091829020825180840190935280548352600101549082015281565b6040516103b19190613049565b3480156104ab57600080fd5b506103da6104ba3660046130bc565b610cdc565b3480156104cb57600080fd5b506103da6104da366004613030565b610d42565b3480156104eb57600080fd5b506103a7610d86565b34801561050057600080fd5b506103da61050f366004613125565b610da2565b34801561052057600080fd5b50610530678ac7230489e8000081565b6040516001600160401b0390911681526020016103b1565b34801561055457600080fd5b506103a7610edf565b34801561056957600080fd5b506103a7610578366004613030565b60009081526006602052604090205490565b34801561059657600080fd5b506103a76105a53660046131a6565b610eea565b3480156105b657600080fd5b506105ca6105c5366004613216565b610f22565b6040516103b1919061326c565b3480156105e357600080fd5b506103a76105f236600461352a565b61104e565b34801561060357600080fd5b5061060c600281565b60405160ff90911681526020016103b1565b34801561062a57600080fd5b50610633611090565b6040516103b192919061355e565b34801561064d57600080fd5b506103da61065c3660046135c7565b611196565b34801561066d57600080fd5b5061069661067c366004613030565b600090815260146020526040902080546001909101549091565b604080519283526020830191909152016103b1565b3480156106b757600080fd5b50604080518082019091526003815262332e3160e81b6020820152610441565b3480156106e357600080fd5b506103a76106f2366004613622565b6001600160a01b03166000908152600b602052604090205490565b34801561071957600080fd5b506103a7611201565b34801561072e57600080fd5b506103a761073d36600461363f565b61120c565b34801561074e57600080fd5b506103a76112d4565b34801561076357600080fd5b50610696610772366004613674565b611300565b34801561078357600080fd5b50601b546001600160a01b0316610414565b3480156107a157600080fd5b50610441611335565b3480156107b657600080fd5b506103da6107c536600461352a565b611344565b3480156107d657600080fd5b506103a76115cf565b3480156107eb57600080fd5b506107f46115da565b6040516103b197969594939291906136a4565b34801561081357600080fd5b506103a7610822366004613030565b611662565b34801561083357600080fd5b506105ca61169a565b34801561084857600080fd5b506103da610857366004613622565b60036020526000908152604090205460ff1681565b34801561087857600080fd5b5061038b611714565b34801561088d57600080fd5b506103a761089c366004613622565b60136020526000908152604090205481565b3480156108ba57600080fd5b506103a76108c9366004613622565b6001600160a01b031660009081526013602052604090205490565b3480156108f057600080fd5b506109046108ff366004613030565b611a31565b6040516103b1919061374d565b34801561091d57600080fd5b506103a77f000000000000000000000000000000000000000000000000000000000000000081565b34801561095157600080fd5b506103a7610960366004613760565b611aa3565b34801561097157600080fd5b5061097a611ae7565b6040516103b191906137d1565b34801561099357600080fd5b506109a76109a2366004613030565b611b59565b6040516103b191906137f9565b3480156109c057600080fd5b506103da6109cf366004613622565b60046020526000908152604090205460ff1681565b3480156109f057600080fd5b506103a76109ff36600461352a565b611ccc565b348015610a1057600080fd5b50610633611cfd565b348015610a2557600080fd5b506015546103da9060ff1681565b348015610a3f57600080fd5b5060408051808201909152601881527f737570706f72743d627261766f2671756f72756d3d666f7200000000000000006020820152610441565b348015610a8557600080fd5b506103a77f000000000000000000000000000000000000000000000000000000000000000081565b348015610ab957600080fd5b506103a7610ac8366004613622565b60026020526000908152604090205481565b348015610ae657600080fd5b506103a77f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f81565b348015610b1a57600080fd5b506103a7611ec8565b348015610b2f57600080fd5b506103a7610b3e366004613030565b60166020526000908152604090205481565b348015610b5c57600080fd5b5061038b611eda565b348015610b7157600080fd5b506103a7611fc4565b348015610b8657600080fd5b506105ca611ff0565b348015610b9b57600080fd5b5061038b610baa36600461387f565b612046565b348015610bbb57600080fd5b5061038b610bca366004613622565b612289565b348015610bdb57600080fd5b506103a7612324565b6000610bef600c5490565b905090565b60006001600160e01b031982166348f0249f60e11b1480610c2557506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000610bef600e5490565b6000610bef6012546001600160a01b031690565b606060078054610c599061390f565b80601f0160208091040260200160405190810160405280929190818152602001828054610c859061390f565b8015610cd25780601f10610ca757610100808354040283529160200191610cd2565b820191906000526020600020905b815481529060010190602001808311610cb557829003601f168201915b5050505050905090565b6001600160a01b03831660009081526004602052604081205460ff16610d3757610d1284678ac7230489e8000085856000610da2565b506001600160a01b0384166000908152600460205260409020805460ff191660011790555b5060015b9392505050565b60155460009060ff16610d705760405162461bcd60e51b8152600401610d6790613949565b60405180910390fd5b5060009081526017602052604090205460ff1690565b6000610d90610c2b565b610d98611ec8565b610bef91906139ca565b6040516bffffffffffffffffffffffff19606087901b166020820152603481018590526000908190605401604051602081830303815290604052805190602001209050600083610e5157610e4c8686808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f0000000000000000000000000000000000000000000000000000000000000000925086915061232f9050565b610eb1565b610eb18686808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f0000000000000000000000000000000000000000000000000000000000000000925086915061232f9050565b905080610ed15760405163452c2df160e11b815260040160405180910390fd5b506001979650505050505050565b6000610bef600d5490565b600033610ef981878686611196565b50610f168882898860405180602001604052806000815250612345565b98975050505050505050565b606060008083610f3957610f34611090565b610f41565b610f41611cfd565b91509150600082516001600160401b03811115610f6057610f6061327f565b604051908082528060200260200182016040528015610f89578160200160208202803683370190505b50905060005b825181101561100d57828181518110610faa57610faa6139dd565b602002602001015160200151838281518110610fc857610fc86139dd565b602002602001015160000151610fde91906139f3565b828281518110610ff057610ff06139dd565b60209081029190910101528061100581613a1a565b915050610f8f565b5060005b6001845161101f9190613a33565b8110156110445761103181838661255f565b508061103c81613a1a565b915050611011565b5091949350505050565b3360009081526004602052604081205460ff1661107d5760405162461bcd60e51b8152600401610d6790613a46565b61108682611344565b50610c25826126c5565b606080600061109d611ff0565b9050600081516001600160401b038111156110ba576110ba61327f565b6040519080825280602002602001820160405280156110ff57816020015b60408051808201909152600080825260208201528152602001906001900390816110d85790505b50905060005b825181101561118c5760146000848381518110611124576111246139dd565b602002602001015181526020019081526020016000206000016040518060400160405290816000820154815260200160018201548152505082828151811061116e5761116e6139dd565b6020026020010181905250808061118490613a1a565b915050611105565b5090939092509050565b6001600160a01b03841660009081526003602052604081205460ff166111f6576111c4858585856000610da2565b506001600160a01b038516600090815260026020908152604080832087905560039091529020805460ff191660011790555b506001949350505050565b6000610bef60115490565b3360008181526003602052604081205490919060ff166112af5760405162461bcd60e51b815260206004820152605260248201527f476f7665726e6f723a20796f75206e65656420746f2063617374206120766f7460448201527f652077697468207468652070726f6f66206174206c65617374206f6e636520616064820152711b99081e5bdd481a185d995b89dd081e595d60721b608482015260a401610d67565b6112cb8582868660405180602001604052806000815250612345565b95945050505050565b60155460009060ff166112f95760405162461bcd60e51b8152600401610d6790613949565b5060195490565b60008281526014602090815260408083206001600160a01b0385168452600301909152902080546001909101545b9250929050565b606060088054610c599061390f565b80516000906001600160a01b031633146113b95760405162461bcd60e51b815260206004820152603060248201527f476f7665726e6f723a207468652070726f706f73616c20617574686f72206d7560448201526f39ba1031329036b9b39739b2b73232b960811b6064820152608401610d67565b60005b60028110156115715760008160018111156113d9576113d96137bb565b905060008160018111156113ef576113ef6137bb565b036113fa575061155f565b600181600181111561140e5761140e6137bb565b0361154457608084015151516000036114a05760405162461bcd60e51b815260206004820152604860248201527f476f7665726e6f724d6574616461746156616c69646174696f6e3a207468657260448201527f652063616e6e6f74206265207a65726f207369676e65727320696e20736166656064820152674d6574616461746160c01b608482015260a401610d67565b83608001516020015160000361152c5760405162461bcd60e51b8152602060048201526044602482018190527f476f7665726e6f724d6574616461746156616c69646174696f6e3a2074687265908201527f73686f6c642063616e6e6f74206265207a65726f20696e20736166654d6574616064820152636461746160e01b608482015260a401610d67565b6080840151515160000361153f57600080fd5b61155d565b6040516308b6566d60e11b815260040160405180910390fd5b505b8061156981613a1a565b9150506113bc565b508160200151516000036115c75760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a20656d7074792070726f706f73616c00000000000000006044820152606401610d67565b506001919050565b6000610bef600f5490565b60006060808280808361160d7f000000000000000000000000000000000000000000000000000000000000000083612a47565b6116387f00000000000000000000000000000000000000000000000000000000000000006001612a47565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60155460009060ff166116875760405162461bcd60e51b8152600401610d6790613949565b5060009081526016602052604090205490565b60155460609060ff166116bf5760405162461bcd60e51b8152600401610d6790613949565b6018805480602002602001604051908101604052809291908181526020018280548015610cd257602002820191906000526020600020905b8154815260200190600101908083116116f7575050505050905090565b600461171e611ae7565b600481111561172f5761172f6137bb565b146117b25760405162461bcd60e51b815260206004820152604760248201527f476f7665726e6f72536f7274696e673a20636f6e74657374206d75737420626560448201527f20746f2063616c63756c61746520736f7274656420616e6420746965642070726064820152666f706f73616c7360c81b608482015260a401610d67565b60155460ff16156118515760405162461bcd60e51b815260206004820152605f60248201527f476f7665726e6f72536f7274696e673a20736574536f72746564416e6454696560448201527f6450726f706f73616c7328292068617320616c7265616479206265656e20727560648201527f6e20616e642069747320726573706563746976652076616c7565732073657400608482015260a401610d67565b61185b6001610f22565b805161186f91601891602090910190612e87565b5060185460009060019061188390826139ca565b601a5560005b601854811015611a1f576018546000906118a590600190613a33565b90506000806118ee60186118b98686613a33565b815481106118c9576118c96139dd565b9060005260206000200154600090815260146020526040902080546001909101549091565b909250905060006118ff82846139f3565b90508460000361194957601854909650869061191c8660016139ca565b036119405761192b8585613a33565b60008781526016602052604090205560198690555b50505050611a0d565b86810361199c5760008681526017602052604090205460ff16611980576000868152601760205260409020805460ff191660011790555b60185461198e9060016139ca565b601a540361199c57601a8690555b8681146119d5576119ad8585613a33565b6119b89060016139ca565b600087815260166020526040902055856119d181613a1a565b9650505b6018546119e38660016139ca565b03611a07576119f28585613a33565b60008781526016602052604090205560198690555b95505050505b80611a1781613a1a565b915050611889565b50506015805460ff1916600117905550565b6000818152601460209081526040918290206002810180548451818502810185019095528085526060949293830182828015611a9657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611a78575b5050505050915050919050565b6000611ab0338484610cdc565b611acc5760405162461bcd60e51b8152600401610d6790613a46565b611ad584611344565b50611adf846126c5565b949350505050565b60095460009060ff1615611afb5750600290565b6000611b05610be4565b9050428110611b1657600091505090565b6000611b20611ec8565b9050428110611b325760039250505090565b6000611b3c610d86565b9050428110611b4f576001935050505090565b6004935050505090565b611b61612ed2565b6000828152600a6020908152604091829020825160a0810190935280546001600160a01b031683526001810180549192840191611b9d9061390f565b80601f0160208091040260200160405190810160405280929190818152602001828054611bc99061390f565b8015611c165780601f10611beb57610100808354040283529160200191611c16565b820191906000526020600020905b815481529060010190602001808311611bf957829003601f168201915b5050509183525050600282015460ff16151560208083019190915260408051808301825260038501546001600160a01b0316815281840152805160048501805493840282016060908101845292820184815294830194919390928492918491840182828015611cae57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611c90575b50505050508152602001600182015481525050815250509050919050565b600081604051602001611cdf91906137f9565b60408051601f19818403018152919052805160209091012092915050565b6060806000611d0a611ff0565b9050600081516001600160401b03811115611d2757611d2761327f565b604051908082528060200260200182016040528015611d50578160200160208202803683370190505b509050600082516001600160401b03811115611d6e57611d6e61327f565b604051908082528060200260200182016040528015611db357816020015b6040805180820190915260008082526020820152815260200190600190039081611d8c5790505b5090506000805b8451811015611ebc57611df2858281518110611dd857611dd86139dd565b602002602001015160009081526006602052604090205490565b600114611eaa57848181518110611e0b57611e0b6139dd565b6020026020010151848381518110611e2557611e256139dd565b60200260200101818152505060146000868381518110611e4757611e476139dd565b6020026020010151815260200190815260200160002060000160405180604001604052908160008201548152602001600182015481525050838381518110611e9157611e916139dd565b6020908102919091010152611ea76001836139ca565b91505b80611eb481613a1a565b915050611dba565b50919590945092505050565b6000611ed2610edf565b610d98610be4565b611ee2610c36565b6001600160a01b0316336001600160a01b031614611eff57600080fd5b6000611f09611ae7565b90506002816004811115611f1f57611f1f6137bb565b14158015611f3f57506004816004811115611f3c57611f3c6137bb565b14155b611f8b5760405162461bcd60e51b815260206004820152601c60248201527f476f7665726e6f723a20636f6e74657374206e6f7420616374697665000000006044820152606401610d67565b6009805460ff191660011790556040517f4cd963a081760a54f571abc0f1db4dde31b4a07d8d6da3e844b8c6f47eeaaa4290600090a150565b60155460009060ff16611fe95760405162461bcd60e51b8152600401610d6790613949565b50601a5490565b60606005805480602002602001604051908101604052809291908181526020018280548015610cd257602002820191906000526020600020908154815260200190600101908083116116f7575050505050905090565b61204e610c36565b6001600160a01b0316336001600160a01b0316146120d45760405162461bcd60e51b815260206004820152603760248201527f476f7665726e6f723a206f6e6c792074686520636f6e7465737420637265617460448201527f6f722063616e2064656c6574652070726f706f73616c730000000000000000006064820152608401610d67565b60046120de611ae7565b60048111156120ef576120ef6137bb565b036121745760405162461bcd60e51b815260206004820152604960248201527f476f7665726e6f723a2064656c6574696f6e206f662070726f706f73616c732060448201527f61667465722074686520656e64206f66206120636f6e74657374206973206e6f6064820152681d08185b1b1bddd95960ba1b608482015260a401610d67565b60005b815181101561224e5760066000838381518110612196576121966139dd565b602002602001015181526020019081526020016000205460011461223c576001600660008484815181106121cc576121cc6139dd565b60200260200101518152602001908152602001600020819055506040518060600160405280603d8152602001613bd6603d9139600a6000848481518110612215576122156139dd565b60200260200101518152602001908152602001600020600101908161223a9190613ae4565b505b8061224681613a1a565b915050612177565b507f75a75cf5c561892f4cc5b26c1b8e933849b42238c96dd073d080d1ae96c514168160405161227e919061326c565b60405180910390a150565b612291610c36565b6001600160a01b0316336001600160a01b0316146122ae57600080fd5b60006122c2601b546001600160a01b031690565b601b80546001600160a01b0319166001600160a01b0385811691821790925560408051928416835260208301919091529192507f753a2cf8d360cff631674504210913e48247f8e56b3e6d2006c2103d4095999f910160405180910390a15050565b6000610bef60105490565b60008261233c8584612af3565b14949350505050565b60006001612351611ae7565b6004811115612362576123626137bb565b146123bb5760405162461bcd60e51b815260206004820152602360248201527f476f7665726e6f723a20766f7465206e6f742063757272656e746c792061637460448201526269766560e81b6064820152608401610d67565b6000831161241f5760405162461bcd60e51b815260206004820152602b60248201527f476f7665726e6f723a2063616e6e6f7420766f746520776974682030206f722060448201526a666577657220766f74657360a81b6064820152608401610d67565b6001600160a01b03851660009081526003602052604090205460ff166124c55760405162461bcd60e51b815260206004820152604f60248201527f476f7665726e6f723a20796f75206e65656420746f2076657269667920796f7560448201527f72206e756d626572206f6620766f74657320616761696e737420746865206d6560648201526e1c9adb19481c9bdbdd08199a5c9cdd608a1b608482015260a401610d67565b6124f786868686600260008b6001600160a01b03166001600160a01b0316815260200190815260200160002054612b40565b846001600160a01b03167fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda4878686866040516125369493929190613ba3565b60405180910390a2505050506001600160a01b0316600090815260026020526040902054919050565b600083805b84518110156125bd5784828151811061257f5761257f6139dd565b6020026020010151858281518110612599576125996139dd565b602002602001015112156125ab578091505b806125b581613a1a565b915050612564565b508481036125cf576000915050610d3b565b60008486815181106125e3576125e36139dd565b602002602001015190508482815181106125ff576125ff6139dd565b6020026020010151858781518110612619576126196139dd565b60200260200101818152505080858381518110612638576126386139dd565b6020026020010181815250506000848781518110612658576126586139dd565b60200260200101519050848381518110612674576126746139dd565b602002602001015185888151811061268e5761268e6139dd565b602002602001018181525050808584815181106126ad576126ad6139dd565b60209081029190910101525060019695505050505050565b600060036126d1611ae7565b60048111156126e2576126e26137bb565b146127555760405162461bcd60e51b815260206004820152603e60248201527f476f7665726e6f723a20636f6e74657374206d7573742062652071756575656460448201527f20666f722070726f706f73616c7320746f206265207375626d697474656400006064820152608401610d67565b61275d6115cf565b336000908152600b6020526040902054106128065760405162461bcd60e51b815260206004820152605d60248201527f476f7665726e6f723a207468652073616d652063616e6e6f74207375626d697460448201527f206d6f7265207468616e20746865206e756d416c6c6f77656450726f706f736160648201527f6c5375626d697373696f6e7320666f72207468697320636f6e74657374000000608482015260a401610d67565b61280e612324565b600554106128845760405162461bcd60e51b815260206004820152603960248201527f476f7665726e6f723a20746865206d6178206e756d626572206f662070726f7060448201527f6f73616c732068617665206265656e207375626d6974746564000000000000006064820152608401610d67565b600061288f83611ccc565b6000818152600a602052604090206002015490915060ff16156129065760405162461bcd60e51b815260206004820152602960248201527f476f7665726e6f723a206475706c69636174652070726f706f73616c73206e6f6044820152681d08185b1b1bddd95960ba1b6064820152608401610d67565b6005805460018082019092557f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0018290556000828152600a60209081526040909120855181546001600160a01b0319166001600160a01b039091161781559085015185928201906129779082613ae4565b50604082015160028201805460ff19169115159190911790556060820151516003820180546001600160a01b0319166001600160a01b0390921691909117905560808201518051805160048401916129d491839160200190612f43565b50602091820151600191820155336000908152600b9092526040822080549194509250612a029084906139ca565b90915550506040805182815233602082015281517fcd423cc1203c0af96b9b3d68d73b3064a69de2d14450bb7181c5e5df2132b358929181900390910190a192915050565b606060ff8314612a6157612a5a83612df4565b9050610c25565b818054612a6d9061390f565b80601f0160208091040260200160405190810160405280929190818152602001828054612a999061390f565b8015612ae65780601f10612abb57610100808354040283529160200191612ae6565b820191906000526020600020905b815481529060010190602001808311612ac957829003601f168201915b5050505050905092915050565b600081815b8451811015612b3857612b2482868381518110612b1757612b176139dd565b6020026020010151612e33565b915080612b3081613a1a565b915050612af8565b509392505050565b60008581526014602090815260408083206001600160a01b0388168452601390925290912054612b709083613a33565b831115612bdb5760405162461bcd60e51b815260206004820152603360248201527f476f7665726e6f72566f74696e6753696d706c653a206e6f7420656e6f756768604482015272081d9bdd195cc81b19599d081d1bc818d85cdd606a1b6064820152608401610d67565b6001600160a01b03851660009081526003820160205260409020541560ff8516612c4d57815484908390600090612c139084906139ca565b90915550506001600160a01b038616600090815260038301602052604081208054869290612c429084906139ca565b90915550612d879050565b60001960ff861601612d2157612c61611201565b600114612cd8576040805162461bcd60e51b81526020600482015260248101919091527f476f7665726e6f72566f74696e6753696d706c653a20646f776e766f74696e6760448201527f206973206e6f7420656e61626c656420666f72207468697320436f6e746573746064820152608401610d67565b83826000016001016000828254612cef91906139ca565b90915550506001600160a01b038616600090815260038301602052604081206001018054869290612c429084906139ca565b60405162461bcd60e51b815260206004820152603560248201527f476f7665726e6f72566f74696e6753696d706c653a20696e76616c69642076616044820152746c756520666f7220656e756d20566f74655479706560581b6064820152608401610d67565b8015612dbe57600282018054600181018255600091825260209091200180546001600160a01b0319166001600160a01b0388161790555b6001600160a01b03861660009081526013602052604081208054869290612de69084906139ca565b909155505050505050505050565b60606000612e0183612e5f565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000818310612e4f576000828152602084905260409020610d3b565b5060009182526020526040902090565b600060ff8216601f811115610c2557604051632cd44ac360e21b815260040160405180910390fd5b828054828255906000526020600020908101928215612ec2579160200282015b82811115612ec2578251825591602001919060010190612ea7565b50612ece929150612f98565b5090565b6040518060a0016040528060006001600160a01b0316815260200160608152602001600015158152602001612f1c604051806020016040528060006001600160a01b031681525090565b8152602001612f3e604051806040016040528060608152602001600081525090565b905290565b828054828255906000526020600020908101928215612ec2579160200282015b82811115612ec257825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612f63565b5b80821115612ece5760008155600101612f99565b600060208284031215612fbf57600080fd5b81356001600160e01b031981168114610d3b57600080fd5b6000815180845260005b81811015612ffd57602081850181015186830182015201612fe1565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610d3b6020830184612fd7565b60006020828403121561304257600080fd5b5035919050565b815181526020808301519082015260408101610c25565b6001600160a01b038116811461307557600080fd5b50565b60008083601f84011261308a57600080fd5b5081356001600160401b038111156130a157600080fd5b6020830191508360208260051b850101111561132e57600080fd5b6000806000604084860312156130d157600080fd5b83356130dc81613060565b925060208401356001600160401b038111156130f757600080fd5b61310386828701613078565b9497909650939450505050565b8035801515811461312057600080fd5b919050565b60008060008060006080868803121561313d57600080fd5b853561314881613060565b94506020860135935060408601356001600160401b0381111561316a57600080fd5b61317688828901613078565b9094509250613189905060608701613110565b90509295509295909350565b803560ff8116811461312057600080fd5b60008060008060008060a087890312156131bf57600080fd5b863595506131cf60208801613195565b9450604087013593506060870135925060808701356001600160401b038111156131f857600080fd5b61320489828a01613078565b979a9699509497509295939492505050565b60006020828403121561322857600080fd5b610d3b82613110565b600081518084526020808501945080840160005b8381101561326157815187529582019590820190600101613245565b509495945050505050565b602081526000610d3b6020830184613231565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156132b7576132b761327f565b60405290565b60405160a081016001600160401b03811182821017156132b7576132b761327f565b604051601f8201601f191681016001600160401b03811182821017156133075761330761327f565b604052919050565b60006020828403121561332157600080fd5b604051602081018181106001600160401b03821117156133435761334361327f565b604052905080823561335481613060565b905292915050565b60006001600160401b038211156133755761337561327f565b5060051b60200190565b60006040828403121561339157600080fd5b613399613295565b905081356001600160401b038111156133b157600080fd5b8201601f810184136133c257600080fd5b803560206133d76133d28361335c565b6132df565b82815260059290921b830181019181810190878411156133f657600080fd5b938201935b8385101561341d57843561340e81613060565b825293820193908201906133fb565b85525093840135938301939093525092915050565b600060a0828403121561344457600080fd5b61344c6132bd565b9050813561345981613060565b81526020828101356001600160401b038082111561347657600080fd5b818501915085601f83011261348a57600080fd5b81358181111561349c5761349c61327f565b6134ae601f8201601f191685016132df565b81815287858386010111156134c257600080fd5b81858501868301376000858383010152808587015250506134e560408601613110565b60408501526134f7866060870161330f565b6060850152608085013592508083111561351057600080fd5b505061351e8482850161337f565b60808301525092915050565b60006020828403121561353c57600080fd5b81356001600160401b0381111561355257600080fd5b611adf84828501613432565b6000604080835261357181840186613231565b83810360208581019190915285518083528682019282019060005b818110156135b9576135a983865180518252602090810151910152565b938301939185019160010161358c565b509098975050505050505050565b600080600080606085870312156135dd57600080fd5b84356135e881613060565b93506020850135925060408501356001600160401b0381111561360a57600080fd5b61361687828801613078565b95989497509550505050565b60006020828403121561363457600080fd5b8135610d3b81613060565b60008060006060848603121561365457600080fd5b8335925061366460208501613195565b9150604084013590509250925092565b6000806040838503121561368757600080fd5b82359150602083013561369981613060565b809150509250929050565b60ff60f81b8816815260e0602082015260006136c360e0830189612fd7565b82810360408401526136d58189612fd7565b606084018890526001600160a01b038716608085015260a0840186905283810360c085015290506137068185613231565b9a9950505050505050505050565b600081518084526020808501945080840160005b838110156132615781516001600160a01b031687529582019590820190600101613728565b602081526000610d3b6020830184613714565b60008060006040848603121561377557600080fd5b83356001600160401b038082111561378c57600080fd5b61379887838801613432565b945060208601359150808211156137ae57600080fd5b5061310386828701613078565b634e487b7160e01b600052602160045260246000fd5b60208101600583106137f357634e487b7160e01b600052602160045260246000fd5b91905290565b60208152600060018060a01b03808451166020840152602084015160a0604085015261382860c0850182612fd7565b90506040850151151560608501528160608601515116608085015260808501519150601f198482030160a08501528151604082526138696040830182613714565b6020938401519290930191909152509392505050565b6000602080838503121561389257600080fd5b82356001600160401b038111156138a857600080fd5b8301601f810185136138b957600080fd5b80356138c76133d28261335c565b81815260059190911b820183019083810190878311156138e657600080fd5b928401925b82841015613904578335825292840192908401906138eb565b979650505050505050565b600181811c9082168061392357607f821691505b60208210810361394357634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526045908201527f526577617264734d6f64756c653a2072756e20736574536f72746564416e645460408201527f69656450726f706f73616c73282920746f20706f70756c61746520746869732060608201526476616c756560d81b608082015260a00190565b634e487b7160e01b600052601160045260246000fd5b80820180821115610c2557610c256139b4565b634e487b7160e01b600052603260045260246000fd5b8181036000831280158383131683831282161715613a1357613a136139b4565b5092915050565b600060018201613a2c57613a2c6139b4565b5060010190565b81810381811115610c2557610c256139b4565b6020808252602f908201527f476f7665726e6f723a2061646472657373206973206e6f74207065726d69737360408201526e1a5bdb9959081d1bc81cdd589b5a5d608a1b606082015260800190565b601f821115613adf57600081815260208120601f850160051c81016020861015613abc5750805b601f850160051c820191505b81811015613adb57828155600101613ac8565b5050505b505050565b81516001600160401b03811115613afd57613afd61327f565b613b1181613b0b845461390f565b84613a95565b602080601f831160018114613b465760008415613b2e5750858301515b600019600386901b1c1916600185901b178555613adb565b600085815260208120601f198616915b82811015613b7557888601518255948401946001909101908401613b56565b5085821015613b935787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b84815260ff84166020820152826040820152608060608201526000613bcb6080830184612fd7565b969550505050505056fe546869732070726f706f73616c20686173206265656e2064656c65746564206279207468652063726561746f72206f662074686520636f6e746573742ea2646970667358221220b56fa4fd72a9a79fe7aa88909bc893272e6f33ce3e4cf9a097f07da0335969a364736f6c63430008130033",
    "sourceMap": "271:1911:36:-:0;;;273:55:43;;;-1:-1:-1;;273:55:43;;;365:716:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;678:21;700:1;678:24;;;;;;;;:::i;:::-;;;;;;;740:21;762:1;740:24;;;;;;;;:::i;:::-;;;;;;;802:21;824:1;802:24;;;;;;;;:::i;:::-;;;;;;;865:21;887:1;865:24;;;;;;;;:::i;:::-;;;;;;;945:21;967:1;945:24;;;;;;;;:::i;:::-;;;;;;;1011:21;1033:1;1011:24;;;;;;;;:::i;:::-;;;;;;;582:5;589:7;598:21;621:17;2486:21:37;2509:17;2543:5;2550:9;:7;;;:9;;:::i;:::-;3251:45:28;:4;3282:13;3251:30;:45::i;:::-;3243:53;;3317:51;:7;3351:16;3317:33;:51::i;:::-;3306:62;;3392:22;;;;;;;;;;3378:36;;3441:25;;;;;;3424:42;;3494:13;3477:30;;3542:23;4077:11;;4090:14;;4054:81;;;1929:95;4054:81;;;5649:25:47;5690:18;;;5683:34;;;;5733:18;;;5726:34;4106:13:28;5776:18:47;;;5769:34;4129:4:28;5819:19:47;;;5812:61;4018:7:28;;5621:19:47;;4054:81:28;;;;;;;;;;;;4044:92;;;;;;4037:99;;3963:180;;3542:23;3517:48;;-1:-1:-1;;3597:4:28;3575:27;;894:44:38;;;;;963:36;;2575:5:37::2;:13;2583:5:::0;2575;:13:::2;:::i;:::-;-1:-1:-1::0;2598:7:37::2;:17;2608:7:::0;2598;:17:::2;:::i;:::-;;2344:278:::0;;;;1591:37:42;1608:19;1591:16;;;:37;;:::i;:::-;1638:35;1654:18;1638:15;:35::i;:::-;1683:37;1700:19;1683:16;:37::i;:::-;1730:71;1764:36;1730:33;:71::i;:::-;1811:45;1832:23;1811:20;:45::i;:::-;1866:47;1888:24;1866:21;:47::i;:::-;1923:23;1935:10;1923:11;:23::i;:::-;1316:637;;;;;;365:716:36;;;;;271:1911;;3516:101:37;3598:12;;;;;;;;;;;;-1:-1:-1;;;3598:12:37;;;;;3516:101::o;2457:341:23:-;2553:11;2602:2;2586:5;2580:19;:24;2576:216;;;2627:20;2641:5;2627:13;:20::i;:::-;2620:27;;;;2576:216;2704:5;2678:46;2719:5;2704;2678:46;:::i;:::-;-1:-1:-1;933:66:23;;-1:-1:-1;2576:216:23;2457:341;;;;:::o;3355:178:42:-;3454:13;;3438:47;;;6058:25:47;;;6114:2;6099:18;;6092:34;;;3438:47:42;;6031:18:47;3438:47:42;;;;;;;3495:13;:31;3355:178::o;3651:171::-;3747:12;;3732:44;;;6058:25:47;;;6114:2;6099:18;;6092:34;;;3732:44:42;;6031:18:47;3732:44:42;;;;;;;3786:12;:29;3651:171::o;3942:316::-;4103:1;4085:15;:19;4077:71;;;;-1:-1:-1;;;4077:71:42;;6339:2:47;4077:71:42;;;6321:21:47;6378:2;6358:18;;;6351:30;6417:34;6397:18;;;6390:62;-1:-1:-1;;;6468:18:47;;;6461:37;6515:19;;4077:71:42;;;;;;;;;4179:13;;4163:47;;;6058:25:47;;;6114:2;6099:18;;6092:34;;;4163:47:42;;6031:18:47;4163:47:42;;;;;;;4220:13;:31;3942:316::o;4445:297::-;4595:30;;4562:98;;;6058:25:47;;;6114:2;6099:18;;6092:34;;;4562:98:42;;6031:18:47;4562:98:42;;;;;;;4670:30;:65;4445:297::o;4871:206::-;4982:17;;4962:59;;;6058:25:47;;;6114:2;6099:18;;6092:34;;;4962:59:42;;6031:18:47;4962:59:42;;;;;;;5031:17;:39;4871:206::o;5209:213::-;5323:18;;5302:62;;;6058:25:47;;;6114:2;6099:18;;6092:34;;;5302:62:42;;6031:18:47;5302:62:42;;;;;;;5374:18;:41;5209:213::o;5527:143::-;5611:8;;5600:32;;;-1:-1:-1;;;;;5611:8:42;;;6757:34:47;;6827:15;;;6822:2;6807:18;;6800:43;5600:32:42;;6692:18:47;5600:32:42;;;;;;;5642:8;:21;;-1:-1:-1;;;;;;5642:21:42;-1:-1:-1;;;;;5642:21:42;;;;;;;;;;5527:143::o;1251:286:23:-;1316:11;1339:17;1365:3;1339:30;;1397:2;1383:4;:11;:16;1379:72;;;1436:3;1422:18;;-1:-1:-1;;;1422:18:23;;;;;;;;:::i;1379:72::-;1517:11;;1500:13;1517:4;1500:13;:::i;:::-;1492:36;;1251:286;-1:-1:-1;;;1251:286:23:o;14:127:47:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:47;247:40;;-1:-1:-1;;;;;302:34:47;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:47:o;426:250::-;511:1;521:113;535:6;532:1;529:13;521:113;;;611:11;;;605:18;592:11;;;585:39;557:2;550:10;521:113;;;-1:-1:-1;;668:1:47;650:16;;643:27;426:250::o;681:510::-;735:5;788:3;781:4;773:6;769:17;765:27;755:55;;806:1;803;796:12;755:55;829:13;;-1:-1:-1;;;;;854:26:47;;851:52;;;883:18;;:::i;:::-;927:55;970:2;951:13;;-1:-1:-1;;947:27:47;976:4;943:38;927:55;:::i;:::-;1007:2;998:7;991:19;1053:3;1046:4;1041:2;1033:6;1029:15;1025:26;1022:35;1019:55;;;1070:1;1067;1060:12;1019:55;1083:77;1157:2;1150:4;1141:7;1137:18;1130:4;1122:6;1118:17;1083:77;:::i;:::-;1178:7;681:510;-1:-1:-1;;;;681:510:47:o;1196:1468::-;1347:6;1355;1363;1371;1379;1432:3;1420:9;1411:7;1407:23;1403:33;1400:53;;;1449:1;1446;1439:12;1400:53;1476:16;;-1:-1:-1;;;;;1541:14:47;;;1538:34;;;1568:1;1565;1558:12;1538:34;1591:61;1644:7;1635:6;1624:9;1620:22;1591:61;:::i;:::-;1581:71;;1671:2;1661:12;;1719:2;1708:9;1704:18;1698:25;1748:2;1738:8;1735:16;1732:36;;;1764:1;1761;1754:12;1732:36;1787:63;1842:7;1831:8;1820:9;1816:24;1787:63;:::i;:::-;1777:73;;;1890:2;1879:9;1875:18;1869:25;1859:35;;1934:2;1923:9;1919:18;1913:25;1903:35;;1984:3;1973:9;1969:19;1963:26;2014:2;2004:8;2001:16;1998:36;;;2030:1;2027;2020:12;1998:36;2053:24;;2108:4;2100:13;;2096:27;-1:-1:-1;2086:55:47;;2137:1;2134;2127:12;2086:55;2166:2;2160:9;2188:2;2184;2181:10;2178:36;;;2194:18;;:::i;:::-;2240:2;2237:1;2233:10;2223:20;;2263:28;2287:2;2283;2279:11;2263:28;:::i;:::-;2325:15;;;2395:11;;;2391:20;;;2356:12;;;;2423:19;;;2420:39;;;2455:1;2452;2445:12;2420:39;2479:11;;;;2499:135;2515:6;2510:3;2507:15;2499:135;;;2581:10;;2569:23;;2532:12;;;;2612;;;;2499:135;;;2653:5;2643:15;;;;;;;;1196:1468;;;;;;;;:::o;2669:127::-;2730:10;2725:3;2721:20;2718:1;2711:31;2761:4;2758:1;2751:15;2785:4;2782:1;2775:15;2801:380;2880:1;2876:12;;;;2923;;;2944:61;;2998:4;2990:6;2986:17;2976:27;;2944:61;3051:2;3043:6;3040:14;3020:18;3017:38;3014:161;;3097:10;3092:3;3088:20;3085:1;3078:31;3132:4;3129:1;3122:15;3160:4;3157:1;3150:15;3014:161;;2801:380;;;:::o;3312:545::-;3414:2;3409:3;3406:11;3403:448;;;3450:1;3475:5;3471:2;3464:17;3520:4;3516:2;3506:19;3590:2;3578:10;3574:19;3571:1;3567:27;3561:4;3557:38;3626:4;3614:10;3611:20;3608:47;;;-1:-1:-1;3649:4:47;3608:47;3704:2;3699:3;3695:12;3692:1;3688:20;3682:4;3678:31;3668:41;;3759:82;3777:2;3770:5;3767:13;3759:82;;;3822:17;;;3803:1;3792:13;3759:82;;;3763:3;;;3403:448;3312:545;;;:::o;4033:1352::-;4153:10;;-1:-1:-1;;;;;4175:30:47;;4172:56;;;4208:18;;:::i;:::-;4237:97;4327:6;4287:38;4319:4;4313:11;4287:38;:::i;:::-;4281:4;4237:97;:::i;:::-;4389:4;;4453:2;4442:14;;4470:1;4465:663;;;;5172:1;5189:6;5186:89;;;-1:-1:-1;5241:19:47;;;5235:26;5186:89;-1:-1:-1;;3990:1:47;3986:11;;;3982:24;3978:29;3968:40;4014:1;4010:11;;;3965:57;5288:81;;4435:944;;4465:663;3259:1;3252:14;;;3296:4;3283:18;;-1:-1:-1;;4501:20:47;;;4619:236;4633:7;4630:1;4627:14;4619:236;;;4722:19;;;4716:26;4701:42;;4814:27;;;;4782:1;4770:14;;;;4649:19;;4619:236;;;4623:3;4883:6;4874:7;4871:19;4868:201;;;4944:19;;;4938:26;-1:-1:-1;;5027:1:47;5023:14;;;5039:3;5019:24;5015:37;5011:42;4996:58;4981:74;;4868:201;-1:-1:-1;;;;;5115:1:47;5099:14;;;5095:22;5082:36;;-1:-1:-1;4033:1352:47:o;6854:396::-;7003:2;6992:9;6985:21;6966:4;7035:6;7029:13;7078:6;7073:2;7062:9;7058:18;7051:34;7094:79;7166:6;7161:2;7150:9;7146:18;7141:2;7133:6;7129:15;7094:79;:::i;:::-;7234:2;7213:15;-1:-1:-1;;7209:29:47;7194:45;;;;7241:2;7190:54;;6854:396;-1:-1:-1;;6854:396:47:o;7255:297::-;7373:12;;7420:4;7409:16;;;7403:23;;7373:12;7438:16;;7435:111;;;-1:-1:-1;;7512:4:47;7508:17;;;;7505:1;7501:25;7497:38;7486:50;;7255:297;-1:-1:-1;7255:297:47:o;:::-;271:1911:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106103845760003560e01c8063832009af116101d1578063cf6afbae11610102578063e031535b116100a0578063efa90d361161006f578063efa90d3614610b7a578063f0a7db0a14610b8f578063f4f3d7ec14610baf578063fb9bf8d414610bcf57600080fd5b8063e031535b14610b0e578063e5eb5a4814610b23578063ea8a1af014610b50578063ebc18b9b14610b6557600080fd5b8063dd4e2ba5116100dc578063dd4e2ba514610a33578063dd96a19d14610a79578063dea5f6a614610aad578063deaaa7cc14610ada57600080fd5b8063cf6afbae146109e4578063d45a010b14610a04578063d889161914610a1957600080fd5b8063aec116b61161016f578063bfe45b5911610149578063bfe45b5914610945578063c19d93fb14610965578063c7f758a814610987578063cb853950146109b457600080fd5b8063aec116b6146108ae578063b323580d146108e4578063bddc16411461091157600080fd5b80638a9cd550116101ab5780638a9cd55014610827578063930de9791461083c57806396f0e9621461086c578063a1ac6cb21461088157600080fd5b8063832009af146107ca57806384b0196e146107df578063861874881461080757600080fd5b8063427d56c2116102b65780635f953a03116102545780636e4eb810116102235780636e4eb81014610757578063785ddfe5146107775780637c65d711146107955780637f57a0ba146107aa57600080fd5b80635f953a03146106d757806360506ff61461070d57806365f16263146107225780636ca1a2c71461074257600080fd5b806350a5e5241161029057806350a5e5241461061e578063531bd81214610641578063544ffc9c1461066157806354fd4d50146106ab57600080fd5b8063427d56c2146105aa5780634970ab2f146105d75780634d24a67f146105f757600080fd5b80632399c66011610323578063347cf665116102fd578063347cf665146105145780633932abb1146105485780633b6d199b1461055d578063419c533c1461058a57600080fd5b80632399c660146104bf578063262e59e9146104df57806332763c22146104f457600080fd5b806302d05d3f1161035f57806302d05d3f146103ff57806306fdde031461042c578063070dc5d91461044e57806320b3e8451461049f57600080fd5b80624114a81461039257806301ffc9a7146103ba57806302a251a3146103ea57600080fd5b3661038d57005b005b600080fd5b34801561039e57600080fd5b506103a7610be4565b6040519081526020015b60405180910390f35b3480156103c657600080fd5b506103da6103d5366004612fad565b610bf4565b60405190151581526020016103b1565b3480156103f657600080fd5b506103a7610c2b565b34801561040b57600080fd5b50610414610c36565b6040516001600160a01b0390911681526020016103b1565b34801561043857600080fd5b50610441610c4a565b6040516103b1919061301d565b34801561045a57600080fd5b50610492610469366004613030565b601460209081526000918252604091829020825180840190935280548352600101549082015281565b6040516103b19190613049565b3480156104ab57600080fd5b506103da6104ba3660046130bc565b610cdc565b3480156104cb57600080fd5b506103da6104da366004613030565b610d42565b3480156104eb57600080fd5b506103a7610d86565b34801561050057600080fd5b506103da61050f366004613125565b610da2565b34801561052057600080fd5b50610530678ac7230489e8000081565b6040516001600160401b0390911681526020016103b1565b34801561055457600080fd5b506103a7610edf565b34801561056957600080fd5b506103a7610578366004613030565b60009081526006602052604090205490565b34801561059657600080fd5b506103a76105a53660046131a6565b610eea565b3480156105b657600080fd5b506105ca6105c5366004613216565b610f22565b6040516103b1919061326c565b3480156105e357600080fd5b506103a76105f236600461352a565b61104e565b34801561060357600080fd5b5061060c600281565b60405160ff90911681526020016103b1565b34801561062a57600080fd5b50610633611090565b6040516103b192919061355e565b34801561064d57600080fd5b506103da61065c3660046135c7565b611196565b34801561066d57600080fd5b5061069661067c366004613030565b600090815260146020526040902080546001909101549091565b604080519283526020830191909152016103b1565b3480156106b757600080fd5b50604080518082019091526003815262332e3160e81b6020820152610441565b3480156106e357600080fd5b506103a76106f2366004613622565b6001600160a01b03166000908152600b602052604090205490565b34801561071957600080fd5b506103a7611201565b34801561072e57600080fd5b506103a761073d36600461363f565b61120c565b34801561074e57600080fd5b506103a76112d4565b34801561076357600080fd5b50610696610772366004613674565b611300565b34801561078357600080fd5b50601b546001600160a01b0316610414565b3480156107a157600080fd5b50610441611335565b3480156107b657600080fd5b506103da6107c536600461352a565b611344565b3480156107d657600080fd5b506103a76115cf565b3480156107eb57600080fd5b506107f46115da565b6040516103b197969594939291906136a4565b34801561081357600080fd5b506103a7610822366004613030565b611662565b34801561083357600080fd5b506105ca61169a565b34801561084857600080fd5b506103da610857366004613622565b60036020526000908152604090205460ff1681565b34801561087857600080fd5b5061038b611714565b34801561088d57600080fd5b506103a761089c366004613622565b60136020526000908152604090205481565b3480156108ba57600080fd5b506103a76108c9366004613622565b6001600160a01b031660009081526013602052604090205490565b3480156108f057600080fd5b506109046108ff366004613030565b611a31565b6040516103b1919061374d565b34801561091d57600080fd5b506103a77f000000000000000000000000000000000000000000000000000000000000000081565b34801561095157600080fd5b506103a7610960366004613760565b611aa3565b34801561097157600080fd5b5061097a611ae7565b6040516103b191906137d1565b34801561099357600080fd5b506109a76109a2366004613030565b611b59565b6040516103b191906137f9565b3480156109c057600080fd5b506103da6109cf366004613622565b60046020526000908152604090205460ff1681565b3480156109f057600080fd5b506103a76109ff36600461352a565b611ccc565b348015610a1057600080fd5b50610633611cfd565b348015610a2557600080fd5b506015546103da9060ff1681565b348015610a3f57600080fd5b5060408051808201909152601881527f737570706f72743d627261766f2671756f72756d3d666f7200000000000000006020820152610441565b348015610a8557600080fd5b506103a77f000000000000000000000000000000000000000000000000000000000000000081565b348015610ab957600080fd5b506103a7610ac8366004613622565b60026020526000908152604090205481565b348015610ae657600080fd5b506103a77f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f81565b348015610b1a57600080fd5b506103a7611ec8565b348015610b2f57600080fd5b506103a7610b3e366004613030565b60166020526000908152604090205481565b348015610b5c57600080fd5b5061038b611eda565b348015610b7157600080fd5b506103a7611fc4565b348015610b8657600080fd5b506105ca611ff0565b348015610b9b57600080fd5b5061038b610baa36600461387f565b612046565b348015610bbb57600080fd5b5061038b610bca366004613622565b612289565b348015610bdb57600080fd5b506103a7612324565b6000610bef600c5490565b905090565b60006001600160e01b031982166348f0249f60e11b1480610c2557506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000610bef600e5490565b6000610bef6012546001600160a01b031690565b606060078054610c599061390f565b80601f0160208091040260200160405190810160405280929190818152602001828054610c859061390f565b8015610cd25780601f10610ca757610100808354040283529160200191610cd2565b820191906000526020600020905b815481529060010190602001808311610cb557829003601f168201915b5050505050905090565b6001600160a01b03831660009081526004602052604081205460ff16610d3757610d1284678ac7230489e8000085856000610da2565b506001600160a01b0384166000908152600460205260409020805460ff191660011790555b5060015b9392505050565b60155460009060ff16610d705760405162461bcd60e51b8152600401610d6790613949565b60405180910390fd5b5060009081526017602052604090205460ff1690565b6000610d90610c2b565b610d98611ec8565b610bef91906139ca565b6040516bffffffffffffffffffffffff19606087901b166020820152603481018590526000908190605401604051602081830303815290604052805190602001209050600083610e5157610e4c8686808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f0000000000000000000000000000000000000000000000000000000000000000925086915061232f9050565b610eb1565b610eb18686808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f0000000000000000000000000000000000000000000000000000000000000000925086915061232f9050565b905080610ed15760405163452c2df160e11b815260040160405180910390fd5b506001979650505050505050565b6000610bef600d5490565b600033610ef981878686611196565b50610f168882898860405180602001604052806000815250612345565b98975050505050505050565b606060008083610f3957610f34611090565b610f41565b610f41611cfd565b91509150600082516001600160401b03811115610f6057610f6061327f565b604051908082528060200260200182016040528015610f89578160200160208202803683370190505b50905060005b825181101561100d57828181518110610faa57610faa6139dd565b602002602001015160200151838281518110610fc857610fc86139dd565b602002602001015160000151610fde91906139f3565b828281518110610ff057610ff06139dd565b60209081029190910101528061100581613a1a565b915050610f8f565b5060005b6001845161101f9190613a33565b8110156110445761103181838661255f565b508061103c81613a1a565b915050611011565b5091949350505050565b3360009081526004602052604081205460ff1661107d5760405162461bcd60e51b8152600401610d6790613a46565b61108682611344565b50610c25826126c5565b606080600061109d611ff0565b9050600081516001600160401b038111156110ba576110ba61327f565b6040519080825280602002602001820160405280156110ff57816020015b60408051808201909152600080825260208201528152602001906001900390816110d85790505b50905060005b825181101561118c5760146000848381518110611124576111246139dd565b602002602001015181526020019081526020016000206000016040518060400160405290816000820154815260200160018201548152505082828151811061116e5761116e6139dd565b6020026020010181905250808061118490613a1a565b915050611105565b5090939092509050565b6001600160a01b03841660009081526003602052604081205460ff166111f6576111c4858585856000610da2565b506001600160a01b038516600090815260026020908152604080832087905560039091529020805460ff191660011790555b506001949350505050565b6000610bef60115490565b3360008181526003602052604081205490919060ff166112af5760405162461bcd60e51b815260206004820152605260248201527f476f7665726e6f723a20796f75206e65656420746f2063617374206120766f7460448201527f652077697468207468652070726f6f66206174206c65617374206f6e636520616064820152711b99081e5bdd481a185d995b89dd081e595d60721b608482015260a401610d67565b6112cb8582868660405180602001604052806000815250612345565b95945050505050565b60155460009060ff166112f95760405162461bcd60e51b8152600401610d6790613949565b5060195490565b60008281526014602090815260408083206001600160a01b0385168452600301909152902080546001909101545b9250929050565b606060088054610c599061390f565b80516000906001600160a01b031633146113b95760405162461bcd60e51b815260206004820152603060248201527f476f7665726e6f723a207468652070726f706f73616c20617574686f72206d7560448201526f39ba1031329036b9b39739b2b73232b960811b6064820152608401610d67565b60005b60028110156115715760008160018111156113d9576113d96137bb565b905060008160018111156113ef576113ef6137bb565b036113fa575061155f565b600181600181111561140e5761140e6137bb565b0361154457608084015151516000036114a05760405162461bcd60e51b815260206004820152604860248201527f476f7665726e6f724d6574616461746156616c69646174696f6e3a207468657260448201527f652063616e6e6f74206265207a65726f207369676e65727320696e20736166656064820152674d6574616461746160c01b608482015260a401610d67565b83608001516020015160000361152c5760405162461bcd60e51b8152602060048201526044602482018190527f476f7665726e6f724d6574616461746156616c69646174696f6e3a2074687265908201527f73686f6c642063616e6e6f74206265207a65726f20696e20736166654d6574616064820152636461746160e01b608482015260a401610d67565b6080840151515160000361153f57600080fd5b61155d565b6040516308b6566d60e11b815260040160405180910390fd5b505b8061156981613a1a565b9150506113bc565b508160200151516000036115c75760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a20656d7074792070726f706f73616c00000000000000006044820152606401610d67565b506001919050565b6000610bef600f5490565b60006060808280808361160d7f000000000000000000000000000000000000000000000000000000000000000083612a47565b6116387f00000000000000000000000000000000000000000000000000000000000000006001612a47565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60155460009060ff166116875760405162461bcd60e51b8152600401610d6790613949565b5060009081526016602052604090205490565b60155460609060ff166116bf5760405162461bcd60e51b8152600401610d6790613949565b6018805480602002602001604051908101604052809291908181526020018280548015610cd257602002820191906000526020600020905b8154815260200190600101908083116116f7575050505050905090565b600461171e611ae7565b600481111561172f5761172f6137bb565b146117b25760405162461bcd60e51b815260206004820152604760248201527f476f7665726e6f72536f7274696e673a20636f6e74657374206d75737420626560448201527f20746f2063616c63756c61746520736f7274656420616e6420746965642070726064820152666f706f73616c7360c81b608482015260a401610d67565b60155460ff16156118515760405162461bcd60e51b815260206004820152605f60248201527f476f7665726e6f72536f7274696e673a20736574536f72746564416e6454696560448201527f6450726f706f73616c7328292068617320616c7265616479206265656e20727560648201527f6e20616e642069747320726573706563746976652076616c7565732073657400608482015260a401610d67565b61185b6001610f22565b805161186f91601891602090910190612e87565b5060185460009060019061188390826139ca565b601a5560005b601854811015611a1f576018546000906118a590600190613a33565b90506000806118ee60186118b98686613a33565b815481106118c9576118c96139dd565b9060005260206000200154600090815260146020526040902080546001909101549091565b909250905060006118ff82846139f3565b90508460000361194957601854909650869061191c8660016139ca565b036119405761192b8585613a33565b60008781526016602052604090205560198690555b50505050611a0d565b86810361199c5760008681526017602052604090205460ff16611980576000868152601760205260409020805460ff191660011790555b60185461198e9060016139ca565b601a540361199c57601a8690555b8681146119d5576119ad8585613a33565b6119b89060016139ca565b600087815260166020526040902055856119d181613a1a565b9650505b6018546119e38660016139ca565b03611a07576119f28585613a33565b60008781526016602052604090205560198690555b95505050505b80611a1781613a1a565b915050611889565b50506015805460ff1916600117905550565b6000818152601460209081526040918290206002810180548451818502810185019095528085526060949293830182828015611a9657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611a78575b5050505050915050919050565b6000611ab0338484610cdc565b611acc5760405162461bcd60e51b8152600401610d6790613a46565b611ad584611344565b50611adf846126c5565b949350505050565b60095460009060ff1615611afb5750600290565b6000611b05610be4565b9050428110611b1657600091505090565b6000611b20611ec8565b9050428110611b325760039250505090565b6000611b3c610d86565b9050428110611b4f576001935050505090565b6004935050505090565b611b61612ed2565b6000828152600a6020908152604091829020825160a0810190935280546001600160a01b031683526001810180549192840191611b9d9061390f565b80601f0160208091040260200160405190810160405280929190818152602001828054611bc99061390f565b8015611c165780601f10611beb57610100808354040283529160200191611c16565b820191906000526020600020905b815481529060010190602001808311611bf957829003601f168201915b5050509183525050600282015460ff16151560208083019190915260408051808301825260038501546001600160a01b0316815281840152805160048501805493840282016060908101845292820184815294830194919390928492918491840182828015611cae57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611c90575b50505050508152602001600182015481525050815250509050919050565b600081604051602001611cdf91906137f9565b60408051601f19818403018152919052805160209091012092915050565b6060806000611d0a611ff0565b9050600081516001600160401b03811115611d2757611d2761327f565b604051908082528060200260200182016040528015611d50578160200160208202803683370190505b509050600082516001600160401b03811115611d6e57611d6e61327f565b604051908082528060200260200182016040528015611db357816020015b6040805180820190915260008082526020820152815260200190600190039081611d8c5790505b5090506000805b8451811015611ebc57611df2858281518110611dd857611dd86139dd565b602002602001015160009081526006602052604090205490565b600114611eaa57848181518110611e0b57611e0b6139dd565b6020026020010151848381518110611e2557611e256139dd565b60200260200101818152505060146000868381518110611e4757611e476139dd565b6020026020010151815260200190815260200160002060000160405180604001604052908160008201548152602001600182015481525050838381518110611e9157611e916139dd565b6020908102919091010152611ea76001836139ca565b91505b80611eb481613a1a565b915050611dba565b50919590945092505050565b6000611ed2610edf565b610d98610be4565b611ee2610c36565b6001600160a01b0316336001600160a01b031614611eff57600080fd5b6000611f09611ae7565b90506002816004811115611f1f57611f1f6137bb565b14158015611f3f57506004816004811115611f3c57611f3c6137bb565b14155b611f8b5760405162461bcd60e51b815260206004820152601c60248201527f476f7665726e6f723a20636f6e74657374206e6f7420616374697665000000006044820152606401610d67565b6009805460ff191660011790556040517f4cd963a081760a54f571abc0f1db4dde31b4a07d8d6da3e844b8c6f47eeaaa4290600090a150565b60155460009060ff16611fe95760405162461bcd60e51b8152600401610d6790613949565b50601a5490565b60606005805480602002602001604051908101604052809291908181526020018280548015610cd257602002820191906000526020600020908154815260200190600101908083116116f7575050505050905090565b61204e610c36565b6001600160a01b0316336001600160a01b0316146120d45760405162461bcd60e51b815260206004820152603760248201527f476f7665726e6f723a206f6e6c792074686520636f6e7465737420637265617460448201527f6f722063616e2064656c6574652070726f706f73616c730000000000000000006064820152608401610d67565b60046120de611ae7565b60048111156120ef576120ef6137bb565b036121745760405162461bcd60e51b815260206004820152604960248201527f476f7665726e6f723a2064656c6574696f6e206f662070726f706f73616c732060448201527f61667465722074686520656e64206f66206120636f6e74657374206973206e6f6064820152681d08185b1b1bddd95960ba1b608482015260a401610d67565b60005b815181101561224e5760066000838381518110612196576121966139dd565b602002602001015181526020019081526020016000205460011461223c576001600660008484815181106121cc576121cc6139dd565b60200260200101518152602001908152602001600020819055506040518060600160405280603d8152602001613bd6603d9139600a6000848481518110612215576122156139dd565b60200260200101518152602001908152602001600020600101908161223a9190613ae4565b505b8061224681613a1a565b915050612177565b507f75a75cf5c561892f4cc5b26c1b8e933849b42238c96dd073d080d1ae96c514168160405161227e919061326c565b60405180910390a150565b612291610c36565b6001600160a01b0316336001600160a01b0316146122ae57600080fd5b60006122c2601b546001600160a01b031690565b601b80546001600160a01b0319166001600160a01b0385811691821790925560408051928416835260208301919091529192507f753a2cf8d360cff631674504210913e48247f8e56b3e6d2006c2103d4095999f910160405180910390a15050565b6000610bef60105490565b60008261233c8584612af3565b14949350505050565b60006001612351611ae7565b6004811115612362576123626137bb565b146123bb5760405162461bcd60e51b815260206004820152602360248201527f476f7665726e6f723a20766f7465206e6f742063757272656e746c792061637460448201526269766560e81b6064820152608401610d67565b6000831161241f5760405162461bcd60e51b815260206004820152602b60248201527f476f7665726e6f723a2063616e6e6f7420766f746520776974682030206f722060448201526a666577657220766f74657360a81b6064820152608401610d67565b6001600160a01b03851660009081526003602052604090205460ff166124c55760405162461bcd60e51b815260206004820152604f60248201527f476f7665726e6f723a20796f75206e65656420746f2076657269667920796f7560448201527f72206e756d626572206f6620766f74657320616761696e737420746865206d6560648201526e1c9adb19481c9bdbdd08199a5c9cdd608a1b608482015260a401610d67565b6124f786868686600260008b6001600160a01b03166001600160a01b0316815260200190815260200160002054612b40565b846001600160a01b03167fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda4878686866040516125369493929190613ba3565b60405180910390a2505050506001600160a01b0316600090815260026020526040902054919050565b600083805b84518110156125bd5784828151811061257f5761257f6139dd565b6020026020010151858281518110612599576125996139dd565b602002602001015112156125ab578091505b806125b581613a1a565b915050612564565b508481036125cf576000915050610d3b565b60008486815181106125e3576125e36139dd565b602002602001015190508482815181106125ff576125ff6139dd565b6020026020010151858781518110612619576126196139dd565b60200260200101818152505080858381518110612638576126386139dd565b6020026020010181815250506000848781518110612658576126586139dd565b60200260200101519050848381518110612674576126746139dd565b602002602001015185888151811061268e5761268e6139dd565b602002602001018181525050808584815181106126ad576126ad6139dd565b60209081029190910101525060019695505050505050565b600060036126d1611ae7565b60048111156126e2576126e26137bb565b146127555760405162461bcd60e51b815260206004820152603e60248201527f476f7665726e6f723a20636f6e74657374206d7573742062652071756575656460448201527f20666f722070726f706f73616c7320746f206265207375626d697474656400006064820152608401610d67565b61275d6115cf565b336000908152600b6020526040902054106128065760405162461bcd60e51b815260206004820152605d60248201527f476f7665726e6f723a207468652073616d652063616e6e6f74207375626d697460448201527f206d6f7265207468616e20746865206e756d416c6c6f77656450726f706f736160648201527f6c5375626d697373696f6e7320666f72207468697320636f6e74657374000000608482015260a401610d67565b61280e612324565b600554106128845760405162461bcd60e51b815260206004820152603960248201527f476f7665726e6f723a20746865206d6178206e756d626572206f662070726f7060448201527f6f73616c732068617665206265656e207375626d6974746564000000000000006064820152608401610d67565b600061288f83611ccc565b6000818152600a602052604090206002015490915060ff16156129065760405162461bcd60e51b815260206004820152602960248201527f476f7665726e6f723a206475706c69636174652070726f706f73616c73206e6f6044820152681d08185b1b1bddd95960ba1b6064820152608401610d67565b6005805460018082019092557f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0018290556000828152600a60209081526040909120855181546001600160a01b0319166001600160a01b039091161781559085015185928201906129779082613ae4565b50604082015160028201805460ff19169115159190911790556060820151516003820180546001600160a01b0319166001600160a01b0390921691909117905560808201518051805160048401916129d491839160200190612f43565b50602091820151600191820155336000908152600b9092526040822080549194509250612a029084906139ca565b90915550506040805182815233602082015281517fcd423cc1203c0af96b9b3d68d73b3064a69de2d14450bb7181c5e5df2132b358929181900390910190a192915050565b606060ff8314612a6157612a5a83612df4565b9050610c25565b818054612a6d9061390f565b80601f0160208091040260200160405190810160405280929190818152602001828054612a999061390f565b8015612ae65780601f10612abb57610100808354040283529160200191612ae6565b820191906000526020600020905b815481529060010190602001808311612ac957829003601f168201915b5050505050905092915050565b600081815b8451811015612b3857612b2482868381518110612b1757612b176139dd565b6020026020010151612e33565b915080612b3081613a1a565b915050612af8565b509392505050565b60008581526014602090815260408083206001600160a01b0388168452601390925290912054612b709083613a33565b831115612bdb5760405162461bcd60e51b815260206004820152603360248201527f476f7665726e6f72566f74696e6753696d706c653a206e6f7420656e6f756768604482015272081d9bdd195cc81b19599d081d1bc818d85cdd606a1b6064820152608401610d67565b6001600160a01b03851660009081526003820160205260409020541560ff8516612c4d57815484908390600090612c139084906139ca565b90915550506001600160a01b038616600090815260038301602052604081208054869290612c429084906139ca565b90915550612d879050565b60001960ff861601612d2157612c61611201565b600114612cd8576040805162461bcd60e51b81526020600482015260248101919091527f476f7665726e6f72566f74696e6753696d706c653a20646f776e766f74696e6760448201527f206973206e6f7420656e61626c656420666f72207468697320436f6e746573746064820152608401610d67565b83826000016001016000828254612cef91906139ca565b90915550506001600160a01b038616600090815260038301602052604081206001018054869290612c429084906139ca565b60405162461bcd60e51b815260206004820152603560248201527f476f7665726e6f72566f74696e6753696d706c653a20696e76616c69642076616044820152746c756520666f7220656e756d20566f74655479706560581b6064820152608401610d67565b8015612dbe57600282018054600181018255600091825260209091200180546001600160a01b0319166001600160a01b0388161790555b6001600160a01b03861660009081526013602052604081208054869290612de69084906139ca565b909155505050505050505050565b60606000612e0183612e5f565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000818310612e4f576000828152602084905260409020610d3b565b5060009182526020526040902090565b600060ff8216601f811115610c2557604051632cd44ac360e21b815260040160405180910390fd5b828054828255906000526020600020908101928215612ec2579160200282015b82811115612ec2578251825591602001919060010190612ea7565b50612ece929150612f98565b5090565b6040518060a0016040528060006001600160a01b0316815260200160608152602001600015158152602001612f1c604051806020016040528060006001600160a01b031681525090565b8152602001612f3e604051806040016040528060608152602001600081525090565b905290565b828054828255906000526020600020908101928215612ec2579160200282015b82811115612ec257825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612f63565b5b80821115612ece5760008155600101612f99565b600060208284031215612fbf57600080fd5b81356001600160e01b031981168114610d3b57600080fd5b6000815180845260005b81811015612ffd57602081850181015186830182015201612fe1565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610d3b6020830184612fd7565b60006020828403121561304257600080fd5b5035919050565b815181526020808301519082015260408101610c25565b6001600160a01b038116811461307557600080fd5b50565b60008083601f84011261308a57600080fd5b5081356001600160401b038111156130a157600080fd5b6020830191508360208260051b850101111561132e57600080fd5b6000806000604084860312156130d157600080fd5b83356130dc81613060565b925060208401356001600160401b038111156130f757600080fd5b61310386828701613078565b9497909650939450505050565b8035801515811461312057600080fd5b919050565b60008060008060006080868803121561313d57600080fd5b853561314881613060565b94506020860135935060408601356001600160401b0381111561316a57600080fd5b61317688828901613078565b9094509250613189905060608701613110565b90509295509295909350565b803560ff8116811461312057600080fd5b60008060008060008060a087890312156131bf57600080fd5b863595506131cf60208801613195565b9450604087013593506060870135925060808701356001600160401b038111156131f857600080fd5b61320489828a01613078565b979a9699509497509295939492505050565b60006020828403121561322857600080fd5b610d3b82613110565b600081518084526020808501945080840160005b8381101561326157815187529582019590820190600101613245565b509495945050505050565b602081526000610d3b6020830184613231565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156132b7576132b761327f565b60405290565b60405160a081016001600160401b03811182821017156132b7576132b761327f565b604051601f8201601f191681016001600160401b03811182821017156133075761330761327f565b604052919050565b60006020828403121561332157600080fd5b604051602081018181106001600160401b03821117156133435761334361327f565b604052905080823561335481613060565b905292915050565b60006001600160401b038211156133755761337561327f565b5060051b60200190565b60006040828403121561339157600080fd5b613399613295565b905081356001600160401b038111156133b157600080fd5b8201601f810184136133c257600080fd5b803560206133d76133d28361335c565b6132df565b82815260059290921b830181019181810190878411156133f657600080fd5b938201935b8385101561341d57843561340e81613060565b825293820193908201906133fb565b85525093840135938301939093525092915050565b600060a0828403121561344457600080fd5b61344c6132bd565b9050813561345981613060565b81526020828101356001600160401b038082111561347657600080fd5b818501915085601f83011261348a57600080fd5b81358181111561349c5761349c61327f565b6134ae601f8201601f191685016132df565b81815287858386010111156134c257600080fd5b81858501868301376000858383010152808587015250506134e560408601613110565b60408501526134f7866060870161330f565b6060850152608085013592508083111561351057600080fd5b505061351e8482850161337f565b60808301525092915050565b60006020828403121561353c57600080fd5b81356001600160401b0381111561355257600080fd5b611adf84828501613432565b6000604080835261357181840186613231565b83810360208581019190915285518083528682019282019060005b818110156135b9576135a983865180518252602090810151910152565b938301939185019160010161358c565b509098975050505050505050565b600080600080606085870312156135dd57600080fd5b84356135e881613060565b93506020850135925060408501356001600160401b0381111561360a57600080fd5b61361687828801613078565b95989497509550505050565b60006020828403121561363457600080fd5b8135610d3b81613060565b60008060006060848603121561365457600080fd5b8335925061366460208501613195565b9150604084013590509250925092565b6000806040838503121561368757600080fd5b82359150602083013561369981613060565b809150509250929050565b60ff60f81b8816815260e0602082015260006136c360e0830189612fd7565b82810360408401526136d58189612fd7565b606084018890526001600160a01b038716608085015260a0840186905283810360c085015290506137068185613231565b9a9950505050505050505050565b600081518084526020808501945080840160005b838110156132615781516001600160a01b031687529582019590820190600101613728565b602081526000610d3b6020830184613714565b60008060006040848603121561377557600080fd5b83356001600160401b038082111561378c57600080fd5b61379887838801613432565b945060208601359150808211156137ae57600080fd5b5061310386828701613078565b634e487b7160e01b600052602160045260246000fd5b60208101600583106137f357634e487b7160e01b600052602160045260246000fd5b91905290565b60208152600060018060a01b03808451166020840152602084015160a0604085015261382860c0850182612fd7565b90506040850151151560608501528160608601515116608085015260808501519150601f198482030160a08501528151604082526138696040830182613714565b6020938401519290930191909152509392505050565b6000602080838503121561389257600080fd5b82356001600160401b038111156138a857600080fd5b8301601f810185136138b957600080fd5b80356138c76133d28261335c565b81815260059190911b820183019083810190878311156138e657600080fd5b928401925b82841015613904578335825292840192908401906138eb565b979650505050505050565b600181811c9082168061392357607f821691505b60208210810361394357634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526045908201527f526577617264734d6f64756c653a2072756e20736574536f72746564416e645460408201527f69656450726f706f73616c73282920746f20706f70756c61746520746869732060608201526476616c756560d81b608082015260a00190565b634e487b7160e01b600052601160045260246000fd5b80820180821115610c2557610c256139b4565b634e487b7160e01b600052603260045260246000fd5b8181036000831280158383131683831282161715613a1357613a136139b4565b5092915050565b600060018201613a2c57613a2c6139b4565b5060010190565b81810381811115610c2557610c256139b4565b6020808252602f908201527f476f7665726e6f723a2061646472657373206973206e6f74207065726d69737360408201526e1a5bdb9959081d1bc81cdd589b5a5d608a1b606082015260800190565b601f821115613adf57600081815260208120601f850160051c81016020861015613abc5750805b601f850160051c820191505b81811015613adb57828155600101613ac8565b5050505b505050565b81516001600160401b03811115613afd57613afd61327f565b613b1181613b0b845461390f565b84613a95565b602080601f831160018114613b465760008415613b2e5750858301515b600019600386901b1c1916600185901b178555613adb565b600085815260208120601f198616915b82811015613b7557888601518255948401946001909101908401613b56565b5085821015613b935787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b84815260ff84166020820152826040820152608060608201526000613bcb6080830184612fd7565b969550505050505056fe546869732070726f706f73616c20686173206265656e2064656c65746564206279207468652063726561746f72206f662074686520636f6e746573742ea2646970667358221220b56fa4fd72a9a79fe7aa88909bc893272e6f33ce3e4cf9a097f07da0335969a364736f6c63430008130033",
    "sourceMapi;:::-;;;160:25:47;;;148:2;133:18;1155:136:36;;;;;;;;2929:214:37;;;;;;;;;;-1:-1:-1;2929:214:37;;;;;:::i;:::-;;:::i;:::-;;;652:14:47;;645:22;627:41;;615:2;600:18;2929:214:37;487:187:47;1437:136:36;;;;;;;;;;;;;:::i;2054:126::-;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;843:32:47;;;825:51;;813:2;798:18;2054:126:36;679:203:47;3199:98:37;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;793:60:40:-;;;;;;;;;;-1:-1:-1;793:60:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;7696:369:37:-;;;;;;;;;;-1:-1:-1;7696:369:37;;;;;:::i;:::-;;:::i;950:249:43:-;;;;;;;;;;-1:-1:-1;950:249:43;;;;;:::i;:::-;;:::i;5876:126:37:-;;;;;;;;;;;;;:::i;1304:539:38:-;;;;;;;;;;-1:-1:-1;1304:539:38;;;;;:::i;:::-;;:::i;1158:72:37:-;;;;;;;;;;;;1210:20;1158:72;;;;;-1:-1:-1;;;;;4269:31:47;;;4251:50;;4239:2;4224:18;1158:72:37;4107:200:47;1297:134:36;;;;;;;;;;;;;:::i;7148:140:37:-;;;;;;;;;;-1:-1:-1;7148:140:37;;;;;:::i;:::-;7224:7;7250:31;;;:19;:31;;;;;;;7148:140;12839:355;;;;;;;;;;-1:-1:-1;12839:355:37;;;;;:::i;:::-;;:::i;5071:926:43:-;;;;;;;;;;-1:-1:-1;5071:926:43;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;9810:294:37:-;;;;;;;;;;-1:-1:-1;9810:294:37;;;;;:::i;:::-;;:::i;433:41:39:-;;;;;;;;;;;;473:1;433:41;;;;;10566:4:47;10554:17;;;10536:36;;10524:2;10509:18;433:41:39;10394:184:47;2612:566:43;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;12326:453:37:-;;;;;;;;;;-1:-1:-1;12326:453:37;;;;;:::i;:::-;;:::i;1193:302:40:-;;;;;;;;;;-1:-1:-1;1193:302:40;;;;;:::i;:::-;1265:16;1351:32;;;:20;:32;;;;;1401:40;;1443:44;;;;;1401:40;;1193:302;;;;;12312:25:47;;;12368:2;12353:18;;12346:34;;;;12285:18;1193:302:40;12138:248:47;3516:101:37;;;;;;;;;;-1:-1:-1;3598:12:37;;;;;;;;;;;;-1:-1:-1;;;3598:12:37;;;;3516:101;;6900:130;;;;;;;;;;-1:-1:-1;6900:130:37;;;;;:::i;:::-;-1:-1:-1;;;;;6999:24:37;6973:7;6999:24;;;:15;:24;;;;;;;6900:130;1903:145:36;;;;;;;;;;;;;:::i;13266:445:37:-;;;;;;;;;;-1:-1:-1;13266:445:37;;;;;:::i;:::-;;:::i;1958:242:43:-;;;;;;;;;;;;;:::i;1598:424:40:-;;;;;;;;;;-1:-1:-1;1598:424:40;;;;;:::i;:::-;;:::i;536:123:41:-;;;;;;;;;;-1:-1:-1;630:22:41;;-1:-1:-1;;;;;630:22:41;536:123;;3355:102:37;;;;;;;;;;;;;:::i;8137:1202::-;;;;;;;;;;-1:-1:-1;8137:1202:37;;;;;:::i;:::-;;:::i;1579:169:36:-;;;;;;;;;;;;;:::i;4983:633:28:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;1286:281:43:-;;;;;;;;;;-1:-1:-1;1286:281:43;;;;;:::i;:::-;;:::i;1632:261::-;;;;;;;;;;;;;:::i;1294:57:37:-;;;;;;;;;;-1:-1:-1;1294:57:37;;;;;:::i;:::-;;;;;;;;;;;;;;;;6423:3170:43;;;;;;;;;;;;;:::i;726:61:40:-;;;;;;;;;;-1:-1:-1;726:61:40;;;;;:::i;:::-;;;;;;;;;;;;;;2468:177;;;;;;;;;;-1:-1:-1;2468:177:40;;;;;:::i;:::-;-1:-1:-1;;;;;2598:39:40;2556:22;2598:39;;;:26;:39;;;;;;;2468:177;2123:234;;;;;;;;;;-1:-1:-1;2123:234:40;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;378:45:38:-;;;;;;;;;;;;;;;9398:341:37;;;;;;;;;;-1:-1:-1;9398:341:37;;;;;:::i;:::-;;:::i;4783:675::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;6669:137::-;;;;;;;;;;-1:-1:-1;6669:137:37;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1357:56::-;;;;;;;;;;-1:-1:-1;1357:56:37;;;;;:::i;:::-;;;;;;;;;;;;;;;;4563:163;;;;;;;;;;-1:-1:-1;4563:163:37;;;;;:::i;:::-;;:::i;3303:952:43:-;;;;;;;;;;;;;:::i;273:55::-;;;;;;;;;;-1:-1:-1;273:55:43;;;;;;;;972:128:40;;;;;;;;;;-1:-1:-1;1060:33:40;;;;;;;;;;;;;;;;;972:128;;429:41:38;;;;;;;;;;;;;;;1236:52:37;;;;;;;;;;-1:-1:-1;1236:52:37;;;;;:::i;:::-;;;;;;;;;;;;;;1057:95;;;;;;;;;;;;1099:53;1057:95;;5687:122;;;;;;;;;;;;;:::i;334:62:43:-;;;;;;;;;;-1:-1:-1;334:62:43;;;;;:::i;:::-;;;;;;;;;;;;;;11963:300:37;;;;;;;;;;;;;:::i;2267:252:43:-;;;;;;;;;;;;;:::i;5514:112:37:-;;;;;;;;;;;;;:::i;11119:753::-;;;;;;;;;;-1:-1:-1;11119:753:37;;;;;:::i;:::-;;:::i;781:356:41:-;;;;;;;;;;-1:-1:-1;781:356:41;;;;;:::i;:::-;;:::i;1754:143:36:-;;;;;;;;;;;;;:::i;1155:136::-;1238:7;1264:20;2105:13:42;;;2017:108;1264:20:36;1257:27;;1155:136;:::o;2929:214:37:-;3031:4;-1:-1:-1;;;;;;3054:42:37;;-1:-1:-1;;;3054:42:37;;:82;;-1:-1:-1;;;;;;;;;;937:40:31;;;3100:36:37;3047:89;2929:214;-1:-1:-1;;2929:214:37:o;1437:136:36:-;1520:7;1546:20;2446:13:42;;;2358:108;2054:126:36;2132:7;2158:15;3221:8:42;;-1:-1:-1;;;;;3221:8:42;;3138:98;3199::37;3253:13;3285:5;3278:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3199:98;:::o;7696:369::-;-1:-1:-1;;;;;7818:33:37;;7788:13;7818:33;;;:24;:33;;;;;;;;7813:225;;7867:61;7878:7;1210:20;7915:5;;7922;7867:10;:61::i;:::-;-1:-1:-1;;;;;;7987:33:37;;;;;;:24;:33;;;;;:40;;-1:-1:-1;;7987:40:37;8023:4;7987:40;;;7813:225;-1:-1:-1;8054:4:37;7696:369;;;;;;:::o;950:249:43:-;1041:35;;1004:4;;1041:35;;1020:139;;;;-1:-1:-1;;;1020:139:43;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;1176:16:43;;;;:7;:16;;;;;;;;;950:249::o;5876:126:37:-;5941:7;5981:14;:12;:14::i;:::-;5967:11;:9;:11::i;:::-;:28;;;;:::i;1304:539:38:-;1559:40;;-1:-1:-1;;20016:2:47;20012:15;;;20008:53;1559:40:38;;;19996:66:47;20078:12;;;20071:28;;;1448:13:38;;;;20115:12:47;;1559:40:38;;;;;;;;;;;;1549:51;;;;;;1534:66;;1610:16;1629:6;:138;;1714:53;1733:5;;1714:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1740:20:38;;-1:-1:-1;1762:4:38;;-1:-1:-1;1714:18:38;;-1:-1:-1;1714:53:38:i;:::-;1629:138;;;1650:49;1669:5;;1650:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1676:16:38;;-1:-1:-1;1694:4:38;;-1:-1:-1;1650:18:38;;-1:-1:-1;1650:49:38:i;:::-;1610:157;;1782:11;1777:38;;1802:13;;-1:-1:-1;;;1802:13:38;;;;;;;;;;;1777:38;-1:-1:-1;1832:4:38;;1304:539;-1:-1:-1;;;;;;;1304:539:38:o;1297:134:36:-;1379:7;1405:19;2275:12:42;;;2188:106;12839:355:37;13021:7;719:10:22;13082:37:37;719:10:22;13101::37;13113:5;;13082:11;:37::i;:::-;;13136:51;13146:10;13158:5;13165:7;13174:8;13136:51;;;;;;;;;;;;:9;:51::i;:::-;13129:58;12839:355;-1:-1:-1;;;;;;;;12839:355:37:o;5071:926:43:-;5187:40;5244:31;5277:43;5336:23;:89;;5402:23;:21;:23::i;:::-;5336:89;;;5362:37;:35;:37::i;:::-;5243:182;;;;5435:32;5483:14;:21;-1:-1:-1;;;;;5470:35:43;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5470:35:43;;5435:70;;5520:9;5515:217;5539:23;:30;5535:1;:34;5515:217;;;5681:23;5705:1;5681:26;;;;;;;;:::i;:::-;;;;;;;:39;;;5635:23;5659:1;5635:26;;;;;;;;:::i;:::-;;;;;;;:35;;;5628:93;;;;:::i;:::-;5590:16;5607:1;5590:19;;;;;;;;:::i;:::-;;;;;;;;;;:131;5571:3;;;;:::i;:::-;;;;5515:217;;;;5746:9;5741:219;5789:1;5765:14;:21;:25;;;;:::i;:::-;5761:1;:29;5741:219;;;5903:46;5913:1;5916:16;5934:14;5903:9;:46::i;:::-;-1:-1:-1;5792:3:43;;;;:::i;:::-;;;;5741:219;;;-1:-1:-1;5976:14:43;;5071:926;-1:-1:-1;;;;5071:926:43:o;9810:294:37:-;9954:10;9902:7;9929:36;;;:24;:36;;;;;;;;9921:96;;;;-1:-1:-1;;;9921:96:37;;;;;;;:::i;:::-;10027:30;10048:8;10027:20;:30::i;:::-;;10074:23;10088:8;10074:13;:23::i;2612:566:43:-;2706:34;2742:49;2807:28;2838:19;:17;:19::i;:::-;2807:50;;2867:43;2930:11;:18;-1:-1:-1;;;;;2913:36:43;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;2913:36:43;;;;;;;;;;;;;;;;2867:82;;2964:9;2959:158;2983:11;:18;2979:1;:22;2959:158;;;3051:20;:36;3072:11;3084:1;3072:14;;;;;;;;:::i;:::-;;;;;;;3051:36;;;;;;;;;;;:55;;3022:84;;;;;;;;;;;;;;;;;;;;;;;;;:23;3046:1;3022:26;;;;;;;;:::i;:::-;;;;;;:84;;;;3003:3;;;;;:::i;:::-;;;;2959:158;;;-1:-1:-1;3134:11:43;;3147:23;;-1:-1:-1;2612:566:43;-1:-1:-1;2612:566:43:o;12326:453:37:-;-1:-1:-1;;;;;12493:34:37;;12459:13;12493:34;;;:25;:34;;;;;;;;12488:264;;12543:45;12554:7;12563:10;12575:5;;12582;12543:10;:45::i;:::-;-1:-1:-1;;;;;;12647:26:37;;;;;;:17;:26;;;;;;;;:39;;;12700:25;:34;;;;;:41;;-1:-1:-1;;12700:41:37;12737:4;12700:41;;;12488:264;-1:-1:-1;12768:4:37;12326:453;;;;;;:::o;1903:145:36:-;1990:7;2016:25;3054:18:42;;;2961:118;13266:445:37;719:10:22;13414:7:37;13496:32;;;:25;:32;;;;;;13414:7;;719:10:22;13496:32:37;;13475:161;;;;-1:-1:-1;;;13475:161:37;;21366:2:47;13475:161:37;;;21348:21:47;21405:2;21385:18;;;21378:30;21444:34;21424:18;;;21417:62;21515:34;21495:18;;;21488:62;-1:-1:-1;;;21566:19:47;;;21559:49;21625:19;;13475:161:37;21164:486:47;13475:161:37;13653:51;13663:10;13675:5;13682:7;13691:8;13653:51;;;;;;;;;;;;:9;:51::i;:::-;13646:58;13266:445;-1:-1:-1;;;;;13266:445:37:o;1958:242:43:-;2044:35;;2004:7;;2044:35;;2023:139;;;;-1:-1:-1;;;2023:139:43;;;;;;;:::i;:::-;-1:-1:-1;2179:14:43;;;1958:242::o;1598:424:40:-;1730:16;1820:32;;;:20;:32;;;;;;;;-1:-1:-1;;;;;1883:43:40;;;;:30;;:43;;;;;:52;;1949:56;;;;;1598:424;;;;;;:::o;3355:102:37:-;3411:13;3443:7;3436:14;;;;;:::i;8137:1202::-;8268:15;;8230:18;;-1:-1:-1;;;;;8268:29:37;8287:10;8268:29;8260:90;;;;-1:-1:-1;;;8260:90:37;;21857:2:47;8260:90:37;;;21839:21:47;21896:2;21876:18;;;21869:30;21935:34;21915:18;;;21908:62;-1:-1:-1;;;21986:18:47;;;21979:46;22042:19;;8260:90:37;21655:412:47;8260:90:37;8365:13;8360:866;473:1:39;8384:23:37;;8360:866;;;8432:25;8470:5;8460:16;;;;;;;;:::i;:::-;8432:44;-1:-1:-1;8513:16:37;8494:15;:35;;;;;;;;:::i;:::-;;8490:726;;8549:8;;;8490:726;8658:14;8639:15;:33;;;;;;;;:::i;:::-;;8635:581;;8721:21;;;;:29;:36;:29;:41;8692:184;;;;-1:-1:-1;;;8692:184:37;;22274:2:47;8692:184:37;;;22256:21:47;22313:2;22293:18;;;22286:30;22352:34;22332:18;;;22325:62;22423:34;22403:18;;;22396:62;-1:-1:-1;;;22474:19:47;;;22467:39;22523:19;;8692:184:37;22072:476:47;8692:184:37;8923:8;:21;;;:31;;;8958:1;8923:36;8894:175;;;;-1:-1:-1;;;8894:175:37;;22755:2:47;8894:175:37;;;22737:21:47;22794:2;22774:18;;;22767:30;;;22833:34;22813:18;;;22806:62;22904:34;22884:18;;;22877:62;-1:-1:-1;;;22955:19:47;;;22948:35;23000:19;;8894:175:37;22553:472:47;8894:175:37;9095:21;;;;:29;:36;:29;:41;9087:50;;;;;;8635:581;;;9183:18;;-1:-1:-1;;;9183:18:37;;;;;;;;;;;8635:581;8418:808;8360:866;8409:7;;;;:::i;:::-;;;;8360:866;;;;9249:8;:20;;;9243:34;9281:1;9243:39;9235:76;;;;-1:-1:-1;;;9235:76:37;;23232:2:47;9235:76:37;;;23214:21:47;23271:2;23251:18;;;23244:30;23310:26;23290:18;;;23283:54;23354:18;;9235:76:37;23030:348:47;9235:76:37;-1:-1:-1;9328:4:37;;8137:1202;-1:-1:-1;8137:1202:37:o;1579:169:36:-;1678:7;1704:37;2651:30:42;;;2546:142;4983:633:28;5098:13;5125:18;;5098:13;;;5125:18;5389:41;:5;5098:13;5389:26;:41::i;:::-;5444:47;:8;5474:16;5444:29;:47::i;:::-;5583:16;;;5567:1;5583:16;;;;;;;;;-1:-1:-1;;;5338:271:28;;;-1:-1:-1;5338:271:28;;-1:-1:-1;5505:13:28;;-1:-1:-1;5540:4:28;;-1:-1:-1;5567:1:28;-1:-1:-1;5583:16:28;-1:-1:-1;5338:271:28;-1:-1:-1;4983:633:28:o;1286:281:43:-;1389:35;;1349:7;;1389:35;;1368:139;;;;-1:-1:-1;;;1368:139:43;;;;;;;:::i;:::-;-1:-1:-1;1524:36:43;;;;:27;:36;;;;;;;1286:281::o;1632:261::-;1731:35;;1682:16;;1731:35;;1710:139;;;;-1:-1:-1;;;1710:139:43;;;;;;;:::i;:::-;1867:18;1859:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1632:261;:::o;6423:3170::-;6517:32;6506:7;:5;:7::i;:::-;:43;;;;;;;;:::i;:::-;;6485:161;;;;-1:-1:-1;;;6485:161:43;;23585:2:47;6485:161:43;;;23567:21:47;23624:2;23604:18;;;23597:30;23663:34;23643:18;;;23636:62;23734:34;23714:18;;;23707:62;-1:-1:-1;;;23785:19:47;;;23778:38;23833:19;;6485:161:43;23383:475:47;6485:161:43;6677:35;;;;:44;6656:186;;;;-1:-1:-1;;;6656:186:43;;24065:2:47;6656:186:43;;;24047:21:47;24104:2;24084:18;;;24077:30;24143:34;24123:18;;;24116:62;24214:34;24194:18;;;24187:62;24286:33;24265:19;;;24258:62;24337:19;;6656:186:43;23863:499:47;6656:186:43;6874:21;6890:4;6874:15;:21::i;:::-;6853:42;;;;:18;;:42;;;;;;:::i;:::-;-1:-1:-1;7000:18:43;:25;6906:21;;6967:1;;7000:29;;6967:1;7000:29;:::i;:::-;6978:19;:51;7102:9;7097:2437;7121:18;:25;7117:29;;7097:2437;;;7197:18;:25;7167:27;;7197:29;;7225:1;;7197:29;:::i;:::-;7167:59;-1:-1:-1;7301:23:43;;7373:58;7387:18;7406:23;7428:1;7167:59;7406:23;:::i;:::-;7387:43;;;;;;;;:::i;:::-;;;;;;;;;1265:16:40;1351:32;;;:20;:32;;;;;1401:40;;1443:44;;;;;1401:40;;1193:302;7373:58:43;7300:131;;-1:-1:-1;7300:131:43;-1:-1:-1;7445:24:43;7472:53;7300:131;;7472:53;:::i;:::-;7445:80;;7609:1;7614;7609:6;7605:478;;7842:18;:25;7652:17;;-1:-1:-1;7652:17:43;;7833:5;:1;7837;7833:5;:::i;:::-;:34;7829:213;;7942:23;7964:1;7942:19;:23;:::i;:::-;7891:48;;;;:27;:48;;;;;:74;7987:14;:36;;;7829:213;8060:8;;;;;;7605:478;8187:14;8166:17;:35;8162:481;;8226:28;;;;:7;:28;;;;;;;;8221:161;;8328:28;;;;:7;:28;;;;;:35;;-1:-1:-1;;8328:35:43;8359:4;8328:35;;;8221:161;8426:18;:25;:29;;8454:1;8426:29;:::i;:::-;8403:19;;:52;8399:230;;8569:19;:41;;;8399:230;8876:14;8855:17;:35;8851:291;;9061:23;9083:1;9061:19;:23;:::i;:::-;:27;;9087:1;9061:27;:::i;:::-;9010:48;;;;:27;:48;;;;;:78;9038:19;9106:21;9038:19;9106:21;:::i;:::-;;;;8851:291;9287:18;:25;9278:5;:1;9282;9278:5;:::i;:::-;:34;9274:201;;9383:23;9405:1;9383:19;:23;:::i;:::-;9332:48;;;;:27;:48;;;;;:74;9424:14;:36;;;9274:201;9506:17;-1:-1:-1;;;;7097:2437:43;7148:3;;;;:::i;:::-;;;;7097:2437;;;-1:-1:-1;;9544:35:43;:42;;-1:-1:-1;;9544:42:43;9582:4;9544:42;;;-1:-1:-1;6423:3170:43:o;2123:234:40:-;2236:33;2272:32;;;:20;:32;;;;;;;;;2322:27;;;2314:36;;;;;;;;;;;;;;;;;2208:16;;2272:32;;2314:36;;2322:27;2314:36;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2314:36:40;;;;;;;;;;;;;;;;;;;;;;;;2123:234;;;:::o;9398:341:37:-;9536:7;9567:33;9582:10;9594:5;;9567:14;:33::i;:::-;9559:93;;;;-1:-1:-1;;;9559:93:37;;;;;;;:::i;:::-;9662:30;9683:8;9662:20;:30::i;:::-;;9709:23;9723:8;9709:13;:23::i;:::-;9702:30;9398:341;-1:-1:-1;;;;9398:341:37:o;4783:675::-;4866:9;;4838:12;;4866:9;;4862:68;;;-1:-1:-1;4898:21:37;;4783:675::o;4862:68::-;4940:29;4972:14;:12;:14::i;:::-;4940:46;;5026:15;5001:21;:40;4997:101;;5064:23;5057:30;;;4783:675;:::o;4997:101::-;5108:26;5137:11;:9;:11::i;:::-;5108:40;;5185:15;5163:18;:37;5159:94;;5223:19;5216:26;;;;4783:675;:::o;5159:94::-;5263:25;5291:17;:15;:17::i;:::-;5263:45;;5344:15;5323:17;:36;5319:93;;5382:19;5375:26;;;;;4783:675;:::o;5319:93::-;5429:22;5422:29;;;;;4783:675;:::o;6669:137::-;6739:19;;:::i;:::-;6777:22;;;;:10;:22;;;;;;;;;6770:29;;;;;;;;;;-1:-1:-1;;;;;6770:29:37;;;;;;;;6777:22;;6770:29;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6770:29:37;;;-1:-1:-1;;6770:29:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6770:29:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6770:29:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6669:137;;;:::o;4563:163::-;4653:7;4708:8;4697:20;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4697:20:37;;;;;;;;;4687:31;;4697:20;4687:31;;;;;4563:163;-1:-1:-1;;4563:163:37:o;3303:952:43:-;3411:34;3447:49;3512:28;3543:19;:17;:19::i;:::-;3512:50;;3572:42;3631:11;:18;-1:-1:-1;;;;;3617:33:43;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3617:33:43;;3572:78;;3660:43;3723:11;:18;-1:-1:-1;;;;;3706:36:43;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;3706:36:43;;;;;;;;;;;;;;;;3660:82;;3753:29;3801:9;3796:384;3820:11;:18;3816:1;:22;3796:384;;;3865:33;3883:11;3895:1;3883:14;;;;;;;;:::i;:::-;;;;;;;7224:7:37;7250:31;;;:19;:31;;;;;;;7148:140;3865:33:43;3902:1;3865:38;3859:311;;3975:11;3987:1;3975:14;;;;;;;;:::i;:::-;;;;;;;3924:25;3950:21;3924:48;;;;;;;;:::i;:::-;;;;;;:65;;;;;4056:20;:36;4077:11;4089:1;4077:14;;;;;;;;:::i;:::-;;;;;;;4056:36;;;;;;;;;;;:55;;4007:104;;;;;;;;;;;;;;;;;;;;;;;;;:23;4031:21;4007:46;;;;;;;;:::i;:::-;;;;;;;;;;:104;4129:26;4154:1;4129:26;;:::i;:::-;;;3859:311;3840:3;;;;:::i;:::-;;;;3796:384;;;-1:-1:-1;4197:25:43;;4224:23;;-1:-1:-1;3303:952:43;-1:-1:-1;;;3303:952:43:o;5687:122:37:-;5746:7;5789:13;:11;:13::i;:::-;5772:14;:12;:14::i;11963:300::-;12028:9;:7;:9::i;:::-;-1:-1:-1;;;;;12014:23:37;:10;-1:-1:-1;;;;;12014:23:37;;12006:32;;;;;;12049:19;12071:7;:5;:7::i;:::-;12049:29;-1:-1:-1;12107:21:37;12097:6;:31;;;;;;;;:::i;:::-;;;:67;;;;-1:-1:-1;12142:22:37;12132:6;:32;;;;;;;;:::i;:::-;;;12097:67;12089:108;;;;-1:-1:-1;;;12089:108:37;;24569:2:47;12089:108:37;;;24551:21:47;24608:2;24588:18;;;24581:30;24647;24627:18;;;24620:58;24695:18;;12089:108:37;24367:352:47;12089:108:37;12207:9;:16;;-1:-1:-1;;12207:16:37;12219:4;12207:16;;;12239:17;;;;12207:9;;12239:17;11996:267;11963:300::o;2267:252:43:-;2358:35;;2318:7;;2358:35;;2337:139;;;;-1:-1:-1;;;2337:139:43;;;;;;;:::i;:::-;-1:-1:-1;2493:19:43;;;2267:252::o;5514:112:37:-;5572:16;5607:12;5600:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5514:112;:::o;11119:753::-;11221:9;:7;:9::i;:::-;-1:-1:-1;;;;;11207:23:37;:10;-1:-1:-1;;;;;11207:23:37;;11199:91;;;;-1:-1:-1;;;11199:91:37;;24926:2:47;11199:91:37;;;24908:21:47;24965:2;24945:18;;;24938:30;25004:34;24984:18;;;24977:62;25075:25;25055:18;;;25048:53;25118:19;;11199:91:37;24724:419:47;11199:91:37;11332:22;11321:7;:5;:7::i;:::-;:33;;;;;;;;:::i;:::-;;11300:153;;;;-1:-1:-1;;;11300:153:37;;25350:2:47;11300:153:37;;;25332:21:47;25389:2;25369:18;;;25362:30;25428:34;25408:18;;;25401:62;25499:34;25479:18;;;25472:62;-1:-1:-1;;;25550:19:47;;;25543:40;25600:19;;11300:153:37;25148:477:47;11300:153:37;11469:13;11464:357;11496:11;:18;11488:5;:26;11464:357;;;11543:19;:39;11563:11;11575:5;11563:18;;;;;;;;:::i;:::-;;;;;;;11543:39;;;;;;;;;;;;11586:1;11543:44;11539:272;;11649:1;11607:19;:39;11627:11;11639:5;11627:18;;;;;;;;:::i;:::-;;;;;;;11607:39;;;;;;;;;;;:43;;;;11668:128;;;;;;;;;;;;;;;;;:10;:30;11679:11;11691:5;11679:18;;;;;;;;:::i;:::-;;;;;;;11668:30;;;;;;;;;;;:42;;:128;;;;;;:::i;:::-;;11539:272;11516:7;;;;:::i;:::-;;;;11464:357;;;;11836:29;11853:11;11836:29;;;;;;:::i;:::-;;;;;;;;11119:753;:::o;781:356:41:-;900:9;:7;:9::i;:::-;-1:-1:-1;;;;;886:23:41;:10;-1:-1:-1;;;;;886:23:41;;878:32;;;;;;920:38;961:23;630:22;;-1:-1:-1;;;;;630:22:41;;536:123;961:23;994:22;:47;;-1:-1:-1;;;;;;994:47:41;-1:-1:-1;;;;;994:47:41;;;;;;;;;1056:74;;;28126:15:47;;;28108:34;;28173:2;28158:18;;28151:43;;;;920:64:41;;-1:-1:-1;1056:74:41;;28043:18:47;1056:74:41;;;;;;;868:269;781:356;:::o;1754:143:36:-;1840:7;1866:24;2862:17:42;;;2770:116;1156:154:29;1247:4;1299;1270:25;1283:5;1290:4;1270:12;:25::i;:::-;:33;;1156:154;-1:-1:-1;;;;1156:154:29:o;13992:722:37:-;14153:7;14195:19;14184:7;:5;:7::i;:::-;:30;;;;;;;;:::i;:::-;;14176:78;;;;-1:-1:-1;;;14176:78:37;;28407:2:47;14176:78:37;;;28389:21:47;28446:2;28426:18;;;28419:30;28485:34;28465:18;;;28458:62;-1:-1:-1;;;28536:18:47;;;28529:33;28579:19;;14176:78:37;28205:399:47;14176:78:37;14283:1;14272:8;:12;14264:68;;;;-1:-1:-1;;;14264:68:37;;28811:2:47;14264:68:37;;;28793:21:47;28850:2;28830:18;;;28823:30;28889:34;28869:18;;;28862:62;-1:-1:-1;;;28940:18:47;;;28933:41;28991:19;;14264:68:37;28609:407:47;14264:68:37;-1:-1:-1;;;;;14364:34:37;;;;;;:25;:34;;;;;;;;14343:160;;;;-1:-1:-1;;;14343:160:37;;29223:2:47;14343:160:37;;;29205:21:47;29262:2;29242:18;;;29235:30;29301:34;29281:18;;;29274:62;29372:34;29352:18;;;29345:62;-1:-1:-1;;;29423:19:47;;;29416:46;29479:19;;14343:160:37;29021:483:47;14343:160:37;14513:78;14524:10;14536:7;14545;14554:8;14564:17;:26;14582:7;-1:-1:-1;;;;;14564:26:37;-1:-1:-1;;;;;14564:26:37;;;;;;;;;;;;;14513:10;:78::i;:::-;14616:7;-1:-1:-1;;;;;14607:56:37;;14625:10;14637:7;14646:8;14656:6;14607:56;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;14681:26:37;;;;;:17;:26;;;;;;;13992:722;-1:-1:-1;13992:722:37:o;4261:717:43:-;4404:4;4439:3;;4452:171;4478:16;:23;4474:1;:27;4452:171;;;4548:16;4565:4;4548:22;;;;;;;;:::i;:::-;;;;;;;4526:16;4543:1;4526:19;;;;;;;;:::i;:::-;;;;;;;:44;4522:91;;;4597:1;4590:8;;4522:91;4503:3;;;;:::i;:::-;;;;4452:171;;;;4644:3;4636:4;:11;4632:29;;4656:5;4649:12;;;;;4632:29;4671:15;4689:16;4706:3;4689:21;;;;;;;;:::i;:::-;;;;;;;4671:39;;4744:16;4761:4;4744:22;;;;;;;;:::i;:::-;;;;;;;4720:16;4737:3;4720:21;;;;;;;;:::i;:::-;;;;;;:46;;;;;4801:8;4776:16;4793:4;4776:22;;;;;;;;:::i;:::-;;;;;;:33;;;;;4819:22;4844:11;4856:3;4844:16;;;;;;;;:::i;:::-;;;;;;;4819:41;;4889:11;4901:4;4889:17;;;;;;;;:::i;:::-;;;;;;;4870:11;4882:3;4870:16;;;;;;;;:::i;:::-;;;;;;:36;;;;;4936:14;4916:11;4928:4;4916:17;;;;;;;;:::i;:::-;;;;;;;;;;:34;-1:-1:-1;4967:4:43;;4261:717;-1:-1:-1;;;;;;4261:717:43:o;10110:899:37:-;10189:7;10227:19;10216:7;:5;:7::i;:::-;:30;;;;;;;;:::i;:::-;;10208:105;;;;-1:-1:-1;;;10208:105:37;;30158:2:47;10208:105:37;;;30140:21:47;30197:2;30177:18;;;30170:30;30236:34;30216:18;;;30209:62;30307:32;30287:18;;;30280:60;30357:19;;10208:105:37;29956:426:47;10208:105:37;10374:31;:29;:31::i;:::-;10360:10;10344:27;;;;:15;:27;;;;;;:61;10323:201;;;;-1:-1:-1;;;10323:201:37;;30589:2:47;10323:201:37;;;30571:21:47;30628:2;30608:18;;;30601:30;30667:34;30647:18;;;30640:62;30738:34;30718:18;;;30711:62;30810:31;30789:19;;;30782:60;30859:19;;10323:201:37;30387:497:47;10323:201:37;10564:18;:16;:18::i;:::-;10542:12;:19;:40;10534:110;;;;-1:-1:-1;;;10534:110:37;;31091:2:47;10534:110:37;;;31073:21:47;31130:2;31110:18;;;31103:30;31169:34;31149:18;;;31142:62;31240:27;31220:18;;;31213:55;31285:19;;10534:110:37;30889:421:47;10534:110:37;10655:18;10676:22;10689:8;10676:12;:22::i;:::-;10717;;;;:10;:22;;;;;:29;;;10655:43;;-1:-1:-1;10717:29:37;;10716:30;10708:84;;;;-1:-1:-1;;;10708:84:37;;31517:2:47;10708:84:37;;;31499:21:47;31556:2;31536:18;;;31529:30;31595:34;31575:18;;;31568:62;-1:-1:-1;;;31646:18:47;;;31639:39;31695:19;;10708:84:37;31315:405:47;10708:84:37;10803:12;:29;;;;;;;;;;;;;;-1:-1:-1;10842:22:37;;;:10;10803:29;10842:22;;;;;;;:33;;;;-1:-1:-1;;;;;;10842:33:37;-1:-1:-1;;;;;10842:33:37;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10842:33:37;;;;;;;;;-1:-1:-1;;10842:33:37;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;10842:33:37;-1:-1:-1;;;;;10842:33:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10842:33:37;;;;;;;;;;10901:10;10885:27;;;;:15;:27;;;;;;:32;;10842:33;;-1:-1:-1;10885:27:37;-1:-1:-1;10885:32:37;;10842:33;;10885:32;:::i;:::-;;;;-1:-1:-1;;10933:41:37;;;31899:25:47;;;719:10:22;31955:2:47;31940:18;;31933:60;10933:41:37;;;;;;;;;;;;;10992:10;10110:899;-1:-1:-1;;10110:899:37:o;2929:268:23:-;3023:13;933:66;3052:47;;3048:143;;3122:15;3131:5;3122:8;:15::i;:::-;3115:22;;;;3048:143;3175:5;3168:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2929:268;;;;:::o;1934:290:29:-;2017:7;2059:4;2017:7;2073:116;2097:5;:12;2093:1;:16;2073:116;;;2145:33;2155:12;2169:5;2175:1;2169:8;;;;;;;;:::i;:::-;;;;;;;2145:9;:33::i;:::-;2130:48;-1:-1:-1;2111:3:29;;;;:::i;:::-;;;;2073:116;;;-1:-1:-1;2205:12:29;1934:290;-1:-1:-1;;;1934:290:29:o;2785:1272:40:-;2959:33;2995:32;;;:20;:32;;;;;;;;-1:-1:-1;;;;;3085:35:40;;;;:26;:35;;;;;;;3072:48;;:10;:48;:::i;:::-;3059:8;:62;;3038:160;;;;-1:-1:-1;;;3038:160:40;;32206:2:47;3038:160:40;;;32188:21:47;32245:2;32225:18;;;32218:30;32284:34;32264:18;;;32257:62;-1:-1:-1;;;32335:18:47;;;32328:49;32394:19;;3038:160:40;32004:415:47;3038:160:40;-1:-1:-1;;;;;3232:39:40;;3209:20;3232:39;;;:30;;;:39;;;;;:48;:53;3300:30;;;3296:601;;3346:52;;3390:8;;3346:12;;:31;;:52;;3390:8;;3346:52;:::i;:::-;;;;-1:-1:-1;;;;;;;3412:39:40;;;;;;:30;;;:39;;;;;:60;;3464:8;;3412:39;:60;;3464:8;;3412:60;:::i;:::-;;;;-1:-1:-1;3296:601:40;;-1:-1:-1;3296:601:40;;-1:-1:-1;;3493:34:40;;;;3489:408;;3551:19;:17;:19::i;:::-;3574:1;3551:24;3543:101;;;;;-1:-1:-1;;;3543:101:40;;32626:2:47;3543:101:40;;;32608:21:47;32645:18;;;32638:30;;;;32704:34;32684:18;;;32677:62;32775:34;32755:18;;;32748:62;32827:19;;3543:101:40;32424:428:47;3543:101:40;3706:8;3658:12;:31;;:44;;;:56;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;3728:39:40;;;;;;:30;;;:39;;;;;:52;;:64;;3784:8;;3728:39;:64;;3784:8;;3728:64;:::i;3489:408::-;3823:63;;-1:-1:-1;;;3823:63:40;;33059:2:47;3823:63:40;;;33041:21:47;33098:2;33078:18;;;33071:30;33137:34;33117:18;;;33110:62;-1:-1:-1;;;33188:18:47;;;33181:51;33249:19;;3823:63:40;32857:417:47;3489:408:40;3911:15;3907:87;;;3942:27;;;:41;;;;;;;-1:-1:-1;3942:41:40;;;;;;;;;;-1:-1:-1;;;;;;3942:41:40;-1:-1:-1;;;;;3942:41:40;;;;;3907:87;-1:-1:-1;;;;;4003:35:40;;;;;;:26;:35;;;;;:47;;4042:8;;4003:35;:47;;4042:8;;4003:47;:::i;:::-;;;;-1:-1:-1;;;;;;;;;2785:1272:40:o;1621:405:23:-;1680:13;1705:11;1719:16;1730:4;1719:10;:16::i;:::-;1843:14;;;1854:2;1843:14;;;;;;;;;1705:30;;-1:-1:-1;1823:17:23;;1843:14;;;;;;;;;-1:-1:-1;;;1933:16:23;;;-1:-1:-1;1978:4:23;1969:14;;1962:28;;;;-1:-1:-1;1933:16:23;1621:405::o;8975:147:29:-;9038:7;9068:1;9064;:5;:51;;9196:13;9287:15;;;9322:4;9315:15;;;9368:4;9352:21;;9064:51;;;-1:-1:-1;9196:13:29;9287:15;;;9322:4;9315:15;9368:4;9352:21;;;8975:147::o;2098:245:23:-;2159:7;2231:4;2195:40;;2258:2;2249:11;;2245:69;;;2283:20;;-1:-1:-1;;;2283:20:23;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;196:286:47;254:6;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;349:23;;-1:-1:-1;;;;;;401:32:47;;391:43;;381:71;;448:1;445;438:12;887:423;929:3;967:5;961:12;994:6;989:3;982:19;1019:1;1029:162;1043:6;1040:1;1037:13;1029:162;;;1105:4;1161:13;;;1157:22;;1151:29;1133:11;;;1129:20;;1122:59;1058:12;1029:162;;;1033:3;1236:1;1229:4;1220:6;1215:3;1211:16;1207:27;1200:38;1299:4;1292:2;1288:7;1283:2;1275:6;1271:15;1267:29;1262:3;1258:39;1254:50;1247:57;;;887:423;;;;:::o;1315:220::-;1464:2;1453:9;1446:21;1427:4;1484:45;1525:2;1514:9;1510:18;1502:6;1484:45;:::i;1540:180::-;1599:6;1652:2;1640:9;1631:7;1627:23;1623:32;1620:52;;;1668:1;1665;1658:12;1620:52;-1:-1:-1;1691:23:47;;1540:180;-1:-1:-1;1540:180:47:o;1881:257::-;1801:12;;1789:25;;1863:4;1852:16;;;1846:23;1830:14;;;1823:47;2073:2;2058:18;;2085:47;1725:151;2143:131;-1:-1:-1;;;;;2218:31:47;;2208:42;;2198:70;;2264:1;2261;2254:12;2198:70;2143:131;:::o;2279:367::-;2342:8;2352:6;2406:3;2399:4;2391:6;2387:17;2383:27;2373:55;;2424:1;2421;2414:12;2373:55;-1:-1:-1;2447:20:47;;-1:-1:-1;;;;;2479:30:47;;2476:50;;;2522:1;2519;2512:12;2476:50;2559:4;2551:6;2547:17;2535:29;;2619:3;2612:4;2602:6;2599:1;2595:14;2587:6;2583:27;2579:38;2576:47;2573:67;;;2636:1;2633;2626:12;2651:572;2746:6;2754;2762;2815:2;2803:9;2794:7;2790:23;2786:32;2783:52;;;2831:1;2828;2821:12;2783:52;2870:9;2857:23;2889:31;2914:5;2889:31;:::i;:::-;2939:5;-1:-1:-1;2995:2:47;2980:18;;2967:32;-1:-1:-1;;;;;3011:30:47;;3008:50;;;3054:1;3051;3044:12;3008:50;3093:70;3155:7;3146:6;3135:9;3131:22;3093:70;:::i;:::-;2651:572;;3182:8;;-1:-1:-1;3067:96:47;;-1:-1:-1;;;;2651:572:47:o;3228:160::-;3293:20;;3349:13;;3342:21;3332:32;;3322:60;;3378:1;3375;3368:12;3322:60;3228:160;;;:::o;3393:709::-;3503:6;3511;3519;3527;3535;3588:3;3576:9;3567:7;3563:23;3559:33;3556:53;;;3605:1;3602;3595:12;3556:53;3644:9;3631:23;3663:31;3688:5;3663:31;:::i;:::-;3713:5;-1:-1:-1;3765:2:47;3750:18;;3737:32;;-1:-1:-1;3820:2:47;3805:18;;3792:32;-1:-1:-1;;;;;3836:30:47;;3833:50;;;3879:1;3876;3869:12;3833:50;3918:70;3980:7;3971:6;3960:9;3956:22;3918:70;:::i;:::-;4007:8;;-1:-1:-1;3892:96:47;-1:-1:-1;4061:35:47;;-1:-1:-1;4092:2:47;4077:18;;4061:35;:::i;:::-;4051:45;;3393:709;;;;;;;;:::o;4312:156::-;4378:20;;4438:4;4427:16;;4417:27;;4407:55;;4458:1;4455;4448:12;4473:713;4593:6;4601;4609;4617;4625;4633;4686:3;4674:9;4665:7;4661:23;4657:33;4654:53;;;4703:1;4700;4693:12;4654:53;4739:9;4726:23;4716:33;;4768:36;4800:2;4789:9;4785:18;4768:36;:::i;:::-;4758:46;;4851:2;4840:9;4836:18;4823:32;4813:42;;4902:2;4891:9;4887:18;4874:32;4864:42;;4957:3;4946:9;4942:19;4929:33;-1:-1:-1;;;;;4977:6:47;4974:30;4971:50;;;5017:1;5014;5007:12;4971:50;5056:70;5118:7;5109:6;5098:9;5094:22;5056:70;:::i;:::-;4473:713;;;;-1:-1:-1;4473:713:47;;-1:-1:-1;4473:713:47;;5145:8;;4473:713;-1:-1:-1;;;4473:713:47:o;5191:180::-;5247:6;5300:2;5288:9;5279:7;5275:23;5271:32;5268:52;;;5316:1;5313;5306:12;5268:52;5339:26;5355:9;5339:26;:::i;5376:435::-;5429:3;5467:5;5461:12;5494:6;5489:3;5482:19;5520:4;5549:2;5544:3;5540:12;5533:19;;5586:2;5579:5;5575:14;5607:1;5617:169;5631:6;5628:1;5625:13;5617:169;;;5692:13;;5680:26;;5726:12;;;;5761:15;;;;5653:1;5646:9;5617:169;;;-1:-1:-1;5802:3:47;;5376:435;-1:-1:-1;;;;;5376:435:47:o;5816:261::-;5995:2;5984:9;5977:21;5958:4;6015:56;6067:2;6056:9;6052:18;6044:6;6015:56;:::i;6082:127::-;6143:10;6138:3;6134:20;6131:1;6124:31;6174:4;6171:1;6164:15;6198:4;6195:1;6188:15;6214:257;6286:4;6280:11;;;6318:17;;-1:-1:-1;;;;;6350:34:47;;6386:22;;;6347:62;6344:88;;;6412:18;;:::i;:::-;6448:4;6441:24;6214:257;:::o;6476:253::-;6548:2;6542:9;6590:4;6578:17;;-1:-1:-1;;;;;6610:34:47;;6646:22;;;6607:62;6604:88;;;6672:18;;:::i;6734:275::-;6805:2;6799:9;6870:2;6851:13;;-1:-1:-1;;6847:27:47;6835:40;;-1:-1:-1;;;;;6890:34:47;;6926:22;;;6887:62;6884:88;;;6952:18;;:::i;:::-;6988:2;6981:22;6734:275;;-1:-1:-1;6734:275:47:o;7014:486::-;7075:5;7123:4;7111:9;7106:3;7102:19;7098:30;7095:50;;;7141:1;7138;7131:12;7095:50;7174:2;7168:9;7216:4;7208:6;7204:17;7287:6;7275:10;7272:22;-1:-1:-1;;;;;7239:10:47;7236:34;7233:62;7230:88;;;7298:18;;:::i;:::-;7334:2;7327:22;7367:6;-1:-1:-1;7367:6:47;7397:23;;7429:33;7397:23;7429:33;:::i;:::-;7471:23;;7014:486;;-1:-1:-1;;7014:486:47:o;7505:183::-;7565:4;-1:-1:-1;;;;;7590:6:47;7587:30;7584:56;;;7620:18;;:::i;:::-;-1:-1:-1;7665:1:47;7661:14;7677:4;7657:25;;7505:183::o;7693:1048::-;7752:5;7800:4;7788:9;7783:3;7779:19;7775:30;7772:50;;;7818:1;7815;7808:12;7772:50;7840:22;;:::i;:::-;7831:31;;7898:9;7885:23;-1:-1:-1;;;;;7923:6:47;7920:30;7917:50;;;7963:1;7960;7953:12;7917:50;7986:22;;8039:4;8031:13;;8027:23;-1:-1:-1;8017:51:47;;8064:1;8061;8054:12;8017:51;8100:2;8087:16;8122:4;8146:60;8162:43;8202:2;8162:43;:::i;:::-;8146:60;:::i;:::-;8240:15;;;8322:1;8318:10;;;;8310:19;;8306:28;;;8271:12;;;;8346:15;;;8343:35;;;8374:1;8371;8364:12;8343:35;8398:11;;;;8418:223;8434:6;8429:3;8426:15;8418:223;;;8516:3;8503:17;8533:33;8558:7;8533:33;:::i;:::-;8579:20;;8451:12;;;;8619;;;;8418:223;;;8650:20;;-1:-1:-1;8715:18:47;;;8702:32;8686:14;;;8679:56;;;;-1:-1:-1;8657:5:47;7693:1048;-1:-1:-1;;7693:1048:47:o;8746:1282::-;8805:5;8853:4;8841:9;8836:3;8832:19;8828:30;8825:50;;;8871:1;8868;8861:12;8825:50;8893:22;;:::i;:::-;8884:31;;8952:9;8939:23;8971:33;8996:7;8971:33;:::i;:::-;9013:22;;9054:2;9092:18;;;9079:32;-1:-1:-1;;;;;9160:14:47;;;9157:34;;;9187:1;9184;9177:12;9157:34;9225:6;9214:9;9210:22;9200:32;;9270:3;9263:4;9259:2;9255:13;9251:23;9241:51;;9288:1;9285;9278:12;9241:51;9324:2;9311:16;9346:2;9342;9339:10;9336:36;;;9352:18;;:::i;:::-;9394:53;9437:2;9418:13;;-1:-1:-1;;9414:27:47;9410:36;;9394:53;:::i;:::-;9470:2;9463:5;9456:17;9510:3;9505:2;9500;9496;9492:11;9488:20;9485:29;9482:49;;;9527:1;9524;9517:12;9482:49;9582:2;9577;9573;9569:11;9564:2;9557:5;9553:14;9540:45;9626:1;9621:2;9616;9609:5;9605:14;9601:23;9594:34;9660:5;9655:2;9648:5;9644:14;9637:29;;;9698:35;9729:2;9718:9;9714:18;9698:35;:::i;:::-;9693:2;9686:5;9682:14;9675:59;9766:57;9819:3;9814:2;9803:9;9799:18;9766:57;:::i;:::-;9761:2;9754:5;9750:14;9743:81;9877:3;9866:9;9862:19;9849:33;9833:49;;9907:2;9897:8;9894:16;9891:36;;;9923:1;9920;9913:12;9891:36;;;9960:61;10017:3;10006:8;9995:9;9991:24;9960:61;:::i;:::-;9954:3;9947:5;9943:15;9936:86;;8746:1282;;;;:::o;10033:356::-;10123:6;10176:2;10164:9;10155:7;10151:23;10147:32;10144:52;;;10192:1;10189;10182:12;10144:52;10232:9;10219:23;-1:-1:-1;;;;;10257:6:47;10254:30;10251:50;;;10297:1;10294;10287:12;10251:50;10320:63;10375:7;10366:6;10355:9;10351:22;10320:63;:::i;10583:905::-;10861:4;10890:2;10919;10908:9;10901:21;10945:56;10997:2;10986:9;10982:18;10974:6;10945:56;:::i;:::-;11058:22;;;11020:2;11038:18;;;11031:50;;;;11130:13;;11152:22;;;11228:15;;;;11190;;;11261:1;11271:191;11285:6;11282:1;11279:13;11271:191;;;11334:48;11378:3;11369:6;11363:13;1801:12;;1789:25;;1863:4;1852:16;;;1846:23;1830:14;;1823:47;1725:151;11334:48;11437:15;;;;11402:12;;;;11307:1;11300:9;11271:191;;;-1:-1:-1;11479:3:47;;10583:905;-1:-1:-1;;;;;;;;10583:905:47:o;11493:640::-;11597:6;11605;11613;11621;11674:2;11662:9;11653:7;11649:23;11645:32;11642:52;;;11690:1;11687;11680:12;11642:52;11729:9;11716:23;11748:31;11773:5;11748:31;:::i;:::-;11798:5;-1:-1:-1;11850:2:47;11835:18;;11822:32;;-1:-1:-1;11905:2:47;11890:18;;11877:32;-1:-1:-1;;;;;11921:30:47;;11918:50;;;11964:1;11961;11954:12;11918:50;12003:70;12065:7;12056:6;12045:9;12041:22;12003:70;:::i;:::-;11493:640;;;;-1:-1:-1;12092:8:47;-1:-1:-1;;;;11493:640:47:o;12391:247::-;12450:6;12503:2;12491:9;12482:7;12478:23;12474:32;12471:52;;;12519:1;12516;12509:12;12471:52;12558:9;12545:23;12577:31;12602:5;12577:31;:::i;12643:318::-;12718:6;12726;12734;12787:2;12775:9;12766:7;12762:23;12758:32;12755:52;;;12803:1;12800;12793:12;12755:52;12839:9;12826:23;12816:33;;12868:36;12900:2;12889:9;12885:18;12868:36;:::i;:::-;12858:46;;12951:2;12940:9;12936:18;12923:32;12913:42;;12643:318;;;;;:::o;12966:315::-;13034:6;13042;13095:2;13083:9;13074:7;13070:23;13066:32;13063:52;;;13111:1;13108;13101:12;13063:52;13147:9;13134:23;13124:33;;13207:2;13196:9;13192:18;13179:32;13220:31;13245:5;13220:31;:::i;:::-;13270:5;13260:15;;;12966:315;;;;;:::o;13525:920::-;13931:3;13926;13922:13;13914:6;13910:26;13899:9;13892:45;13973:3;13968:2;13957:9;13953:18;13946:31;13873:4;14000:46;14041:3;14030:9;14026:19;14018:6;14000:46;:::i;:::-;14094:9;14086:6;14082:22;14077:2;14066:9;14062:18;14055:50;14128:33;14154:6;14146;14128:33;:::i;:::-;14192:2;14177:18;;14170:34;;;-1:-1:-1;;;;;14241:32:47;;14235:3;14220:19;;14213:61;14261:3;14290:19;;14283:35;;;14355:22;;;14349:3;14334:19;;14327:51;14114:47;-1:-1:-1;14395:44:47;14114:47;14424:6;14395:44;:::i;:::-;14387:52;13525:920;-1:-1:-1;;;;;;;;;;13525:920:47:o;14450:461::-;14503:3;14541:5;14535:12;14568:6;14563:3;14556:19;14594:4;14623:2;14618:3;14614:12;14607:19;;14660:2;14653:5;14649:14;14681:1;14691:195;14705:6;14702:1;14699:13;14691:195;;;14770:13;;-1:-1:-1;;;;;14766:39:47;14754:52;;14826:12;;;;14861:15;;;;14802:1;14720:9;14691:195;;14916:261;15095:2;15084:9;15077:21;15058:4;15115:56;15167:2;15156:9;15152:18;15144:6;15115:56;:::i;15364:692::-;15490:6;15498;15506;15559:2;15547:9;15538:7;15534:23;15530:32;15527:52;;;15575:1;15572;15565:12;15527:52;15615:9;15602:23;-1:-1:-1;;;;;15685:2:47;15677:6;15674:14;15671:34;;;15701:1;15698;15691:12;15671:34;15724:63;15779:7;15770:6;15759:9;15755:22;15724:63;:::i;:::-;15714:73;;15840:2;15829:9;15825:18;15812:32;15796:48;;15869:2;15859:8;15856:16;15853:36;;;15885:1;15882;15875:12;15853:36;;15924:72;15988:7;15977:8;15966:9;15962:24;15924:72;:::i;16061:127::-;16122:10;16117:3;16113:20;16110:1;16103:31;16153:4;16150:1;16143:15;16177:4;16174:1;16167:15;16193:346;16343:2;16328:18;;16376:1;16365:13;;16355:144;;16421:10;16416:3;16412:20;16409:1;16402:31;16456:4;16453:1;16446:15;16484:4;16481:1;16474:15;16355:144;16508:25;;;16193:346;:::o;16544:994::-;16735:2;16724:9;16717:21;16698:4;16774:1;16770;16765:3;16761:11;16757:19;16831:2;16822:6;16816:13;16812:22;16807:2;16796:9;16792:18;16785:50;16882:2;16874:6;16870:15;16864:22;16922:4;16917:2;16906:9;16902:18;16895:32;16950:52;16997:3;16986:9;16982:19;16968:12;16950:52;:::i;:::-;16936:66;;17070:2;17062:6;17058:15;17052:22;17045:30;17038:38;17033:2;17022:9;17018:18;17011:66;17149:2;17142;17134:6;17130:15;17124:22;17118:29;17114:38;17108:3;17097:9;17093:19;17086:67;17202:3;17194:6;17190:16;17184:23;17162:45;;17277:2;17273:7;17261:9;17253:6;17249:22;17245:36;17238:4;17227:9;17223:20;17216:66;17319:14;17313:21;17358:2;17350:6;17343:18;17384:61;17441:2;17433:6;17429:15;17413:14;17384:61;:::i;:::-;17504:2;17484:23;;;17478:30;17461:15;;;;17454:55;;;;-1:-1:-1;17370:75:47;16544:994;-1:-1:-1;;;16544:994:47:o;17543:891::-;17627:6;17658:2;17701;17689:9;17680:7;17676:23;17672:32;17669:52;;;17717:1;17714;17707:12;17669:52;17757:9;17744:23;-1:-1:-1;;;;;17782:6:47;17779:30;17776:50;;;17822:1;17819;17812:12;17776:50;17845:22;;17898:4;17890:13;;17886:27;-1:-1:-1;17876:55:47;;17927:1;17924;17917:12;17876:55;17963:2;17950:16;17986:60;18002:43;18042:2;18002:43;:::i;17986:60::-;18080:15;;;18162:1;18158:10;;;;18150:19;;18146:28;;;18111:12;;;;18186:19;;;18183:39;;;18218:1;18215;18208:12;18183:39;18242:11;;;;18262:142;18278:6;18273:3;18270:15;18262:142;;;18344:17;;18332:30;;18295:12;;;;18382;;;;18262:142;;;18423:5;17543:891;-1:-1:-1;;;;;;;17543:891:47:o;18714:380::-;18793:1;18789:12;;;;18836;;;18857:61;;18911:4;18903:6;18899:17;18889:27;;18857:61;18964:2;18956:6;18953:14;18933:18;18930:38;18927:161;;19010:10;19005:3;19001:20;18998:1;18991:31;19045:4;19042:1;19035:15;19073:4;19070:1;19063:15;18927:161;;18714:380;;;:::o;19099:473::-;19301:2;19283:21;;;19340:2;19320:18;;;19313:30;19379:34;19374:2;19359:18;;19352:62;19450:34;19445:2;19430:18;;19423:62;-1:-1:-1;;;19516:3:47;19501:19;;19494:36;19562:3;19547:19;;19099:473::o;19577:127::-;19638:10;19633:3;19629:20;19626:1;19619:31;19669:4;19666:1;19659:15;19693:4;19690:1;19683:15;19709:125;19774:9;;;19795:10;;;19792:36;;;19808:18;;:::i;20138:127::-;20199:10;20194:3;20190:20;20187:1;20180:31;20230:4;20227:1;20220:15;20254:4;20251:1;20244:15;20270:200;20336:9;;;20309:4;20364:9;;20392:10;;20404:12;;;20388:29;20427:12;;;20419:21;;20385:56;20382:82;;;20444:18;;:::i;:::-;20382:82;20270:200;;;;:::o;20475:135::-;20514:3;20535:17;;;20532:43;;20555:18;;:::i;:::-;-1:-1:-1;20602:1:47;20591:13;;20475:135::o;20615:128::-;20682:9;;;20703:11;;;20700:37;;;20717:18;;:::i;20748:411::-;20950:2;20932:21;;;20989:2;20969:18;;;20962:30;21028:34;21023:2;21008:18;;21001:62;-1:-1:-1;;;21094:2:47;21079:18;;21072:45;21149:3;21134:19;;20748:411::o;25756:545::-;25858:2;25853:3;25850:11;25847:448;;;25894:1;25919:5;25915:2;25908:17;25964:4;25960:2;25950:19;26034:2;26022:10;26018:19;26015:1;26011:27;26005:4;26001:38;26070:4;26058:10;26055:20;26052:47;;;-1:-1:-1;26093:4:47;26052:47;26148:2;26143:3;26139:12;26136:1;26132:20;26126:4;26122:31;26112:41;;26203:82;26221:2;26214:5;26211:13;26203:82;;;26266:17;;;26247:1;26236:13;26203:82;;;26207:3;;;25847:448;25756:545;;;:::o;26477:1352::-;26603:3;26597:10;-1:-1:-1;;;;;26622:6:47;26619:30;26616:56;;;26652:18;;:::i;:::-;26681:97;26771:6;26731:38;26763:4;26757:11;26731:38;:::i;:::-;26725:4;26681:97;:::i;:::-;26833:4;;26897:2;26886:14;;26914:1;26909:663;;;;27616:1;27633:6;27630:89;;;-1:-1:-1;27685:19:47;;;27679:26;27630:89;-1:-1:-1;;26434:1:47;26430:11;;;26426:24;26422:29;26412:40;26458:1;26454:11;;;26409:57;27732:81;;26879:944;;26909:663;25703:1;25696:14;;;25740:4;25727:18;;-1:-1:-1;;26945:20:47;;;27063:236;27077:7;27074:1;27071:14;27063:236;;;27166:19;;;27160:26;27145:42;;27258:27;;;;27226:1;27214:14;;;;27093:19;;27063:236;;;27067:3;27327:6;27318:7;27315:19;27312:201;;;27388:19;;;27382:26;-1:-1:-1;;27471:1:47;27467:14;;;27483:3;27463:24;27459:37;27455:42;27440:58;27425:74;;27312:201;-1:-1:-1;;;;;27559:1:47;27543:14;;;27539:22;27526:36;;-1:-1:-1;26477:1352:47:o;29509:442::-;29738:6;29727:9;29720:25;29793:4;29785:6;29781:17;29776:2;29765:9;29761:18;29754:45;29835:6;29830:2;29819:9;29815:18;29808:34;29878:3;29873:2;29862:9;29858:18;29851:31;29701:4;29899:46;29940:3;29929:9;29925:19;29917:6;29899:46;:::i;:::-;29891:54;29509:442;-1:-1:-1;;;;;;29509:442:47:o",
    "linkReferences": {},
    "immutableReferences": {
      "30999": [
        {
          "start": 5608,
          "length": 32
        }
      ],
      "31002": [
        {
          "start": 5650,
          "length": 32
        }
      ],
      "35340": [
        {
          "start": 2339,
          "length": 32
        },
        {
          "start": 3617,
          "length": 32
        }
      ],
      "35342": [
        {
          "start": 2699,
          "length": 32
        },
        {
          "start": 3718,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "AMOUNT_FOR_SUMBITTER_PROOF()": "347cf665",
    "BALLOT_TYPEHASH()": "deaaa7cc",
    "COUNTING_MODE()": "dd4e2ba5",
    "METADATAS_COUNT()": "4d24a67f",
    "addressSubmitterVerified(address)": "cb853950",
    "addressTotalCastVoteCounts(address)": "a1ac6cb2",
    "addressTotalVotes(address)": "dea5f6a6",
    "addressTotalVotesVerified(address)": "930de979",
    "allProposalTotalVotes()": "50a5e524",
    "allProposalTotalVotesWithoutDeleted()": "d45a010b",
    "cancel()": "ea8a1af0",
    "castVote(uint256,uint8,uint256,uint256,bytes32[])": "419c533c",
    "castVoteWithoutProof(uint256,uint8,uint256)": "65f16263",
    "checkProof(address,uint256,bytes32[],bool)": "32763c22",
    "contestAddressTotalVotesCast(address)": "aec116b6",
    "contestDeadline()": "262e59e9",
    "contestStart()": "004114a8",
    "creator()": "02d05d3f",
    "deleteProposals(uint256[])": "f0a7db0a",
    "downvotingAllowed()": "60506ff6",
    "eip712Domain()": "84b0196e",
    "getAllProposalIds()": "efa90d36",
    "getNumSubmissions(address)": "5f953a03",
    "getProposal(uint256)": "c7f758a8",
    "hashProposal((address,string,bool,(address),(address[],uint256)))": "cf6afbae",
    "highestTiedRanking()": "ebc18b9b",
    "isProposalDeleted(uint256)": "3b6d199b",
    "isTied(uint256)": "2399c660",
    "lowestRanking()": "6ca1a2c7",
    "maxProposalCount()": "fb9bf8d4",
    "name()": "06fdde03",
    "numAllowedProposalSubmissions()": "832009af",
    "officialRewardsModule()": "785ddfe5",
    "prompt()": "7c65d711",
    "proposalAddressVotes(uint256,address)": "6e4eb810",
    "proposalAddressesHaveVoted(uint256)": "b323580d",
    "proposalVotes(uint256)": "544ffc9c",
    "proposalVotesStructs(uint256)": "070dc5d9",
    "propose((address,string,bool,(address),(address[],uint256)),bytes32[])": "bfe45b59",
    "proposeWithoutProof((address,string,bool,(address),(address[],uint256)))": "4970ab2f",
    "rankingPosition(uint256)": "86187488",
    "setOfficialRewardsModule(address)": "f4f3d7ec",
    "setSortedAndTiedProposals()": "96f0e962",
    "setSortedAndTiedProposalsHasBeenRun()": "d8891619",
    "sortedProposalIds()": "8a9cd550",
    "sortedProposals(bool)": "427d56c2",
    "state()": "c19d93fb",
    "submissionMerkleRoot()": "bddc1641",
    "supportsInterface(bytes4)": "01ffc9a7",
    "tiedAdjustedRankingPosition(uint256)": "e5eb5a48",
    "validateProposalData((address,string,bool,(address),(address[],uint256)))": "7f57a0ba",
    "verifyProposer(address,bytes32[])": "20b3e845",
    "verifyVoter(address,uint256,bytes32[])": "531bd812",
    "version()": "54fd4d50",
    "voteStart()": "e031535b",
    "votingDelay()": "3932abb1",
    "votingMerkleRoot()": "dd96a19d",
    "votingPeriod()": "02a251a3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_prompt\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"_submissionMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_votingMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"_constructorIntParams\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInMerkle\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TooManyMetadatas\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ContestCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldContestStart\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newContestStart\",\"type\":\"uint256\"}],\"name\":\"ContestStartSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldCreator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newCreator\",\"type\":\"address\"}],\"name\":\"CreatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldDownvotingAllowed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDownvotingAllowed\",\"type\":\"uint256\"}],\"name\":\"DownvotingAllowedSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldMaxProposalCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaxProposalCount\",\"type\":\"uint256\"}],\"name\":\"MaxProposalCountSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldNumAllowedProposalSubmissions\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newNumAllowedProposalSubmissions\",\"type\":\"uint256\"}],\"name\":\"NumAllowedProposalSubmissionsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract RewardsModule\",\"name\":\"oldOfficialRewardsModule\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract RewardsModule\",\"name\":\"newOfficialRewardsModule\",\"type\":\"address\"}],\"name\":\"OfficialRewardsModuleSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"proposalIds\",\"type\":\"uint256[]\"}],\"name\":\"ProposalsDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"numVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingDelay\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingDelay\",\"type\":\"uint256\"}],\"name\":\"VotingDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingPeriod\",\"type\":\"uint256\"}],\"name\":\"VotingPeriodSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AMOUNT_FOR_SUMBITTER_PROOF\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COUNTING_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"METADATAS_COUNT\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressSubmitterVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressTotalCastVoteCounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressTotalVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressTotalVotesVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allProposalTotalVotes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"proposalIdsReturn\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"internalType\":\"struct GovernorCountingSimple.VoteCounts[]\",\"name\":\"proposalVoteCountsArrayReturn\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allProposalTotalVotesWithoutDeleted\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"proposalIdsReturn\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"internalType\":\"struct GovernorCountingSimple.VoteCounts[]\",\"name\":\"proposalVoteCountsArrayReturn\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numVotes\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"castVote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"numVotes\",\"type\":\"uint256\"}],\"name\":\"castVoteWithoutProof\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressToCheck\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool\",\"name\":\"voting\",\"type\":\"bool\"}],\"name\":\"checkProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"contestAddressTotalVotesCast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalVotesCast\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contestDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contestStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"proposalIds\",\"type\":\"uint256[]\"}],\"name\":\"deleteProposals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"downvotingAllowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllProposalIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNumSubmissions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposal\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct IGovernor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct IGovernor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct IGovernor.ProposalCore\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct IGovernor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct IGovernor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct IGovernor.ProposalCore\",\"name\":\"proposal\",\"type\":\"tuple\"}],\"name\":\"hashProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"highestTiedRanking\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"isProposalDeleted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ranking\",\"type\":\"uint256\"}],\"name\":\"isTied\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lowestRanking\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxProposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numAllowedProposalSubmissions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"officialRewardsModule\",\"outputs\":[{\"internalType\":\"contract RewardsModule\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prompt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"proposalAddressVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalAddressesHaveVoted\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalVotesStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"internalType\":\"struct GovernorCountingSimple.VoteCounts\",\"name\":\"proposalVoteCounts\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct IGovernor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct IGovernor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct IGovernor.ProposalCore\",\"name\":\"proposal\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct IGovernor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct IGovernor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct IGovernor.ProposalCore\",\"name\":\"proposal\",\"type\":\"tuple\"}],\"name\":\"proposeWithoutProof\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ranking\",\"type\":\"uint256\"}],\"name\":\"rankingPosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract RewardsModule\",\"name\":\"officialRewardsModule_\",\"type\":\"address\"}],\"name\":\"setOfficialRewardsModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setSortedAndTiedProposals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setSortedAndTiedProposalsHasBeenRun\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sortedProposalIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"excludeDeletedProposals\",\"type\":\"bool\"}],\"name\":\"sortedProposals\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"sortedProposalIdsReturn\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum IGovernor.ContestState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"submissionMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tiedAdjustedRankingPosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct IGovernor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct IGovernor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct IGovernor.ProposalCore\",\"name\":\"proposal\",\"type\":\"tuple\"}],\"name\":\"validateProposalData\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"dataValidated\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"verifyProposer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"verifyVoter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voteStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"ContestCanceled()\":{\"details\":\"Emitted when a contest is canceled.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"ProposalCreated(uint256,address)\":{\"details\":\"Emitted when a proposal is created.\"},\"ProposalsDeleted(uint256[])\":{\"details\":\"Emitted when proposals are deleted.\"},\"VoteCast(address,uint256,uint8,uint256,string)\":{\"details\":\"Emitted when a vote is cast. Note: `support` values should be seen as buckets. There interpretation depends on the voting module used.\"}},\"kind\":\"dev\",\"methods\":{\"COUNTING_MODE()\":{\"details\":\"See {IGovernor-COUNTING_MODE}.\"},\"allProposalTotalVotes()\":{\"details\":\"Accessor to the internal vote counts for a given proposal.\"},\"allProposalTotalVotesWithoutDeleted()\":{\"details\":\"Accessor to the internal vote counts for a given proposal that excludes deleted proposals.\"},\"cancel()\":{\"details\":\"Emits a {IGovernor-ContestCanceled} event.\"},\"castVote(uint256,uint8,uint256,uint256,bytes32[])\":{\"details\":\"See {IGovernor-castVote}.\"},\"castVoteWithoutProof(uint256,uint8,uint256)\":{\"details\":\"See {IGovernor-castVoteWithoutProof}.\"},\"checkProof(address,uint256,bytes32[],bool)\":{\"params\":{\"addressToCheck\":\"address of claimee\",\"amount\":\"to check that the claimee has\",\"proof\":\"merkle proof to prove address and amount are in tree\"}},\"contestAddressTotalVotesCast(address)\":{\"details\":\"Accessor to how many votes an address has cast total for the contest so far.\"},\"contestDeadline()\":{\"details\":\"See {IGovernor-contestDeadline}.\"},\"deleteProposals(uint256[])\":{\"details\":\"Delete proposals. Emits a {IGovernor-ProposalsDeleted} event.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}.\"},\"getAllProposalIds()\":{\"details\":\"Return all proposals.\"},\"getNumSubmissions(address)\":{\"details\":\"Get the number of proposal submissions for a given address.\"},\"getProposal(uint256)\":{\"details\":\"Retrieve proposal data\\\"_.\"},\"hashProposal((address,string,bool,(address),(address[],uint256)))\":{\"details\":\"See {IGovernor-hashProposal}. The proposal id is produced by hashing the RLC encoded `targets` array, the `values` array, the `calldatas` array and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in advance, before the proposal is submitted. Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the same proposal (with same operation and same description) will have the same id if submitted on multiple governors accross multiple networks. This also means that in order to execute the same operation twice (on the same governor) the proposer will have to change the description in order to avoid proposal id conflicts.\"},\"highestTiedRanking()\":{\"details\":\"Getter for highest tied ranking.\"},\"isProposalDeleted(uint256)\":{\"details\":\"Returns if a proposal has been deleted or not (0 if not, 1 if it has been deleted).\"},\"isTied(uint256)\":{\"details\":\"Getter if a given ranking is tied.\"},\"lowestRanking()\":{\"details\":\"Getter for the lowest ranking.\"},\"name()\":{\"details\":\"See {IGovernor-name}.\"},\"officialRewardsModule()\":{\"details\":\"Get the official rewards module contract for this contest (effectively reverse record).\"},\"prompt()\":{\"details\":\"See {IGovernor-prompt}.\"},\"proposalAddressVotes(uint256,address)\":{\"details\":\"Accessor to how many votes an address has cast for a given proposal.\"},\"proposalAddressesHaveVoted(uint256)\":{\"details\":\"Accessor to which addresses have cast a vote for a given proposal.\"},\"proposalVotes(uint256)\":{\"details\":\"Accessor to the internal vote counts for a given proposal.\"},\"propose((address,string,bool,(address),(address[],uint256)),bytes32[])\":{\"details\":\"See {IGovernor-propose}.\"},\"proposeWithoutProof((address,string,bool,(address),(address[],uint256)))\":{\"details\":\"See {IGovernor-proposeWithoutProof}.\"},\"rankingPosition(uint256)\":{\"details\":\"Getter for tiedAdjustedRankingPosition of a ranking.\"},\"setOfficialRewardsModule(address)\":{\"details\":\"Get the official rewards module contract for this contest (effectively reverse record).\"},\"setSortedAndTiedProposals()\":{\"details\":\"Setter for _sortedProposalIds, tiedAdjustedRankingPosition, _isTied, _lowestRanking, and _highestTiedRanking. Will only be called once and only needs to be called once because once the contest is complete these values don't change. Determines if a ranking is tied and also where the last iteration of a ranking is in the _sortedProposalIds list taking ties into account.\"},\"sortedProposalIds()\":{\"details\":\"Getter for _sortedProposalIds.\"},\"sortedProposals(bool)\":{\"details\":\"Accessor to sorted list of proposalIds in ascending order.\"},\"state()\":{\"details\":\"See {IGovernor-state}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"validateProposalData((address,string,bool,(address),(address[],uint256)))\":{\"details\":\"See {IGovernor-validateProposalData}.\"},\"verifyProposer(address,bytes32[])\":{\"details\":\"See {IGovernor-verifyProposer}.\"},\"verifyVoter(address,uint256,bytes32[])\":{\"details\":\"See {IGovernor-verifyVoter}.\"},\"version()\":{\"details\":\"See {IGovernor-version}.\"},\"voteStart()\":{\"details\":\"See {IGovernor-voteStart}.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"NotInMerkle()\":[{\"notice\":\"Thrown if address/amount are not part of Merkle tree\"}],\"TooManyMetadatas()\":[{\"notice\":\"Thrown if there is metadata included in a proposal that isn't covered in data validation\"}]},\"kind\":\"user\",\"methods\":{\"checkProof(address,uint256,bytes32[],bool)\":{\"notice\":\"Allows checking of proofs for an address\"},\"submissionMerkleRoot()\":{\"notice\":\"ERC20-claimee inclusion root\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Contest.sol\":\"Contest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x6df04f39889de6f277a0e3f2c307f3f0a2dba677d1ed877d50fb39c1184992b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03af6d201c35597a22b7bd24e84b2fffd5821de653d139484d6bf8ea3c86d2ae\",\"dweb:/ipfs/QmV4RfQVsJd86aCRevLmMdbxGrU5QgbffTif1zRTGUR68D\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0\",\"dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577\",\"dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71\",\"dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xf415bea43be5587b449753cfddab434182034ded22e50bc9dce4ac4a613045ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9baf7a59358eef93ae8635d00b89285adc2295870f12f720e5b54800d54568b1\",\"dweb:/ipfs/QmTSKWkpvFdHkT9NrLPmS1SVeSgvV6hbS5xb91giLoEr32\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x20ecf3c67cab5ec0a1d0cc7d980fa236ffdfd8579d8d8b6b89d29329bc6e78ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b52e4581ee6605732661d367845d2c551e0efcf81852f29248aef6d4be0a300b\",\"dweb:/ipfs/QmaLPj2TrVCTPH6D1BEjBVCb9N1dLJ6pTcoJwCmM3HWkfC\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf\",\"dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng\"]},\"lib/openzeppelin-contracts/contracts/utils/Timers.sol\":{\"keccak256\":\"0x3ee0d9289f88556bc231aa720fcf43a31bda1ee164ada26c2048165df71bdaac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8eb8853c016aa7cc6719eccc73df5b3cfc24e62e868e161968cc87e358bcac2\",\"dweb:/ipfs/QmPUDxGwtCJ13ZjDa5bzeCn6iXj4iXvgZg73D8SoKz8nhY\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xbb3a7044647cb4088be40b49b87ff990fac44f2d50569110a2b2ce7942365020\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5deecb9394b327096dee59f6d2600e5dc41795d20d6312b9e17184d04941855e\",\"dweb:/ipfs/QmNRLLFHxfdzPBcUF2NpyGqBoYzGGoR34g7HWFzEcPokEX\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0xa8f005abb8835d40af525bcf3cdc31d7e4a55730ce9b584d3fe4e5db442fb0ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a1184f05c5a953155e11cb977e5c08a3b4442919c7e928d3e3adbf06ae6fff\",\"dweb:/ipfs/QmdRf7Cg7e9va2K29Kb7KLng26GmUmpti7mAEhGbAQXS7r\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcc76dbe53154a5bbd12fdd1613a73f73f3dc7c63d813be36f7ee606f52d6a7b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://345232794f2cfafccfb4371e44910af9fd86f972ecace1bb6843532536590929\",\"dweb:/ipfs/QmSnapDBk6P2JG6LJHwituQq7wMM8DawKj32APiPj5Bzpn\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0xea30c402170bc240354b74e6c6f6a8e5bdb1935d90d168cc58c0654461c6a72b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95cbddf89006e6dbbc200eb091eb90025c97a9980310f2325c9bda2c4fdc97e3\",\"dweb:/ipfs/QmT67Dt3xrKEQSDC4XyDcrKwZUYsJzddrRFjEopRZNP9yR\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4\",\"dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"src/Contest.sol\":{\"keccak256\":\"0xa471cab034594f2c2abee2478c60c024de57070152038716d4deaf704f79143c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19bde157cbcdaa4bc4a6e28390bc2f06a558abcf594d70038e0e4f7cab6ba363\",\"dweb:/ipfs/QmW8Hi3fPYwekpdzPuiYATh5NrHz9RkDSr1LjvTPXnG46V\"]},\"src/governance/Governor.sol\":{\"keccak256\":\"0xed56dab7d02efe57f71c39eb9d9cb2acc96258b3186c18439c4040d864e60cbe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3861575e3f29d265681c77d69ce69f5f8bd3469a2387af3f7b1220f22e03af27\",\"dweb:/ipfs/QmRRCiSCSYb7LrubBfr1qawTGjDSX18F8tJJ5zFG4mP1EZ\"]},\"src/governance/GovernorMerkleVotes.sol\":{\"keccak256\":\"0xdf37902c07f4229349c80ae7335d7d7112265e62428a38e2786584382bc8f0ec\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://73866fb05fb57229990cbb10d7788098ad66e0a821bb8622d91eb0e9cb836d5d\",\"dweb:/ipfs/Qmeg5mnXTsXYyrkGhMYfX1XjBAT6Y2wwwrcQZxKVkKHRgU\"]},\"src/governance/IGovernor.sol\":{\"keccak256\":\"0xc6068392e571f6439d5b71f96090947c14e43743d61db30619c4489650f7677b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://736a6af743bb083ce16c2f1f3eaa004409c50e138ae3adb1299c082ef244bb93\",\"dweb:/ipfs/QmYrNXCYqNfoKhWNmYWLkriw49wZnWKQ7UTGDQvHduPc9x\"]},\"src/governance/extensions/GovernorCountingSimple.sol\":{\"keccak256\":\"0x86c4edaf6832e124bbad89f527c5970ee0ad54d047bbd4cf5da14ca27bb08988\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34bb63b96fb431abcf2015b400cec15ee0704ea4d471a62c9303c23c42cce1c3\",\"dweb:/ipfs/QmTHzoiysENmAF85UwP9swko8R6x8Wm8gF4FfxCXanTwea\"]},\"src/governance/extensions/GovernorModuleRegistry.sol\":{\"keccak256\":\"0x62c9d2a2dcaeccf1b6b801595f34abf893416964997e6ba699c9828ada1abefc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18672ac920d4749fec025a7c8610c8cb866addb0ba20e9cfce5bedd91e062776\",\"dweb:/ipfs/QmNPWkqouY45jCeeFYi5metLX9d8BpSuGXLG55A5BZjH4D\"]},\"src/governance/extensions/GovernorSettings.sol\":{\"keccak256\":\"0xc0c49d1f98f73d4bb5ae3b30d9224f97342d172c9137430808a081ffa9d28d52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd981f3202d803806adefbb6b21625f2320e6fbaaaf2ae690434fa198a76ad30\",\"dweb:/ipfs/Qmcrw93uTQSVUpXm1YJjTRMjMXFMjZrhMYCFXKHkGcGbGi\"]},\"src/governance/extensions/GovernorSorting.sol\":{\"keccak256\":\"0x42adfca84a61c7ae894a65e1cdbe788c164f4842fe9608836508c66a6624ebf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2fe0d6536d546d91094c9dc0749b4cfaa82c5132a31fa23b9e11b8e57139a0b9\",\"dweb:/ipfs/QmYzBFMQu9mUDd5krFC82Nsc3iccuRurs264YVxZGEXaa9\"]},\"src/modules/RewardsModule.sol\":{\"keccak256\":\"0x9a38dd865cfb4ea70d53e02aeaf2cf22dfb0ae094e012741e51358c2cbefc7f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4648f3026f7d00c0423f1810f93b8dd51d2b55499d747583ce00b12d041342\",\"dweb:/ipfs/QmNWYKfWGt3qwcRB3JaJf2G2QCzUGPy531LPbQDngxBPZU\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_prompt",
              "type": "string"
            },
            {
              "internalType": "bytes32",
              "name": "_submissionMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "_votingMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256[]",
              "name": "_constructorIntParams",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidShortString"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotInMerkle"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "str",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "StringTooLong"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TooManyMetadatas"
        },
        {
          "inputs": [],
          "type": "event",
          "name": "ContestCanceled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldContestStart",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newContestStart",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContestStartSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldCreator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newCreator",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CreatorSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldDownvotingAllowed",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newDownvotingAllowed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DownvotingAllowedSet",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "EIP712DomainChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldMaxProposalCount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newMaxProposalCount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MaxProposalCountSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldNumAllowedProposalSubmissions",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newNumAllowedProposalSubmissions",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NumAllowedProposalSubmissionsSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract RewardsModule",
              "name": "oldOfficialRewardsModule",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract RewardsModule",
              "name": "newOfficialRewardsModule",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OfficialRewardsModuleSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "proposer",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProposalCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalIds",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProposalsDeleted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "voter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "numVotes",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "reason",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VoteCast",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldVotingDelay",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newVotingDelay",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VotingDelaySet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldVotingPeriod",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newVotingPeriod",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VotingPeriodSet",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "AMOUNT_FOR_SUMBITTER_PROOF",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BALLOT_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "COUNTING_MODE",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "METADATAS_COUNT",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressSubmitterVerified",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressTotalCastVoteCounts",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressTotalVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressTotalVotesVerified",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allProposalTotalVotes",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalIdsReturn",
              "type": "uint256[]"
            },
            {
              "internalType": "struct GovernorCountingSimple.VoteCounts[]",
              "name": "proposalVoteCountsArrayReturn",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "forVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "againstVotes",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allProposalTotalVotesWithoutDeleted",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalIdsReturn",
              "type": "uint256[]"
            },
            {
              "internalType": "struct GovernorCountingSimple.VoteCounts[]",
              "name": "proposalVoteCountsArrayReturn",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "forVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "againstVotes",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancel"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "totalVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "numVotes",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "castVote",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "numVotes",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "castVoteWithoutProof",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "addressToCheck",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "bool",
              "name": "voting",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkProof",
          "outputs": [
            {
              "internalType": "bool",
              "name": "verified",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "userAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "contestAddressTotalVotesCast",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "totalVotesCast",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contestDeadline",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contestStart",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "creator",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalIds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteProposals"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "downvotingAllowed",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eip712Domain",
          "outputs": [
            {
              "internalType": "bytes1",
              "name": "fields",
              "type": "bytes1"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "version",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "chainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "verifyingContract",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "uint256[]",
              "name": "extensions",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllProposalIds",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getNumSubmissions",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProposal",
          "outputs": [
            {
              "internalType": "struct IGovernor.ProposalCore",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "struct IGovernor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct IGovernor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IGovernor.ProposalCore",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "struct IGovernor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct IGovernor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "hashProposal",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "highestTiedRanking",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isProposalDeleted",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "ranking",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTied",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lowestRanking",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxProposalCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "numAllowedProposalSubmissions",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "officialRewardsModule",
          "outputs": [
            {
              "internalType": "contract RewardsModule",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "prompt",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "userAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalAddressVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalAddressesHaveVoted",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalVotesStructs",
          "outputs": [
            {
              "internalType": "struct GovernorCountingSimple.VoteCounts",
              "name": "proposalVoteCounts",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "forVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "againstVotes",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IGovernor.ProposalCore",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "struct IGovernor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct IGovernor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "propose",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IGovernor.ProposalCore",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "struct IGovernor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct IGovernor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "proposeWithoutProof",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "ranking",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "rankingPosition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract RewardsModule",
              "name": "officialRewardsModule_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOfficialRewardsModule"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSortedAndTiedProposals"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "setSortedAndTiedProposalsHasBeenRun",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sortedProposalIds",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "excludeDeletedProposals",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "sortedProposals",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "sortedProposalIdsReturn",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "state",
          "outputs": [
            {
              "internalType": "enum IGovernor.ContestState",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "submissionMerkleRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tiedAdjustedRankingPosition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IGovernor.ProposalCore",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "struct IGovernor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct IGovernor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "validateProposalData",
          "outputs": [
            {
              "internalType": "bool",
              "name": "dataValidated",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyProposer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "verified",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalVotes",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyVoter",
          "outputs": [
            {
              "internalType": "bool",
              "name": "verified",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "voteStart",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "votingDelay",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "votingMerkleRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "votingPeriod",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "COUNTING_MODE()": {
            "details": "See {IGovernor-COUNTING_MODE}."
          },
          "allProposalTotalVotes()": {
            "details": "Accessor to the internal vote counts for a given proposal."
          },
          "allProposalTotalVotesWithoutDeleted()": {
            "details": "Accessor to the internal vote counts for a given proposal that excludes deleted proposals."
          },
          "cancel()": {
            "details": "Emits a {IGovernor-ContestCanceled} event."
          },
          "castVote(uint256,uint8,uint256,uint256,bytes32[])": {
            "details": "See {IGovernor-castVote}."
          },
          "castVoteWithoutProof(uint256,uint8,uint256)": {
            "details": "See {IGovernor-castVoteWithoutProof}."
          },
          "checkProof(address,uint256,bytes32[],bool)": {
            "params": {
              "addressToCheck": "address of claimee",
              "amount": "to check that the claimee has",
              "proof": "merkle proof to prove address and amount are in tree"
            }
          },
          "contestAddressTotalVotesCast(address)": {
            "details": "Accessor to how many votes an address has cast total for the contest so far."
          },
          "contestDeadline()": {
            "details": "See {IGovernor-contestDeadline}."
          },
          "deleteProposals(uint256[])": {
            "details": "Delete proposals. Emits a {IGovernor-ProposalsDeleted} event."
          },
          "eip712Domain()": {
            "details": "See {EIP-5267}."
          },
          "getAllProposalIds()": {
            "details": "Return all proposals."
          },
          "getNumSubmissions(address)": {
            "details": "Get the number of proposal submissions for a given address."
          },
          "getProposal(uint256)": {
            "details": "Retrieve proposal data\"_."
          },
          "hashProposal((address,string,bool,(address),(address[],uint256)))": {
            "details": "See {IGovernor-hashProposal}. The proposal id is produced by hashing the RLC encoded `targets` array, the `values` array, the `calldatas` array and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in advance, before the proposal is submitted. Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the same proposal (with same operation and same description) will have the same id if submitted on multiple governors accross multiple networks. This also means that in order to execute the same operation twice (on the same governor) the proposer will have to change the description in order to avoid proposal id conflicts."
          },
          "highestTiedRanking()": {
            "details": "Getter for highest tied ranking."
          },
          "isProposalDeleted(uint256)": {
            "details": "Returns if a proposal has been deleted or not (0 if not, 1 if it has been deleted)."
          },
          "isTied(uint256)": {
            "details": "Getter if a given ranking is tied."
          },
          "lowestRanking()": {
            "details": "Getter for the lowest ranking."
          },
          "name()": {
            "details": "See {IGovernor-name}."
          },
          "officialRewardsModule()": {
            "details": "Get the official rewards module contract for this contest (effectively reverse record)."
          },
          "prompt()": {
            "details": "See {IGovernor-prompt}."
          },
          "proposalAddressVotes(uint256,address)": {
            "details": "Accessor to how many votes an address has cast for a given proposal."
          },
          "proposalAddressesHaveVoted(uint256)": {
            "details": "Accessor to which addresses have cast a vote for a given proposal."
          },
          "proposalVotes(uint256)": {
            "details": "Accessor to the internal vote counts for a given proposal."
          },
          "propose((address,string,bool,(address),(address[],uint256)),bytes32[])": {
            "details": "See {IGovernor-propose}."
          },
          "proposeWithoutProof((address,string,bool,(address),(address[],uint256)))": {
            "details": "See {IGovernor-proposeWithoutProof}."
          },
          "rankingPosition(uint256)": {
            "details": "Getter for tiedAdjustedRankingPosition of a ranking."
          },
          "setOfficialRewardsModule(address)": {
            "details": "Get the official rewards module contract for this contest (effectively reverse record)."
          },
          "setSortedAndTiedProposals()": {
            "details": "Setter for _sortedProposalIds, tiedAdjustedRankingPosition, _isTied, _lowestRanking, and _highestTiedRanking. Will only be called once and only needs to be called once because once the contest is complete these values don't change. Determines if a ranking is tied and also where the last iteration of a ranking is in the _sortedProposalIds list taking ties into account."
          },
          "sortedProposalIds()": {
            "details": "Getter for _sortedProposalIds."
          },
          "sortedProposals(bool)": {
            "details": "Accessor to sorted list of proposalIds in ascending order."
          },
          "state()": {
            "details": "See {IGovernor-state}."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "validateProposalData((address,string,bool,(address),(address[],uint256)))": {
            "details": "See {IGovernor-validateProposalData}."
          },
          "verifyProposer(address,bytes32[])": {
            "details": "See {IGovernor-verifyProposer}."
          },
          "verifyVoter(address,uint256,bytes32[])": {
            "details": "See {IGovernor-verifyVoter}."
          },
          "version()": {
            "details": "See {IGovernor-version}."
          },
          "voteStart()": {
            "details": "See {IGovernor-voteStart}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "checkProof(address,uint256,bytes32[],bool)": {
            "notice": "Allows checking of proofs for an address"
          },
          "submissionMerkleRoot()": {
            "notice": "ERC20-claimee inclusion root"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@forge-std/=lib/forge-std/src/",
        ":@openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Contest.sol": "Contest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol": {
        "keccak256": "0x6df04f39889de6f277a0e3f2c307f3f0a2dba677d1ed877d50fb39c1184992b8",
        "urls": [
          "bzz-raw://03af6d201c35597a22b7bd24e84b2fffd5821de653d139484d6bf8ea3c86d2ae",
          "dweb:/ipfs/QmV4RfQVsJd86aCRevLmMdbxGrU5QgbffTif1zRTGUR68D"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0",
        "urls": [
          "bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1",
          "dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb",
        "urls": [
          "bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0",
          "dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a",
        "urls": [
          "bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577",
          "dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc",
        "urls": [
          "bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71",
          "dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol": {
        "keccak256": "0xf415bea43be5587b449753cfddab434182034ded22e50bc9dce4ac4a613045ee",
        "urls": [
          "bzz-raw://9baf7a59358eef93ae8635d00b89285adc2295870f12f720e5b54800d54568b1",
          "dweb:/ipfs/QmTSKWkpvFdHkT9NrLPmS1SVeSgvV6hbS5xb91giLoEr32"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0x20ecf3c67cab5ec0a1d0cc7d980fa236ffdfd8579d8d8b6b89d29329bc6e78ae",
        "urls": [
          "bzz-raw://b52e4581ee6605732661d367845d2c551e0efcf81852f29248aef6d4be0a300b",
          "dweb:/ipfs/QmaLPj2TrVCTPH6D1BEjBVCb9N1dLJ6pTcoJwCmM3HWkfC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f",
        "urls": [
          "bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf",
          "dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Timers.sol": {
        "keccak256": "0x3ee0d9289f88556bc231aa720fcf43a31bda1ee164ada26c2048165df71bdaac",
        "urls": [
          "bzz-raw://a8eb8853c016aa7cc6719eccc73df5b3cfc24e62e868e161968cc87e358bcac2",
          "dweb:/ipfs/QmPUDxGwtCJ13ZjDa5bzeCn6iXj4iXvgZg73D8SoKz8nhY"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xbb3a7044647cb4088be40b49b87ff990fac44f2d50569110a2b2ce7942365020",
        "urls": [
          "bzz-raw://5deecb9394b327096dee59f6d2600e5dc41795d20d6312b9e17184d04941855e",
          "dweb:/ipfs/QmNRLLFHxfdzPBcUF2NpyGqBoYzGGoR34g7HWFzEcPokEX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol": {
        "keccak256": "0xa8f005abb8835d40af525bcf3cdc31d7e4a55730ce9b584d3fe4e5db442fb0ed",
        "urls": [
          "bzz-raw://a0a1184f05c5a953155e11cb977e5c08a3b4442919c7e928d3e3adbf06ae6fff",
          "dweb:/ipfs/QmdRf7Cg7e9va2K29Kb7KLng26GmUmpti7mAEhGbAQXS7r"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol": {
        "keccak256": "0xcc76dbe53154a5bbd12fdd1613a73f73f3dc7c63d813be36f7ee606f52d6a7b3",
        "urls": [
          "bzz-raw://345232794f2cfafccfb4371e44910af9fd86f972ecace1bb6843532536590929",
          "dweb:/ipfs/QmSnapDBk6P2JG6LJHwituQq7wMM8DawKj32APiPj5Bzpn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol": {
        "keccak256": "0xea30c402170bc240354b74e6c6f6a8e5bdb1935d90d168cc58c0654461c6a72b",
        "urls": [
          "bzz-raw://95cbddf89006e6dbbc200eb091eb90025c97a9980310f2325c9bda2c4fdc97e3",
          "dweb:/ipfs/QmT67Dt3xrKEQSDC4XyDcrKwZUYsJzddrRFjEopRZNP9yR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858",
        "urls": [
          "bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4",
          "dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "src/Contest.sol": {
        "keccak256": "0xa471cab034594f2c2abee2478c60c024de57070152038716d4deaf704f79143c",
        "urls": [
          "bzz-raw://19bde157cbcdaa4bc4a6e28390bc2f06a558abcf594d70038e0e4f7cab6ba363",
          "dweb:/ipfs/QmW8Hi3fPYwekpdzPuiYATh5NrHz9RkDSr1LjvTPXnG46V"
        ],
        "license": "MIT"
      },
      "src/governance/Governor.sol": {
        "keccak256": "0xed56dab7d02efe57f71c39eb9d9cb2acc96258b3186c18439c4040d864e60cbe",
        "urls": [
          "bzz-raw://3861575e3f29d265681c77d69ce69f5f8bd3469a2387af3f7b1220f22e03af27",
          "dweb:/ipfs/QmRRCiSCSYb7LrubBfr1qawTGjDSX18F8tJJ5zFG4mP1EZ"
        ],
        "license": "MIT"
      },
      "src/governance/GovernorMerkleVotes.sol": {
        "keccak256": "0xdf37902c07f4229349c80ae7335d7d7112265e62428a38e2786584382bc8f0ec",
        "urls": [
          "bzz-raw://73866fb05fb57229990cbb10d7788098ad66e0a821bb8622d91eb0e9cb836d5d",
          "dweb:/ipfs/Qmeg5mnXTsXYyrkGhMYfX1XjBAT6Y2wwwrcQZxKVkKHRgU"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/governance/IGovernor.sol": {
        "keccak256": "0xc6068392e571f6439d5b71f96090947c14e43743d61db30619c4489650f7677b",
        "urls": [
          "bzz-raw://736a6af743bb083ce16c2f1f3eaa004409c50e138ae3adb1299c082ef244bb93",
          "dweb:/ipfs/QmYrNXCYqNfoKhWNmYWLkriw49wZnWKQ7UTGDQvHduPc9x"
        ],
        "license": "MIT"
      },
      "src/governance/extensions/GovernorCountingSimple.sol": {
        "keccak256": "0x86c4edaf6832e124bbad89f527c5970ee0ad54d047bbd4cf5da14ca27bb08988",
        "urls": [
          "bzz-raw://34bb63b96fb431abcf2015b400cec15ee0704ea4d471a62c9303c23c42cce1c3",
          "dweb:/ipfs/QmTHzoiysENmAF85UwP9swko8R6x8Wm8gF4FfxCXanTwea"
        ],
        "license": "MIT"
      },
      "src/governance/extensions/GovernorModuleRegistry.sol": {
        "keccak256": "0x62c9d2a2dcaeccf1b6b801595f34abf893416964997e6ba699c9828ada1abefc",
        "urls": [
          "bzz-raw://18672ac920d4749fec025a7c8610c8cb866addb0ba20e9cfce5bedd91e062776",
          "dweb:/ipfs/QmNPWkqouY45jCeeFYi5metLX9d8BpSuGXLG55A5BZjH4D"
        ],
        "license": "MIT"
      },
      "src/governance/extensions/GovernorSettings.sol": {
        "keccak256": "0xc0c49d1f98f73d4bb5ae3b30d9224f97342d172c9137430808a081ffa9d28d52",
        "urls": [
          "bzz-raw://cd981f3202d803806adefbb6b21625f2320e6fbaaaf2ae690434fa198a76ad30",
          "dweb:/ipfs/Qmcrw93uTQSVUpXm1YJjTRMjMXFMjZrhMYCFXKHkGcGbGi"
        ],
        "license": "MIT"
      },
      "src/governance/extensions/GovernorSorting.sol": {
        "keccak256": "0x42adfca84a61c7ae894a65e1cdbe788c164f4842fe9608836508c66a6624ebf1",
        "urls": [
          "bzz-raw://2fe0d6536d546d91094c9dc0749b4cfaa82c5132a31fa23b9e11b8e57139a0b9",
          "dweb:/ipfs/QmYzBFMQu9mUDd5krFC82Nsc3iccuRurs264YVxZGEXaa9"
        ],
        "license": "MIT"
      },
      "src/modules/RewardsModule.sol": {
        "keccak256": "0x9a38dd865cfb4ea70d53e02aeaf2cf22dfb0ae094e012741e51358c2cbefc7f6",
        "urls": [
          "bzz-raw://0c4648f3026f7d00c0423f1810f93b8dd51d2b55499d747583ce00b12d041342",
          "dweb:/ipfs/QmNWYKfWGt3qwcRB3JaJf2G2QCzUGPy531LPbQDngxBPZU"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Contest.sol",
    "id": 34384,
    "exportedSymbols": {
      "Address": [
        29818
      ],
      "Contest": [
        34383
      ],
      "Context": [
        29840
      ],
      "ECDSA": [
        30975
      ],
      "EIP712": [
        31179
      ],
      "ERC165": [
        31712
      ],
      "Governor": [
        35332
      ],
      "GovernorCountingSimple": [
        35909
      ],
      "GovernorMerkleVotes": [
        35414
      ],
      "GovernorModuleRegistry": [
        35969
      ],
      "GovernorSettings": [
        36268
      ],
      "GovernorSorting": [
        36911
      ],
      "IERC165": [
        31724
      ],
      "IERC20": [
        29076
      ],
      "IERC20Permit": [
        29112
      ],
      "IERC5267": [
        28998
      ],
      "IGovernor": [
        35643
      ],
      "Math": [
        32590
      ],
      "MerkleProof": [
        31685
      ],
      "RewardsModule": [
        37724
      ],
      "SafeCast": [
        34131
      ],
      "SafeERC20": [
        29488
      ],
      "ShortString": [
        29845
      ],
      "ShortStrings": [
        30056
      ],
      "SignedMath": [
        34236
      ],
      "StorageSlot": [
        30166
      ],
      "Strings": [
        30395
      ],
      "Timers": [
        30609
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2151:36",
    "nodes": [
      {
        "id": 34238,
        "nodeType": "PragmaDirective",
        "src": "32:23:36",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 34239,
        "nodeType": "ImportDirective",
        "src": "57:35:36",
        "nodes": [],
        "absolutePath": "src/governance/Governor.sol",
        "file": "./governance/Governor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34384,
        "sourceUnit": 35333,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34240,
        "nodeType": "ImportDirective",
        "src": "93:54:36",
        "nodes": [],
        "absolutePath": "src/governance/extensions/GovernorSettings.sol",
        "file": "./governance/extensions/GovernorSettings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34384,
        "sourceUnit": 36269,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34241,
        "nodeType": "ImportDirective",
        "src": "148:60:36",
        "nodes": [],
        "absolutePath": "src/governance/extensions/GovernorCountingSimple.sol",
        "file": "./governance/extensions/GovernorCountingSimple.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34384,
        "sourceUnit": 35910,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34242,
        "nodeType": "ImportDirective",
        "src": "209:60:36",
        "nodes": [],
        "absolutePath": "src/governance/extensions/GovernorModuleRegistry.sol",
        "file": "./governance/extensions/GovernorModuleRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34384,
        "sourceUnit": 35970,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34383,
        "nodeType": "ContractDefinition",
        "src": "271:1911:36",
        "nodes": [
          {
            "id": 34291,
            "nodeType": "FunctionDefinition",
            "src": "365:716:36",
            "nodes": [],
            "body": {
              "id": 34290,
              "nodeType": "Block",
              "src": "1079:2:36",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 34264,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34252,
                    "src": "582:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 34265,
                    "name": "_prompt",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34254,
                    "src": "589:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 34266,
                    "name": "_submissionMerkleRoot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34256,
                    "src": "598:21:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "id": 34267,
                    "name": "_votingMerkleRoot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34258,
                    "src": "621:17:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 34268,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 34263,
                  "name": "Governor",
                  "nameLocations": [
                    "573:8:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35332,
                  "src": "573:8:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "573:66:36"
              },
              {
                "arguments": [
                  {
                    "baseExpression": {
                      "id": 34270,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34261,
                      "src": "678:21:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 34272,
                    "indexExpression": {
                      "hexValue": "30",
                      "id": 34271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "700:1:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "678:24:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 34273,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34261,
                      "src": "740:21:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 34275,
                    "indexExpression": {
                      "hexValue": "31",
                      "id": 34274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "762:1:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "740:24:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 34276,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34261,
                      "src": "802:21:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 34278,
                    "indexExpression": {
                      "hexValue": "32",
                      "id": 34277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "824:1:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "802:24:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 34279,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34261,
                      "src": "865:21:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 34281,
                    "indexExpression": {
                      "hexValue": "33",
                      "id": 34280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "887:1:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "865:24:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 34282,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34261,
                      "src": "945:21:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 34284,
                    "indexExpression": {
                      "hexValue": "34",
                      "id": 34283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "967:1:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "945:24:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 34285,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34261,
                      "src": "1011:21:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 34287,
                    "indexExpression": {
                      "hexValue": "35",
                      "id": 34286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1033:1:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1011:24:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 34288,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 34269,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "648:16:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36268,
                  "src": "648:16:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "648:426:36"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 34262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34252,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "400:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 34291,
                  "src": "386:19:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 34251,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "386:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34254,
                  "mutability": "mutable",
                  "name": "_prompt",
                  "nameLocation": "429:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 34291,
                  "src": "415:21:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 34253,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "415:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34256,
                  "mutability": "mutable",
                  "name": "_submissionMerkleRoot",
                  "nameLocation": "454:21:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 34291,
                  "src": "446:29:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 34255,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "446:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34258,
                  "mutability": "mutable",
                  "name": "_votingMerkleRoot",
                  "nameLocation": "493:17:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 34291,
                  "src": "485:25:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 34257,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "485:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34261,
                  "mutability": "mutable",
                  "name": "_constructorIntParams",
                  "nameLocation": "537:21:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 34291,
                  "src": "520:38:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 34259,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "520:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 34260,
                    "nodeType": "ArrayTypeName",
                    "src": "520:9:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "376:188:36"
            },
            "returnParameters": {
              "id": 34289,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1079:0:36"
            },
            "scope": 34383,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34304,
            "nodeType": "FunctionDefinition",
            "src": "1155:136:36",
            "nodes": [],
            "body": {
              "id": 34303,
              "nodeType": "Block",
              "src": "1247:44:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 34299,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1264:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Contest_$34383_$",
                          "typeString": "type(contract super Contest)"
                        }
                      },
                      "id": 34300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1270:12:36",
                      "memberName": "contestStart",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36088,
                      "src": "1264:18:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 34301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1264:20:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 34298,
                  "id": 34302,
                  "nodeType": "Return",
                  "src": "1257:27:36"
                }
              ]
            },
            "baseFunctions": [
              35529,
              36088
            ],
            "functionSelector": "004114a8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contestStart",
            "nameLocation": "1164:12:36",
            "overrides": {
              "id": 34295,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 34293,
                  "name": "IGovernor",
                  "nameLocations": [
                    "1200:9:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35643,
                  "src": "1200:9:36"
                },
                {
                  "id": 34294,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "1211:16:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36268,
                  "src": "1211:16:36"
                }
              ],
              "src": "1191:37:36"
            },
            "parameters": {
              "id": 34292,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1176:2:36"
            },
            "returnParameters": {
              "id": 34298,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34297,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34304,
                  "src": "1238:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34296,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1238:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1237:9:36"
            },
            "scope": 34383,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34317,
            "nodeType": "FunctionDefinition",
            "src": "1297:134:36",
            "nodes": [],
            "body": {
              "id": 34316,
              "nodeType": "Block",
              "src": "1388:43:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 34312,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1405:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Contest_$34383_$",
                          "typeString": "type(contract super Contest)"
                        }
                      },
                      "id": 34313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1411:11:36",
                      "memberName": "votingDelay",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36098,
                      "src": "1405:17:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 34314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1405:19:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 34311,
                  "id": 34315,
                  "nodeType": "Return",
                  "src": "1398:26:36"
                }
              ]
            },
            "baseFunctions": [
              35547,
              36098
            ],
            "functionSelector": "3932abb1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "votingDelay",
            "nameLocation": "1306:11:36",
            "overrides": {
              "id": 34308,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 34306,
                  "name": "IGovernor",
                  "nameLocations": [
                    "1341:9:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35643,
                  "src": "1341:9:36"
                },
                {
                  "id": 34307,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "1352:16:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36268,
                  "src": "1352:16:36"
                }
              ],
              "src": "1332:37:36"
            },
            "parameters": {
              "id": 34305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1317:2:36"
            },
            "returnParameters": {
              "id": 34311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34310,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34317,
                  "src": "1379:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34309,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1379:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1378:9:36"
            },
            "scope": 34383,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34330,
            "nodeType": "FunctionDefinition",
            "src": "1437:136:36",
            "nodes": [],
            "body": {
              "id": 34329,
              "nodeType": "Block",
              "src": "1529:44:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 34325,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1546:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Contest_$34383_$",
                          "typeString": "type(contract super Contest)"
                        }
                      },
                      "id": 34326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1552:12:36",
                      "memberName": "votingPeriod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36108,
                      "src": "1546:18:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 34327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1546:20:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 34324,
                  "id": 34328,
                  "nodeType": "Return",
                  "src": "1539:27:36"
                }
              ]
            },
            "baseFunctions": [
              35553,
              36108
            ],
            "functionSelector": "02a251a3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "votingPeriod",
            "nameLocation": "1446:12:36",
            "overrides": {
              "id": 34321,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 34319,
                  "name": "IGovernor",
                  "nameLocations": [
                    "1482:9:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35643,
                  "src": "1482:9:36"
                },
                {
                  "id": 34320,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "1493:16:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36268,
                  "src": "1493:16:36"
                }
              ],
              "src": "1473:37:36"
            },
            "parameters": {
              "id": 34318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1458:2:36"
            },
            "returnParameters": {
              "id": 34324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34323,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34330,
                  "src": "1520:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34322,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1520:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1519:9:36"
            },
            "scope": 34383,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34343,
            "nodeType": "FunctionDefinition",
            "src": "1579:169:36",
            "nodes": [],
            "body": {
              "id": 34342,
              "nodeType": "Block",
              "src": "1687:61:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 34338,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1704:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Contest_$34383_$",
                          "typeString": "type(contract super Contest)"
                        }
                      },
                      "id": 34339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1710:29:36",
                      "memberName": "numAllowedProposalSubmissions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36118,
                      "src": "1704:35:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 34340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1704:37:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 34337,
                  "id": 34341,
                  "nodeType": "Return",
                  "src": "1697:44:36"
                }
              ]
            },
            "baseFunctions": [
              34693,
              36118
            ],
            "functionSelector": "832009af",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "numAllowedProposalSubmissions",
            "nameLocation": "1588:29:36",
            "overrides": {
              "id": 34334,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 34332,
                  "name": "Governor",
                  "nameLocations": [
                    "1641:8:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35332,
                  "src": "1641:8:36"
                },
                {
                  "id": 34333,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "1651:16:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36268,
                  "src": "1651:16:36"
                }
              ],
              "src": "1632:36:36"
            },
            "parameters": {
              "id": 34331,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1617:2:36"
            },
            "returnParameters": {
              "id": 34337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34336,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34343,
                  "src": "1678:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34335,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1678:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1677:9:36"
            },
            "scope": 34383,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34356,
            "nodeType": "FunctionDefinition",
            "src": "1754:143:36",
            "nodes": [],
            "body": {
              "id": 34355,
              "nodeType": "Block",
              "src": "1849:48:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 34351,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1866:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Contest_$34383_$",
                          "typeString": "type(contract super Contest)"
                        }
                      },
                      "id": 34352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1872:16:36",
                      "memberName": "maxProposalCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36128,
                      "src": "1866:22:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 34353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1866:24:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 34350,
                  "id": 34354,
                  "nodeType": "Return",
                  "src": "1859:31:36"
                }
              ]
            },
            "baseFunctions": [
              34702,
              36128
            ],
            "functionSelector": "fb9bf8d4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "maxProposalCount",
            "nameLocation": "1763:16:36",
            "overrides": {
              "id": 34347,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 34345,
                  "name": "Governor",
                  "nameLocations": [
                    "1803:8:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35332,
                  "src": "1803:8:36"
                },
                {
                  "id": 34346,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "1813:16:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36268,
                  "src": "1813:16:36"
                }
              ],
              "src": "1794:36:36"
            },
            "parameters": {
              "id": 34344,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1779:2:36"
            },
            "returnParameters": {
              "id": 34350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34349,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34356,
                  "src": "1840:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34348,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1840:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1839:9:36"
            },
            "scope": 34383,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34369,
            "nodeType": "FunctionDefinition",
            "src": "1903:145:36",
            "nodes": [],
            "body": {
              "id": 34368,
              "nodeType": "Block",
              "src": "1999:49:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 34364,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "2016:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Contest_$34383_$",
                          "typeString": "type(contract super Contest)"
                        }
                      },
                      "id": 34365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2022:17:36",
                      "memberName": "downvotingAllowed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36138,
                      "src": "2016:23:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 34366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2016:25:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 34363,
                  "id": 34367,
                  "nodeType": "Return",
                  "src": "2009:32:36"
                }
              ]
            },
            "baseFunctions": [
              34711,
              36138
            ],
            "functionSelector": "60506ff6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "downvotingAllowed",
            "nameLocation": "1912:17:36",
            "overrides": {
              "id": 34360,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 34358,
                  "name": "Governor",
                  "nameLocations": [
                    "1953:8:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35332,
                  "src": "1953:8:36"
                },
                {
                  "id": 34359,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "1963:16:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36268,
                  "src": "1963:16:36"
                }
              ],
              "src": "1944:36:36"
            },
            "parameters": {
              "id": 34357,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1929:2:36"
            },
            "returnParameters": {
              "id": 34363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34362,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34369,
                  "src": "1990:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34361,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1990:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1989:9:36"
            },
            "scope": 34383,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34382,
            "nodeType": "FunctionDefinition",
            "src": "2054:126:36",
            "nodes": [],
            "body": {
              "id": 34381,
              "nodeType": "Block",
              "src": "2141:39:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 34377,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "2158:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Contest_$34383_$",
                          "typeString": "type(contract super Contest)"
                        }
                      },
                      "id": 34378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2164:7:36",
                      "memberName": "creator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36148,
                      "src": "2158:13:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 34379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2158:15:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 34376,
                  "id": 34380,
                  "nodeType": "Return",
                  "src": "2151:22:36"
                }
              ]
            },
            "baseFunctions": [
              35559,
              36148
            ],
            "functionSelector": "02d05d3f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "creator",
            "nameLocation": "2063:7:36",
            "overrides": {
              "id": 34373,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 34371,
                  "name": "IGovernor",
                  "nameLocations": [
                    "2094:9:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35643,
                  "src": "2094:9:36"
                },
                {
                  "id": 34372,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "2105:16:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36268,
                  "src": "2105:16:36"
                }
              ],
              "src": "2085:37:36"
            },
            "parameters": {
              "id": 34370,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2070:2:36"
            },
            "returnParameters": {
              "id": 34376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34375,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34382,
                  "src": "2132:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34374,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2132:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2131:9:36"
            },
            "scope": 34383,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 34243,
              "name": "Governor",
              "nameLocations": [
                "291:8:36"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35332,
              "src": "291:8:36"
            },
            "id": 34244,
            "nodeType": "InheritanceSpecifier",
            "src": "291:8:36"
          },
          {
            "baseName": {
              "id": 34245,
              "name": "GovernorSettings",
              "nameLocations": [
                "301:16:36"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36268,
              "src": "301:16:36"
            },
            "id": 34246,
            "nodeType": "InheritanceSpecifier",
            "src": "301:16:36"
          },
          {
            "baseName": {
              "id": 34247,
              "name": "GovernorSorting",
              "nameLocations": [
                "319:15:36"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36911,
              "src": "319:15:36"
            },
            "id": 34248,
            "nodeType": "InheritanceSpecifier",
            "src": "319:15:36"
          },
          {
            "baseName": {
              "id": 34249,
              "name": "GovernorModuleRegistry",
              "nameLocations": [
                "336:22:36"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35969,
              "src": "336:22:36"
            },
            "id": 34250,
            "nodeType": "InheritanceSpecifier",
            "src": "336:22:36"
          }
        ],
        "canonicalName": "Contest",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          34383,
          35969,
          36911,
          35909,
          36268,
          35332,
          35643,
          35414,
          31179,
          28998,
          31712,
          31724,
          29840
        ],
        "name": "Contest",
        "nameLocation": "280:7:36",
        "scope": 34384,
        "usedErrors": [
          29853,
          29855,
          34452,
          35345
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 36
}