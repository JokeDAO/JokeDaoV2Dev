{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_prompt",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "_submissionMerkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_votingMerkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "_constructorIntParams",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AddressNotPermissionedToSubmit",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "author",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "AuthorIsNotSender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CannotCancelACompletedContest",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CannotDeleteWhenCompleted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CannotVoteOnDeletedProposal",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ContestAlreadyCancelled",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "enum Governor.ContestState",
          "name": "currentState",
          "type": "uint8"
        }
      ],
      "name": "ContestMustBeActiveToVote",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "enum Governor.ContestState",
          "name": "currentState",
          "type": "uint8"
        }
      ],
      "name": "ContestMustBeQueuedToPropose",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "maxProposalCount",
          "type": "uint256"
        }
      ],
      "name": "ContestSubmissionLimitReached",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "DuplicateSubmission",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EmptyProposalDescription",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "msgValue",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "costToPropose",
          "type": "uint256"
        }
      ],
      "name": "IncorrectCostToProposeSent",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IndexHasNotBeenPopulated",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidVoteType",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MoreThanOneProposalWithThisManyVotes",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NeedAtLeastOneVoteToVote",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NeedToSubmitWithProofFirst",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NeedToVoteWithProofFirst",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotEnoughVotesLeft",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotInMerkle",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyCreatorCanDelete",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyCreatorCanSetRewardsModule",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyJkLabsOrCreatorCanCancel",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RankCannotBeZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RankIsNotInSortedRanks",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "numAllowedProposalSubmissions",
          "type": "uint256"
        }
      ],
      "name": "SenderSubmissionLimitReached",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "enum Governor.Metadatas",
          "name": "unexpectedMetadata",
          "type": "uint8"
        }
      ],
      "name": "UnexpectedMetadata",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroSignersInSafeMetadata",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroThresholdInSafeMetadata",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "ContestCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "name": "JokeraceCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract RewardsModule",
          "name": "oldOfficialRewardsModule",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract RewardsModule",
          "name": "newOfficialRewardsModule",
          "type": "address"
        }
      ],
      "name": "OfficialRewardsModuleSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PaymentReleased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "proposalIds",
          "type": "uint256[]"
        }
      ],
      "name": "ProposalsDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "numVotes",
          "type": "uint256"
        }
      ],
      "name": "VoteCast",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "AMOUNT_FOR_SUMBITTER_PROOF",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "JK_LABS_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "METADATAS_COUNT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressSubmitterVerified",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressTotalCastVoteCounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressTotalVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressTotalVotesVerified",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "addressesThatHaveVoted",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allProposalTotalVotes",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "proposalIdsReturn",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "proposalForVotesArrayReturn",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allProposalTotalVotesWithoutDeleted",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "proposalIdsReturn",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "proposalForVotesArrayReturn",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "canceled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "numVotes",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "castVote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "numVotes",
          "type": "uint256"
        }
      ],
      "name": "castVoteWithoutProof",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addressToCheck",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        },
        {
          "internalType": "bool",
          "name": "voting",
          "type": "bool"
        }
      ],
      "name": "checkProof",
      "outputs": [
        {
          "internalType": "bool",
          "name": "verified",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contestDeadline",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contestStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "costToPropose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "proposalIdsToDelete",
          "type": "uint256[]"
        }
      ],
      "name": "deleteProposals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "deletedProposalIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "forVotesToProposalIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllAddressesThatHaveVoted",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllDeletedProposalIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllProposalAuthors",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllProposalIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        }
      ],
      "name": "getNumProposalsWithThisManyForVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        }
      ],
      "name": "getOnlyProposalIdWithThisManyForVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getProposal",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct Governor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Governor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct Governor.ProposalCore",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        }
      ],
      "name": "getProposalsWithThisManyForVotes",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "proposalsWithThisManyForVotes",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rank",
          "type": "uint256"
        }
      ],
      "name": "getRankIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rankIndex",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSortedRanks",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "sortedRanksArray",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct Governor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Governor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct Governor.ProposalCore",
          "name": "proposal",
          "type": "tuple"
        }
      ],
      "name": "hashProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "idx",
          "type": "uint256"
        }
      ],
      "name": "isOrIsBelowTiedRank",
      "outputs": [
        {
          "internalType": "bool",
          "name": "atOrBelowTiedRank",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxProposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numAllowedProposalSubmissions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "numSubmissions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "officialRewardsModule",
      "outputs": [
        {
          "internalType": "contract RewardsModule",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "percentageToCreator",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "prompt",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "proposalAddressVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "proposalAddressesHaveVoted",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalAuthors",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalIsDeleted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "proposalVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalVotesStructs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "address",
          "name": "author",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "exists",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "targetAddress",
              "type": "address"
            }
          ],
          "internalType": "struct Governor.TargetMetadata",
          "name": "targetMetadata",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address[]",
              "name": "signers",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "threshold",
              "type": "uint256"
            }
          ],
          "internalType": "struct Governor.SafeMetadata",
          "name": "safeMetadata",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct Governor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Governor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct Governor.ProposalCore",
          "name": "proposal",
          "type": "tuple"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "propose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct Governor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Governor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct Governor.ProposalCore",
          "name": "proposal",
          "type": "tuple"
        }
      ],
      "name": "proposeWithoutProof",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rankLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract RewardsModule",
          "name": "officialRewardsModule_",
          "type": "address"
        }
      ],
      "name": "setOfficialRewardsModule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "sortedRanks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sortingEnabled",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum Governor.ContestState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "submissionMerkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalVotesCast",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct Governor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Governor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct Governor.ProposalCore",
          "name": "proposal",
          "type": "tuple"
        }
      ],
      "name": "validateProposalData",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "verifyProposer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "totalVotes",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "verifyVoter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "voteStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingMerkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "265:964:28:-:0;;;338:889;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;568:5;587:7;608:21;643:17;674:21;696:1;674:24;;;;;;;;:::i;:::-;;;;;;;728:21;750:1;728:24;;;;;;;;:::i;:::-;;;;;;;782:21;804:1;782:24;;;;;;;;:::i;:::-;;;;;;;837:21;859:1;837:24;;;;;;;;:::i;:::-;;;;;;;909:21;931:1;909:24;;;;;;;;:::i;:::-;;;;;;;967:21;989:1;967:24;;;;;;;;:::i;:::-;;;;;;;1022:21;1044:1;1022:24;;;;;;;;:::i;:::-;;;;;;;4184:21:29;4207:17;1117:21:28;1139:1;1117:24;;;;;;;;:::i;:::-;;;;;;;1173:21;1195:1;1173:24;;;;;;;;:::i;:::-;;;;;;;;;;;2141:14:33;:32;;;;2183:9;:22;881:20:32;:44;;;;950:16;:36;4236:4:29::1;:12;4243:5:::0;4236:4;:12:::1;:::i;:::-;-1:-1:-1::0;4258:6:29::1;:16;4267:7:::0;4258:6;:16:::1;:::i;:::-;-1:-1:-1::0;4284:7:29::1;:20:::0;;-1:-1:-1;;;;;;4284:20:29::1;4294:10;4284:20:::0;;::::1;::::0;;;4314:12:::1;:28:::0;;;4352:11:::1;:26:::0;;;4388:12:::1;:28:::0;;;4426:29:::1;:62:::0;;;4498:16:::1;:36:::0;;;4544:13:::1;:30:::0;;;4584:19:::1;:42:::0;;;4642:34:::1;::::0;::::1;::::0;::::1;::::0;4658:5;;4294:10;4642:34:::1;:::i;:::-;;;;;;;;3767:985:::0;;;;;;;;;;;338:889:28;;;;;265:964;;14:127:37;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:37;247:40;;-1:-1:-1;;;;;302:34:37;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:37:o;426:250::-;511:1;521:113;535:6;532:1;529:13;521:113;;;611:11;;;605:18;592:11;;;585:39;557:2;550:10;521:113;;;-1:-1:-1;;668:1:37;650:16;;643:27;426:250::o;681:510::-;735:5;788:3;781:4;773:6;769:17;765:27;755:55;;806:1;803;796:12;755:55;829:13;;-1:-1:-1;;;;;854:26:37;;851:52;;;883:18;;:::i;:::-;927:55;970:2;951:13;;-1:-1:-1;;947:27:37;976:4;943:38;927:55;:::i;:::-;1007:2;998:7;991:19;1053:3;1046:4;1041:2;1033:6;1029:15;1025:26;1022:35;1019:55;;;1070:1;1067;1060:12;1019:55;1083:77;1157:2;1150:4;1141:7;1137:18;1130:4;1122:6;1118:17;1083:77;:::i;:::-;1178:7;681:510;-1:-1:-1;;;;681:510:37:o;1196:1468::-;1347:6;1355;1363;1371;1379;1432:3;1420:9;1411:7;1407:23;1403:33;1400:53;;;1449:1;1446;1439:12;1400:53;1476:16;;-1:-1:-1;;;;;1541:14:37;;;1538:34;;;1568:1;1565;1558:12;1538:34;1591:61;1644:7;1635:6;1624:9;1620:22;1591:61;:::i;:::-;1581:71;;1671:2;1661:12;;1719:2;1708:9;1704:18;1698:25;1748:2;1738:8;1735:16;1732:36;;;1764:1;1761;1754:12;1732:36;1787:63;1842:7;1831:8;1820:9;1816:24;1787:63;:::i;:::-;1777:73;;;1890:2;1879:9;1875:18;1869:25;1859:35;;1934:2;1923:9;1919:18;1913:25;1903:35;;1984:3;1973:9;1969:19;1963:26;2014:2;2004:8;2001:16;1998:36;;;2030:1;2027;2020:12;1998:36;2053:24;;2108:4;2100:13;;2096:27;-1:-1:-1;2086:55:37;;2137:1;2134;2127:12;2086:55;2166:2;2160:9;2188:2;2184;2181:10;2178:36;;;2194:18;;:::i;:::-;2240:2;2237:1;2233:10;2223:20;;2263:28;2287:2;2283;2279:11;2263:28;:::i;:::-;2325:15;;;2395:11;;;2391:20;;;2356:12;;;;2423:19;;;2420:39;;;2455:1;2452;2445:12;2420:39;2479:11;;;;2499:135;2515:6;2510:3;2507:15;2499:135;;;2581:10;;2569:23;;2532:12;;;;2612;;;;2499:135;;;2653:5;2643:15;;;;;;;;1196:1468;;;;;;;;:::o;2669:127::-;2730:10;2725:3;2721:20;2718:1;2711:31;2761:4;2758:1;2751:15;2785:4;2782:1;2775:15;2801:380;2880:1;2876:12;;;;2923;;;2944:61;;2998:4;2990:6;2986:17;2976:27;;2944:61;3051:2;3043:6;3040:14;3020:18;3017:38;3014:161;;3097:10;3092:3;3088:20;3085:1;3078:31;3132:4;3129:1;3122:15;3160:4;3157:1;3150:15;3014:161;;2801:380;;;:::o;3312:545::-;3414:2;3409:3;3406:11;3403:448;;;3450:1;3475:5;3471:2;3464:17;3520:4;3516:2;3506:19;3590:2;3578:10;3574:19;3571:1;3567:27;3561:4;3557:38;3626:4;3614:10;3611:20;3608:47;;;-1:-1:-1;3649:4:37;3608:47;3704:2;3699:3;3695:12;3692:1;3688:20;3682:4;3678:31;3668:41;;3759:82;3777:2;3770:5;3767:13;3759:82;;;3822:17;;;3803:1;3792:13;3759:82;;;3763:3;;;3403:448;3312:545;;;:::o;4033:1352::-;4153:10;;-1:-1:-1;;;;;4175:30:37;;4172:56;;;4208:18;;:::i;:::-;4237:97;4327:6;4287:38;4319:4;4313:11;4287:38;:::i;:::-;4281:4;4237:97;:::i;:::-;4389:4;;4453:2;4442:14;;4470:1;4465:663;;;;5172:1;5189:6;5186:89;;;-1:-1:-1;5241:19:37;;;5235:26;5186:89;-1:-1:-1;;3990:1:37;3986:11;;;3982:24;3978:29;3968:40;4014:1;4010:11;;;3965:57;5288:81;;4435:944;;4465:663;3259:1;3252:14;;;3296:4;3283:18;;-1:-1:-1;;4501:20:37;;;4619:236;4633:7;4630:1;4627:14;4619:236;;;4722:19;;;4716:26;4701:42;;4814:27;;;;4782:1;4770:14;;;;4649:19;;4619:236;;;4623:3;4883:6;4874:7;4871:19;4868:201;;;4944:19;;;4938:26;-1:-1:-1;;5027:1:37;5023:14;;;5039:3;5019:24;5015:37;5011:42;4996:58;4981:74;;4868:201;-1:-1:-1;;;;;5115:1:37;5099:14;;;5095:22;5082:36;;-1:-1:-1;4033:1352:37:o;5390:497::-;5567:2;5556:9;5549:21;5530:4;5599:6;5593:13;5642:6;5637:2;5626:9;5622:18;5615:34;5658:81;5732:6;5727:2;5716:9;5712:18;5705:4;5697:6;5693:17;5658:81;:::i;:::-;-1:-1:-1;;;;;5848:32:37;;;;5841:4;5826:20;;5819:62;-1:-1:-1;5800:2:37;5779:15;;;;-1:-1:-1;;5775:29:37;5760:45;5807:2;5756:54;;5390:497;-1:-1:-1;5390:497:37:o;:::-;265:964:28;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMapi;:::-;;:::i;:::-;;;;;;;;;;;:::i;1797:27::-;;;;;;;;;;;;;;;;1606:22;;;;;;;;;;-1:-1:-1;1606:22:29;;;;-1:-1:-1;;;;;1606:22:29;;;;;;-1:-1:-1;;;;;2444:32:37;;;2426:51;;2414:2;2399:18;1606:22:29;2280:203:37;1799:24:33;;;;;;;;;;;;;;;;2220:35:29;;;;;;;;;;-1:-1:-1;2220:35:29;;;;;:::i;:::-;;:::i;1528:18::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;496:60:30:-;;;;;;;;;;-1:-1:-1;496:60:30;;;;;:::i;:::-;;;;;;;;;;;;;;2452:32:29;;;;;;;;;;-1:-1:-1;2452:32:29;;;;;:::i;:::-;;:::i;6072:117::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;7353:469::-;;;;;;;;;;-1:-1:-1;7353:469:29;;;;;:::i;:::-;;:::i;:::-;;6532:107;;;;;;;;;;;;;:::i;5883:125::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1967:28:33:-;;;;;;;;;;-1:-1:-1;1967:28:33;;;;;:::i;:::-;;:::i;1416:539:32:-;;;;;;;;;;-1:-1:-1;1416:539:32;;;;;:::i;:::-;;:::i;:::-;;;6211:14:37;;6204:22;6186:41;;6174:2;6159:18;1416:539:32;6046:187:37;1358:73:29;;;;;;;;;;;;1411:20;1358:73;;1728:29:33;;;;;;;;;;;;;;;;1717:26:29;;;;;;;;;;;;;;;;2316:20;;;;;;;;;;-1:-1:-1;2316:20:29;;;;;;;;4849:146;;;;;;;;;;-1:-1:-1;4849:146:29;;;;;:::i;:::-;;:::i;10278:625::-;;;;;;:::i;:::-;;:::i;1278:74::-;;;;;;;;;;;;;:::i;1722:553:30:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;2490:39:29:-;;;;;;;;;;-1:-1:-1;2490:39:29;;;;;:::i;:::-;;:::i;13781:370::-;;;;;;;;;;-1:-1:-1;13781:370:29;;;;;:::i;:::-;;:::i;923:147:30:-;;;;;;;;;;-1:-1:-1;923:147:30;;;;;:::i;:::-;987:16;1022:32;;;:20;:32;;;;;:41;;923:147;4758:85:29;;;;;;;;;;-1:-1:-1;4823:13:29;;;;;;;;;;;;-1:-1:-1;;;4823:13:29;;;;4758:85;;4842:1027:30;;;;;;;;;;-1:-1:-1;4842:1027:30;;;;;:::i;:::-;;:::i;1432:195::-;;;;;;;;;;-1:-1:-1;1432:195:30;;;;;:::i;:::-;1524:16;1559:32;;;:20;:32;;;;;;;;-1:-1:-1;;;;;1559:61:30;;;;:48;;:61;;;;;;1432:195;;;;;2111:28:29;;;;;;;;;;;;;;;;2480:117:33;;;;;;;;;;;;;:::i;563:58:30:-;;;;;;;;;;-1:-1:-1;563:58:30;;;;;:::i;:::-;;:::i;2397:49:29:-;;;;;;;;;;-1:-1:-1;2397:49:29;;;;;:::i;:::-;;;;;;;;;;;;;;366:42:31;;;;;;;;;;-1:-1:-1;366:42:31;;;;-1:-1:-1;;;;;366:42:31;;;1580:20:29;;;;;;;;;;;;;:::i;356:29:30:-;;;;;;;;;;;;;;;;1872:44:29;;;;;;;;;;;;;;;;14693:354;;;;;;;;;;-1:-1:-1;14693:354:29;;;;;:::i;:::-;;:::i;5981:523:30:-;;;;;;;;;;-1:-1:-1;5981:523:30;;;;;:::i;:::-;;:::i;2594:57:29:-;;;;;;;;;;-1:-1:-1;2594:57:29;;;;;:::i;:::-;;;;;;;;;;;;;;;;5700:111;;;;;;;;;;;;;:::i;2186:28::-;;;;;;;;;;-1:-1:-1;2186:28:29;;;;;:::i;:::-;;:::i;3887:170:30:-;;;;;;;;;;-1:-1:-1;3887:170:30;;;;;:::i;:::-;3980:13;4012:31;;;:21;:31;;;;;:38;;3887:170;429:61;;;;;;;;;;-1:-1:-1;429:61:30;;;;;:::i;:::-;;;;;;;;;;;;;;14218:373:29;;;;;;;;;;-1:-1:-1;14218:373:29;;;;;:::i;:::-;;:::i;1163:166:30:-;;;;;;;;;;-1:-1:-1;1163:166:30;;;;;:::i;:::-;;:::i;4373:268::-;;;;;;;;;;-1:-1:-1;4373:268:30;;;;;:::i;:::-;;:::i;377:35:32:-;;;;;;;;;;;;;;;;9744:419:29;;;;;;:::i;:::-;;:::i;5001:477::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;6697:128::-;;;;;;;;;;-1:-1:-1;6697:128:29;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3571:212:30:-;;;;;;;;;;-1:-1:-1;3571:212:30;;;;;:::i;:::-;;:::i;2657:56:29:-;;;;;;;;;;-1:-1:-1;2657:56:29;;;;;:::i;:::-;;;;;;;;;;;;;;;;2397:1062:30;;;;;;;;;;;;;:::i;418:31:32:-;;;;;;;;;;;;;;;;2536:52:29;;;;;;;;;;-1:-1:-1;2536:52:29;;;;;:::i;:::-;;;;;;;;;;;;;;6350:101;;;;;;;;;;;;;:::i;13254:409::-;;;;;;;;;;;;;:::i;2145:34::-;;;;;;;;;;;;;;;;1437:84;;;;;;;;;;;;1479:42;1437:84;;5534:103;;;;;;;;;;;;;:::i;11906:1236::-;;;;;;;;;;-1:-1:-1;11906:1236:29;;;;;:::i;:::-;;:::i;576:379:31:-;;;;;;;;;;-1:-1:-1;576:379:31;;;;;:::i;:::-;;:::i;2261:49:29:-;;;;;;;;;;-1:-1:-1;2261:49:29;;;;;:::i;:::-;;;;;;;;;;;;;;;;7916:889;;;;;;;;;;-1:-1:-1;7916:889:29;;;;;:::i;:::-;;:::i;2022:31::-;;;;;;;;;;;;;;;;2342:49;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2342:49:29;;;-1:-1:-1;;;2342:49:29;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2342:49:29;;;;;;;;;;;;;-1:-1:-1;;;;;2342:49:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2342:49:29;;-1:-1:-1;2342:49:29;-1:-1:-1;2342:49:29;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2342:49:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2220:35::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2220:35:29;:::o;1528:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2452:32::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2452:32:29;;-1:-1:-1;2452:32:29;:::o;6072:117::-;6129:16;6164:18;6157:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6072:117;:::o;7353:469::-;-1:-1:-1;;;;;7442:33:29;;;;;;:24;:33;;;;;;;;7437:379;;7495:20;;7519:1;7495:25;7491:141;;7353:469;;;:::o;7491:141::-;7645:61;7656:7;1411:20;7693:5;;7700;7645:10;:61::i;:::-;-1:-1:-1;;;;;;7765:33:29;;;;;;:24;:33;;;;;:40;;-1:-1:-1;;7765:40:29;7801:4;7765:40;;;7437:379;7353:469;;;:::o;6532:107::-;6580:7;6620:12;;6606:11;:9;:11::i;:::-;:26;;;;:::i;:::-;6599:33;;6532:107;:::o;5883:125::-;5944:16;5979:22;5972:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5972:29:29;;;;;;;;;;;;;;;;;;;;;;5883:125;:::o;1967:28:33:-;;;;;;;;;;;;1416:539:32;1671:40;;-1:-1:-1;;17418:2:37;17414:15;;;17410:53;1671:40:32;;;17398:66:37;17480:12;;;17473:28;;;1560:13:32;;;;17517:12:37;;1671:40:32;;;;;;;;;;;;1661:51;;;;;;1646:66;;1722:16;1741:6;:138;;1826:53;1845:5;;1826:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1852:20:32;;;-1:-1:-1;1874:4:32;;-1:-1:-1;1826:18:32;:53::i;:::-;1741:138;;;1762:49;1781:5;;1762:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1788:16:32;;;-1:-1:-1;1806:4:32;;-1:-1:-1;1762:18:32;:49::i;:::-;1722:157;;1894:11;1889:38;;1914:13;;-1:-1:-1;;;1914:13:32;;;;;;;;;;;1889:38;-1:-1:-1;1944:4:32;;1416:539;-1:-1:-1;;;;;;;1416:539:32:o;4849:146:29:-;4922:7;4977:8;4966:20;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4966:20:29;;;;;;;;;4956:31;;4966:20;4956:31;;;;;4849:146;-1:-1:-1;;4849:146:29:o;10278:625::-;10363:7;10399:13;;10386:9;:26;10382:91;;10459:13;;10421:52;;-1:-1:-1;;;10421:52:29;;10448:9;10421:52;;;17714:25:37;17755:18;;;17748:34;;;;17687:18;;10421:52:29;;;;;;;;10382:91;10488:20;;:25;10484:254;;10679:10;10654:36;;;;:24;:36;;;;;;;;10649:78;;10699:28;;-1:-1:-1;;;10699:28:29;;;;;;;;;;;10649:78;10747:30;;10768:8;10747:30;:::i;:::-;10787:18;10808:23;;10822:8;10808:23;:::i;:::-;:13;:23::i;:::-;10787:44;;10842:26;:24;:26::i;:::-;10886:10;10278:625;-1:-1:-1;;10278:625:29:o;1278:74::-;1320:32;1328:19;;1320:32;:::i;:::-;1278:74;:::o;1722:553:30:-;1800:34;1836:44;1896:34;1933:19;:17;:19::i;:::-;1896:56;;1962:38;2017:17;:24;-1:-1:-1;;;;;2003:39:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2003:39:30;;1962:80;;2057:9;2052:158;2076:17;:24;2072:1;:28;2052:158;;;2148:20;:42;2169:17;2187:1;2169:20;;;;;;;;:::i;:::-;;;;;;;2148:42;;;;;;;;;;;:51;;;2121:21;2143:1;2121:24;;;;;;;;:::i;:::-;;;;;;;;;;:78;2102:3;;;;:::i;:::-;;;;2052:158;;;-1:-1:-1;2227:17:30;;2246:21;;-1:-1:-1;1722:553:30;-1:-1:-1;1722:553:30:o;2490:39:29:-;;;;;;;;;;;;13781:370;-1:-1:-1;;;;;13887:34:29;;;;;;:25;:34;;;;;;;;13882:263;;13937:44;13948:7;13957:10;13969:5;;13976:4;13937:10;:44::i;:::-;-1:-1:-1;;;;;;14040:26:29;;;;;;:17;:26;;;;;;;;:39;;;14093:25;:34;;;;;:41;;-1:-1:-1;;14093:41:29;14130:4;14093:41;;;13882:263;13781:370;;;;:::o;4842:1027:30:-;4899:17;4932:4;4940:1;4932:9;4928:40;;4950:18;;-1:-1:-1;;;4950:18:30;;;;;;;;;;;4928:40;5007:11;:18;;5079:48;;;;;;;;;;;;;;;;;5007:18;;4979:25;;5079:48;5007:18;;5079:48;;5007:11;:18;5079:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5182:15;5200:1;5182:19;;5216:13;5211:536;5243:17;5235:5;:25;5211:536;;;5441:61;5477:17;5495:5;5477:24;;;;;;;;:::i;:::-;;;;;;;3980:13;4012:31;;;:21;:31;;;;;:38;;3887:170;5441:61;5437:113;5527:8;5437:113;5663:4;5652:7;:15;5648:66;;5694:5;4842:1027;-1:-1:-1;;;;;4842:1027:30:o;5648:66::-;5727:9;;;;:::i;:::-;;;;5211:536;5262:7;;;;:::i;:::-;;;;5211:536;;;;5838:24;;-1:-1:-1;;;5838:24:30;;;;;;;;;;;2480:117:33;2527:33;2579:11;2572:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2480:117;:::o;563:58:30:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1580:20:29:-;;;;;;;:::i;14693:354::-;14777:7;14836:29;;;:17;:29;;;;;;14812:10;;14836:29;;14832:71;;;14874:29;;-1:-1:-1;;;14874:29:29;;;;;;;;;;;14832:71;-1:-1:-1;;;;;14918:32:29;;;;;;:25;:32;;;;;;;;14913:72;;14959:26;;-1:-1:-1;;;14959:26:29;;;;;;;;;;;14913:72;15002:38;15012:10;15024:5;15031:8;15002:9;:38::i;:::-;14995:45;14693:354;-1:-1:-1;;;;14693:354:29:o;5981:523:30:-;6088:11;:18;6044:22;;6088;;6109:1;;6088:22;:::i;:::-;6082:3;:28;6078:205;;;6246:26;;-1:-1:-1;;;6246:26:30;;;;;;;;;;;6078:205;6298:13;6293:183;6325:7;:3;6331:1;6325:7;:::i;:::-;6317:5;:15;6293:183;;;6419:1;6361:55;6397:11;6409:5;6397:18;;;;;;;;:::i;:::-;;;;;;;;;3980:13;4012:31;;;:21;:31;;;;;:38;;3887:170;6361:55;:59;6357:109;;;-1:-1:-1;6447:4:30;;5981:523;-1:-1:-1;;5981:523:30:o;6357:109::-;6334:7;;;;:::i;:::-;;;;6293:183;;;-1:-1:-1;6492:5:30;;5981:523;-1:-1:-1;;5981:523:30:o;5700:111:29:-;5754:16;5789:15;5782:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5782:22:29;;;;;;;;;;;;;;;;;;;;;;5700:111;:::o;2186:28::-;;;;;;;;;;;;14218:373;14352:7;14415:29;;;:17;:29;;;;;;14391:10;;14415:29;;14411:71;;;14453:29;;-1:-1:-1;;;14453:29:29;;;;;;;;;;;14411:71;14492:37;14504:5;14511:10;14523:5;;14492:11;:37::i;:::-;14546:38;14556:10;14568:5;14575:8;14546:9;:38::i;:::-;14539:45;14218:373;-1:-1:-1;;;;;;;14218:373:29:o;1163:166:30:-;1275:32;;;;:20;:32;;;;;;;;;:47;;1268:54;;;;;;;;;;;;;;;;;1240:16;;1268:54;;;1275:47;1268:54;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1268:54:30;;;;;;;;;;;;;;;;;;;;;;;1163:166;;;:::o;4373:268::-;4459:18;4493:31;;;:21;:31;;;;;:38;4535:1;4493:43;4489:94;;4545:38;;-1:-1:-1;;;4545:38:30;;;;;;;;;;;4489:94;4600:31;;;;:21;:31;;;;;:34;;:31;;;:34;;;;:::i;:::-;;;;;;;;;4593:41;;4373:268;;;:::o;9744:419:29:-;9843:7;9879:13;;9866:9;:26;9862:91;;9939:13;;9901:52;;-1:-1:-1;;;9901:52:29;;9928:9;9901:52;;;17714:25:37;17755:18;;;17748:34;;;;17687:18;;9901:52:29;17540:248:37;9862:91:29;9964:33;9979:10;9991:5;;9964:14;:33::i;:::-;10007:30;;10028:8;10007:30;:::i;:::-;10047:18;10068:23;;10082:8;10068:23;:::i;:::-;10047:44;;10102:26;:24;:26::i;5001:477::-;5067:8;;5039:12;;5067:8;;5063:67;;;-1:-1:-1;5098:21:29;;5001:477::o;5063:67::-;5160:15;5144:12;;:31;5140:92;;-1:-1:-1;5198:23:29;;5001:477::o;5140:92::-;5261:15;5246:11;:9;:11::i;:::-;:30;5242:87;;-1:-1:-1;5299:19:29;;5001:477::o;5242:87::-;5364:15;5343:17;:15;:17::i;:::-;:36;5339:93;;-1:-1:-1;5402:19:29;;5001:477::o;5339:93::-;-1:-1:-1;5449:22:29;;5001:477::o;6697:128::-;6759:19;;:::i;:::-;6797:21;;;;:9;:21;;;;;;;;;6790:28;;;;;;;;;-1:-1:-1;;;;;6790:28:29;;;;-1:-1:-1;;;6790:28:29;;;;;;;;;;;;;;;;;;;;6797:21;;6790:28;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6790:28:29;;;-1:-1:-1;;6790:28:29;;;;;;;;;;;;;-1:-1:-1;;;;;6790:28:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6790:28:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6697:128;;;:::o;3571:212:30:-;3745:31;;;;:21;:31;;;;;;;;;3738:38;;;;;;;;;;;;;;;;;3676:46;;3738:38;;;3745:31;3738:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3571:212;;;:::o;2397:1062::-;2489:34;2525:44;2585:27;2615:26;:24;:26::i;:::-;:33;2585:63;;2658:34;2695:19;:17;:19::i;:::-;2658:56;;2725:42;2811:19;2784:17;:24;:46;;;;:::i;:::-;-1:-1:-1;;;;;2770:61:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2770:61:30;;2725:106;;2841:38;2923:19;2896:17;:24;:46;;;;:::i;:::-;-1:-1:-1;;;;;2882:61:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2882:61:30;;2841:102;;2954:29;3002:9;2997:389;3021:17;:24;3017:1;:28;2997:389;;;3071:17;:39;3089:17;3107:1;3089:20;;;;;;;;:::i;:::-;;;;;;;;;;;;3071:39;;;;;;;;;;-1:-1:-1;3071:39:30;;;;3066:310;;3181:17;3199:1;3181:20;;;;;;;;:::i;:::-;;;;;;;3130:25;3156:21;3130:48;;;;;;;;:::i;:::-;;;;;;:71;;;;;3266:20;:42;3287:17;3305:1;3287:20;;;;;;;;:::i;:::-;;;;;;;3266:42;;;;;;;;;;;:51;;;3219:21;3241;3219:44;;;;;;;;:::i;:::-;;;;;;;;;;:98;3335:26;3360:1;3335:26;;:::i;:::-;;;3066:310;3047:3;;;;:::i;:::-;;;;2997:389;;;-1:-1:-1;3403:25:30;;3430:21;;-1:-1:-1;2397:1062:30;-1:-1:-1;;;;2397:1062:30:o;6350:101:29:-;6392:7;6433:11;;6418:12;;:26;;;;:::i;13254:409::-;13309:7;;-1:-1:-1;;;;;13309:7:29;13295:10;:21;;;;13294:58;;-1:-1:-1;13322:10:29;1479:42;13322:29;;13294:58;13289:103;;;13362:30;;-1:-1:-1;;;13362:30:29;;;;;;;;;;;13289:103;13403:19;13425:7;:5;:7::i;:::-;13403:29;-1:-1:-1;13457:21:29;13447:6;:31;;;;;;;;:::i;:::-;;13443:69;;13487:25;;-1:-1:-1;;;13487:25:29;;;;;;;;;;;13443:69;13536:22;13526:6;:32;;;;;;;;:::i;:::-;;13522:76;;13567:31;;-1:-1:-1;;;13567:31:29;;;;;;;;;;;13522:76;13608:8;:15;;-1:-1:-1;;13608:15:29;13619:4;13608:15;;;13639:17;;;;13608:8;;13639:17;13279:384;13254:409::o;5534:103::-;5584:16;5619:11;5612:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5534:103;:::o;11906:1236::-;12006:7;;-1:-1:-1;;;;;12006:7:29;11992:10;:21;11988:56;;12022:22;;-1:-1:-1;;;12022:22:29;;;;;;;;;;;11988:56;12069:22;12058:7;:5;:7::i;:::-;:33;;;;;;;;:::i;:::-;;12054:73;;12100:27;;-1:-1:-1;;;12100:27:29;;;;;;;;;;;12054:73;12143:13;12138:620;12162:34;;;12138:620;;;12221:25;12249:19;;12269:5;12249:26;;;;;;;:::i;:::-;;;;;;;;;;12294:36;;;;:17;:36;;;;;;;;12249:26;;-1:-1:-1;;12294:36:29;;12289:459;;12414:36;;;;:17;:36;;;;;:43;;-1:-1:-1;;12414:43:29;12453:4;12414:43;;;;;;12691:18;:42;;;;;;;;;;;;;;;12289:459;-1:-1:-1;12198:7:29;;;;:::i;:::-;;;;12138:620;;;;12854:14;;12872:1;12854:19;12850:241;;13026:54;13060:19;;13026:33;:54::i;:::-;13106:29;13123:11;13106:29;;;;;;:::i;:::-;;;;;;;;11906:1236;;:::o;576:379:31:-;683:7;;-1:-1:-1;;;;;683:7:31;669:10;:21;665:66;;699:32;;-1:-1:-1;;;699:32:31;;;;;;;;;;;665:66;782:21;;;-1:-1:-1;;;;;813:46:31;;;-1:-1:-1;;;;;;813:46:31;;;;;;;874:74;;;782:21;;;;19484:34:37;;;19549:2;19534:18;;19527:43;;;;874:74:31;;19419:18:37;874:74:31;19210:366:37;7916:889:29;8002:15;;-1:-1:-1;;;;;8002:29:29;8021:10;8002:29;7998:88;;8058:15;;8040:46;;-1:-1:-1;;;8040:46:29;;-1:-1:-1;;;;;19502:15:37;;;8040:46:29;;;19484:34:37;8075:10:29;19534:18:37;;;19527:43;19419:18;;8040:46:29;19210:366:37;7998:88:29;8101:13;8096:615;1320:32;1328:19;;1320:32;:::i;:::-;8120:5;:23;8096:615;;;8168:25;8206:5;8196:16;;;;;;;;:::i;:::-;8168:44;-1:-1:-1;8249:16:29;8230:15;:35;;;;;;;;:::i;:::-;;8226:475;;8285:8;;;8226:475;8394:14;8375:15;:33;;;;;;;;:::i;:::-;;8371:330;;8432:21;;;;:29;:36;:29;:41;8428:81;;8482:27;;-1:-1:-1;;;8482:27:29;;;;;;;;;;;8428:81;8531:8;:21;;;:31;;;8566:1;8531:36;8527:78;;8576:29;;-1:-1:-1;;;8576:29:29;;;;;;;;;;;8527:78;8371:330;;;8670:15;8651:35;;-1:-1:-1;;;8651:35:29;;;;;;;;:::i;8371:330::-;8154:557;8096:615;8145:7;;;;:::i;:::-;;;;8096:615;;;;8730:8;:20;;;8724:34;8762:1;8724:39;8720:78;;8772:26;;-1:-1:-1;;;8772:26:29;;;;;;;;;;;8720:78;7916:889;:::o;1156:154:26:-;1247:4;1299;1270:25;1283:5;1290:4;1270:12;:25::i;:::-;:33;;1156:154;-1:-1:-1;;;;1156:154:26:o;10909:887:29:-;10980:7;11014:19;11003:7;:5;:7::i;:::-;:30;;;;;;;;:::i;:::-;;10999:80;;11071:7;:5;:7::i;:::-;11042:37;;-1:-1:-1;;;11042:37:29;;;;;;;;:::i;10999:80::-;11123:29;;11108:10;11093:26;;;;:14;:26;;;;;;:59;11089:156;;11204:29;;11175:59;;-1:-1:-1;;;11175:59:29;;;;;;160:25:37;;148:2;133:18;;14:177;11089:156:29;11310:16;;11280:18;:25;11259:11;:18;:46;;11280:25;11259:46;:::i;:::-;11258:68;11254:153;;11379:16;;11349:47;;-1:-1:-1;;;11349:47:29;;;;;;160:25:37;;148:2;133:18;;14:177;11254:153:29;11417:18;11438:22;11451:8;11438:12;:22::i;:::-;11474:21;;;;:9;:21;;;;;:28;:21;;-1:-1:-1;;;;11474:28:29;;;;11470:72;;;11511:31;;-1:-1:-1;;;11511:31:29;;;;;160:25:37;;;133:18;;11511:31:29;14:177:37;11470:72:29;11553:11;:28;;;;;;;;;;;;;;-1:-1:-1;11591:21:29;;;:9;11553:28;11591:21;;;;;;;;:32;;;;;;;;;;-1:-1:-1;;;11591:32:29;-1:-1:-1;;;;;;11591:32:29;;;-1:-1:-1;;;;;11591:32:29;;;;;;;;;;;;;;11615:8;;11591:32;;;;;;;:::i;:::-;-1:-1:-1;11591:32:29;;;;;;;;;;-1:-1:-1;;;;;;11591:32:29;-1:-1:-1;;;;;11591:32:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11591:32:29;;;;;;;;;;11648:10;11633:26;;;;:14;:26;;;;;;:31;;11591:32;;-1:-1:-1;11633:26:29;-1:-1:-1;11633:31:29;;11591:32;;11633:31;:::i;:::-;;;;-1:-1:-1;;11674:15:29;:32;;;;;;;-1:-1:-1;11674:32:29;;;;;;;;-1:-1:-1;;;;;;11674:32:29;11695:10;11674:32;;;;;;11722:39;;;22404:25:37;;;22460:2;22445:18;;22438:60;;;;11722:39:29;;22377:18:37;11722:39:29;;;;;;;11779:10;10909:887;-1:-1:-1;;10909:887:29:o;8926:761::-;8984:13;;:17;8980:701;;9081:23;9151:3;9127:19;;9121:3;:25;;;;:::i;:::-;9108:39;;:9;:39;:::i;:::-;9107:47;;;;:::i;:::-;9081:73;-1:-1:-1;9172:19:29;;9168:190;;9211:60;1479:42;9255:15;9211:17;:60::i;:::-;9294:49;;;1479:42;23078:51:37;;23160:2;23145:18;;23138:34;;;9294:49:29;;23051:18:37;9294:49:29;;;;;;;9168:190;9372:24;9399:27;9411:15;9399:9;:27;:::i;:::-;9372:54;-1:-1:-1;9444:20:29;;9440:231;;9510:7;;9484:53;;-1:-1:-1;;;;;9510:7:29;9520:16;9484:17;:53::i;:::-;9630:7;;9614:42;;;-1:-1:-1;;;;;9630:7:29;;;23078:51:37;;23160:2;23145:18;;23138:34;;;9614:42:29;;23051:18:37;9614:42:29;22904:274:37;9440:231:29;9003:678;;8980:701;8926:761::o;15328:486::-;15420:7;15454:19;15443:7;:5;:7::i;:::-;:30;;;;;;;;:::i;:::-;;15439:77;;15508:7;:5;:7::i;:::-;15482:34;;-1:-1:-1;;;15482:34:29;;;;;;;;:::i;15439:77::-;15530:8;15542:1;15530:13;15526:52;;15552:26;;-1:-1:-1;;;15552:26:29;;;;;;;;;;;15526:52;-1:-1:-1;;;;;15631:26:29;;;;;;:17;:26;;;;;;15589:69;;15600:10;;15612:7;;15621:8;;15589:10;:69::i;:::-;15669:22;:39;;;;;;;-1:-1:-1;15669:39:29;;;;;;;;-1:-1:-1;;;;;;15669:39:29;15697:10;15669:39;;;15724;;;17714:25:37;;;17770:2;17755:18;;17748:34;;;-1:-1:-1;;;;;15724:39:29;;;;;17687:18:37;15724:39:29;;;;;;;-1:-1:-1;;;;;;;15781:26:29;;;;;:17;:26;;;;;;;15328:486;-1:-1:-1;15328:486:29:o;7602:555:30:-;7710:9;7705:446;7725:22;;;7705:446;;;7768:25;7796:11;;7808:1;7796:14;;;;;;;:::i;:::-;;;;;;;;;;7824:32;7859:39;;;:20;:39;;;;;;;:48;7796:14;;-1:-1:-1;8067:73:30;;-1:-1:-1;7796:14:30;7859:48;8067:28;:73::i;:::-;7754:397;;7749:3;;;;;:::i;:::-;;;;7705:446;;1934:290:26;2017:7;2059:4;2017:7;2073:116;2097:5;:12;2093:1;:16;2073:116;;;2145:33;2155:12;2169:5;2175:1;2169:8;;;;;;;;:::i;:::-;;;;;;;2145:9;:33::i;:::-;2130:48;-1:-1:-1;2111:3:26;;;;:::i;:::-;;;;2073:116;;;-1:-1:-1;2205:12:26;1934:290;-1:-1:-1;;;1934:290:26:o;2647:312:24:-;2761:6;2736:21;:31;;2728:73;;;;-1:-1:-1;;;2728:73:24;;23385:2:37;2728:73:24;;;23367:21:37;23424:2;23404:18;;;23397:30;23463:31;23443:18;;;23436:59;23512:18;;2728:73:24;23183:353:37;2728:73:24;2813:12;2831:9;-1:-1:-1;;;;;2831:14:24;2853:6;2831:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2812:52;;;2882:7;2874:78;;;;-1:-1:-1;;;2874:78:24;;23953:2:37;2874:78:24;;;23935:21:37;23992:2;23972:18;;;23965:30;24031:34;24011:18;;;24004:62;24102:28;24082:18;;;24075:56;24148:19;;2874:78:24;23751:422:37;8247:1483:30;8370:33;8406:32;;;:20;:32;;;;;;;;-1:-1:-1;;;;;8478:35:30;;;;:26;:35;;;;;;;8465:48;;:10;:48;:::i;:::-;8453:8;:61;8449:94;;;8523:20;;-1:-1:-1;;;8523:20:30;;;;;;;;;;;8449:94;-1:-1:-1;;;;;8591:37:30;;8554:34;8591:37;;;:28;;;:37;;;;;;8644:33;;8591:42;;;8669:8;;8591:12;;8554:34;8644:33;;8669:8;;8644:33;:::i;:::-;;;;-1:-1:-1;;;;;;;8687:37:30;;;;;;:28;;;:37;;;;;:49;;8728:8;;8687:37;:49;;8728:8;;8687:49;:::i;:::-;;;;-1:-1:-1;;8747:101:30;;;;8796:27;;;;:41;;;;;;;-1:-1:-1;8796:41:30;;;;;;;;;-1:-1:-1;;;;;;8796:41:30;-1:-1:-1;;;;;8796:41:30;;;;;8747:101;-1:-1:-1;;;;;8857:35:30;;;;;;:26;:35;;;;;:47;;8896:8;;8857:35;:47;;8896:8;;8857:47;:::i;:::-;;;;;;;;8932:8;8914:14;;:26;;;;;;;:::i;:::-;;;;-1:-1:-1;;9084:14:30;;9102:1;9084:19;9080:644;;9141:21;;9119:19;9242:22;9256:8;9141:21;9242:22;:::i;:::-;9220:44;-1:-1:-1;9493:15:30;;9489:107;;9528:53;9557:10;9569:11;9528:28;:53::i;:::-;9609:34;;;;:21;:34;;;;;;;:51;;;;;;;;;;;;;;;;9675:38;9688:11;9631;9675:12;:38::i;:::-;9105:619;;9080:644;8360:1370;;8247:1483;;;;:::o;6666:852::-;6761:39;6803:31;;;:21;:31;;;;;;;;6761:73;;;;;;;;;;;;;;;;;;;6803:31;;6761:73;;;6803:31;6761:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6893:9;6888:624;6912:22;:29;6908:1;:33;6888:624;;;6995:10;6966:22;6989:1;6966:25;;;;;;;;:::i;:::-;;;;;;;:39;6962:540;;7352:22;7407:1;7375:22;:29;:33;;;;:::i;:::-;7352:57;;;;;;;;:::i;:::-;;;;;;;7315:21;:31;7337:8;7315:31;;;;;;;;;;;7347:1;7315:34;;;;;;;;:::i;:::-;;;;;;;;:94;;;;7427:21;:31;7449:8;7427:31;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;7482:5;;6962:540;6943:3;;;;:::i;:::-;;;;6888:624;;9205:147:26;9268:7;9298:1;9294;:5;:51;;9426:13;9517:15;;;9552:4;9545:15;;;9598:4;9582:21;;9294:51;;;9426:13;9517:15;;;9552:4;9545:15;;;9598:4;9582:21;;9302:20;9287:58;9205:147;-1:-1:-1;;;9205:147:26:o;6308:1337:33:-;6413:11;:18;;6485:48;;;;;;;;;;;;;;;;;6413:18;;6385:25;;6485:48;6413:18;;6485:48;;6413:11;:18;6485:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6700:17;6721:1;6700:22;6696:99;;-1:-1:-1;;6738:11:33;:26;;;;;;;-1:-1:-1;6738:26:33;;;;;;;-1:-1:-1;6308:1337:33:o;6696:99::-;7050:17;7068:21;7088:1;7068:17;:21;:::i;:::-;7050:40;;;;;;;;:::i;:::-;;;;;;;7039:8;:51;7035:424;;;7131:9;;7110:17;:30;7106:343;;7248:7;;6308:1337;;:::o;7106:343::-;-1:-1:-1;;7384:11:33;:26;;;;;;;-1:-1:-1;7384:26:33;;;;;;;-1:-1:-1;6308:1337:33:o;7106:343::-;7569:69;7581:8;7591;7601:17;7620;3037:22;;3069:494;3101:17;3093:5;:25;3069:494;;;3248:17;3266:5;3248:24;;;;;;;;:::i;:::-;;;;;;;3236:8;:36;3232:188;;3399:7;;;;3232:188;3449:17;3467:5;3449:24;;;;;;;;:::i;:::-;;;;;;;3438:8;:35;3434:119;;;3510:5;3493:22;;3533:5;;3434:119;3120:7;;;;:::i;:::-;;;;3069:494;;;;3618:21;3654:1;3643:8;:12;3642:70;;;;-1:-1:-1;3980:13:30;4012:31;;;:21;:31;;;;;:38;3661:50:33;3642:70;3618:94;;3797:22;4061:16;:67;;;;;4119:8;4082:17;4100:14;4082:33;;;;;;;;:::i;:::-;;;;;;;:45;4061:67;4055:1656;;4498:21;4518:1;4498:17;:21;:::i;:::-;4480:14;:39;4474:844;;4793:13;4809:18;:14;4826:1;4809:18;:::i;:::-;4793:34;;4788:516;4837:17;4829:5;:25;4788:516;;;4908:17;4926:9;4934:1;4926:5;:9;:::i;:::-;4908:28;;;;;;;;:::i;:::-;;;;;;;4887:11;4899:5;4887:18;;;;;;;;:::i;:::-;;;;;;;;;;:49;5122:16;:58;;;;;5171:8;5143:17;5161:5;5143:24;;;;;;;;:::i;:::-;;;;;;;:36;5122:58;5118:168;;;5228:4;5208:24;;5258:5;;5118:168;4856:7;;;;:::i;:::-;;;;4788:516;;;;4474:844;5556:17;5555:18;:53;;;;;5598:9;;5578:17;:29;5555:53;5551:150;;;5628:11;5645:17;5663:21;5683:1;5663:17;:21;:::i;:::-;5645:40;;;;;;;;:::i;:::-;;;;;;;;;;;;5628:58;;;;;;;-1:-1:-1;5628:58:33;;;;;;;;;5551:150;5872:8;5842:11;5854:14;5842:27;;;;;;;;:::i;:::-;;;;;;;;;;:38;-1:-1:-1;;;2812:3075:33;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;196:180:37;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:37;;196:180;-1:-1:-1;196:180:37:o;381:423::-;423:3;461:5;455:12;488:6;483:3;476:19;513:1;523:162;537:6;534:1;531:13;523:162;;;599:4;655:13;;;651:22;;645:29;627:11;;;623:20;;616:59;552:12;523:162;;;527:3;730:1;723:4;714:6;709:3;705:16;701:27;694:38;793:4;786:2;782:7;777:2;769:6;765:15;761:29;756:3;752:39;748:50;741:57;;;381:423;;;;:::o;809:668::-;937:12;;903:4;958:17;;;1024:19;;894:14;;;1052:20;;;864:3;;1121:4;;1148:21;;;;1099:2;1090:12;;;864:3;1197:201;1211:6;1208:1;1205:13;1197:201;;;1278:13;;-1:-1:-1;;;;;1274:39:37;1260:54;;1373:15;;;;1336:14;;;;1310:1;1226:9;1197:201;;;-1:-1:-1;;1434:14:37;;;1428:21;1414:12;;;;1407:43;;;;-1:-1:-1;1466:5:37;809:668;-1:-1:-1;809:668:37:o;1482:793::-;1828:4;1874:1;1870;1865:3;1861:11;1857:19;1915:2;1907:6;1903:15;1892:9;1885:34;1969:6;1962:14;1955:22;1950:2;1939:9;1935:18;1928:50;2014:3;2009:2;1998:9;1994:18;1987:31;2041:46;2082:3;2071:9;2067:19;2059:6;2041:46;:::i;:::-;2142:2;2133:6;2127:13;2123:22;2118:2;2107:9;2103:18;2096:50;2195:9;2187:6;2183:22;2177:3;2166:9;2162:19;2155:51;2223:46;2262:6;2254;2223:46;:::i;:::-;2215:54;1482:793;-1:-1:-1;;;;;;;;;1482:793:37:o;2488:220::-;2637:2;2626:9;2619:21;2600:4;2657:45;2698:2;2687:9;2683:18;2675:6;2657:45;:::i;2713:435::-;2766:3;2804:5;2798:12;2831:6;2826:3;2819:19;2857:4;2886:2;2881:3;2877:12;2870:19;;2923:2;2916:5;2912:14;2944:1;2954:169;2968:6;2965:1;2962:13;2954:169;;;3029:13;;3017:26;;3063:12;;;;3098:15;;;;2990:1;2983:9;2954:169;;;-1:-1:-1;3139:3:37;;2713:435;-1:-1:-1;;;;;2713:435:37:o;3153:261::-;3332:2;3321:9;3314:21;3295:4;3352:56;3404:2;3393:9;3389:18;3381:6;3352:56;:::i;3419:131::-;-1:-1:-1;;;;;3494:31:37;;3484:42;;3474:70;;3540:1;3537;3530:12;3555:367;3618:8;3628:6;3682:3;3675:4;3667:6;3663:17;3659:27;3649:55;;3700:1;3697;3690:12;3649:55;-1:-1:-1;3723:20:37;;-1:-1:-1;;;;;3755:30:37;;3752:50;;;3798:1;3795;3788:12;3752:50;3835:4;3827:6;3823:17;3811:29;;3895:3;3888:4;3878:6;3875:1;3871:14;3863:6;3859:27;3855:38;3852:47;3849:67;;;3912:1;3909;3902:12;3849:67;3555:367;;;;;:::o;3927:572::-;4022:6;4030;4038;4091:2;4079:9;4070:7;4066:23;4062:32;4059:52;;;4107:1;4104;4097:12;4059:52;4146:9;4133:23;4165:31;4190:5;4165:31;:::i;:::-;4215:5;-1:-1:-1;4271:2:37;4256:18;;4243:32;-1:-1:-1;;;;;4287:30:37;;4284:50;;;4330:1;4327;4320:12;4284:50;4369:70;4431:7;4422:6;4411:9;4407:22;4369:70;:::i;:::-;3927:572;;4458:8;;-1:-1:-1;4343:96:37;;-1:-1:-1;;;;3927:572:37:o;4504:658::-;4675:2;4727:21;;;4797:13;;4700:18;;;4819:22;;;4646:4;;4675:2;4898:15;;;;4872:2;4857:18;;;4646:4;4941:195;4955:6;4952:1;4949:13;4941:195;;;5020:13;;-1:-1:-1;;;;;5016:39:37;5004:52;;5111:15;;;;5076:12;;;;5052:1;4970:9;4941:195;;;-1:-1:-1;5153:3:37;;4504:658;-1:-1:-1;;;;;;4504:658:37:o;5167:160::-;5232:20;;5288:13;;5281:21;5271:32;;5261:60;;5317:1;5314;5307:12;5261:60;5167:160;;;:::o;5332:709::-;5442:6;5450;5458;5466;5474;5527:3;5515:9;5506:7;5502:23;5498:33;5495:53;;;5544:1;5541;5534:12;5495:53;5583:9;5570:23;5602:31;5627:5;5602:31;:::i;:::-;5652:5;-1:-1:-1;5704:2:37;5689:18;;5676:32;;-1:-1:-1;5759:2:37;5744:18;;5731:32;-1:-1:-1;;;;;5775:30:37;;5772:50;;;5818:1;5815;5808:12;5772:50;5857:70;5919:7;5910:6;5899:9;5895:22;5857:70;:::i;:::-;5946:8;;-1:-1:-1;5831:96:37;-1:-1:-1;6000:35:37;;-1:-1:-1;6031:2:37;6016:18;;6000:35;:::i;:::-;5990:45;;5332:709;;;;;;;;:::o;6238:127::-;6299:10;6294:3;6290:20;6287:1;6280:31;6330:4;6327:1;6320:15;6354:4;6351:1;6344:15;6370:257;6442:4;6436:11;;;6474:17;;-1:-1:-1;;;;;6506:34:37;;6542:22;;;6503:62;6500:88;;;6568:18;;:::i;:::-;6604:4;6597:24;6370:257;:::o;6632:253::-;6704:2;6698:9;6746:4;6734:17;;-1:-1:-1;;;;;6766:34:37;;6802:22;;;6763:62;6760:88;;;6828:18;;:::i;6890:275::-;6961:2;6955:9;7026:2;7007:13;;-1:-1:-1;;7003:27:37;6991:40;;-1:-1:-1;;;;;7046:34:37;;7082:22;;;7043:62;7040:88;;;7108:18;;:::i;:::-;7144:2;7137:22;6890:275;;-1:-1:-1;6890:275:37:o;7170:486::-;7231:5;7279:4;7267:9;7262:3;7258:19;7254:30;7251:50;;;7297:1;7294;7287:12;7251:50;7330:2;7324:9;7372:4;7364:6;7360:17;7443:6;7431:10;7428:22;-1:-1:-1;;;;;7395:10:37;7392:34;7389:62;7386:88;;;7454:18;;:::i;:::-;7490:2;7483:22;7523:6;-1:-1:-1;7523:6:37;7553:23;;7585:33;7553:23;7585:33;:::i;:::-;7627:23;;7170:486;;-1:-1:-1;;7170:486:37:o;7661:1103::-;7720:5;7768:4;7756:9;7751:3;7747:19;7743:30;7740:50;;;7786:1;7783;7776:12;7740:50;7808:22;;:::i;:::-;7799:31;;7866:9;7853:23;-1:-1:-1;;;;;7936:2:37;7928:6;7925:14;7922:34;;;7952:1;7949;7942:12;7922:34;7990:6;7979:9;7975:22;7965:32;;8035:3;8028:4;8024:2;8020:13;8016:23;8006:51;;8053:1;8050;8043:12;8006:51;8089:2;8076:16;8111:4;8134:2;8130;8127:10;8124:36;;;8140:18;;:::i;:::-;8186:2;8183:1;8179:10;8169:20;;8209:28;8233:2;8229;8225:11;8209:28;:::i;:::-;8271:15;;;8341:11;;;8337:20;;;8302:12;;;;8369:15;;;8366:35;;;8397:1;8394;8387:12;8366:35;8421:11;;;;8441:223;8457:6;8452:3;8449:15;8441:223;;;8539:3;8526:17;8511:32;;8556:33;8581:7;8556:33;:::i;:::-;8602:20;;;8474:12;;;;8642;;;;8441:223;;;8687:5;8680;8673:20;;;8753:2;8742:9;8738:18;8725:32;8720:2;8713:5;8709:14;8702:56;;;;;7661:1103;;;;:::o;8769:1282::-;8828:5;8876:4;8864:9;8859:3;8855:19;8851:30;8848:50;;;8894:1;8891;8884:12;8848:50;8916:22;;:::i;:::-;8907:31;;8975:9;8962:23;8994:33;9019:7;8994:33;:::i;:::-;9036:22;;9077:2;9111:35;9127:18;;;9111:35;:::i;:::-;9106:2;9099:5;9095:14;9088:59;9198:2;9187:9;9183:18;9170:32;-1:-1:-1;;;;;9262:2:37;9254:6;9251:14;9248:34;;;9278:1;9275;9268:12;9248:34;9316:6;9305:9;9301:22;9291:32;;9361:3;9354:4;9350:2;9346:13;9342:23;9332:51;;9379:1;9376;9369:12;9332:51;9415:2;9402:16;9437:2;9433;9430:10;9427:36;;;9443:18;;:::i;:::-;9485:53;9528:2;9509:13;;-1:-1:-1;;9505:27:37;9501:36;;9485:53;:::i;:::-;9561:2;9554:5;9547:17;9601:3;9596:2;9591;9587;9583:11;9579:20;9576:29;9573:49;;;9618:1;9615;9608:12;9573:49;9673:2;9668;9664;9660:11;9655:2;9648:5;9644:14;9631:45;9717:1;9712:2;9707;9700:5;9696:14;9692:23;9685:34;9751:5;9746:2;9739:5;9735:14;9728:29;;;9789:57;9842:3;9837:2;9826:9;9822:18;9789:57;:::i;:::-;9784:2;9777:5;9773:14;9766:81;9900:3;9889:9;9885:19;9872:33;9856:49;;9930:2;9920:8;9917:16;9914:36;;;9946:1;9943;9936:12;9914:36;;;9983:61;10040:3;10029:8;10018:9;10014:24;9983:61;:::i;:::-;9977:3;9970:5;9966:15;9959:86;;8769:1282;;;;:::o;10056:356::-;10146:6;10199:2;10187:9;10178:7;10174:23;10170:32;10167:52;;;10215:1;10212;10205:12;10167:52;10255:9;10242:23;-1:-1:-1;;;;;10280:6:37;10277:30;10274:50;;;10320:1;10317;10310:12;10274:50;10343:63;10398:7;10389:6;10378:9;10374:22;10343:63;:::i;10417:161::-;10482:5;10527:3;10518:6;10513:3;10509:16;10505:26;10502:46;;;10544:1;10541;10534:12;10502:46;-1:-1:-1;10566:6:37;10417:161;-1:-1:-1;10417:161:37:o;10583:367::-;10675:6;10728:2;10716:9;10707:7;10703:23;10699:32;10696:52;;;10744:1;10741;10734:12;10696:52;10784:9;10771:23;-1:-1:-1;;;;;10809:6:37;10806:30;10803:50;;;10849:1;10846;10839:12;10803:50;10872:72;10936:7;10927:6;10916:9;10912:22;10872:72;:::i;10955:465::-;11212:2;11201:9;11194:21;11175:4;11238:56;11290:2;11279:9;11275:18;11267:6;11238:56;:::i;:::-;11342:9;11334:6;11330:22;11325:2;11314:9;11310:18;11303:50;11370:44;11407:6;11399;11370:44;:::i;:::-;11362:52;10955:465;-1:-1:-1;;;;;10955:465:37:o;11425:640::-;11529:6;11537;11545;11553;11606:2;11594:9;11585:7;11581:23;11577:32;11574:52;;;11622:1;11619;11612:12;11574:52;11661:9;11648:23;11680:31;11705:5;11680:31;:::i;:::-;11730:5;-1:-1:-1;11782:2:37;11767:18;;11754:32;;-1:-1:-1;11837:2:37;11822:18;;11809:32;-1:-1:-1;;;;;11853:30:37;;11850:50;;;11896:1;11893;11886:12;11850:50;11935:70;11997:7;11988:6;11977:9;11973:22;11935:70;:::i;:::-;11425:640;;;;-1:-1:-1;12024:8:37;-1:-1:-1;;;;11425:640:37:o;12070:315::-;12138:6;12146;12199:2;12187:9;12178:7;12174:23;12170:32;12167:52;;;12215:1;12212;12205:12;12167:52;12251:9;12238:23;12228:33;;12311:2;12300:9;12296:18;12283:32;12324:31;12349:5;12324:31;:::i;:::-;12374:5;12364:15;;;12070:315;;;;;:::o;12390:248::-;12458:6;12466;12519:2;12507:9;12498:7;12494:23;12490:32;12487:52;;;12535:1;12532;12525:12;12487:52;-1:-1:-1;;12558:23:37;;;12628:2;12613:18;;;12600:32;;-1:-1:-1;12390:248:37:o;12643:247::-;12702:6;12755:2;12743:9;12734:7;12730:23;12726:32;12723:52;;;12771:1;12768;12761:12;12723:52;12810:9;12797:23;12829:31;12854:5;12829:31;:::i;13134:642::-;13247:6;13255;13263;13271;13279;13332:3;13320:9;13311:7;13307:23;13303:33;13300:53;;;13349:1;13346;13339:12;13300:53;13385:9;13372:23;13362:33;;13442:2;13431:9;13427:18;13414:32;13404:42;;13493:2;13482:9;13478:18;13465:32;13455:42;;13548:2;13537:9;13533:18;13520:32;-1:-1:-1;;;;;13567:6:37;13564:30;13561:50;;;13607:1;13604;13597:12;13561:50;13646:70;13708:7;13699:6;13688:9;13684:22;13646:70;:::i;:::-;13134:642;;;;-1:-1:-1;13134:642:37;;-1:-1:-1;13735:8:37;;13620:96;13134:642;-1:-1:-1;;;13134:642:37:o;13963:703::-;14091:6;14099;14107;14160:2;14148:9;14139:7;14135:23;14131:32;14128:52;;;14176:1;14173;14166:12;14128:52;14216:9;14203:23;-1:-1:-1;;;;;14286:2:37;14278:6;14275:14;14272:34;;;14302:1;14299;14292:12;14272:34;14325:72;14389:7;14380:6;14369:9;14365:22;14325:72;:::i;:::-;14315:82;;14450:2;14439:9;14435:18;14422:32;14406:48;;14479:2;14469:8;14466:16;14463:36;;;14495:1;14492;14485:12;14463:36;;14534:72;14598:7;14587:8;14576:9;14572:24;14534:72;:::i;14671:127::-;14732:10;14727:3;14723:20;14720:1;14713:31;14763:4;14760:1;14753:15;14787:4;14784:1;14777:15;14803:249;14953:2;14938:18;;14986:1;14975:13;;14965:47;;14992:18;;:::i;:::-;15021:25;;;14803:249;:::o;15057:815::-;15248:2;15237:9;15230:21;15211:4;15287:1;15283;15278:3;15274:11;15270:19;15344:2;15335:6;15329:13;15325:22;15320:2;15309:9;15305:18;15298:50;15416:2;15408:6;15404:15;15398:22;15391:30;15384:38;15379:2;15368:9;15364:18;15357:66;15470:2;15462:6;15458:15;15452:22;15510:4;15505:2;15494:9;15490:18;15483:32;15538:52;15585:3;15574:9;15570:19;15556:12;15538:52;:::i;:::-;15524:66;;15662:2;15655;15647:6;15643:15;15637:22;15631:29;15627:38;15621:3;15610:9;15606:19;15599:67;15715:3;15707:6;15703:16;15697:23;15675:45;;15790:2;15786:7;15774:9;15766:6;15762:22;15758:36;15751:4;15740:9;15736:20;15729:66;15812:54;15859:6;15843:14;15812:54;:::i;15877:437::-;15963:6;15971;16024:2;16012:9;16003:7;15999:23;15995:32;15992:52;;;16040:1;16037;16030:12;15992:52;16080:9;16067:23;-1:-1:-1;;;;;16105:6:37;16102:30;16099:50;;;16145:1;16142;16135:12;16099:50;16184:70;16246:7;16237:6;16226:9;16222:22;16184:70;:::i;:::-;16273:8;;16158:96;;-1:-1:-1;15877:437:37;-1:-1:-1;;;;15877:437:37:o;16594:380::-;16673:1;16669:12;;;;16716;;;16737:61;;16791:4;16783:6;16779:17;16769:27;;16737:61;16844:2;16836:6;16833:14;16813:18;16810:38;16807:161;;16890:10;16885:3;16881:20;16878:1;16871:31;16925:4;16922:1;16915:15;16953:4;16950:1;16943:15;16979:127;17040:10;17035:3;17031:20;17028:1;17021:31;17071:4;17068:1;17061:15;17095:4;17092:1;17085:15;17111:125;17176:9;;;17197:10;;;17194:36;;;17210:18;;:::i;17793:210::-;17907:9;17944:53;17982:14;17975:5;17944:53;:::i;18008:127::-;18069:10;18064:3;18060:20;18057:1;18050:31;18100:4;18097:1;18090:15;18124:4;18121:1;18114:15;18140:135;18179:3;18200:17;;;18197:43;;18220:18;;:::i;:::-;-1:-1:-1;18267:1:37;18256:13;;18140:135::o;18280:128::-;18347:9;;;18368:11;;;18365:37;;;18382:18;;:::i;18550:655::-;18718:2;18770:21;;;18840:13;;18743:18;;;18862:22;;;18689:4;18927:17;;;18967:16;;;18689:4;;18718:2;18915;18900:18;;;18689:4;19011:168;19025:6;19022:1;19019:13;19011:168;;;19086:13;;19074:26;;19167:1;19155:14;;;;19120:12;;;;19040:9;19011:168;;19890:246;20037:2;20022:18;;20070:1;20059:13;;20049:47;;20076:18;;:::i;20141:545::-;20243:2;20238:3;20235:11;20232:448;;;20279:1;20304:5;20300:2;20293:17;20349:4;20345:2;20335:19;20419:2;20407:10;20403:19;20400:1;20396:27;20390:4;20386:38;20455:4;20443:10;20440:20;20437:47;;;-1:-1:-1;20478:4:37;20437:47;20533:2;20528:3;20524:12;20521:1;20517:20;20511:4;20507:31;20497:41;;20588:82;20606:2;20599:5;20596:13;20588:82;;;20651:17;;;20632:1;20621:13;20588:82;;20862:1363;20988:3;20982:10;-1:-1:-1;;;;;21007:6:37;21004:30;21001:56;;;21037:18;;:::i;:::-;21066:97;21156:6;21116:38;21148:4;21142:11;21116:38;:::i;:::-;21110:4;21066:97;:::i;:::-;21218:4;;21282:2;21271:14;;21299:1;21294:674;;;;22012:1;22029:6;22026:89;;;-1:-1:-1;22081:19:37;;;22075:26;22026:89;-1:-1:-1;;20819:1:37;20815:11;;;20811:24;20807:29;20797:40;20843:1;20839:11;;;20794:57;22128:81;;21264:955;;21294:674;18497:1;18490:14;;;18534:4;18521:18;;-1:-1:-1;;21330:20:37;;;21459:236;21473:7;21470:1;21467:14;21459:236;;;21562:19;;;21556:26;21541:42;;21654:27;;;;21622:1;21610:14;;;;21489:19;;21459:236;;;21463:3;21723:6;21714:7;21711:19;21708:201;;;21784:19;;;21778:26;-1:-1:-1;;21867:1:37;21863:14;;;21879:3;21859:24;21855:37;21851:42;21836:58;21821:74;;21708:201;-1:-1:-1;;;;;21955:1:37;21939:14;;;21935:22;21922:36;;-1:-1:-1;20862:1363:37:o;22509:168::-;22582:9;;;22613;;22630:15;;;22624:22;;22610:37;22600:71;;22651:18;;:::i;22682:217::-;22722:1;22748;22738:132;;22792:10;22787:3;22783:20;22780:1;22773:31;22827:4;22824:1;22817:15;22855:4;22852:1;22845:15;22738:132;-1:-1:-1;22884:9:37;;22682:217::o;24178:127::-;24239:10;24234:3;24230:20;24227:1;24220:31;24270:4;24267:1;24260:15;24294:4;24291:1;24284:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "AMOUNT_FOR_SUMBITTER_PROOF()": "347cf665",
    "JK_LABS_ADDRESS()": "eef18e17",
    "METADATAS_COUNT()": "4d24a67f",
    "addressSubmitterVerified(address)": "cb853950",
    "addressTotalCastVoteCounts(address)": "a1ac6cb2",
    "addressTotalVotes(address)": "dea5f6a6",
    "addressTotalVotesVerified(address)": "930de979",
    "addressesThatHaveVoted(uint256)": "50c4b616",
    "allProposalTotalVotes()": "50a5e524",
    "allProposalTotalVotesWithoutDeleted()": "d45a010b",
    "cancel()": "ea8a1af0",
    "canceled()": "3f9942ff",
    "castVote(uint256,uint256,uint256,bytes32[])": "a84ff54b",
    "castVoteWithoutProof(uint256,uint256)": "89ab5f54",
    "checkProof(address,uint256,bytes32[],bool)": "32763c22",
    "contestDeadline()": "262e59e9",
    "contestStart()": "004114a8",
    "costToPropose()": "6ed815ad",
    "creator()": "02d05d3f",
    "deleteProposals(uint256[])": "f0a7db0a",
    "deletedProposalIds(uint256)": "05846cae",
    "forVotesToProposalIds(uint256,uint256)": "711effc8",
    "getAllAddressesThatHaveVoted()": "2c39805f",
    "getAllDeletedProposalIds()": "1242b737",
    "getAllProposalAuthors()": "946369b5",
    "getAllProposalIds()": "efa90d36",
    "getNumProposalsWithThisManyForVotes(uint256)": "9ba197af",
    "getOnlyProposalIdWithThisManyForVotes(uint256)": "b66d1da3",
    "getProposal(uint256)": "c7f758a8",
    "getProposalsWithThisManyForVotes(uint256)": "c9a1b6b2",
    "getRankIndex(uint256)": "5c7107d8",
    "getSortedRanks()": "6fd3636b",
    "hashProposal((address,bool,string,(address),(address[],uint256)))": "458da87d",
    "isOrIsBelowTiedRank(uint256)": "9174778c",
    "maxProposalCount()": "fb9bf8d4",
    "name()": "06fdde03",
    "numAllowedProposalSubmissions()": "832009af",
    "numSubmissions(address)": "75e509c5",
    "officialRewardsModule()": "785ddfe5",
    "percentageToCreator()": "edcd1be4",
    "prompt()": "7c65d711",
    "proposalAddressVotes(uint256,address)": "6e4eb810",
    "proposalAddressesHaveVoted(uint256)": "b323580d",
    "proposalAuthors(uint256)": "0aa25e44",
    "proposalIds(uint256)": "9b644a23",
    "proposalIsDeleted(uint256)": "f79c0172",
    "proposalVotes(uint256)": "544ffc9c",
    "proposalVotesStructs(uint256)": "070dc5d9",
    "proposals(uint256)": "013cf08b",
    "propose((address,bool,string,(address),(address[],uint256)),bytes32[])": "c0ffaa78",
    "proposeWithoutProof((address,bool,string,(address),(address[],uint256)))": "476f4d8a",
    "rankLimit()": "0414126a",
    "setOfficialRewardsModule(address)": "f4f3d7ec",
    "sortedRanks(uint256)": "325cc6d9",
    "sortingEnabled()": "366ecf5b",
    "state()": "c19d93fb",
    "submissionMerkleRoot()": "bddc1641",
    "totalVotesCast()": "7de418d5",
    "validateProposalData((address,bool,string,(address),(address[],uint256)))": "fb8ddab4",
    "verifyProposer(address,bytes32[])": "20b3e845",
    "verifyVoter(address,uint256,bytes32[])": "531bd812",
    "version()": "54fd4d50",
    "voteStart()": "e031535b",
    "votingDelay()": "3932abb1",
    "votingMerkleRoot()": "dd96a19d",
    "votingPeriod()": "02a251a3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_prompt\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"_submissionMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_votingMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"_constructorIntParams\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AddressNotPermissionedToSubmit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"AuthorIsNotSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotCancelACompletedContest\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotDeleteWhenCompleted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotVoteOnDeletedProposal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ContestAlreadyCancelled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum Governor.ContestState\",\"name\":\"currentState\",\"type\":\"uint8\"}],\"name\":\"ContestMustBeActiveToVote\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum Governor.ContestState\",\"name\":\"currentState\",\"type\":\"uint8\"}],\"name\":\"ContestMustBeQueuedToPropose\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxProposalCount\",\"type\":\"uint256\"}],\"name\":\"ContestSubmissionLimitReached\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"DuplicateSubmission\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptyProposalDescription\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"costToPropose\",\"type\":\"uint256\"}],\"name\":\"IncorrectCostToProposeSent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IndexHasNotBeenPopulated\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidVoteType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MoreThanOneProposalWithThisManyVotes\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NeedAtLeastOneVoteToVote\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NeedToSubmitWithProofFirst\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NeedToVoteWithProofFirst\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughVotesLeft\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInMerkle\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyCreatorCanDelete\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyCreatorCanSetRewardsModule\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyJkLabsOrCreatorCanCancel\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RankCannotBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RankIsNotInSortedRanks\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numAllowedProposalSubmissions\",\"type\":\"uint256\"}],\"name\":\"SenderSubmissionLimitReached\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum Governor.Metadatas\",\"name\":\"unexpectedMetadata\",\"type\":\"uint8\"}],\"name\":\"UnexpectedMetadata\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroSignersInSafeMetadata\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroThresholdInSafeMetadata\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ContestCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"JokeraceCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract RewardsModule\",\"name\":\"oldOfficialRewardsModule\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract RewardsModule\",\"name\":\"newOfficialRewardsModule\",\"type\":\"address\"}],\"name\":\"OfficialRewardsModuleSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PaymentReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"proposalIds\",\"type\":\"uint256[]\"}],\"name\":\"ProposalsDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"numVotes\",\"type\":\"uint256\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AMOUNT_FOR_SUMBITTER_PROOF\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"JK_LABS_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"METADATAS_COUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressSubmitterVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressTotalCastVoteCounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressTotalVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressTotalVotesVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addressesThatHaveVoted\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allProposalTotalVotes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"proposalIdsReturn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"proposalForVotesArrayReturn\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allProposalTotalVotesWithoutDeleted\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"proposalIdsReturn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"proposalForVotesArrayReturn\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canceled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numVotes\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"castVote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numVotes\",\"type\":\"uint256\"}],\"name\":\"castVoteWithoutProof\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressToCheck\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool\",\"name\":\"voting\",\"type\":\"bool\"}],\"name\":\"checkProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contestDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contestStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"costToPropose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"proposalIdsToDelete\",\"type\":\"uint256[]\"}],\"name\":\"deleteProposals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deletedProposalIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"forVotesToProposalIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllAddressesThatHaveVoted\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllDeletedProposalIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllProposalAuthors\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllProposalIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"}],\"name\":\"getNumProposalsWithThisManyForVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"}],\"name\":\"getOnlyProposalIdWithThisManyForVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposal\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Governor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct Governor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct Governor.ProposalCore\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"}],\"name\":\"getProposalsWithThisManyForVotes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"proposalsWithThisManyForVotes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rank\",\"type\":\"uint256\"}],\"name\":\"getRankIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rankIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSortedRanks\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"sortedRanksArray\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Governor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct Governor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct Governor.ProposalCore\",\"name\":\"proposal\",\"type\":\"tuple\"}],\"name\":\"hashProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"isOrIsBelowTiedRank\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"atOrBelowTiedRank\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxProposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numAllowedProposalSubmissions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"numSubmissions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"officialRewardsModule\",\"outputs\":[{\"internalType\":\"contract RewardsModule\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"percentageToCreator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prompt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"proposalAddressVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalAddressesHaveVoted\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalAuthors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalIsDeleted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalVotesStructs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Governor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct Governor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Governor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct Governor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct Governor.ProposalCore\",\"name\":\"proposal\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Governor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct Governor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct Governor.ProposalCore\",\"name\":\"proposal\",\"type\":\"tuple\"}],\"name\":\"proposeWithoutProof\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rankLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract RewardsModule\",\"name\":\"officialRewardsModule_\",\"type\":\"address\"}],\"name\":\"setOfficialRewardsModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sortedRanks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sortingEnabled\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum Governor.ContestState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"submissionMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVotesCast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Governor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct Governor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct Governor.ProposalCore\",\"name\":\"proposal\",\"type\":\"tuple\"}],\"name\":\"validateProposalData\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"verifyProposer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"verifyVoter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voteStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allProposalTotalVotes()\":{\"details\":\"Getter for the lists of ids and for votes for all proposals.\"},\"allProposalTotalVotesWithoutDeleted()\":{\"details\":\"Getter for the lists of ids and for votes for all proposals excluding the deleted ones.\"},\"cancel()\":{\"details\":\"Cancels the contest. Emits a {IGovernor-ContestCanceled} event.\"},\"castVote(uint256,uint256,uint256,bytes32[])\":{\"details\":\"Cast a vote with a merkle proof.\"},\"castVoteWithoutProof(uint256,uint256)\":{\"details\":\"Cast a vote without a proof if you have already voted with a proof.\"},\"checkProof(address,uint256,bytes32[],bool)\":{\"params\":{\"addressToCheck\":\"address of participant\",\"amount\":\"to check that the participant has the correct amount\",\"proof\":\"merkle proof to prove address and amount are in tree\",\"voting\":\"true if this is for a voting proof, false if this is for a submission proof\"}},\"contestDeadline()\":{\"details\":\"Returns if a proposal has been deleted or not.\"},\"deleteProposals(uint256[])\":{\"details\":\"Delete proposals. Emits a {IGovernor-ProposalsDeleted} event.\"},\"getAllAddressesThatHaveVoted()\":{\"details\":\"Return all addresses that have voted.\"},\"getAllDeletedProposalIds()\":{\"details\":\"Return all deleted proposals.\"},\"getAllProposalAuthors()\":{\"details\":\"Return all proposal authors.\"},\"getAllProposalIds()\":{\"details\":\"Return all proposals.\"},\"getNumProposalsWithThisManyForVotes(uint256)\":{\"details\":\"Get the number of proposals that have `forVotes` number of for votes.\"},\"getOnlyProposalIdWithThisManyForVotes(uint256)\":{\"details\":\"Get the only proposal id with this many for votes. NOTE: Should only get called at a point at which you are sure there is only one proposal id       with a certain number of forVotes (we only use it in the RewardsModule after ties have       been checked for).\"},\"getProposal(uint256)\":{\"details\":\"Retrieve proposal data.\"},\"getProposalsWithThisManyForVotes(uint256)\":{\"details\":\"Get the whole array in `forVotesToProposalIds` for a given `forVotes` amount.\"},\"getRankIndex(uint256)\":{\"details\":\"Get the idx of sortedRanks considered to hold the queried rank taking deleted proposals into account.      A rank has to have > 0 votes to be considered valid.\"},\"getSortedRanks()\":{\"details\":\"Get the sortedRanks array.\"},\"isOrIsBelowTiedRank(uint256)\":{\"details\":\"Returns whether a given index in sortedRanks is tied or is below a tied rank.\"},\"proposalAddressVotes(uint256,address)\":{\"details\":\"Accessor to how many votes an address has cast for a given proposal.\"},\"proposalAddressesHaveVoted(uint256)\":{\"details\":\"Get which addresses have cast a vote for a given proposal.\"},\"proposalVotes(uint256)\":{\"details\":\"Get the number of for votes a given proposal has.\"},\"propose((address,bool,string,(address),(address[],uint256)),bytes32[])\":{\"details\":\"Create a new proposal.\"},\"proposeWithoutProof((address,bool,string,(address),(address[],uint256)))\":{\"details\":\"Create a new proposal without a proof if you have already proposed with a proof.\"},\"setOfficialRewardsModule(address)\":{\"details\":\"Get the official rewards module contract for this contest (effectively reverse record).\"},\"validateProposalData((address,bool,string,(address),(address[],uint256)))\":{\"details\":\"Verifies that all of the metadata in the proposal is valid.\"},\"verifyProposer(address,bytes32[])\":{\"details\":\"Verifies that `account` is permissioned to propose via merkle proof.\"},\"verifyVoter(address,uint256,bytes32[])\":{\"details\":\"Verifies that `account` is permissioned to vote with `totalVotes` via merkle proof.\"},\"voteStart()\":{\"details\":\"Timestamp the contest vote begins. Votes open at the end of this block, so it is possible to propose during this block.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"NotInMerkle()\":[{\"notice\":\"Thrown if address/amount are not part of Merkle tree\"}]},\"kind\":\"user\",\"methods\":{\"checkProof(address,uint256,bytes32[],bool)\":{\"notice\":\"Allows checking of proofs for an address\"},\"submissionMerkleRoot()\":{\"notice\":\"Participant inclusion roots\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Contest.sol\":\"Contest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4\",\"dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"src/Contest.sol\":{\"keccak256\":\"0xec404a6c3fd52981fb5f475113fd77046d503e37d39755304354d8ce96c85f66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aea2bf1d738c900a163ac921137e6636bbe77f20626c737e7ccc11106fbd3c7f\",\"dweb:/ipfs/QmbSgueSGuj2DryiT5UDYzp8scQs1dhL65tP8BbLiwNTnu\"]},\"src/governance/Governor.sol\":{\"keccak256\":\"0x476597e060c066b5ca34b693e778a911bb43f45d5adf6920174a7132d267f34f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9857f8db1f1c67c1be822ed2e850ae8a73d02eb193f8489e5bf775539ae9a664\",\"dweb:/ipfs/QmZcQjTo2bZF8nQBuUcCkWes1E8eoZFM8arzkzjcZfSbcA\"]},\"src/governance/extensions/GovernorCountingSimple.sol\":{\"keccak256\":\"0x27fe92410b6c37d6478093eb2e86bd744777117e093ed8e8d665aa0b61ebb840\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b305d828e51296aa1951f348992ff17eb9598611efb50dc6ac78059e6dd06fb\",\"dweb:/ipfs/QmVoECU7GifZfBLombLdbRddweogsmnPvcmR3U1Xaf55q5\"]},\"src/governance/extensions/GovernorModuleRegistry.sol\":{\"keccak256\":\"0x125d25059bc535ebe7b693655f4f659e9094142d4214a0d7c0fcf5a40abbd09f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9bbacb3d06b816012e6eb700a12e5bfc2b574d2cd7c7b7ce9ce4fc94ee7396a\",\"dweb:/ipfs/QmPA9As3fYH7uj8h1YijwK4Sh93AnRbuBBQMqxzjMBndWh\"]},\"src/governance/utils/GovernorMerkleVotes.sol\":{\"keccak256\":\"0x86a4459ec25486a65bd3a4bbbd9dab7c70c30a1f13839cffc03dcab372c58f7f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://da7278d541df3a2ca19c2e364f508b21a2d16551d50818dd21b32ea606401417\",\"dweb:/ipfs/QmP3bgW4D9yPF8YyrnSvSR5t2VNM4SAU32XzsgG3CGom32\"]},\"src/governance/utils/GovernorSorting.sol\":{\"keccak256\":\"0x3c34f027313e32b0f82f267f42deab9b37293c3c4b238880487a1abd6d8a091b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7566a7ea9c346cdaf30de3cd8ffb30da05d5c06b5ffdcf357fd439bd4dd54a1\",\"dweb:/ipfs/QmWrZ9gkqgn35Dp4AhTNr78jnZpSp1HNn1LMTrfwVwC6wU\"]},\"src/modules/RewardsModule.sol\":{\"keccak256\":\"0xbcc244229c9084e429169fcd40fff8bb0f3ba6e121c0599df73fde91b5bb08f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5e7739d23c20727aa36a0e5adf49a29b44e7f5591be841330fa7b9b30794565\",\"dweb:/ipfs/QmNnVXLMTUAmiME9crmD6YjoP4kowKGb3pGRmpteUtU9W7\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_prompt",
              "type": "string"
            },
            {
              "internalType": "bytes32",
              "name": "_submissionMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "_votingMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256[]",
              "name": "_constructorIntParams",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AddressNotPermissionedToSubmit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AuthorIsNotSender"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CannotCancelACompletedContest"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CannotDeleteWhenCompleted"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CannotVoteOnDeletedProposal"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ContestAlreadyCancelled"
        },
        {
          "inputs": [
            {
              "internalType": "enum Governor.ContestState",
              "name": "currentState",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "ContestMustBeActiveToVote"
        },
        {
          "inputs": [
            {
              "internalType": "enum Governor.ContestState",
              "name": "currentState",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "ContestMustBeQueuedToPropose"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "maxProposalCount",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ContestSubmissionLimitReached"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "DuplicateSubmission"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EmptyProposalDescription"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "msgValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "costToPropose",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "IncorrectCostToProposeSent"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IndexHasNotBeenPopulated"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidVoteType"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MoreThanOneProposalWithThisManyVotes"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NeedAtLeastOneVoteToVote"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NeedToSubmitWithProofFirst"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NeedToVoteWithProofFirst"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotEnoughVotesLeft"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotInMerkle"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyCreatorCanDelete"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyCreatorCanSetRewardsModule"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyJkLabsOrCreatorCanCancel"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RankCannotBeZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RankIsNotInSortedRanks"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "numAllowedProposalSubmissions",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "SenderSubmissionLimitReached"
        },
        {
          "inputs": [
            {
              "internalType": "enum Governor.Metadatas",
              "name": "unexpectedMetadata",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "UnexpectedMetadata"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroSignersInSafeMetadata"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroThresholdInSafeMetadata"
        },
        {
          "inputs": [],
          "type": "event",
          "name": "ContestCanceled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "JokeraceCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract RewardsModule",
              "name": "oldOfficialRewardsModule",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract RewardsModule",
              "name": "newOfficialRewardsModule",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OfficialRewardsModuleSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PaymentReleased",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "proposer",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProposalCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalIds",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProposalsDeleted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "voter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "numVotes",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VoteCast",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "AMOUNT_FOR_SUMBITTER_PROOF",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "JK_LABS_ADDRESS",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "METADATAS_COUNT",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressSubmitterVerified",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressTotalCastVoteCounts",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressTotalVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressTotalVotesVerified",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressesThatHaveVoted",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allProposalTotalVotes",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalIdsReturn",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "proposalForVotesArrayReturn",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allProposalTotalVotesWithoutDeleted",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalIdsReturn",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "proposalForVotesArrayReturn",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancel"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "canceled",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "numVotes",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "castVote",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "numVotes",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "castVoteWithoutProof",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "addressToCheck",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "bool",
              "name": "voting",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkProof",
          "outputs": [
            {
              "internalType": "bool",
              "name": "verified",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contestDeadline",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contestStart",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "costToPropose",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "creator",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalIdsToDelete",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteProposals"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "deletedProposalIds",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "forVotesToProposalIds",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllAddressesThatHaveVoted",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllDeletedProposalIds",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllProposalAuthors",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllProposalIds",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getNumProposalsWithThisManyForVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOnlyProposalIdWithThisManyForVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProposal",
          "outputs": [
            {
              "internalType": "struct Governor.ProposalCore",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "struct Governor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct Governor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProposalsWithThisManyForVotes",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalsWithThisManyForVotes",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "rank",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRankIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "rankIndex",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getSortedRanks",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "sortedRanksArray",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Governor.ProposalCore",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "struct Governor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct Governor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "hashProposal",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "idx",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOrIsBelowTiedRank",
          "outputs": [
            {
              "internalType": "bool",
              "name": "atOrBelowTiedRank",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxProposalCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "numAllowedProposalSubmissions",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "numSubmissions",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "officialRewardsModule",
          "outputs": [
            {
              "internalType": "contract RewardsModule",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "percentageToCreator",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "prompt",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "userAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalAddressVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalAddressesHaveVoted",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalAuthors",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalIds",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalIsDeleted",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalVotesStructs",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposals",
          "outputs": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "struct Governor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct Governor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Governor.ProposalCore",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "struct Governor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct Governor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "propose",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Governor.ProposalCore",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "struct Governor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct Governor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "proposeWithoutProof",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rankLimit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract RewardsModule",
              "name": "officialRewardsModule_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOfficialRewardsModule"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "sortedRanks",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sortingEnabled",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "state",
          "outputs": [
            {
              "internalType": "enum Governor.ContestState",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "submissionMerkleRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalVotesCast",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Governor.ProposalCore",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "struct Governor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct Governor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "validateProposalData"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyProposer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalVotes",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyVoter"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "voteStart",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "votingDelay",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "votingMerkleRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "votingPeriod",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allProposalTotalVotes()": {
            "details": "Getter for the lists of ids and for votes for all proposals."
          },
          "allProposalTotalVotesWithoutDeleted()": {
            "details": "Getter for the lists of ids and for votes for all proposals excluding the deleted ones."
          },
          "cancel()": {
            "details": "Cancels the contest. Emits a {IGovernor-ContestCanceled} event."
          },
          "castVote(uint256,uint256,uint256,bytes32[])": {
            "details": "Cast a vote with a merkle proof."
          },
          "castVoteWithoutProof(uint256,uint256)": {
            "details": "Cast a vote without a proof if you have already voted with a proof."
          },
          "checkProof(address,uint256,bytes32[],bool)": {
            "params": {
              "addressToCheck": "address of participant",
              "amount": "to check that the participant has the correct amount",
              "proof": "merkle proof to prove address and amount are in tree",
              "voting": "true if this is for a voting proof, false if this is for a submission proof"
            }
          },
          "contestDeadline()": {
            "details": "Returns if a proposal has been deleted or not."
          },
          "deleteProposals(uint256[])": {
            "details": "Delete proposals. Emits a {IGovernor-ProposalsDeleted} event."
          },
          "getAllAddressesThatHaveVoted()": {
            "details": "Return all addresses that have voted."
          },
          "getAllDeletedProposalIds()": {
            "details": "Return all deleted proposals."
          },
          "getAllProposalAuthors()": {
            "details": "Return all proposal authors."
          },
          "getAllProposalIds()": {
            "details": "Return all proposals."
          },
          "getNumProposalsWithThisManyForVotes(uint256)": {
            "details": "Get the number of proposals that have `forVotes` number of for votes."
          },
          "getOnlyProposalIdWithThisManyForVotes(uint256)": {
            "details": "Get the only proposal id with this many for votes. NOTE: Should only get called at a point at which you are sure there is only one proposal id       with a certain number of forVotes (we only use it in the RewardsModule after ties have       been checked for)."
          },
          "getProposal(uint256)": {
            "details": "Retrieve proposal data."
          },
          "getProposalsWithThisManyForVotes(uint256)": {
            "details": "Get the whole array in `forVotesToProposalIds` for a given `forVotes` amount."
          },
          "getRankIndex(uint256)": {
            "details": "Get the idx of sortedRanks considered to hold the queried rank taking deleted proposals into account.      A rank has to have > 0 votes to be considered valid."
          },
          "getSortedRanks()": {
            "details": "Get the sortedRanks array."
          },
          "isOrIsBelowTiedRank(uint256)": {
            "details": "Returns whether a given index in sortedRanks is tied or is below a tied rank."
          },
          "proposalAddressVotes(uint256,address)": {
            "details": "Accessor to how many votes an address has cast for a given proposal."
          },
          "proposalAddressesHaveVoted(uint256)": {
            "details": "Get which addresses have cast a vote for a given proposal."
          },
          "proposalVotes(uint256)": {
            "details": "Get the number of for votes a given proposal has."
          },
          "propose((address,bool,string,(address),(address[],uint256)),bytes32[])": {
            "details": "Create a new proposal."
          },
          "proposeWithoutProof((address,bool,string,(address),(address[],uint256)))": {
            "details": "Create a new proposal without a proof if you have already proposed with a proof."
          },
          "setOfficialRewardsModule(address)": {
            "details": "Get the official rewards module contract for this contest (effectively reverse record)."
          },
          "validateProposalData((address,bool,string,(address),(address[],uint256)))": {
            "details": "Verifies that all of the metadata in the proposal is valid."
          },
          "verifyProposer(address,bytes32[])": {
            "details": "Verifies that `account` is permissioned to propose via merkle proof."
          },
          "verifyVoter(address,uint256,bytes32[])": {
            "details": "Verifies that `account` is permissioned to vote with `totalVotes` via merkle proof."
          },
          "voteStart()": {
            "details": "Timestamp the contest vote begins. Votes open at the end of this block, so it is possible to propose during this block."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "checkProof(address,uint256,bytes32[],bool)": {
            "notice": "Allows checking of proofs for an address"
          },
          "submissionMerkleRoot()": {
            "notice": "Participant inclusion roots"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@forge-std/=lib/forge-std/src/",
        "@openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Contest.sol": "Contest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa",
        "urls": [
          "bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4",
          "dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol": {
        "keccak256": "0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac",
        "urls": [
          "bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04",
          "dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "src/Contest.sol": {
        "keccak256": "0xec404a6c3fd52981fb5f475113fd77046d503e37d39755304354d8ce96c85f66",
        "urls": [
          "bzz-raw://aea2bf1d738c900a163ac921137e6636bbe77f20626c737e7ccc11106fbd3c7f",
          "dweb:/ipfs/QmbSgueSGuj2DryiT5UDYzp8scQs1dhL65tP8BbLiwNTnu"
        ],
        "license": "MIT"
      },
      "src/governance/Governor.sol": {
        "keccak256": "0x476597e060c066b5ca34b693e778a911bb43f45d5adf6920174a7132d267f34f",
        "urls": [
          "bzz-raw://9857f8db1f1c67c1be822ed2e850ae8a73d02eb193f8489e5bf775539ae9a664",
          "dweb:/ipfs/QmZcQjTo2bZF8nQBuUcCkWes1E8eoZFM8arzkzjcZfSbcA"
        ],
        "license": "MIT"
      },
      "src/governance/extensions/GovernorCountingSimple.sol": {
        "keccak256": "0x27fe92410b6c37d6478093eb2e86bd744777117e093ed8e8d665aa0b61ebb840",
        "urls": [
          "bzz-raw://6b305d828e51296aa1951f348992ff17eb9598611efb50dc6ac78059e6dd06fb",
          "dweb:/ipfs/QmVoECU7GifZfBLombLdbRddweogsmnPvcmR3U1Xaf55q5"
        ],
        "license": "MIT"
      },
      "src/governance/extensions/GovernorModuleRegistry.sol": {
        "keccak256": "0x125d25059bc535ebe7b693655f4f659e9094142d4214a0d7c0fcf5a40abbd09f",
        "urls": [
          "bzz-raw://d9bbacb3d06b816012e6eb700a12e5bfc2b574d2cd7c7b7ce9ce4fc94ee7396a",
          "dweb:/ipfs/QmPA9As3fYH7uj8h1YijwK4Sh93AnRbuBBQMqxzjMBndWh"
        ],
        "license": "MIT"
      },
      "src/governance/utils/GovernorMerkleVotes.sol": {
        "keccak256": "0x86a4459ec25486a65bd3a4bbbd9dab7c70c30a1f13839cffc03dcab372c58f7f",
        "urls": [
          "bzz-raw://da7278d541df3a2ca19c2e364f508b21a2d16551d50818dd21b32ea606401417",
          "dweb:/ipfs/QmP3bgW4D9yPF8YyrnSvSR5t2VNM4SAU32XzsgG3CGom32"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/governance/utils/GovernorSorting.sol": {
        "keccak256": "0x3c34f027313e32b0f82f267f42deab9b37293c3c4b238880487a1abd6d8a091b",
        "urls": [
          "bzz-raw://e7566a7ea9c346cdaf30de3cd8ffb30da05d5c06b5ffdcf357fd439bd4dd54a1",
          "dweb:/ipfs/QmWrZ9gkqgn35Dp4AhTNr78jnZpSp1HNn1LMTrfwVwC6wU"
        ],
        "license": "MIT"
      },
      "src/modules/RewardsModule.sol": {
        "keccak256": "0xbcc244229c9084e429169fcd40fff8bb0f3ba6e121c0599df73fde91b5bb08f7",
        "urls": [
          "bzz-raw://f5e7739d23c20727aa36a0e5adf49a29b44e7f5591be841330fa7b9b30794565",
          "dweb:/ipfs/QmNnVXLMTUAmiME9crmD6YjoP4kowKGb3pGRmpteUtU9W7"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Contest.sol",
    "id": 32631,
    "exportedSymbols": {
      "Address": [
        30478
      ],
      "Contest": [
        32630
      ],
      "Governor": [
        33775
      ],
      "GovernorCountingSimple": [
        34412
      ],
      "GovernorMerkleVotes": [
        34545
      ],
      "GovernorModuleRegistry": [
        34463
      ],
      "GovernorSorting": [
        34805
      ],
      "IERC20": [
        29638
      ],
      "IERC20Permit": [
        29743
      ],
      "MerkleProof": [
        31028
      ],
      "RewardsModule": [
        35500
      ],
      "SafeCast": [
        32569
      ],
      "SafeERC20": [
        30148
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1198:28",
    "nodes": [
      {
        "id": 32571,
        "nodeType": "PragmaDirective",
        "src": "32:23:28",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 32572,
        "nodeType": "ImportDirective",
        "src": "57:35:28",
        "nodes": [],
        "absolutePath": "src/governance/Governor.sol",
        "file": "./governance/Governor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32631,
        "sourceUnit": 33776,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32573,
        "nodeType": "ImportDirective",
        "src": "93:60:28",
        "nodes": [],
        "absolutePath": "src/governance/extensions/GovernorCountingSimple.sol",
        "file": "./governance/extensions/GovernorCountingSimple.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32631,
        "sourceUnit": 34413,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32574,
        "nodeType": "ImportDirective",
        "src": "154:60:28",
        "nodes": [],
        "absolutePath": "src/governance/extensions/GovernorModuleRegistry.sol",
        "file": "./governance/extensions/GovernorModuleRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32631,
        "sourceUnit": 34464,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32575,
        "nodeType": "ImportDirective",
        "src": "215:48:28",
        "nodes": [],
        "absolutePath": "src/governance/utils/GovernorSorting.sol",
        "file": "./governance/utils/GovernorSorting.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32631,
        "sourceUnit": 34806,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32630,
        "nodeType": "ContractDefinition",
        "src": "265:964:28",
        "nodes": [
          {
            "id": 32629,
            "nodeType": "FunctionDefinition",
            "src": "338:889:28",
            "nodes": [],
            "body": {
              "id": 32628,
              "nodeType": "Block",
              "src": "1225:2:28",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 32593,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32581,
                    "src": "568:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 32594,
                    "name": "_prompt",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32583,
                    "src": "587:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 32595,
                    "name": "_submissionMerkleRoot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32585,
                    "src": "608:21:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "id": 32596,
                    "name": "_votingMerkleRoot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32587,
                    "src": "643:17:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 32597,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32590,
                      "src": "674:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 32599,
                    "indexExpression": {
                      "hexValue": "30",
                      "id": 32598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "696:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "674:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 32600,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32590,
                      "src": "728:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 32602,
                    "indexExpression": {
                      "hexValue": "31",
                      "id": 32601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "750:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "728:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 32603,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32590,
                      "src": "782:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 32605,
                    "indexExpression": {
                      "hexValue": "32",
                      "id": 32604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "804:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "782:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 32606,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32590,
                      "src": "837:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 32608,
                    "indexExpression": {
                      "hexValue": "33",
                      "id": 32607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "859:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "837:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 32609,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32590,
                      "src": "909:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 32611,
                    "indexExpression": {
                      "hexValue": "34",
                      "id": 32610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "931:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "909:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 32612,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32590,
                      "src": "967:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 32614,
                    "indexExpression": {
                      "hexValue": "35",
                      "id": 32613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "989:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "967:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 32615,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32590,
                      "src": "1022:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 32617,
                    "indexExpression": {
                      "hexValue": "36",
                      "id": 32616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1044:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_6_by_1",
                        "typeString": "int_const 6"
                      },
                      "value": "6"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1022:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 32618,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 32592,
                  "name": "Governor",
                  "nameLocations": [
                    "546:8:28"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33775,
                  "src": "546:8:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "546:533:28"
              },
              {
                "arguments": [
                  {
                    "baseExpression": {
                      "id": 32620,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32590,
                      "src": "1117:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 32622,
                    "indexExpression": {
                      "hexValue": "37",
                      "id": 32621,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1139:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_7_by_1",
                        "typeString": "int_const 7"
                      },
                      "value": "7"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1117:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 32623,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32590,
                      "src": "1173:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 32625,
                    "indexExpression": {
                      "hexValue": "38",
                      "id": 32624,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1195:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_8_by_1",
                        "typeString": "int_const 8"
                      },
                      "value": "8"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1173:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 32626,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 32619,
                  "name": "GovernorSorting",
                  "nameLocations": [
                    "1088:15:28"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34805,
                  "src": "1088:15:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "1088:132:28"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 32591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32581,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "373:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 32629,
                  "src": "359:19:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32580,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "359:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32583,
                  "mutability": "mutable",
                  "name": "_prompt",
                  "nameLocation": "402:7:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 32629,
                  "src": "388:21:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32582,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "388:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32585,
                  "mutability": "mutable",
                  "name": "_submissionMerkleRoot",
                  "nameLocation": "427:21:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 32629,
                  "src": "419:29:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 32584,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "419:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32587,
                  "mutability": "mutable",
                  "name": "_votingMerkleRoot",
                  "nameLocation": "466:17:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 32629,
                  "src": "458:25:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 32586,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "458:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32590,
                  "mutability": "mutable",
                  "name": "_constructorIntParams",
                  "nameLocation": "510:21:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 32629,
                  "src": "493:38:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 32588,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "493:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 32589,
                    "nodeType": "ArrayTypeName",
                    "src": "493:9:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "349:188:28"
            },
            "returnParameters": {
              "id": 32627,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1225:0:28"
            },
            "scope": 32630,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 32576,
              "name": "GovernorCountingSimple",
              "nameLocations": [
                "285:22:28"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34412,
              "src": "285:22:28"
            },
            "id": 32577,
            "nodeType": "InheritanceSpecifier",
            "src": "285:22:28"
          },
          {
            "baseName": {
              "id": 32578,
              "name": "GovernorModuleRegistry",
              "nameLocations": [
                "309:22:28"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34463,
              "src": "309:22:28"
            },
            "id": 32579,
            "nodeType": "InheritanceSpecifier",
            "src": "309:22:28"
          }
        ],
        "canonicalName": "Contest",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          32630,
          34463,
          34412,
          33775,
          34545,
          34805
        ],
        "name": "Contest",
        "nameLocation": "274:7:28",
        "scope": 32631,
        "usedErrors": [
          32790,
          32792,
          32794,
          32799,
          32801,
          32807,
          32809,
          32814,
          32819,
          32823,
          32827,
          32831,
          32833,
          32835,
          32837,
          32839,
          32841,
          32843,
          32845,
          32847,
          32849,
          33809,
          33811,
          33813,
          33815,
          33817,
          33819,
          34432,
          34476
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 28
}