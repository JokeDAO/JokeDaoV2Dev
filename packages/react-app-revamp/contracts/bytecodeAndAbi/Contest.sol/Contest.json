{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_prompt",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "_submissionMerkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_votingMerkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "_constructorIntParams",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AddressNotPermissionedToSubmit",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "author",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "AuthorIsNotSender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CannotCancelACompletedContest",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CannotDeleteWhenCompleted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CannotVoteOnDeletedProposal",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ContestAlreadyCancelled",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "enum Governor.ContestState",
          "name": "currentState",
          "type": "uint8"
        }
      ],
      "name": "ContestMustBeActiveToVote",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "enum Governor.ContestState",
          "name": "currentState",
          "type": "uint8"
        }
      ],
      "name": "ContestMustBeQueuedToPropose",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "maxProposalCount",
          "type": "uint256"
        }
      ],
      "name": "ContestSubmissionLimitReached",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DownvotingNotEnabled",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "DuplicateSubmission",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EmptyProposalDescription",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "msgValue",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "costToPropose",
          "type": "uint256"
        }
      ],
      "name": "IncorrectCostToProposeSent",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IndexHasNotBeenPopulated",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidVoteType",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MoreThanOneProposalWithThisManyVotes",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NeedAtLeastOneVoteToVote",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NeedToSubmitWithProofFirst",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NeedToVoteWithProofFirst",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotEnoughVotesLeft",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotInMerkle",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyCreatorCanDelete",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyCreatorCanSetRewardsModule",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyJkLabsOrCreatorCanCancel",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RankCannotBeZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RankIsNotInSortedRanks",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "numAllowedProposalSubmissions",
          "type": "uint256"
        }
      ],
      "name": "SenderSubmissionLimitReached",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "enum Governor.Metadatas",
          "name": "unexpectedMetadata",
          "type": "uint8"
        }
      ],
      "name": "UnexpectedMetadata",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroSignersInSafeMetadata",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroThresholdInSafeMetadata",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "ContestCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "name": "JokeraceCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract RewardsModule",
          "name": "oldOfficialRewardsModule",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract RewardsModule",
          "name": "newOfficialRewardsModule",
          "type": "address"
        }
      ],
      "name": "OfficialRewardsModuleSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PaymentReleased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "proposalIds",
          "type": "uint256[]"
        }
      ],
      "name": "ProposalsDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "numVotes",
          "type": "uint256"
        }
      ],
      "name": "VoteCast",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "AMOUNT_FOR_SUMBITTER_PROOF",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "JK_LABS_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "METADATAS_COUNT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressSubmitterVerified",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressTotalCastVoteCounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressTotalVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressTotalVotesVerified",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "addressesThatHaveVoted",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allProposalTotalVotes",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "proposalIdsReturn",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ],
          "internalType": "struct GovernorCountingSimple.VoteCounts[]",
          "name": "proposalVoteCountsArrayReturn",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allProposalTotalVotesWithoutDeleted",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "proposalIdsReturn",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ],
          "internalType": "struct GovernorCountingSimple.VoteCounts[]",
          "name": "proposalVoteCountsArrayReturn",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "canceled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "totalVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "numVotes",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "castVote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "numVotes",
          "type": "uint256"
        }
      ],
      "name": "castVoteWithoutProof",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addressToCheck",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        },
        {
          "internalType": "bool",
          "name": "voting",
          "type": "bool"
        }
      ],
      "name": "checkProof",
      "outputs": [
        {
          "internalType": "bool",
          "name": "verified",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "contestAddressTotalVotesCast",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "userTotalVotesCast",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contestDeadline",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contestStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "costToPropose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "proposalIdsToDelete",
          "type": "uint256[]"
        }
      ],
      "name": "deleteProposals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "deletedProposalIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "downvotingAllowed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "forVotesToProposalIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllAddressesThatHaveVoted",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllDeletedProposalIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllProposalAuthors",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllProposalIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        }
      ],
      "name": "getNumProposalsWithThisManyForVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        }
      ],
      "name": "getOnlyProposalIdWithThisManyForVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getProposal",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct Governor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Governor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct Governor.ProposalCore",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rank",
          "type": "uint256"
        }
      ],
      "name": "getRankIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rankIndex",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSortedRanks",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "sortedRanksArray",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct Governor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Governor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct Governor.ProposalCore",
          "name": "proposal",
          "type": "tuple"
        }
      ],
      "name": "hashProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "idx",
          "type": "uint256"
        }
      ],
      "name": "isOrIsBelowTiedRank",
      "outputs": [
        {
          "internalType": "bool",
          "name": "atOrBelowTiedRank",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxProposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numAllowedProposalSubmissions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "numSubmissions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "officialRewardsModule",
      "outputs": [
        {
          "internalType": "contract RewardsModule",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "percentageToCreator",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "prompt",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "proposalAddressVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "proposalAddressesHaveVoted",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalAuthors",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalIsDeleted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "proposalVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalVotesStructs",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ],
          "internalType": "struct GovernorCountingSimple.VoteCounts",
          "name": "proposalVoteCounts",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "address",
          "name": "author",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "exists",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "targetAddress",
              "type": "address"
            }
          ],
          "internalType": "struct Governor.TargetMetadata",
          "name": "targetMetadata",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address[]",
              "name": "signers",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "threshold",
              "type": "uint256"
            }
          ],
          "internalType": "struct Governor.SafeMetadata",
          "name": "safeMetadata",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct Governor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Governor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct Governor.ProposalCore",
          "name": "proposal",
          "type": "tuple"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "propose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct Governor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Governor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct Governor.ProposalCore",
          "name": "proposal",
          "type": "tuple"
        }
      ],
      "name": "proposeWithoutProof",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rankLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract RewardsModule",
          "name": "officialRewardsModule_",
          "type": "address"
        }
      ],
      "name": "setOfficialRewardsModule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "sortedRanks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sortingEnabled",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum Governor.ContestState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "submissionMerkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalVotesCast",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct Governor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Governor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct Governor.ProposalCore",
          "name": "proposal",
          "type": "tuple"
        }
      ],
      "name": "validateProposalData",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "verifyProposer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "totalVotes",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "verifyVoter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "voteStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingMerkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "265:1023:28:-:0;;;338:948;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;568:5;587:7;608:21;643:17;674:21;696:1;674:24;;;;;;;;:::i;:::-;;;;;;;728:21;750:1;728:24;;;;;;;;:::i;:::-;;;;;;;782:21;804:1;782:24;;;;;;;;:::i;:::-;;;;;;;837:21;859:1;837:24;;;;;;;;:::i;:::-;;;;;;;909:21;931:1;909:24;;;;;;;;:::i;:::-;;;;;;;967:21;989:1;967:24;;;;;;;;:::i;:::-;;;;;;;1026:21;1048:1;1026:24;;;;;;;;:::i;:::-;;;;;;;1081:21;1103:1;1081:24;;;;;;;;:::i;:::-;;;;;;;4318:21:29;4341:17;1176:21:28;1198:1;1176:24;;;;;;;;:::i;:::-;;;;;;;1232:21;1254:1;1232:24;;;;;;;;:::i;:::-;;;;;;;;;;;2161:32:33;;;;;2203:22;;901:44:32;;;;;970:36;;4370:4:29::1;:12;4377:5:::0;4370:4;:12:::1;:::i;:::-;-1:-1:-1::0;4392:6:29::1;:16;4401:7:::0;4392:6;:16:::1;:::i;:::-;-1:-1:-1::0;4418:7:29::1;:20:::0;;-1:-1:-1;;;;;;4418:20:29::1;4428:10;4418:20:::0;;::::1;::::0;;;4448:12:::1;:28:::0;;;4486:11:::1;:26:::0;;;4522:12:::1;:28:::0;;;4560:29:::1;:62:::0;;;4632:16:::1;:36:::0;;;4678:17:::1;:38:::0;;;4726:13:::1;:30:::0;;;4766:19:::1;:42:::0;;;4824:34:::1;::::0;::::1;::::0;::::1;::::0;4840:5;;4428:10;4824:34:::1;:::i;:::-;;;;;;;;3865:1069:::0;;;;;;;;;;;;338:948:28;;;;;265:1023;;14:127:37;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:37;247:40;;-1:-1:-1;;;;;302:34:37;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:37:o;426:250::-;511:1;521:113;535:6;532:1;529:13;521:113;;;611:11;;;605:18;592:11;;;585:39;557:2;550:10;521:113;;;-1:-1:-1;;668:1:37;650:16;;643:27;426:250::o;681:510::-;735:5;788:3;781:4;773:6;769:17;765:27;755:55;;806:1;803;796:12;755:55;829:13;;-1:-1:-1;;;;;854:26:37;;851:52;;;883:18;;:::i;:::-;927:55;970:2;951:13;;-1:-1:-1;;947:27:37;976:4;943:38;927:55;:::i;:::-;1007:2;998:7;991:19;1053:3;1046:4;1041:2;1033:6;1029:15;1025:26;1022:35;1019:55;;;1070:1;1067;1060:12;1019:55;1083:77;1157:2;1150:4;1141:7;1137:18;1130:4;1122:6;1118:17;1083:77;:::i;:::-;1178:7;681:510;-1:-1:-1;;;;681:510:37:o;1196:1468::-;1347:6;1355;1363;1371;1379;1432:3;1420:9;1411:7;1407:23;1403:33;1400:53;;;1449:1;1446;1439:12;1400:53;1476:16;;-1:-1:-1;;;;;1541:14:37;;;1538:34;;;1568:1;1565;1558:12;1538:34;1591:61;1644:7;1635:6;1624:9;1620:22;1591:61;:::i;:::-;1581:71;;1671:2;1661:12;;1719:2;1708:9;1704:18;1698:25;1748:2;1738:8;1735:16;1732:36;;;1764:1;1761;1754:12;1732:36;1787:63;1842:7;1831:8;1820:9;1816:24;1787:63;:::i;:::-;1777:73;;;1890:2;1879:9;1875:18;1869:25;1859:35;;1934:2;1923:9;1919:18;1913:25;1903:35;;1984:3;1973:9;1969:19;1963:26;2014:2;2004:8;2001:16;1998:36;;;2030:1;2027;2020:12;1998:36;2053:24;;2108:4;2100:13;;2096:27;-1:-1:-1;2086:55:37;;2137:1;2134;2127:12;2086:55;2166:2;2160:9;2188:2;2184;2181:10;2178:36;;;2194:18;;:::i;:::-;2240:2;2237:1;2233:10;2223:20;;2263:28;2287:2;2283;2279:11;2263:28;:::i;:::-;2325:15;;;2395:11;;;2391:20;;;2356:12;;;;2423:19;;;2420:39;;;2455:1;2452;2445:12;2420:39;2479:11;;;;2499:135;2515:6;2510:3;2507:15;2499:135;;;2581:10;;2569:23;;2532:12;;;;2612;;;;2499:135;;;2653:5;2643:15;;;;;;;;1196:1468;;;;;;;;:::o;2669:127::-;2730:10;2725:3;2721:20;2718:1;2711:31;2761:4;2758:1;2751:15;2785:4;2782:1;2775:15;2801:380;2880:1;2876:12;;;;2923;;;2944:61;;2998:4;2990:6;2986:17;2976:27;;2944:61;3051:2;3043:6;3040:14;3020:18;3017:38;3014:161;;3097:10;3092:3;3088:20;3085:1;3078:31;3132:4;3129:1;3122:15;3160:4;3157:1;3150:15;3014:161;;2801:380;;;:::o;3312:545::-;3414:2;3409:3;3406:11;3403:448;;;3450:1;3475:5;3471:2;3464:17;3520:4;3516:2;3506:19;3590:2;3578:10;3574:19;3571:1;3567:27;3561:4;3557:38;3626:4;3614:10;3611:20;3608:47;;;-1:-1:-1;3649:4:37;3608:47;3704:2;3699:3;3695:12;3692:1;3688:20;3682:4;3678:31;3668:41;;3759:82;3777:2;3770:5;3767:13;3759:82;;;3822:17;;;3803:1;3792:13;3759:82;;;3763:3;;;3403:448;3312:545;;;:::o;4033:1352::-;4153:10;;-1:-1:-1;;;;;4175:30:37;;4172:56;;;4208:18;;:::i;:::-;4237:97;4327:6;4287:38;4319:4;4313:11;4287:38;:::i;:::-;4281:4;4237:97;:::i;:::-;4389:4;;4453:2;4442:14;;4470:1;4465:663;;;;5172:1;5189:6;5186:89;;;-1:-1:-1;5241:19:37;;;5235:26;5186:89;-1:-1:-1;;3990:1:37;3986:11;;;3982:24;3978:29;3968:40;4014:1;4010:11;;;3965:57;5288:81;;4435:944;;4465:663;3259:1;3252:14;;;3296:4;3283:18;;-1:-1:-1;;4501:20:37;;;4619:236;4633:7;4630:1;4627:14;4619:236;;;4722:19;;;4716:26;4701:42;;4814:27;;;;4782:1;4770:14;;;;4649:19;;4619:236;;;4623:3;4883:6;4874:7;4871:19;4868:201;;;4944:19;;;4938:26;-1:-1:-1;;5027:1:37;5023:14;;;5039:3;5019:24;5015:37;5011:42;4996:58;4981:74;;4868:201;-1:-1:-1;;;;;5115:1:37;5099:14;;;5095:22;5082:36;;-1:-1:-1;4033:1352:37:o;5390:497::-;5567:2;5556:9;5549:21;5530:4;5599:6;5593:13;5642:6;5637:2;5626:9;5622:18;5615:34;5658:81;5732:6;5727:2;5716:9;5712:18;5705:4;5697:6;5693:17;5658:81;:::i;:::-;-1:-1:-1;;;;;5848:32:37;;;;5841:4;5826:20;;5819:62;-1:-1:-1;5800:2:37;5779:15;;;;-1:-1:-1;;5775:29:37;5760:45;5807:2;5756:54;;5390:497;-1:-1:-1;5390:497:37:o;:::-;265:1023:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106103e35760003560e01c80636fd3636b11610208578063c0ffaa7811610118578063ea8a1af0116100ab578063f0a7db0a1161007a578063f0a7db0a14610c60578063f4f3d7ec14610c80578063f79c017214610ca0578063fb8ddab414610cd0578063fb9bf8d414610cf057600080fd5b8063ea8a1af014610bf8578063edcd1be414610c0d578063eef18e1714610c23578063efa90d3614610c4b57600080fd5b8063d45a010b116100e7578063d45a010b14610b6d578063dd96a19d14610b82578063dea5f6a614610bb6578063e031535b14610be357600080fd5b8063c0ffaa7814610adb578063c19d93fb14610aee578063c7f758a814610b10578063cb85395014610b3d57600080fd5b8063930de9791161019b578063a1ac6cb21161016a578063a1ac6cb214610a04578063aec116b614610a31578063b323580d14610a67578063b66d1da314610a87578063bddc164114610aa757600080fd5b8063930de97914610972578063946369b5146109a25780639b644a23146109b75780639ba197af146109d757600080fd5b80637c65d711116101d75780637c65d711146109115780637de418d514610926578063832009af1461093c5780639174778c1461095257600080fd5b80636fd3636b1461088f578063711effc8146108a457806375e509c5146108c4578063785ddfe5146108f157600080fd5b8063366ecf5b1161030357806350c4b616116102965780635c7107d8116102655780635c7107d81461080357806360506ff61461082357806365f16263146108395780636e4eb810146108595780636ed815ad1461087957600080fd5b806350c4b6161461074d578063531bd8121461076d578063544ffc9c1461078d57806354fd4d50146107d757600080fd5b8063458da87d116102d2578063458da87d146106e2578063476f4d8a146107025780634d24a67f1461071557806350a5e5241461072a57600080fd5b8063366ecf5b1461065e5780633932abb1146106925780633f9942ff146106a8578063419c533c146106c257600080fd5b80630aa25e441161037b5780632c39805f1161034a5780632c39805f146105d0578063325cc6d9146105f257806332763c2214610612578063347cf6651461064257600080fd5b80630aa25e44146105575780631242b7371461057757806320b3e84514610599578063262e59e9146105bb57600080fd5b80630414126a116103b75780630414126a1461049057806305846cae146104c457806306fdde03146104e4578063070dc5d91461050657600080fd5b80624114a8146103e8578063013cf08b1461041157806302a251a31461044257806302d05d3f14610458575b600080fd5b3480156103f457600080fd5b506103fe60045481565b6040519081526020015b60405180910390f35b34801561041d57600080fd5b5061043161042c36600461303c565b610d06565b6040516104089594939291906130f4565b34801561044e57600080fd5b506103fe60065481565b34801561046457600080fd5b50600354610478906001600160a01b031681565b6040516001600160a01b039091168152602001610408565b34801561049c57600080fd5b506103fe7f000000000000000000000000000000000000000000000000000000000000000081565b3480156104d057600080fd5b506103fe6104df36600461303c565b610e4e565b3480156104f057600080fd5b506104f9610e6f565b6040516104089190613146565b34801561051257600080fd5b5061054a61052136600461303c565b601960209081526000918252604091829020825180840190935280548352600101549082015281565b6040516104089190613159565b34801561056357600080fd5b5061047861057236600461303c565b610efd565b34801561058357600080fd5b5061058c610f27565b60405161040891906131ab565b3480156105a557600080fd5b506105b96105b4366004613217565b610f7f565b005b3480156105c757600080fd5b506103fe61100c565b3480156105dc57600080fd5b506105e5611028565b604051610408919061326b565b3480156105fe57600080fd5b506103fe61060d36600461303c565b611089565b34801561061e57600080fd5b5061063261062d3660046132cd565b611099565b6040519015158152602001610408565b34801561064e57600080fd5b506103fe678ac7230489e8000081565b34801561066a57600080fd5b506103fe7f000000000000000000000000000000000000000000000000000000000000000081565b34801561069e57600080fd5b506103fe60055481565b3480156106b457600080fd5b50600f546106329060ff1681565b3480156106ce57600080fd5b506103fe6106dd36600461334e565b6111d6565b3480156106ee57600080fd5b506103fe6106fd36600461365a565b61122c565b6103fe6107103660046136a6565b61125d565b34801561072157600080fd5b506103fe611318565b34801561073657600080fd5b5061073f611326565b6040516104089291906136da565b34801561075957600080fd5b5061047861076836600461303c565b61142c565b34801561077957600080fd5b506105b9610788366004613743565b61143c565b34801561079957600080fd5b506107c26107a836600461303c565b600090815260196020526040902080546001909101549091565b60408051928352602083019190915201610408565b3480156107e357600080fd5b50604080518082019091526003815262342e3760e81b60208201526104f9565b34801561080f57600080fd5b506103fe61081e36600461303c565b6114a2565b34801561082f57600080fd5b506103fe60095481565b34801561084557600080fd5b506103fe61085436600461379e565b6115a9565b34801561086557600080fd5b506107c26108743660046137d3565b611629565b34801561088557600080fd5b506103fe600a5481565b34801561089b57600080fd5b5061058c61165e565b3480156108b057600080fd5b506103fe6108bf366004613803565b6116b4565b3480156108d057600080fd5b506103fe6108df366004613825565b60116020526000908152604090205481565b3480156108fd57600080fd5b50601b54610478906001600160a01b031681565b34801561091d57600080fd5b506104f96116e5565b34801561093257600080fd5b506103fe60175481565b34801561094857600080fd5b506103fe60075481565b34801561095e57600080fd5b5061063261096d36600461303c565b6116f2565b34801561097e57600080fd5b5061063261098d366004613825565b60156020526000908152604090205460ff1681565b3480156109ae57600080fd5b506105e5611796565b3480156109c357600080fd5b506103fe6109d236600461303c565b6117f6565b3480156109e357600080fd5b506103fe6109f236600461303c565b6000908152601a602052604090205490565b348015610a1057600080fd5b506103fe610a1f366004613825565b60186020526000908152604090205481565b348015610a3d57600080fd5b506103fe610a4c366004613825565b6001600160a01b031660009081526018602052604090205490565b348015610a7357600080fd5b506105e5610a8236600461303c565b611806565b348015610a9357600080fd5b506103fe610aa236600461303c565b611878565b348015610ab357600080fd5b506103fe7f000000000000000000000000000000000000000000000000000000000000000081565b6103fe610ae9366004613842565b6118d8565b348015610afa57600080fd5b50610b03611940565b60405161040891906138b3565b348015610b1c57600080fd5b50610b30610b2b36600461303c565b611991565b60405161040891906138cd565b348015610b4957600080fd5b50610632610b58366004613825565b60166020526000908152604090205460ff1681565b348015610b7957600080fd5b5061073f611b0b565b348015610b8e57600080fd5b506103fe7f000000000000000000000000000000000000000000000000000000000000000081565b348015610bc257600080fd5b506103fe610bd1366004613825565b60146020526000908152604090205481565b348015610bef57600080fd5b506103fe611cd8565b348015610c0457600080fd5b506105b9611cea565b348015610c1957600080fd5b506103fe600b5481565b348015610c2f57600080fd5b5061047873dc652c746a8f85e18ce632d97c6118e8a52fa73881565b348015610c5757600080fd5b5061058c611de0565b348015610c6c57600080fd5b506105b9610c7b366004613934565b611e36565b348015610c8c57600080fd5b506105b9610c9b366004613825565b611fba565b348015610cac57600080fd5b50610632610cbb36600461303c565b600e6020526000908152604090205460ff1681565b348015610cdc57600080fd5b506105b9610ceb36600461365a565b61203f565b348015610cfc57600080fd5b506103fe60085481565b601060205260009081526040902080546001820180546001600160a01b03831693600160a01b90930460ff16929190610d3e90613975565b80601f0160208091040260200160405190810160405280929190818152602001828054610d6a90613975565b8015610db75780601f10610d8c57610100808354040283529160200191610db7565b820191906000526020600020905b815481529060010190602001808311610d9a57829003601f168201915b5050604080516020808201835260028801546001600160a01b031682528251600389018054606093810283018401865294820185815298999398939750909550935084928491840182828015610e3657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610e18575b50505050508152602001600182015481525050905085565b600d8181548110610e5e57600080fd5b600091825260209091200154905081565b60018054610e7c90613975565b80601f0160208091040260200160405190810160405280929190818152602001828054610ea890613975565b8015610ef55780601f10610eca57610100808354040283529160200191610ef5565b820191906000526020600020905b815481529060010190602001808311610ed857829003601f168201915b505050505081565b60128181548110610f0d57600080fd5b6000918252602090912001546001600160a01b0316905081565b6060600d805480602002602001604051908101604052809291908181526020018280548015610f7557602002820191906000526020600020905b815481526020019060010190808311610f61575b5050505050905090565b6001600160a01b03831660009081526016602052604090205460ff16611007577f0000000000000000000000000000000000000000000000000000000000000000600003610fcc57505050565b610fe283678ac7230489e8000084846000611099565b506001600160a01b0383166000908152601660205260409020805460ff191660011790555b505050565b6000600654611019611cd8565b61102391906139bf565b905090565b60606013805480602002602001604051908101604052809291908181526020018280548015610f7557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611062575050505050905090565b60008181548110610e5e57600080fd5b6040516bffffffffffffffffffffffff19606087901b166020820152603481018590526000908190605401604051602081830303815290604052805190602001209050600083611148576111438686808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f0000000000000000000000000000000000000000000000000000000000000000925086915061218e9050565b6111a8565b6111a88686808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f0000000000000000000000000000000000000000000000000000000000000000925086915061218e9050565b9050806111c85760405163452c2df160e11b815260040160405180910390fd5b506001979650505050505050565b6000868152600e6020526040812054339060ff1615611208576040516358f1119560e01b815260040160405180910390fd5b6112148187868661143c565b611220888289886121a4565b98975050505050505050565b60008160405160200161123f91906138cd565b60408051601f19818403018152919052805160209091012092915050565b6000600a54341461129357600a546040516380a7af9f60e01b815234600482015260248101919091526044015b60405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000156112e9573360009081526016602052604090205460ff166112e957604051631f22097560e01b815260040160405180910390fd5b6112f5610ceb836139d2565b6000611308611303846139d2565b6122eb565b9050611312612566565b92915050565b6113236001806139bf565b81565b6060806000611333611de0565b9050600081516001600160401b03811115611350576113506133be565b60405190808252806020026020018201604052801561139557816020015b604080518082019091526000808252602082015281526020019060019003908161136e5790505b50905060005b825181101561142257601960008483815181106113ba576113ba6139de565b6020026020010151815260200190815260200160002060000160405180604001604052908160008201548152602001600182015481525050828281518110611404576114046139de565b6020026020010181905250808061141a906139f4565b91505061139b565b5090939092509050565b60138181548110610f0d57600080fd5b6001600160a01b03841660009081526015602052604090205460ff1661149c5761146a848484846001611099565b506001600160a01b038416600090815260146020908152604080832086905560159091529020805460ff191660011790555b50505050565b6000816000036114c557604051630ec90a1760e31b815260040160405180910390fd5b6000805460408051602080840282018101909252828152919291908290849083018282801561151357602002820191906000526020600020905b8154815260200190600101908083116114ff575b5050505050905060006001905060005b8381101561158f5761155a838281518110611540576115406139de565b60200260200101516000908152601a602052604090205490565b1561157d5785820361156f5795945050505050565b81611579816139f4565b9250505b80611587816139f4565b915050611523565b50604051632cc2ab7360e11b815260040160405180910390fd5b6000838152600e6020526040812054339060ff16156115db576040516358f1119560e01b815260040160405180910390fd5b6001600160a01b03811660009081526015602052604090205460ff166116145760405163126ec6d160e31b815260040160405180910390fd5b611620858286866121a4565b95945050505050565b60008281526019602090815260408083206001600160a01b0385168452600301909152902080546001909101545b9250929050565b60606000805480602002602001604051908101604052809291908181526020018280548015610f755760200282019190600052602060002090815481526020019060010190808311610f61575050505050905090565b601a60205281600052604060002081815481106116d057600080fd5b90600052602060002001600091509150505481565b60028054610e7c90613975565b6000805461170290600190613a0d565b821115611722576040516365d6f35160e11b815260040160405180910390fd5b60005b6117308360016139bf565b81101561178d57600161176c6000838154811061174f5761174f6139de565b90600052602060002001546000908152601a602052604090205490565b111561177b5750600192915050565b80611785816139f4565b915050611725565b50600092915050565b60606012805480602002602001604051908101604052809291908181526020018280548015610f75576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311611062575050505050905090565b600c8181548110610e5e57600080fd5b600081815260196020908152604091829020600281018054845181850281018501909552808552606094929383018282801561186b57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161184d575b5050505050915050919050565b6000818152601a60205260408120546001146118a757604051633832a15560e21b815260040160405180910390fd5b6000828152601a6020526040812080549091906118c6576118c66139de565b90600052602060002001549050919050565b6000600a54341461190957600a546040516380a7af9f60e01b8152346004820152602481019190915260440161128a565b611914338484610f7f565b611920610ceb856139d2565b600061192e611303866139d2565b9050611938612566565b949350505050565b600f5460009060ff16156119545750600290565b42600454106119635750600090565b4261196c611cd8565b106119775750600390565b4261198061100c565b1061198b5750600190565b50600490565b611999612f51565b600082815260106020908152604091829020825160a08101845281546001600160a01b0381168252600160a01b900460ff1615159281019290925260018101805492939192918401916119eb90613975565b80601f0160208091040260200160405190810160405280929190818152602001828054611a1790613975565b8015611a645780601f10611a3957610100808354040283529160200191611a64565b820191906000526020600020905b815481529060010190602001808311611a4757829003601f168201915b5050509183525050604080516020818101835260028501546001600160a01b03168252808401919091528151600385018054606093810283018401855282850181815294909501949193909284928491840182828015611aed57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611acf575b50505050508152602001600182015481525050815250509050919050565b6060806000611b18611de0565b9050600081516001600160401b03811115611b3557611b356133be565b604051908082528060200260200182016040528015611b5e578160200160208202803683370190505b509050600082516001600160401b03811115611b7c57611b7c6133be565b604051908082528060200260200182016040528015611bc157816020015b6040805180820190915260008082526020820152815260200190600190039081611b9a5790505b5090506000805b8451811015611ccc57600e6000868381518110611be757611be76139de565b60209081029190910181015182528101919091526040016000205460ff16611cba57848181518110611c1b57611c1b6139de565b6020026020010151848381518110611c3557611c356139de565b60200260200101818152505060196000868381518110611c5757611c576139de565b6020026020010151815260200190815260200160002060000160405180604001604052908160008201548152602001600182015481525050838381518110611ca157611ca16139de565b6020908102919091010152611cb76001836139bf565b91505b80611cc4816139f4565b915050611bc8565b50919590945092505050565b600060055460045461102391906139bf565b6003546001600160a01b03163314801590611d1957503373dc652c746a8f85e18ce632d97c6118e8a52fa73814155b15611d37576040516301dbf46f60e71b815260040160405180910390fd5b6000611d41611940565b90506002816004811115611d5757611d5761389d565b03611d7557604051633c30acbf60e01b815260040160405180910390fd5b6004816004811115611d8957611d8961389d565b03611da7576040516307b9d0f760e01b815260040160405180910390fd5b600f805460ff191660011790556040517f4cd963a081760a54f571abc0f1db4dde31b4a07d8d6da3e844b8c6f47eeaaa4290600090a150565b6060600c805480602002602001604051908101604052809291908181526020018280548015610f755760200282019190600052602060002090815481526020019060010190808311610f61575050505050905090565b6003546001600160a01b03163314611e615760405163b8d4540960e01b815260040160405180910390fd5b6004611e6b611940565b6004811115611e7c57611e7c61389d565b03611e9a576040516331da1c8b60e11b815260040160405180910390fd5b60005b81811015611f7d576000838383818110611eb957611eb96139de565b602090810292909201356000818152600e9093526040909220549192505060ff16611f6a576000818152600e60205260408120805460ff19166001908117909155600d805491820181559091527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb501819055600954158015611f5b57507f00000000000000000000000000000000000000000000000000000000000000006001145b15611f6a57611f6a848461267b565b5080611f75816139f4565b915050611e9d565b507f75a75cf5c561892f4cc5b26c1b8e933849b42238c96dd073d080d1ae96c51416600c604051611fae9190613a20565b60405180910390a15050565b6003546001600160a01b03163314611fe557604051630f4cb1bd60e11b815260040160405180910390fd5b601b80546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f753a2cf8d360cff631674504210913e48247f8e56b3e6d2006c2103d4095999f9101611fae565b80516001600160a01b0316331461207d57805160405163fbbf4d7f60e01b81526001600160a01b03909116600482015233602482015260440161128a565b60005b61208b6001806139bf565b8110156121645760008160018111156120a6576120a661389d565b905060008160018111156120bc576120bc61389d565b036120c75750612152565b60018160018111156120db576120db61389d565b0361213557608083015151516000036121075760405163c3b2798b60e01b815260040160405180910390fd5b826080015160200151600003612130576040516392fb9a3560e01b815260040160405180910390fd5b612150565b8060405163d2277d4960e01b815260040161128a9190613a5b565b505b8061215c816139f4565b915050612080565b5080604001515160000361218b5760405163e182473360e01b815260040160405180910390fd5b50565b60008261219b85846126d8565b14949350505050565b600060016121b0611940565b60048111156121c1576121c161389d565b146121e8576121ce611940565b60405163049cab4960e51b815260040161128a91906138b3565b816000036122095760405163502e1c2960e01b815260040160405180910390fd5b61223b85858585601460008a6001600160a01b03166001600160a01b0316815260200190815260200160002054612725565b601380546001810182556000919091527f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a0900180546001600160a01b031916331790556040805186815260ff851660208201529081018390526001600160a01b038516907f2c9deb38f462962eadbd85a9d3a4120503ee091f1582eaaa10aa8c6797651d299060600160405180910390a25050506001600160a01b0316600090815260146020526040902054919050565b600060036122f7611940565b60048111156123085761230861389d565b1461232f57612315611940565b604051632889531360e01b815260040161128a91906138b3565b600754336000908152601160205260409020540361236657600754604051632bd6d93960e21b815260040161128a91815260200190565b600854600d54600c546123799190613a0d565b0361239d576008546040516302217f5360e51b815260040161128a91815260200190565b60006123a88361122c565b600081815260106020526040902054909150600160a01b900460ff16156123e55760405163baffc42360e01b81526004810182905260240161128a565b600c805460018181019092557fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c70182905560008281526010602090815260409182902086518154928801511515600160a01b026001600160a81b03199093166001600160a01b03909116179190911781559085015185928201906124699082613abd565b506060820151516002820180546001600160a01b0319166001600160a01b0390921691909117905560808201518051805160038401916124ae91839160200190612fc2565b50602091820151600191820155336000908152601190925260408220805491945092506124dc9084906139bf565b9091555050601280546001810182556000919091527fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec34440180546001600160a01b031916339081179091556040805183815260208101929092527fcd423cc1203c0af96b9b3d68d73b3064a69de2d14450bb7181c5e5df2132b358910160405180910390a192915050565b600a54156126795760006064600b5460646125819190613a0d565b61258b9034613b7c565b6125959190613b93565b90508015612609576125bb73dc652c746a8f85e18ce632d97c6118e8a52fa738826129aa565b6040805173dc652c746a8f85e18ce632d97c6118e8a52fa7388152602081018390527fdf20fd1e76bc69d672e4814fafb2c449bba3a5369d8359adf9e05e6fde87b056910160405180910390a15b60006126158234613a0d565b9050801561267657600354612633906001600160a01b0316826129aa565b600354604080516001600160a01b039092168252602082018390527fdf20fd1e76bc69d672e4814fafb2c449bba3a5369d8359adf9e05e6fde87b0569101611fae565b50505b565b60005b8181101561100757600083838381811061269a5761269a6139de565b60209081029290920135600081815260199093526040909220549192506126c390508282612ac3565b505080806126d0906139f4565b91505061267e565b600081815b845181101561271d57612709828683815181106126fc576126fc6139de565b6020026020010151612bf4565b915080612715816139f4565b9150506126dd565b509392505050565b60008581526019602090815260408083206001600160a01b03881684526018909252909120546127559083613a0d565b8311156127755760405163660fa07360e11b815260040160405180910390fd5b6001600160a01b03851660009081526003820160205260408120541580156127b857506001600160a01b0386166000908152600383016020526040902060010154155b905060ff8516612810578154849083906000906127d69084906139bf565b90915550506001600160a01b0386166000908152600383016020526040812080548692906128059084906139bf565b909155506128a19050565b60001960ff8616016128885760095460011461283f57604051639755958f60e01b815260040160405180910390fd5b8382600001600101600082825461285691906139bf565b90915550506001600160a01b0386166000908152600383016020526040812060010180548692906128059084906139bf565b604051638eed55d160e01b815260040160405180910390fd5b80156128d857600282018054600181018255600091825260209091200180546001600160a01b0319166001600160a01b0388161790555b6001600160a01b038616600090815260186020526040812080548692906129009084906139bf565b92505081905550836017600082825461291991906139bf565b909155505060095415801561294e57507f00000000000000000000000000000000000000000000000000000000000000006001145b156129a157815460006129618683613a0d565b90508015612973576129738982612ac3565b6000828152601a602090815260408220805460018101825590835291200189905561299e8183612c26565b50505b50505050505050565b804710156129fa5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161128a565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612a47576040519150601f19603f3d011682016040523d82523d6000602084013e612a4c565b606091505b50509050806110075760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161128a565b6000818152601a6020908152604080832080548251818502810185019093528083529192909190830182828015612b1957602002820191906000526020600020905b815481526020019060010190808311612b05575b5050505050905060005b815181101561149c5783828281518110612b3f57612b3f6139de565b602002602001015103612be2578160018351612b5b9190613a0d565b81518110612b6b57612b6b6139de565b6020026020010151601a60008581526020019081526020016000208281548110612b9757612b976139de565b9060005260206000200181905550601a6000848152602001908152602001600020805480612bc757612bc7613bb5565b6001900381819060005260206000200160009055905561149c565b80612bec816139f4565b915050612b23565b6000818310612c10576000828152602084905260409020612c1f565b60008381526020839052604090205b9392505050565b60008054604080516020808402820181019092528281529192919082908490830182828015612c7457602002820191906000526020600020905b815481526020019060010190808311612c60575b5050505050905081600003612cb8575050600080546001810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563015550565b80612cc4600184613a0d565b81518110612cd457612cd46139de565b6020026020010151831015612d45577f00000000000000000000000000000000000000000000000000000000000000008203612d105750505050565b5050600080546001810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563015550565b61149c848484846000805b83811015612dba57828181518110612d6a57612d6a6139de565b60200260200101518503612d7f57505061149c565b828181518110612d9157612d916139de565b6020026020010151851115612da857809150612dba565b80612db2816139f4565b915050612d50565b5060008086118015612dd857506000868152601a6020526040902054155b90506000818015612e01575086848481518110612df757612df76139de565b6020026020010151145b612f2857612e10600186613a0d565b8314612eb8576000612e238460016139bf565b90505b85811015612eb65784612e3a600183613a0d565b81518110612e4a57612e4a6139de565b602002602001015160008281548110612e6557612e656139de565b600091825260209091200155828015612e96575087858281518110612e8c57612e8c6139de565b6020026020010151145b15612ea45760019150612eb6565b80612eae816139f4565b915050612e26565b505b80158015612ee557507f000000000000000000000000000000000000000000000000000000000000000085105b15612f2857600084612ef8600188613a0d565b81518110612f0857612f086139de565b602090810291909101810151825460018101845560009384529190922001555b8560008481548110612f3c57612f3c6139de565b60009182526020909120015550505050505050565b6040518060a0016040528060006001600160a01b0316815260200160001515815260200160608152602001612f9b604051806020016040528060006001600160a01b031681525090565b8152602001612fbd604051806040016040528060608152602001600081525090565b905290565b828054828255906000526020600020908101928215613017579160200282015b8281111561301757825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612fe2565b50613023929150613027565b5090565b5b808211156130235760008155600101613028565b60006020828403121561304e57600080fd5b5035919050565b6000815180845260005b8181101561307b5760208185018101518683018201520161305f565b506000602082860101526020601f19601f83011685010191505092915050565b805160408084528151908401819052600091602091908201906060860190845b818110156130e05783516001600160a01b0316835292840192918401916001016130bb565b505093820151949091019390935250919050565b600060018060a01b038088168352861515602084015260a0604084015261311e60a0840187613055565b8186511660608501528381036080850152613139818661309b565b9998505050505050505050565b602081526000612c1f6020830184613055565b815181526020808301519082015260408101611312565b600081518084526020808501945080840160005b838110156131a057815187529582019590820190600101613184565b509495945050505050565b602081526000612c1f6020830184613170565b6001600160a01b038116811461218b57600080fd5b60008083601f8401126131e557600080fd5b5081356001600160401b038111156131fc57600080fd5b6020830191508360208260051b850101111561165757600080fd5b60008060006040848603121561322c57600080fd5b8335613237816131be565b925060208401356001600160401b0381111561325257600080fd5b61325e868287016131d3565b9497909650939450505050565b6020808252825182820181905260009190848201906040850190845b818110156132ac5783516001600160a01b031683529284019291840191600101613287565b50909695505050505050565b803580151581146132c857600080fd5b919050565b6000806000806000608086880312156132e557600080fd5b85356132f0816131be565b94506020860135935060408601356001600160401b0381111561331257600080fd5b61331e888289016131d3565b90945092506133319050606087016132b8565b90509295509295909350565b803560ff811681146132c857600080fd5b60008060008060008060a0878903121561336757600080fd5b863595506133776020880161333d565b9450604087013593506060870135925060808701356001600160401b038111156133a057600080fd5b6133ac89828a016131d3565b979a9699509497509295939492505050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156133f6576133f66133be565b60405290565b60405160a081016001600160401b03811182821017156133f6576133f66133be565b604051601f8201601f191681016001600160401b0381118282101715613446576134466133be565b604052919050565b60006020828403121561346057600080fd5b604051602081018181106001600160401b0382111715613482576134826133be565b6040529050808235613493816131be565b905292915050565b6000604082840312156134ad57600080fd5b6134b56133d4565b905081356001600160401b03808211156134ce57600080fd5b818401915084601f8301126134e257600080fd5b81356020828211156134f6576134f66133be565b8160051b925061350781840161341e565b828152928401810192818101908885111561352157600080fd5b948201945b8486101561354b578535935061353b846131be565b8382529482019490820190613526565b808752505080860135818601525050505092915050565b600060a0828403121561357457600080fd5b61357c6133fc565b90508135613589816131be565b815260206135988382016132b8565b8183015260408301356001600160401b03808211156135b657600080fd5b818501915085601f8301126135ca57600080fd5b8135818111156135dc576135dc6133be565b6135ee601f8201601f1916850161341e565b818152878583860101111561360257600080fd5b818585018683013760008583830101528060408701525050613627866060870161344e565b6060850152608085013592508083111561364057600080fd5b505061364e8482850161349b565b60808301525092915050565b60006020828403121561366c57600080fd5b81356001600160401b0381111561368257600080fd5b61193884828501613562565b600060a082840312156136a057600080fd5b50919050565b6000602082840312156136b857600080fd5b81356001600160401b038111156136ce57600080fd5b6119388482850161368e565b600060408083526136ed81840186613170565b83810360208581019190915285518083528682019282019060005b818110156137355761372583865180518252602090810151910152565b9383019391850191600101613708565b509098975050505050505050565b6000806000806060858703121561375957600080fd5b8435613764816131be565b93506020850135925060408501356001600160401b0381111561378657600080fd5b613792878288016131d3565b95989497509550505050565b6000806000606084860312156137b357600080fd5b833592506137c36020850161333d565b9150604084013590509250925092565b600080604083850312156137e657600080fd5b8235915060208301356137f8816131be565b809150509250929050565b6000806040838503121561381657600080fd5b50508035926020909101359150565b60006020828403121561383757600080fd5b8135612c1f816131be565b60008060006040848603121561385757600080fd5b83356001600160401b038082111561386e57600080fd5b61387a8783880161368e565b9450602086013591508082111561389057600080fd5b5061325e868287016131d3565b634e487b7160e01b600052602160045260246000fd5b60208101600583106138c7576138c761389d565b91905290565b60208152600060018060a01b03808451166020840152602084015115156040840152604084015160a0606085015261390860c0850182613055565b90508160608601515116608085015260808501519150601f198482030160a0850152611620818361309b565b6000806020838503121561394757600080fd5b82356001600160401b0381111561395d57600080fd5b613969858286016131d3565b90969095509350505050565b600181811c9082168061398957607f821691505b6020821081036136a057634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115611312576113126139a9565b60006113123683613562565b634e487b7160e01b600052603260045260246000fd5b600060018201613a0657613a066139a9565b5060010190565b81810381811115611312576113126139a9565b6020808252825482820181905260008481528281209092916040850190845b818110156132ac57835483526001938401939285019201613a3f565b60208101600283106138c7576138c761389d565b601f82111561100757600081815260208120601f850160051c81016020861015613a965750805b601f850160051c820191505b81811015613ab557828155600101613aa2565b505050505050565b81516001600160401b03811115613ad657613ad66133be565b613aea81613ae48454613975565b84613a6f565b602080601f831160018114613b1f5760008415613b075750858301515b600019600386901b1c1916600185901b178555613ab5565b600085815260208120601f198616915b82811015613b4e57888601518255948401946001909101908401613b2f565b5085821015613b6c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8082028115828204841417611312576113126139a9565b600082613bb057634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603160045260246000fdfea26469706673582212205ed47a416a56fdba89cd48046a445ef64a5f4381ffde15c0c0ab0c9cf928ab5564736f6c63430008130033",
    "sourceMapi;:::-;;:::i;:::-;;;;;;;;;;;:::i;1812:27::-;;;;;;;;;;;;;;;;1621:22;;;;;;;;;;-1:-1:-1;1621:22:29;;;;-1:-1:-1;;;;;1621:22:29;;;;;;-1:-1:-1;;;;;2444:32:37;;;2426:51;;2414:2;2399:18;1621:22:29;2280:203:37;1809:34:33;;;;;;;;;;;;;;;2318:35:29;;;;;;;;;;-1:-1:-1;2318:35:29;;;;;:::i;:::-;;:::i;1543:18::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;740:60:30:-;;;;;;;;;;-1:-1:-1;740:60:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2550:32:29:-;;;;;;;;;;-1:-1:-1;2550:32:29;;;;;:::i;:::-;;:::i;6253:117::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;7689:469::-;;;;;;;;;;-1:-1:-1;7689:469:29;;;;;:::i;:::-;;:::i;:::-;;6713:107;;;;;;;;;;;;;:::i;6064:125::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1987:28:33:-;;;;;;;;;;-1:-1:-1;1987:28:33;;;;;:::i;:::-;;:::i;1436:539:32:-;;;;;;;;;;-1:-1:-1;1436:539:32;;;;;:::i;:::-;;:::i;:::-;;;6629:14:37;;6622:22;6604:41;;6592:2;6577:18;1436:539:32;6464:187:37;1373:73:29;;;;;;;;;;;;1426:20;1373:73;;1728:39:33;;;;;;;;;;;;;;;1732:26:29;;;;;;;;;;;;;;;;2414:20;;;;;;;;;;-1:-1:-1;2414:20:29;;;;;;;;14544:397;;;;;;;;;;-1:-1:-1;14544:397:29;;;;;:::i;:::-;;:::i;5030:146::-;;;;;;;;;;-1:-1:-1;5030:146:29;;;;;:::i;:::-;;:::i;10614:625::-;;;;;;:::i;:::-;;:::i;1293:74::-;;;;;;;;;;;;;:::i;2715:550:30:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;2588:39:29:-;;;;;;;;;;-1:-1:-1;2588:39:29;;;;;:::i;:::-;;:::i;14107:370::-;;;;;;;;;;-1:-1:-1;14107:370:29;;;;;:::i;:::-;;:::i;1210:294:30:-;;;;;;;;;;-1:-1:-1;1210:294:30;;;;;:::i;:::-;1274:16;1360:32;;;:20;:32;;;;;1410:40;;1452:44;;;;;1410:40;;1210:294;;;;;13981:25:37;;;14037:2;14022:18;;14015:34;;;;13954:18;1210:294:30;13807:248:37;4940:84:29;;;;;;;;;;-1:-1:-1;5005:12:29;;;;;;;;;;;;-1:-1:-1;;;5005:12:29;;;;4940:84;;5437:1027:30;;;;;;;;;;-1:-1:-1;5437:1027:30;;;;;:::i;:::-;;:::i;2126:32:29:-;;;;;;;;;;;;;;;;15043:378;;;;;;;;;;-1:-1:-1;15043:378:29;;;;;:::i;:::-;;:::i;1607:408:30:-;;;;;;;;;;-1:-1:-1;1607:408:30;;;;;:::i;:::-;;:::i;2209:28:29:-;;;;;;;;;;;;;;;;2504:117:33;;;;;;;;;;;;;:::i;807:58:30:-;;;;;;;;;;-1:-1:-1;807:58:30;;;;;:::i;:::-;;:::i;2495:49:29:-;;;;;;;;;;-1:-1:-1;2495:49:29;;;;;:::i;:::-;;;;;;;;;;;;;;366:42:31;;;;;;;;;;-1:-1:-1;366:42:31;;;;-1:-1:-1;;;;;366:42:31;;;1595:20:29;;;;;;;;;;;;;:::i;600:29:30:-;;;;;;;;;;;;;;;;1887:44:29;;;;;;;;;;;;;;;;6576:523:30;;;;;;;;;;-1:-1:-1;6576:523:30;;;;;:::i;:::-;;:::i;2692:57:29:-;;;;;;;;;;-1:-1:-1;2692:57:29;;;;;:::i;:::-;;;;;;;;;;;;;;;;5881:111;;;;;;;;;;;;;:::i;2284:28::-;;;;;;;;;;-1:-1:-1;2284:28:29;;;;;:::i;:::-;;:::i;4482:170:30:-;;;;;;;;;;-1:-1:-1;4482:170:30;;;;;:::i;:::-;4575:13;4607:31;;;:21;:31;;;;;:38;;4482:170;673:61;;;;;;;;;;-1:-1:-1;673:61:30;;;;;:::i;:::-;;;;;;;;;;;;;;2451:171;;;;;;;;;;-1:-1:-1;2451:171:30;;;;;:::i;:::-;-1:-1:-1;;;;;2576:39:30;2531:26;2576:39;;;:26;:39;;;;;;;2451:171;2116:224;;;;;;;;;;-1:-1:-1;2116:224:30;;;;;:::i;:::-;;:::i;4968:268::-;;;;;;;;;;-1:-1:-1;4968:268:30;;;;;:::i;:::-;;:::i;377:45:32:-;;;;;;;;;;;;;;;10080:419:29;;;;;;:::i;:::-;;:::i;5182:477::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;6878:128::-;;;;;;;;;;-1:-1:-1;6878:128:29;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2755:56::-;;;;;;;;;;-1:-1:-1;2755:56:29;;;;;:::i;:::-;;;;;;;;;;;;;;;;3390:929:30;;;;;;;;;;;;;:::i;428:41:32:-;;;;;;;;;;;;;;;2634:52:29;;;;;;;;;;-1:-1:-1;2634:52:29;;;;;:::i;:::-;;;;;;;;;;;;;;6531:101;;;;;;;;;;;;;:::i;13580:409::-;;;;;;;;;;;;;:::i;2243:34::-;;;;;;;;;;;;;;;;1452:84;;;;;;;;;;;;1494:42;1452:84;;5715:103;;;;;;;;;;;;;:::i;12242:1226::-;;;;;;;;;;-1:-1:-1;12242:1226:29;;;;;:::i;:::-;;:::i;576:379:31:-;;;;;;;;;;-1:-1:-1;576:379:31;;;;;:::i;:::-;;:::i;2359:49:29:-;;;;;;;;;;-1:-1:-1;2359:49:29;;;;;:::i;:::-;;;;;;;;;;;;;;;;8252:889;;;;;;;;;;-1:-1:-1;8252:889:29;;;;;:::i;:::-;;:::i;2037:31::-;;;;;;;;;;;;;;;;2440:49;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2440:49:29;;;-1:-1:-1;;;2440:49:29;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2440:49:29;;;;;;;;;;;;;-1:-1:-1;;;;;2440:49:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2440:49:29;;-1:-1:-1;2440:49:29;-1:-1:-1;2440:49:29;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2440:49:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2318:35::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2318:35:29;:::o;1543:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2550:32::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2550:32:29;;-1:-1:-1;2550:32:29;:::o;6253:117::-;6310:16;6345:18;6338:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6253:117;:::o;7689:469::-;-1:-1:-1;;;;;7778:33:29;;;;;;:24;:33;;;;;;;;7773:379;;7831:20;7855:1;7831:25;7827:141;;7689:469;;;:::o;7827:141::-;7981:61;7992:7;1426:20;8029:5;;8036;7981:10;:61::i;:::-;-1:-1:-1;;;;;;8101:33:29;;;;;;:24;:33;;;;;:40;;-1:-1:-1;;8101:40:29;8137:4;8101:40;;;7773:379;7689:469;;;:::o;6713:107::-;6761:7;6801:12;;6787:11;:9;:11::i;:::-;:26;;;;:::i;:::-;6780:33;;6713:107;:::o;6064:125::-;6125:16;6160:22;6153:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6153:29:29;;;;;;;;;;;;;;;;;;;;;;6064:125;:::o;1987:28:33:-;;;;;;;;;;;;1436:539:32;1691:40;;-1:-1:-1;;19084:2:37;19080:15;;;19076:53;1691:40:32;;;19064:66:37;19146:12;;;19139:28;;;1580:13:32;;;;19183:12:37;;1691:40:32;;;;;;;;;;;;1681:51;;;;;;1666:66;;1742:16;1761:6;:138;;1846:53;1865:5;;1846:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1872:20:32;;-1:-1:-1;1894:4:32;;-1:-1:-1;1846:18:32;;-1:-1:-1;1846:53:32:i;:::-;1761:138;;;1782:49;1801:5;;1782:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1808:16:32;;-1:-1:-1;1826:4:32;;-1:-1:-1;1782:18:32;;-1:-1:-1;1782:49:32:i;:::-;1742:157;;1914:11;1909:38;;1934:13;;-1:-1:-1;;;1934:13:32;;;;;;;;;;;1909:38;-1:-1:-1;1964:4:32;;1436:539;-1:-1:-1;;;;;;;1436:539:32:o;14544:397:29:-;14693:7;14756:29;;;:17;:29;;;;;;14732:10;;14756:29;;14752:71;;;14794:29;;-1:-1:-1;;;14794:29:29;;;;;;;;;;;14752:71;14833:37;14845:5;14852:10;14864:5;;14833:11;:37::i;:::-;14887:47;14897:10;14909:5;14916:7;14925:8;14887:9;:47::i;:::-;14880:54;14544:397;-1:-1:-1;;;;;;;;14544:397:29:o;5030:146::-;5103:7;5158:8;5147:20;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5147:20:29;;;;;;;;;5137:31;;5147:20;5137:31;;;;;5030:146;-1:-1:-1;;5030:146:29:o;10614:625::-;10699:7;10735:13;;10722:9;:26;10718:91;;10795:13;;10757:52;;-1:-1:-1;;;10757:52:29;;10784:9;10757:52;;;13981:25:37;14022:18;;;14015:34;;;;13954:18;;10757:52:29;;;;;;;;10718:91;10824:20;:25;10820:254;;11015:10;10990:36;;;;:24;:36;;;;;;;;10985:78;;11035:28;;-1:-1:-1;;;11035:28:29;;;;;;;;;;;10985:78;11083:30;;11104:8;11083:30;:::i;:::-;11123:18;11144:23;;11158:8;11144:23;:::i;:::-;:13;:23::i;:::-;11123:44;;11178:26;:24;:26::i;:::-;11222:10;10614:625;-1:-1:-1;;10614:625:29:o;1293:74::-;1335:32;1343:19;;1335:32;:::i;:::-;1293:74;:::o;2715:550:30:-;2793:34;2829:49;2894:28;2925:19;:17;:19::i;:::-;2894:50;;2954:43;3017:11;:18;-1:-1:-1;;;;;3000:36:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;3000:36:30;;;;;;;;;;;;;;;;2954:82;;3051:9;3046:158;3070:11;:18;3066:1;:22;3046:158;;;3138:20;:36;3159:11;3171:1;3159:14;;;;;;;;:::i;:::-;;;;;;;3138:36;;;;;;;;;;;:55;;3109:84;;;;;;;;;;;;;;;;;;;;;;;;;:23;3133:1;3109:26;;;;;;;;:::i;:::-;;;;;;:84;;;;3090:3;;;;;:::i;:::-;;;;3046:158;;;-1:-1:-1;3221:11:30;;3234:23;;-1:-1:-1;2715:550:30;-1:-1:-1;2715:550:30:o;2588:39:29:-;;;;;;;;;;;;14107:370;-1:-1:-1;;;;;14213:34:29;;;;;;:25;:34;;;;;;;;14208:263;;14263:44;14274:7;14283:10;14295:5;;14302:4;14263:10;:44::i;:::-;-1:-1:-1;;;;;;14366:26:29;;;;;;:17;:26;;;;;;;;:39;;;14419:25;:34;;;;;:41;;-1:-1:-1;;14419:41:29;14456:4;14419:41;;;14208:263;14107:370;;;;:::o;5437:1027:30:-;5494:17;5527:4;5535:1;5527:9;5523:40;;5545:18;;-1:-1:-1;;;5545:18:30;;;;;;;;;;;5523:40;5574:25;5602:18;;5674:48;;;;;;;;;;;;;;;;;5602:18;;5574:25;5674:48;5574:25;;5602:18;;5674:48;;5574:25;5602:18;5674:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5777:15;5795:1;5777:19;;5811:13;5806:536;5838:17;5830:5;:25;5806:536;;;6036:61;6072:17;6090:5;6072:24;;;;;;;;:::i;:::-;;;;;;;4575:13;4607:31;;;:21;:31;;;;;:38;;4482:170;6036:61;6032:113;6122:8;6032:113;6258:4;6247:7;:15;6243:66;;6289:5;5437:1027;-1:-1:-1;;;;;5437:1027:30:o;6243:66::-;6322:9;;;;:::i;:::-;;;;5806:536;5857:7;;;;:::i;:::-;;;;5806:536;;;;6433:24;;-1:-1:-1;;;6433:24:30;;;;;;;;;;;15043:378:29;15142:7;15201:29;;;:17;:29;;;;;;15177:10;;15201:29;;15197:71;;;15239:29;;-1:-1:-1;;;15239:29:29;;;;;;;;;;;15197:71;-1:-1:-1;;;;;15283:32:29;;;;;;:25;:32;;;;;;;;15278:72;;15324:26;;-1:-1:-1;;;15324:26:29;;;;;;;;;;;15278:72;15367:47;15377:10;15389:5;15396:7;15405:8;15367:9;:47::i;:::-;15360:54;15043:378;-1:-1:-1;;;;;15043:378:29:o;1607:408:30:-;1723:16;1813:32;;;:20;:32;;;;;;;;-1:-1:-1;;;;;1876:43:30;;;;:30;;:43;;;;;:52;;1942:56;;;;;1607:408;;;;;;:::o;2504:117:33:-;2551:33;2603:11;2596:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2504:117;:::o;807:58:30:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1595:20:29:-;;;;;;;:::i;6576:523:30:-;6639:22;6683:18;;:22;;6704:1;;6683:22;:::i;:::-;6677:3;:28;6673:205;;;6841:26;;-1:-1:-1;;;6841:26:30;;;;;;;;;;;6673:205;6893:13;6888:183;6920:7;:3;6926:1;6920:7;:::i;:::-;6912:5;:15;6888:183;;;7014:1;6956:55;6992:11;7004:5;6992:18;;;;;;;;:::i;:::-;;;;;;;;;4575:13;4607:31;;;:21;:31;;;;;:38;;4482:170;6956:55;:59;6952:109;;;-1:-1:-1;7042:4:30;;6576:523;-1:-1:-1;;6576:523:30:o;6952:109::-;6929:7;;;;:::i;:::-;;;;6888:183;;;-1:-1:-1;7087:5:30;;6576:523;-1:-1:-1;;6576:523:30:o;5881:111:29:-;5935:16;5970:15;5963:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5963:22:29;;;;;;;;;;;;;;;;;;;;;;5881:111;:::o;2284:28::-;;;;;;;;;;;;2116:224:30;2221:33;2257:32;;;:20;:32;;;;;;;;;2306:27;;;2299:34;;;;;;;;;;;;;;;;;2193:16;;2257:32;;2299:34;;2306:27;2299:34;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2299:34:30;;;;;;;;;;;;;;;;;;;;;;;;2116:224;;;:::o;4968:268::-;5054:18;5088:31;;;:21;:31;;;;;:38;5130:1;5088:43;5084:94;;5140:38;;-1:-1:-1;;;5140:38:30;;;;;;;;;;;5084:94;5195:31;;;;:21;:31;;;;;:34;;:31;;;:34;;;;:::i;:::-;;;;;;;;;5188:41;;4968:268;;;:::o;10080:419:29:-;10179:7;10215:13;;10202:9;:26;10198:91;;10275:13;;10237:52;;-1:-1:-1;;;10237:52:29;;10264:9;10237:52;;;13981:25:37;14022:18;;;14015:34;;;;13954:18;;10237:52:29;13807:248:37;10198:91:29;10300:33;10315:10;10327:5;;10300:14;:33::i;:::-;10343:30;;10364:8;10343:30;:::i;:::-;10383:18;10404:23;;10418:8;10404:23;:::i;:::-;10383:44;;10438:26;:24;:26::i;:::-;10482:10;10080:419;-1:-1:-1;;;;10080:419:29:o;5182:477::-;5248:8;;5220:12;;5248:8;;5244:67;;;-1:-1:-1;5279:21:29;;5182:477::o;5244:67::-;5341:15;5325:12;;:31;5321:92;;-1:-1:-1;5379:23:29;;5182:477::o;5321:92::-;5442:15;5427:11;:9;:11::i;:::-;:30;5423:87;;-1:-1:-1;5480:19:29;;5182:477::o;5423:87::-;5545:15;5524:17;:15;:17::i;:::-;:36;5520:93;;-1:-1:-1;5583:19:29;;5182:477::o;5520:93::-;-1:-1:-1;5630:22:29;;5182:477::o;6878:128::-;6940:19;;:::i;:::-;6978:21;;;;:9;:21;;;;;;;;;6971:28;;;;;;;;;-1:-1:-1;;;;;6971:28:29;;;;-1:-1:-1;;;6971:28:29;;;;;;;;;;;;;;;;;;;;6978:21;;6971:28;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6971:28:29;;;-1:-1:-1;;6971:28:29;;;;;;;;;;;;;-1:-1:-1;;;;;6971:28:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6971:28:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6878:128;;;:::o;3390:929:30:-;3482:34;3518:49;3583:28;3614:19;:17;:19::i;:::-;3583:50;;3643:42;3702:11;:18;-1:-1:-1;;;;;3688:33:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3688:33:30;;3643:78;;3731:43;3794:11;:18;-1:-1:-1;;;;;3777:36:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;3777:36:30;;;;;;;;;;;;;;;;3731:82;;3824:29;3872:9;3867:377;3891:11;:18;3887:1;:22;3867:377;;;3935:17;:33;3953:11;3965:1;3953:14;;;;;;;;:::i;:::-;;;;;;;;;;;;3935:33;;;;;;;;;;-1:-1:-1;3935:33:30;;;;3930:304;;4039:11;4051:1;4039:14;;;;;;;;:::i;:::-;;;;;;;3988:25;4014:21;3988:48;;;;;;;;:::i;:::-;;;;;;:65;;;;;4120:20;:36;4141:11;4153:1;4141:14;;;;;;;;:::i;:::-;;;;;;;4120:36;;;;;;;;;;;:55;;4071:104;;;;;;;;;;;;;;;;;;;;;;;;;:23;4095:21;4071:46;;;;;;;;:::i;:::-;;;;;;;;;;:104;4193:26;4218:1;4193:26;;:::i;:::-;;;3930:304;3911:3;;;;:::i;:::-;;;;3867:377;;;-1:-1:-1;4261:25:30;;4288:23;;-1:-1:-1;3390:929:30;-1:-1:-1;;;3390:929:30:o;6531:101:29:-;6573:7;6614:11;;6599:12;;:26;;;;:::i;13580:409::-;13635:7;;-1:-1:-1;;;;;13635:7:29;13621:10;:21;;;;13620:58;;-1:-1:-1;13648:10:29;1494:42;13648:29;;13620:58;13615:103;;;13688:30;;-1:-1:-1;;;13688:30:29;;;;;;;;;;;13615:103;13729:19;13751:7;:5;:7::i;:::-;13729:29;-1:-1:-1;13783:21:29;13773:6;:31;;;;;;;;:::i;:::-;;13769:69;;13813:25;;-1:-1:-1;;;13813:25:29;;;;;;;;;;;13769:69;13862:22;13852:6;:32;;;;;;;;:::i;:::-;;13848:76;;13893:31;;-1:-1:-1;;;13893:31:29;;;;;;;;;;;13848:76;13934:8;:15;;-1:-1:-1;;13934:15:29;13945:4;13934:15;;;13965:17;;;;13934:8;;13965:17;13605:384;13580:409::o;5715:103::-;5765:16;5800:11;5793:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5715:103;:::o;12242:1226::-;12342:7;;-1:-1:-1;;;;;12342:7:29;12328:10;:21;12324:56;;12358:22;;-1:-1:-1;;;12358:22:29;;;;;;;;;;;12324:56;12405:22;12394:7;:5;:7::i;:::-;:33;;;;;;;;:::i;:::-;;12390:73;;12436:27;;-1:-1:-1;;;12436:27:29;;;;;;;;;;;12390:73;12479:13;12474:943;12498:34;;;12474:943;;;12557:25;12585:19;;12605:5;12585:26;;;;;;;:::i;:::-;;;;;;;;;;12630:36;;;;:17;:36;;;;;;;;12585:26;;-1:-1:-1;;12630:36:29;;12625:782;;12750:36;;;;:17;:36;;;;;:43;;-1:-1:-1;;12750:43:29;12789:4;12750:43;;;;;;13027:18;:42;;;;;;;;;;;;;;;13182:17;;:22;:45;;;;;13208:14;13226:1;13208:19;13182:45;13178:215;;;13320:54;13354:19;;13320:33;:54::i;:::-;-1:-1:-1;12534:7:29;;;;:::i;:::-;;;;12474:943;;;;13432:29;13449:11;13432:29;;;;;;:::i;:::-;;;;;;;;12242:1226;;:::o;576:379:31:-;683:7;;-1:-1:-1;;;;;683:7:31;669:10;:21;665:66;;699:32;;-1:-1:-1;;;699:32:31;;;;;;;;;;;665:66;782:21;;;-1:-1:-1;;;;;813:46:31;;;-1:-1:-1;;;;;;813:46:31;;;;;;;874:74;;;782:21;;;;20897:34:37;;;20962:2;20947:18;;20940:43;;;;874:74:31;;20832:18:37;874:74:31;20623:366:37;8252:889:29;8338:15;;-1:-1:-1;;;;;8338:29:29;8357:10;8338:29;8334:88;;8394:15;;8376:46;;-1:-1:-1;;;8376:46:29;;-1:-1:-1;;;;;20915:15:37;;;8376:46:29;;;20897:34:37;8411:10:29;20947:18:37;;;20940:43;20832:18;;8376:46:29;20623:366:37;8334:88:29;8437:13;8432:615;1335:32;1343:19;;1335:32;:::i;:::-;8456:5;:23;8432:615;;;8504:25;8542:5;8532:16;;;;;;;;:::i;:::-;8504:44;-1:-1:-1;8585:16:29;8566:15;:35;;;;;;;;:::i;:::-;;8562:475;;8621:8;;;8562:475;8730:14;8711:15;:33;;;;;;;;:::i;:::-;;8707:330;;8768:21;;;;:29;:36;:29;:41;8764:81;;8818:27;;-1:-1:-1;;;8818:27:29;;;;;;;;;;;8764:81;8867:8;:21;;;:31;;;8902:1;8867:36;8863:78;;8912:29;;-1:-1:-1;;;8912:29:29;;;;;;;;;;;8863:78;8707:330;;;9006:15;8987:35;;-1:-1:-1;;;8987:35:29;;;;;;;;:::i;8707:330::-;8490:557;8432:615;8481:7;;;;:::i;:::-;;;;8432:615;;;;9066:8;:20;;;9060:34;9098:1;9060:39;9056:78;;9108:26;;-1:-1:-1;;;9108:26:29;;;;;;;;;;;9056:78;8252:889;:::o;1156:154:26:-;1247:4;1299;1270:25;1283:5;1290:4;1270:12;:25::i;:::-;:33;;1156:154;-1:-1:-1;;;;1156:154:26:o;15702:539:29:-;15825:7;15863:19;15852:7;:5;:7::i;:::-;:30;;;;;;;;:::i;:::-;;15848:77;;15917:7;:5;:7::i;:::-;15891:34;;-1:-1:-1;;;15891:34:29;;;;;;;;:::i;15848:77::-;15939:8;15951:1;15939:13;15935:52;;15961:26;;-1:-1:-1;;;15961:26:29;;;;;;;;;;;15935:52;15998:78;16009:10;16021:7;16030;16039:8;16049:17;:26;16067:7;-1:-1:-1;;;;;16049:26:29;-1:-1:-1;;;;;16049:26:29;;;;;;;;;;;;;15998:10;:78::i;:::-;16087:22;:39;;;;;;;-1:-1:-1;16087:39:29;;;;;;;;-1:-1:-1;;;;;;16087:39:29;16115:10;16087:39;;;16142:48;;;21752:25:37;;;21825:4;21813:17;;21808:2;21793:18;;21786:45;21847:18;;;21840:34;;;-1:-1:-1;;;;;16142:48:29;;;;;21740:2:37;21725:18;16142:48:29;;;;;;;-1:-1:-1;;;;;;;;16208:26:29;;;;;:17;:26;;;;;;;15702:539;-1:-1:-1;15702:539:29:o;11245:887::-;11316:7;11350:19;11339:7;:5;:7::i;:::-;:30;;;;;;;;:::i;:::-;;11335:80;;11407:7;:5;:7::i;:::-;11378:37;;-1:-1:-1;;;11378:37:29;;;;;;;;:::i;11335:80::-;11459:29;;11444:10;11429:26;;;;:14;:26;;;;;;:59;11425:156;;11540:29;;11511:59;;-1:-1:-1;;;11511:59:29;;;;;;160:25:37;;148:2;133:18;;14:177;11425:156:29;11646:16;;11616:18;:25;11595:11;:18;:46;;11616:25;11595:46;:::i;:::-;11594:68;11590:153;;11715:16;;11685:47;;-1:-1:-1;;;11685:47:29;;;;;;160:25:37;;148:2;133:18;;14:177;11590:153:29;11753:18;11774:22;11787:8;11774:12;:22::i;:::-;11810:21;;;;:9;:21;;;;;:28;:21;;-1:-1:-1;;;;11810:28:29;;;;11806:72;;;11847:31;;-1:-1:-1;;;11847:31:29;;;;;160:25:37;;;133:18;;11847:31:29;14:177:37;11806:72:29;11889:11;:28;;;;;;;;;;;;;;-1:-1:-1;11927:21:29;;;:9;11889:28;11927:21;;;;;;;;:32;;;;;;;;;;-1:-1:-1;;;11927:32:29;-1:-1:-1;;;;;;11927:32:29;;;-1:-1:-1;;;;;11927:32:29;;;;;;;;;;;;;;11951:8;;11927:32;;;;;;;:::i;:::-;-1:-1:-1;11927:32:29;;;;;;;;;;-1:-1:-1;;;;;;11927:32:29;-1:-1:-1;;;;;11927:32:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11927:32:29;;;;;;;;;;11984:10;11969:26;;;;:14;:26;;;;;;:31;;11927:32;;-1:-1:-1;11969:26:29;-1:-1:-1;11969:31:29;;11927:32;;11969:31;:::i;:::-;;;;-1:-1:-1;;12010:15:29;:32;;;;;;;-1:-1:-1;12010:32:29;;;;;;;;-1:-1:-1;;;;;;12010:32:29;12031:10;12010:32;;;;;;12058:39;;;24148:25:37;;;24204:2;24189:18;;24182:60;;;;12058:39:29;;24121:18:37;12058:39:29;;;;;;;12115:10;11245:887;-1:-1:-1;;11245:887:29:o;9262:761::-;9320:13;;:17;9316:701;;9417:23;9487:3;9463:19;;9457:3;:25;;;;:::i;:::-;9444:39;;:9;:39;:::i;:::-;9443:47;;;;:::i;:::-;9417:73;-1:-1:-1;9508:19:29;;9504:190;;9547:60;1494:42;9591:15;9547:17;:60::i;:::-;9630:49;;;1494:42;24822:51:37;;24904:2;24889:18;;24882:34;;;9630:49:29;;24795:18:37;9630:49:29;;;;;;;9504:190;9708:24;9735:27;9747:15;9735:9;:27;:::i;:::-;9708:54;-1:-1:-1;9780:20:29;;9776:231;;9846:7;;9820:53;;-1:-1:-1;;;;;9846:7:29;9856:16;9820:17;:53::i;:::-;9966:7;;9950:42;;;-1:-1:-1;;;;;9966:7:29;;;24822:51:37;;24904:2;24889:18;;24882:34;;;9950:42:29;;24795:18:37;9950:42:29;24648:274:37;9776:231:29;9339:678;;9316:701;9262:761::o;8197:574:30:-;8305:9;8300:465;8320:22;;;8300:465;;;8363:25;8391:11;;8403:1;8391:14;;;;;;;:::i;:::-;;;;;;;;;;8419:32;8454:39;;;:20;:39;;;;;;;:67;8391:14;;-1:-1:-1;8681:73:30;;-1:-1:-1;8391:14:30;8454:67;8681:28;:73::i;:::-;8349:416;;8344:3;;;;;:::i;:::-;;;;8300:465;;1934:290:26;2017:7;2059:4;2017:7;2073:116;2097:5;:12;2093:1;:16;2073:116;;;2145:33;2155:12;2169:5;2175:1;2169:8;;;;;;;;:::i;:::-;;;;;;;2145:9;:33::i;:::-;2130:48;-1:-1:-1;2111:3:26;;;;:::i;:::-;;;;2073:116;;;-1:-1:-1;2205:12:26;1934:290;-1:-1:-1;;;1934:290:26:o;8911:2076:30:-;9069:33;9105:32;;;:20;:32;;;;;;;;-1:-1:-1;;;;;9177:35:30;;;;:26;:35;;;;;;;9164:48;;:10;:48;:::i;:::-;9152:8;:61;9148:94;;;9222:20;;-1:-1:-1;;;9222:20:30;;;;;;;;;;;9148:94;-1:-1:-1;;;;;9290:39:30;;9253:20;9290:39;;;:30;;;:39;;;;;:48;:53;:130;;;;-1:-1:-1;;;;;;9363:39:30;;;;;;:30;;;:39;;;;;:52;;;:57;9290:130;9253:177;-1:-1:-1;9445:30:30;;;9441:518;;9491:52;;9535:8;;9491:12;;:31;;:52;;9535:8;;9491:52;:::i;:::-;;;;-1:-1:-1;;;;;;;9557:39:30;;;;;;:30;;;:39;;;;;:60;;9609:8;;9557:39;:60;;9609:8;;9557:60;:::i;:::-;;;;-1:-1:-1;9441:518:30;;-1:-1:-1;9441:518:30;;-1:-1:-1;;9638:34:30;;;;9634:325;;9692:17;;9713:1;9692:22;9688:57;;9723:22;;-1:-1:-1;;;9723:22:30;;;;;;;;;;;9688:57;9807:8;9759:12;:31;;:44;;;:56;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9829:39:30;;;;;;:30;;;:39;;;;;:52;;:64;;9885:8;;9829:39;:64;;9885:8;;9829:64;:::i;9634:325::-;9931:17;;-1:-1:-1;;;9931:17:30;;;;;;;;;;;9634:325;9973:15;9969:87;;;10004:27;;;:41;;;;;;;-1:-1:-1;10004:41:30;;;;;;;;;;-1:-1:-1;;;;;;10004:41:30;-1:-1:-1;;;;;10004:41:30;;;;;9969:87;-1:-1:-1;;;;;10065:35:30;;;;;;:26;:35;;;;;:47;;10104:8;;10065:35;:47;;10104:8;;10065:47;:::i;:::-;;;;;;;;10140:8;10122:14;;:26;;;;;;;:::i;:::-;;;;-1:-1:-1;;10293:17:30;;:22;10292:49;;;;;10321:14;10339:1;10321:19;10292:49;10288:693;;;10379:40;;10357:19;10499:22;10513:8;10379:40;10499:22;:::i;:::-;10477:44;-1:-1:-1;10750:15:30;;10746:107;;10785:53;10814:10;10826:11;10785:28;:53::i;:::-;10866:34;;;;:21;:34;;;;;;;:51;;;;;;;;;;;;;;;;10932:38;10945:11;10888;10932:12;:38::i;:::-;10343:638;;10288:693;9059:1928;;8911:2076;;;;;:::o;2647:312:24:-;2761:6;2736:21;:31;;2728:73;;;;-1:-1:-1;;;2728:73:24;;25129:2:37;2728:73:24;;;25111:21:37;25168:2;25148:18;;;25141:30;25207:31;25187:18;;;25180:59;25256:18;;2728:73:24;24927:353:37;2728:73:24;2813:12;2831:9;-1:-1:-1;;;;;2831:14:24;2853:6;2831:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2812:52;;;2882:7;2874:78;;;;-1:-1:-1;;;2874:78:24;;25697:2:37;2874:78:24;;;25679:21:37;25736:2;25716:18;;;25709:30;25775:34;25755:18;;;25748:62;25846:28;25826:18;;;25819:56;25892:19;;2874:78:24;25495:422:37;7261:852:30;7356:39;7398:31;;;:21;:31;;;;;;;;7356:73;;;;;;;;;;;;;;;;;;;7398:31;;7356:73;;;7398:31;7356:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7488:9;7483:624;7507:22;:29;7503:1;:33;7483:624;;;7590:10;7561:22;7584:1;7561:25;;;;;;;;:::i;:::-;;;;;;;:39;7557:540;;7947:22;8002:1;7970:22;:29;:33;;;;:::i;:::-;7947:57;;;;;;;;:::i;:::-;;;;;;;7910:21;:31;7932:8;7910:31;;;;;;;;;;;7942:1;7910:34;;;;;;;;:::i;:::-;;;;;;;;:94;;;;8022:21;:31;8044:8;8022:31;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;8077:5;;7557:540;7538:3;;;;:::i;:::-;;;;7483:624;;9205:147:26;9268:7;9298:1;9294;:5;:51;;9426:13;9517:15;;;9552:4;9545:15;;;9598:4;9582:21;;9294:51;;;9426:13;9517:15;;;9552:4;9545:15;;;9598:4;9582:21;;9302:20;9287:58;9205:147;-1:-1:-1;;;9205:147:26:o;6332:1337:33:-;6409:25;6437:18;;6509:48;;;;;;;;;;;;;;;;;6437:18;;6409:25;6509:48;6409:25;;6437:18;;6509:48;;6409:25;6437:18;6509:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6724:17;6745:1;6724:22;6720:99;;-1:-1:-1;;6762:11:33;:26;;;;;;;;;;;;;-1:-1:-1;6332:1337:33:o;6720:99::-;7074:17;7092:21;7112:1;7092:17;:21;:::i;:::-;7074:40;;;;;;;;:::i;:::-;;;;;;;7063:8;:51;7059:424;;;7155:9;7134:17;:30;7130:343;;7272:7;;6332:1337;;:::o;7130:343::-;-1:-1:-1;;7408:11:33;:26;;;;;;;;;;;;;-1:-1:-1;6332:1337:33:o;7130:343::-;7593:69;7605:8;7615;7625:17;7644;3061:22;;3093:494;3125:17;3117:5;:25;3093:494;;;3272:17;3290:5;3272:24;;;;;;;;:::i;:::-;;;;;;;3260:8;:36;3256:188;;3423:7;;;;3256:188;3473:17;3491:5;3473:24;;;;;;;;:::i;:::-;;;;;;;3462:8;:35;3458:119;;;3534:5;3517:22;;3557:5;;3458:119;3144:7;;;;:::i;:::-;;;;3093:494;;;;3642:21;3678:1;3667:8;:12;3666:70;;;;-1:-1:-1;4575:13:30;4607:31;;;:21;:31;;;;;:38;3685:50:33;3666:70;3642:94;;3821:22;4085:16;:67;;;;;4143:8;4106:17;4124:14;4106:33;;;;;;;;:::i;:::-;;;;;;;:45;4085:67;4079:1656;;4522:21;4542:1;4522:17;:21;:::i;:::-;4504:14;:39;4498:844;;4817:13;4833:18;:14;4850:1;4833:18;:::i;:::-;4817:34;;4812:516;4861:17;4853:5;:25;4812:516;;;4932:17;4950:9;4958:1;4950:5;:9;:::i;:::-;4932:28;;;;;;;;:::i;:::-;;;;;;;4911:11;4923:5;4911:18;;;;;;;;:::i;:::-;;;;;;;;;;:49;5146:16;:58;;;;;5195:8;5167:17;5185:5;5167:24;;;;;;;;:::i;:::-;;;;;;;:36;5146:58;5142:168;;;5252:4;5232:24;;5282:5;;5142:168;4880:7;;;;:::i;:::-;;;;4812:516;;;;4498:844;5580:17;5579:18;:53;;;;;5622:9;5602:17;:29;5579:53;5575:150;;;5652:11;5669:17;5687:21;5707:1;5687:17;:21;:::i;:::-;5669:40;;;;;;;;:::i;:::-;;;;;;;;;;;;5652:58;;;;;;;-1:-1:-1;5652:58:33;;;;;;;;;5575:150;5896:8;5866:11;5878:14;5866:27;;;;;;;;:::i;:::-;;;;;;;;;;:38;-1:-1:-1;;;2836:3075:33;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;196:180:37;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:37;;196:180;-1:-1:-1;196:180:37:o;381:423::-;423:3;461:5;455:12;488:6;483:3;476:19;513:1;523:162;537:6;534:1;531:13;523:162;;;599:4;655:13;;;651:22;;645:29;627:11;;;623:20;;616:59;552:12;523:162;;;527:3;730:1;723:4;714:6;709:3;705:16;701:27;694:38;793:4;786:2;782:7;777:2;769:6;765:15;761:29;756:3;752:39;748:50;741:57;;;381:423;;;;:::o;809:668::-;937:12;;903:4;958:17;;;1024:19;;894:14;;;1052:20;;;864:3;;1121:4;;1148:21;;;;1099:2;1090:12;;;864:3;1197:201;1211:6;1208:1;1205:13;1197:201;;;1278:13;;-1:-1:-1;;;;;1274:39:37;1260:54;;1373:15;;;;1336:14;;;;1310:1;1226:9;1197:201;;;-1:-1:-1;;1434:14:37;;;1428:21;1414:12;;;;1407:43;;;;-1:-1:-1;1466:5:37;809:668;-1:-1:-1;809:668:37:o;1482:793::-;1828:4;1874:1;1870;1865:3;1861:11;1857:19;1915:2;1907:6;1903:15;1892:9;1885:34;1969:6;1962:14;1955:22;1950:2;1939:9;1935:18;1928:50;2014:3;2009:2;1998:9;1994:18;1987:31;2041:46;2082:3;2071:9;2067:19;2059:6;2041:46;:::i;:::-;2142:2;2133:6;2127:13;2123:22;2118:2;2107:9;2103:18;2096:50;2195:9;2187:6;2183:22;2177:3;2166:9;2162:19;2155:51;2223:46;2262:6;2254;2223:46;:::i;:::-;2215:54;1482:793;-1:-1:-1;;;;;;;;;1482:793:37:o;2488:220::-;2637:2;2626:9;2619:21;2600:4;2657:45;2698:2;2687:9;2683:18;2675:6;2657:45;:::i;2869:257::-;2789:12;;2777:25;;2851:4;2840:16;;;2834:23;2818:14;;;2811:47;3061:2;3046:18;;3073:47;2713:151;3131:435;3184:3;3222:5;3216:12;3249:6;3244:3;3237:19;3275:4;3304:2;3299:3;3295:12;3288:19;;3341:2;3334:5;3330:14;3362:1;3372:169;3386:6;3383:1;3380:13;3372:169;;;3447:13;;3435:26;;3481:12;;;;3516:15;;;;3408:1;3401:9;3372:169;;;-1:-1:-1;3557:3:37;;3131:435;-1:-1:-1;;;;;3131:435:37:o;3571:261::-;3750:2;3739:9;3732:21;3713:4;3770:56;3822:2;3811:9;3807:18;3799:6;3770:56;:::i;3837:131::-;-1:-1:-1;;;;;3912:31:37;;3902:42;;3892:70;;3958:1;3955;3948:12;3973:367;4036:8;4046:6;4100:3;4093:4;4085:6;4081:17;4077:27;4067:55;;4118:1;4115;4108:12;4067:55;-1:-1:-1;4141:20:37;;-1:-1:-1;;;;;4173:30:37;;4170:50;;;4216:1;4213;4206:12;4170:50;4253:4;4245:6;4241:17;4229:29;;4313:3;4306:4;4296:6;4293:1;4289:14;4281:6;4277:27;4273:38;4270:47;4267:67;;;4330:1;4327;4320:12;4345:572;4440:6;4448;4456;4509:2;4497:9;4488:7;4484:23;4480:32;4477:52;;;4525:1;4522;4515:12;4477:52;4564:9;4551:23;4583:31;4608:5;4583:31;:::i;:::-;4633:5;-1:-1:-1;4689:2:37;4674:18;;4661:32;-1:-1:-1;;;;;4705:30:37;;4702:50;;;4748:1;4745;4738:12;4702:50;4787:70;4849:7;4840:6;4829:9;4825:22;4787:70;:::i;:::-;4345:572;;4876:8;;-1:-1:-1;4761:96:37;;-1:-1:-1;;;;4345:572:37:o;4922:658::-;5093:2;5145:21;;;5215:13;;5118:18;;;5237:22;;;5064:4;;5093:2;5316:15;;;;5290:2;5275:18;;;5064:4;5359:195;5373:6;5370:1;5367:13;5359:195;;;5438:13;;-1:-1:-1;;;;;5434:39:37;5422:52;;5529:15;;;;5494:12;;;;5470:1;5388:9;5359:195;;;-1:-1:-1;5571:3:37;;4922:658;-1:-1:-1;;;;;;4922:658:37:o;5585:160::-;5650:20;;5706:13;;5699:21;5689:32;;5679:60;;5735:1;5732;5725:12;5679:60;5585:160;;;:::o;5750:709::-;5860:6;5868;5876;5884;5892;5945:3;5933:9;5924:7;5920:23;5916:33;5913:53;;;5962:1;5959;5952:12;5913:53;6001:9;5988:23;6020:31;6045:5;6020:31;:::i;:::-;6070:5;-1:-1:-1;6122:2:37;6107:18;;6094:32;;-1:-1:-1;6177:2:37;6162:18;;6149:32;-1:-1:-1;;;;;6193:30:37;;6190:50;;;6236:1;6233;6226:12;6190:50;6275:70;6337:7;6328:6;6317:9;6313:22;6275:70;:::i;:::-;6364:8;;-1:-1:-1;6249:96:37;-1:-1:-1;6418:35:37;;-1:-1:-1;6449:2:37;6434:18;;6418:35;:::i;:::-;6408:45;;5750:709;;;;;;;;:::o;6656:156::-;6722:20;;6782:4;6771:16;;6761:27;;6751:55;;6802:1;6799;6792:12;6817:713;6937:6;6945;6953;6961;6969;6977;7030:3;7018:9;7009:7;7005:23;7001:33;6998:53;;;7047:1;7044;7037:12;6998:53;7083:9;7070:23;7060:33;;7112:36;7144:2;7133:9;7129:18;7112:36;:::i;:::-;7102:46;;7195:2;7184:9;7180:18;7167:32;7157:42;;7246:2;7235:9;7231:18;7218:32;7208:42;;7301:3;7290:9;7286:19;7273:33;-1:-1:-1;;;;;7321:6:37;7318:30;7315:50;;;7361:1;7358;7351:12;7315:50;7400:70;7462:7;7453:6;7442:9;7438:22;7400:70;:::i;:::-;6817:713;;;;-1:-1:-1;6817:713:37;;-1:-1:-1;6817:713:37;;7489:8;;6817:713;-1:-1:-1;;;6817:713:37:o;7535:127::-;7596:10;7591:3;7587:20;7584:1;7577:31;7627:4;7624:1;7617:15;7651:4;7648:1;7641:15;7667:257;7739:4;7733:11;;;7771:17;;-1:-1:-1;;;;;7803:34:37;;7839:22;;;7800:62;7797:88;;;7865:18;;:::i;:::-;7901:4;7894:24;7667:257;:::o;7929:253::-;8001:2;7995:9;8043:4;8031:17;;-1:-1:-1;;;;;8063:34:37;;8099:22;;;8060:62;8057:88;;;8125:18;;:::i;8187:275::-;8258:2;8252:9;8323:2;8304:13;;-1:-1:-1;;8300:27:37;8288:40;;-1:-1:-1;;;;;8343:34:37;;8379:22;;;8340:62;8337:88;;;8405:18;;:::i;:::-;8441:2;8434:22;8187:275;;-1:-1:-1;8187:275:37:o;8467:486::-;8528:5;8576:4;8564:9;8559:3;8555:19;8551:30;8548:50;;;8594:1;8591;8584:12;8548:50;8627:2;8621:9;8669:4;8661:6;8657:17;8740:6;8728:10;8725:22;-1:-1:-1;;;;;8692:10:37;8689:34;8686:62;8683:88;;;8751:18;;:::i;:::-;8787:2;8780:22;8820:6;-1:-1:-1;8820:6:37;8850:23;;8882:33;8850:23;8882:33;:::i;:::-;8924:23;;8467:486;;-1:-1:-1;;8467:486:37:o;8958:1103::-;9017:5;9065:4;9053:9;9048:3;9044:19;9040:30;9037:50;;;9083:1;9080;9073:12;9037:50;9105:22;;:::i;:::-;9096:31;;9163:9;9150:23;-1:-1:-1;;;;;9233:2:37;9225:6;9222:14;9219:34;;;9249:1;9246;9239:12;9219:34;9287:6;9276:9;9272:22;9262:32;;9332:3;9325:4;9321:2;9317:13;9313:23;9303:51;;9350:1;9347;9340:12;9303:51;9386:2;9373:16;9408:4;9431:2;9427;9424:10;9421:36;;;9437:18;;:::i;:::-;9483:2;9480:1;9476:10;9466:20;;9506:28;9530:2;9526;9522:11;9506:28;:::i;:::-;9568:15;;;9638:11;;;9634:20;;;9599:12;;;;9666:15;;;9663:35;;;9694:1;9691;9684:12;9663:35;9718:11;;;;9738:223;9754:6;9749:3;9746:15;9738:223;;;9836:3;9823:17;9808:32;;9853:33;9878:7;9853:33;:::i;:::-;9899:20;;;9771:12;;;;9939;;;;9738:223;;;9984:5;9977;9970:20;;;10050:2;10039:9;10035:18;10022:32;10017:2;10010:5;10006:14;9999:56;;;;;8958:1103;;;;:::o;10066:1282::-;10125:5;10173:4;10161:9;10156:3;10152:19;10148:30;10145:50;;;10191:1;10188;10181:12;10145:50;10213:22;;:::i;:::-;10204:31;;10272:9;10259:23;10291:33;10316:7;10291:33;:::i;:::-;10333:22;;10374:2;10408:35;10424:18;;;10408:35;:::i;:::-;10403:2;10396:5;10392:14;10385:59;10495:2;10484:9;10480:18;10467:32;-1:-1:-1;;;;;10559:2:37;10551:6;10548:14;10545:34;;;10575:1;10572;10565:12;10545:34;10613:6;10602:9;10598:22;10588:32;;10658:3;10651:4;10647:2;10643:13;10639:23;10629:51;;10676:1;10673;10666:12;10629:51;10712:2;10699:16;10734:2;10730;10727:10;10724:36;;;10740:18;;:::i;:::-;10782:53;10825:2;10806:13;;-1:-1:-1;;10802:27:37;10798:36;;10782:53;:::i;:::-;10858:2;10851:5;10844:17;10898:3;10893:2;10888;10884;10880:11;10876:20;10873:29;10870:49;;;10915:1;10912;10905:12;10870:49;10970:2;10965;10961;10957:11;10952:2;10945:5;10941:14;10928:45;11014:1;11009:2;11004;10997:5;10993:14;10989:23;10982:34;11048:5;11043:2;11036:5;11032:14;11025:29;;;11086:57;11139:3;11134:2;11123:9;11119:18;11086:57;:::i;:::-;11081:2;11074:5;11070:14;11063:81;11197:3;11186:9;11182:19;11169:33;11153:49;;11227:2;11217:8;11214:16;11211:36;;;11243:1;11240;11233:12;11211:36;;;11280:61;11337:3;11326:8;11315:9;11311:24;11280:61;:::i;:::-;11274:3;11267:5;11263:15;11256:86;;10066:1282;;;;:::o;11353:356::-;11443:6;11496:2;11484:9;11475:7;11471:23;11467:32;11464:52;;;11512:1;11509;11502:12;11464:52;11552:9;11539:23;-1:-1:-1;;;;;11577:6:37;11574:30;11571:50;;;11617:1;11614;11607:12;11571:50;11640:63;11695:7;11686:6;11675:9;11671:22;11640:63;:::i;11714:161::-;11779:5;11824:3;11815:6;11810:3;11806:16;11802:26;11799:46;;;11841:1;11838;11831:12;11799:46;-1:-1:-1;11863:6:37;11714:161;-1:-1:-1;11714:161:37:o;11880:367::-;11972:6;12025:2;12013:9;12004:7;12000:23;11996:32;11993:52;;;12041:1;12038;12031:12;11993:52;12081:9;12068:23;-1:-1:-1;;;;;12106:6:37;12103:30;12100:50;;;12146:1;12143;12136:12;12100:50;12169:72;12233:7;12224:6;12213:9;12209:22;12169:72;:::i;12252:905::-;12530:4;12559:2;12588;12577:9;12570:21;12614:56;12666:2;12655:9;12651:18;12643:6;12614:56;:::i;:::-;12727:22;;;12689:2;12707:18;;;12700:50;;;;12799:13;;12821:22;;;12897:15;;;;12859;;;12930:1;12940:191;12954:6;12951:1;12948:13;12940:191;;;13003:48;13047:3;13038:6;13032:13;2789:12;;2777:25;;2851:4;2840:16;;;2834:23;2818:14;;2811:47;2713:151;13003:48;13106:15;;;;13071:12;;;;12976:1;12969:9;12940:191;;;-1:-1:-1;13148:3:37;;12252:905;-1:-1:-1;;;;;;;;12252:905:37:o;13162:640::-;13266:6;13274;13282;13290;13343:2;13331:9;13322:7;13318:23;13314:32;13311:52;;;13359:1;13356;13349:12;13311:52;13398:9;13385:23;13417:31;13442:5;13417:31;:::i;:::-;13467:5;-1:-1:-1;13519:2:37;13504:18;;13491:32;;-1:-1:-1;13574:2:37;13559:18;;13546:32;-1:-1:-1;;;;;13590:30:37;;13587:50;;;13633:1;13630;13623:12;13587:50;13672:70;13734:7;13725:6;13714:9;13710:22;13672:70;:::i;:::-;13162:640;;;;-1:-1:-1;13761:8:37;-1:-1:-1;;;;13162:640:37:o;14060:318::-;14135:6;14143;14151;14204:2;14192:9;14183:7;14179:23;14175:32;14172:52;;;14220:1;14217;14210:12;14172:52;14256:9;14243:23;14233:33;;14285:36;14317:2;14306:9;14302:18;14285:36;:::i;:::-;14275:46;;14368:2;14357:9;14353:18;14340:32;14330:42;;14060:318;;;;;:::o;14383:315::-;14451:6;14459;14512:2;14500:9;14491:7;14487:23;14483:32;14480:52;;;14528:1;14525;14518:12;14480:52;14564:9;14551:23;14541:33;;14624:2;14613:9;14609:18;14596:32;14637:31;14662:5;14637:31;:::i;:::-;14687:5;14677:15;;;14383:315;;;;;:::o;14703:248::-;14771:6;14779;14832:2;14820:9;14811:7;14807:23;14803:32;14800:52;;;14848:1;14845;14838:12;14800:52;-1:-1:-1;;14871:23:37;;;14941:2;14926:18;;;14913:32;;-1:-1:-1;14703:248:37:o;14956:247::-;15015:6;15068:2;15056:9;15047:7;15043:23;15039:32;15036:52;;;15084:1;15081;15074:12;15036:52;15123:9;15110:23;15142:31;15167:5;15142:31;:::i;15629:703::-;15757:6;15765;15773;15826:2;15814:9;15805:7;15801:23;15797:32;15794:52;;;15842:1;15839;15832:12;15794:52;15882:9;15869:23;-1:-1:-1;;;;;15952:2:37;15944:6;15941:14;15938:34;;;15968:1;15965;15958:12;15938:34;15991:72;16055:7;16046:6;16035:9;16031:22;15991:72;:::i;:::-;15981:82;;16116:2;16105:9;16101:18;16088:32;16072:48;;16145:2;16135:8;16132:16;16129:36;;;16161:1;16158;16151:12;16129:36;;16200:72;16264:7;16253:8;16242:9;16238:24;16200:72;:::i;16337:127::-;16398:10;16393:3;16389:20;16386:1;16379:31;16429:4;16426:1;16419:15;16453:4;16450:1;16443:15;16469:249;16619:2;16604:18;;16652:1;16641:13;;16631:47;;16658:18;;:::i;:::-;16687:25;;;16469:249;:::o;16723:815::-;16914:2;16903:9;16896:21;16877:4;16953:1;16949;16944:3;16940:11;16936:19;17010:2;17001:6;16995:13;16991:22;16986:2;16975:9;16971:18;16964:50;17082:2;17074:6;17070:15;17064:22;17057:30;17050:38;17045:2;17034:9;17030:18;17023:66;17136:2;17128:6;17124:15;17118:22;17176:4;17171:2;17160:9;17156:18;17149:32;17204:52;17251:3;17240:9;17236:19;17222:12;17204:52;:::i;:::-;17190:66;;17328:2;17321;17313:6;17309:15;17303:22;17297:29;17293:38;17287:3;17276:9;17272:19;17265:67;17381:3;17373:6;17369:16;17363:23;17341:45;;17456:2;17452:7;17440:9;17432:6;17428:22;17424:36;17417:4;17406:9;17402:20;17395:66;17478:54;17525:6;17509:14;17478:54;:::i;17543:437::-;17629:6;17637;17690:2;17678:9;17669:7;17665:23;17661:32;17658:52;;;17706:1;17703;17696:12;17658:52;17746:9;17733:23;-1:-1:-1;;;;;17771:6:37;17768:30;17765:50;;;17811:1;17808;17801:12;17765:50;17850:70;17912:7;17903:6;17892:9;17888:22;17850:70;:::i;:::-;17939:8;;17824:96;;-1:-1:-1;17543:437:37;-1:-1:-1;;;;17543:437:37:o;18260:380::-;18339:1;18335:12;;;;18382;;;18403:61;;18457:4;18449:6;18445:17;18435:27;;18403:61;18510:2;18502:6;18499:14;18479:18;18476:38;18473:161;;18556:10;18551:3;18547:20;18544:1;18537:31;18591:4;18588:1;18581:15;18619:4;18616:1;18609:15;18645:127;18706:10;18701:3;18697:20;18694:1;18687:31;18737:4;18734:1;18727:15;18761:4;18758:1;18751:15;18777:125;18842:9;;;18863:10;;;18860:36;;;18876:18;;:::i;19206:210::-;19320:9;19357:53;19395:14;19388:5;19357:53;:::i;19421:127::-;19482:10;19477:3;19473:20;19470:1;19463:31;19513:4;19510:1;19503:15;19537:4;19534:1;19527:15;19553:135;19592:3;19613:17;;;19610:43;;19633:18;;:::i;:::-;-1:-1:-1;19680:1:37;19669:13;;19553:135::o;19693:128::-;19760:9;;;19781:11;;;19778:37;;;19795:18;;:::i;19963:655::-;20131:2;20183:21;;;20253:13;;20156:18;;;20275:22;;;20102:4;20340:17;;;20380:16;;;20102:4;;20131:2;20328;20313:18;;;20102:4;20424:168;20438:6;20435:1;20432:13;20424:168;;;20499:13;;20487:26;;20580:1;20568:14;;;;20533:12;;;;20453:9;20424:168;;21303:246;21450:2;21435:18;;21483:1;21472:13;;21462:47;;21489:18;;:::i;21885:545::-;21987:2;21982:3;21979:11;21976:448;;;22023:1;22048:5;22044:2;22037:17;22093:4;22089:2;22079:19;22163:2;22151:10;22147:19;22144:1;22140:27;22134:4;22130:38;22199:4;22187:10;22184:20;22181:47;;;-1:-1:-1;22222:4:37;22181:47;22277:2;22272:3;22268:12;22265:1;22261:20;22255:4;22251:31;22241:41;;22332:82;22350:2;22343:5;22340:13;22332:82;;;22395:17;;;22376:1;22365:13;22332:82;;;22336:3;;;21885:545;;;:::o;22606:1363::-;22732:3;22726:10;-1:-1:-1;;;;;22751:6:37;22748:30;22745:56;;;22781:18;;:::i;:::-;22810:97;22900:6;22860:38;22892:4;22886:11;22860:38;:::i;:::-;22854:4;22810:97;:::i;:::-;22962:4;;23026:2;23015:14;;23043:1;23038:674;;;;23756:1;23773:6;23770:89;;;-1:-1:-1;23825:19:37;;;23819:26;23770:89;-1:-1:-1;;22563:1:37;22559:11;;;22555:24;22551:29;22541:40;22587:1;22583:11;;;22538:57;23872:81;;23008:955;;23038:674;19910:1;19903:14;;;19947:4;19934:18;;-1:-1:-1;;23074:20:37;;;23203:236;23217:7;23214:1;23211:14;23203:236;;;23306:19;;;23300:26;23285:42;;23398:27;;;;23366:1;23354:14;;;;23233:19;;23203:236;;;23207:3;23467:6;23458:7;23455:19;23452:201;;;23528:19;;;23522:26;-1:-1:-1;;23611:1:37;23607:14;;;23623:3;23603:24;23599:37;23595:42;23580:58;23565:74;;23452:201;-1:-1:-1;;;;;23699:1:37;23683:14;;;23679:22;23666:36;;-1:-1:-1;22606:1363:37:o;24253:168::-;24326:9;;;24357;;24374:15;;;24368:22;;24354:37;24344:71;;24395:18;;:::i;24426:217::-;24466:1;24492;24482:132;;24536:10;24531:3;24527:20;24524:1;24517:31;24571:4;24568:1;24561:15;24599:4;24596:1;24589:15;24482:132;-1:-1:-1;24628:9:37;;24426:217::o;25922:127::-;25983:10;25978:3;25974:20;25971:1;25964:31;26014:4;26011:1;26004:15;26038:4;26035:1;26028:15",
    "linkReferences": {},
    "immutableReferences": {
      "34605": [
        {
          "start": 2745,
          "length": 32
        },
        {
          "start": 4001,
          "length": 32
        },
        {
          "start": 4376,
          "length": 32
        },
        {
          "start": 4757,
          "length": 32
        }
      ],
      "34607": [
        {
          "start": 2964,
          "length": 32
        },
        {
          "start": 4477,
          "length": 32
        }
      ],
      "34684": [
        {
          "start": 1648,
          "length": 32
        },
        {
          "start": 7992,
          "length": 32
        },
        {
          "start": 10539,
          "length": 32
        }
      ],
      "34686": [
        {
          "start": 1186,
          "length": 32
        },
        {
          "start": 11493,
          "length": 32
        },
        {
          "start": 11971,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "AMOUNT_FOR_SUMBITTER_PROOF()": "347cf665",
    "JK_LABS_ADDRESS()": "eef18e17",
    "METADATAS_COUNT()": "4d24a67f",
    "addressSubmitterVerified(address)": "cb853950",
    "addressTotalCastVoteCounts(address)": "a1ac6cb2",
    "addressTotalVotes(address)": "dea5f6a6",
    "addressTotalVotesVerified(address)": "930de979",
    "addressesThatHaveVoted(uint256)": "50c4b616",
    "allProposalTotalVotes()": "50a5e524",
    "allProposalTotalVotesWithoutDeleted()": "d45a010b",
    "cancel()": "ea8a1af0",
    "canceled()": "3f9942ff",
    "castVote(uint256,uint8,uint256,uint256,bytes32[])": "419c533c",
    "castVoteWithoutProof(uint256,uint8,uint256)": "65f16263",
    "checkProof(address,uint256,bytes32[],bool)": "32763c22",
    "contestAddressTotalVotesCast(address)": "aec116b6",
    "contestDeadline()": "262e59e9",
    "contestStart()": "004114a8",
    "costToPropose()": "6ed815ad",
    "creator()": "02d05d3f",
    "deleteProposals(uint256[])": "f0a7db0a",
    "deletedProposalIds(uint256)": "05846cae",
    "downvotingAllowed()": "60506ff6",
    "forVotesToProposalIds(uint256,uint256)": "711effc8",
    "getAllAddressesThatHaveVoted()": "2c39805f",
    "getAllDeletedProposalIds()": "1242b737",
    "getAllProposalAuthors()": "946369b5",
    "getAllProposalIds()": "efa90d36",
    "getNumProposalsWithThisManyForVotes(uint256)": "9ba197af",
    "getOnlyProposalIdWithThisManyForVotes(uint256)": "b66d1da3",
    "getProposal(uint256)": "c7f758a8",
    "getRankIndex(uint256)": "5c7107d8",
    "getSortedRanks()": "6fd3636b",
    "hashProposal((address,bool,string,(address),(address[],uint256)))": "458da87d",
    "isOrIsBelowTiedRank(uint256)": "9174778c",
    "maxProposalCount()": "fb9bf8d4",
    "name()": "06fdde03",
    "numAllowedProposalSubmissions()": "832009af",
    "numSubmissions(address)": "75e509c5",
    "officialRewardsModule()": "785ddfe5",
    "percentageToCreator()": "edcd1be4",
    "prompt()": "7c65d711",
    "proposalAddressVotes(uint256,address)": "6e4eb810",
    "proposalAddressesHaveVoted(uint256)": "b323580d",
    "proposalAuthors(uint256)": "0aa25e44",
    "proposalIds(uint256)": "9b644a23",
    "proposalIsDeleted(uint256)": "f79c0172",
    "proposalVotes(uint256)": "544ffc9c",
    "proposalVotesStructs(uint256)": "070dc5d9",
    "proposals(uint256)": "013cf08b",
    "propose((address,bool,string,(address),(address[],uint256)),bytes32[])": "c0ffaa78",
    "proposeWithoutProof((address,bool,string,(address),(address[],uint256)))": "476f4d8a",
    "rankLimit()": "0414126a",
    "setOfficialRewardsModule(address)": "f4f3d7ec",
    "sortedRanks(uint256)": "325cc6d9",
    "sortingEnabled()": "366ecf5b",
    "state()": "c19d93fb",
    "submissionMerkleRoot()": "bddc1641",
    "totalVotesCast()": "7de418d5",
    "validateProposalData((address,bool,string,(address),(address[],uint256)))": "fb8ddab4",
    "verifyProposer(address,bytes32[])": "20b3e845",
    "verifyVoter(address,uint256,bytes32[])": "531bd812",
    "version()": "54fd4d50",
    "voteStart()": "e031535b",
    "votingDelay()": "3932abb1",
    "votingMerkleRoot()": "dd96a19d",
    "votingPeriod()": "02a251a3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_prompt\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"_submissionMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_votingMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"_constructorIntParams\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AddressNotPermissionedToSubmit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"AuthorIsNotSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotCancelACompletedContest\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotDeleteWhenCompleted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotVoteOnDeletedProposal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ContestAlreadyCancelled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum Governor.ContestState\",\"name\":\"currentState\",\"type\":\"uint8\"}],\"name\":\"ContestMustBeActiveToVote\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum Governor.ContestState\",\"name\":\"currentState\",\"type\":\"uint8\"}],\"name\":\"ContestMustBeQueuedToPropose\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxProposalCount\",\"type\":\"uint256\"}],\"name\":\"ContestSubmissionLimitReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DownvotingNotEnabled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"DuplicateSubmission\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptyProposalDescription\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"costToPropose\",\"type\":\"uint256\"}],\"name\":\"IncorrectCostToProposeSent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IndexHasNotBeenPopulated\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidVoteType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MoreThanOneProposalWithThisManyVotes\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NeedAtLeastOneVoteToVote\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NeedToSubmitWithProofFirst\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NeedToVoteWithProofFirst\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughVotesLeft\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInMerkle\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyCreatorCanDelete\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyCreatorCanSetRewardsModule\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyJkLabsOrCreatorCanCancel\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RankCannotBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RankIsNotInSortedRanks\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numAllowedProposalSubmissions\",\"type\":\"uint256\"}],\"name\":\"SenderSubmissionLimitReached\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum Governor.Metadatas\",\"name\":\"unexpectedMetadata\",\"type\":\"uint8\"}],\"name\":\"UnexpectedMetadata\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroSignersInSafeMetadata\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroThresholdInSafeMetadata\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ContestCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"JokeraceCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract RewardsModule\",\"name\":\"oldOfficialRewardsModule\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract RewardsModule\",\"name\":\"newOfficialRewardsModule\",\"type\":\"address\"}],\"name\":\"OfficialRewardsModuleSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PaymentReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"proposalIds\",\"type\":\"uint256[]\"}],\"name\":\"ProposalsDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"numVotes\",\"type\":\"uint256\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AMOUNT_FOR_SUMBITTER_PROOF\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"JK_LABS_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"METADATAS_COUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressSubmitterVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressTotalCastVoteCounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressTotalVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressTotalVotesVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addressesThatHaveVoted\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allProposalTotalVotes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"proposalIdsReturn\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"internalType\":\"struct GovernorCountingSimple.VoteCounts[]\",\"name\":\"proposalVoteCountsArrayReturn\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allProposalTotalVotesWithoutDeleted\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"proposalIdsReturn\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"internalType\":\"struct GovernorCountingSimple.VoteCounts[]\",\"name\":\"proposalVoteCountsArrayReturn\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canceled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numVotes\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"castVote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"numVotes\",\"type\":\"uint256\"}],\"name\":\"castVoteWithoutProof\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressToCheck\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool\",\"name\":\"voting\",\"type\":\"bool\"}],\"name\":\"checkProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"contestAddressTotalVotesCast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"userTotalVotesCast\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contestDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contestStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"costToPropose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"proposalIdsToDelete\",\"type\":\"uint256[]\"}],\"name\":\"deleteProposals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deletedProposalIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"downvotingAllowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"forVotesToProposalIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllAddressesThatHaveVoted\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllDeletedProposalIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllProposalAuthors\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllProposalIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"}],\"name\":\"getNumProposalsWithThisManyForVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"}],\"name\":\"getOnlyProposalIdWithThisManyForVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposal\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Governor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct Governor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct Governor.ProposalCore\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rank\",\"type\":\"uint256\"}],\"name\":\"getRankIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rankIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSortedRanks\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"sortedRanksArray\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Governor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct Governor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct Governor.ProposalCore\",\"name\":\"proposal\",\"type\":\"tuple\"}],\"name\":\"hashProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"isOrIsBelowTiedRank\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"atOrBelowTiedRank\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxProposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numAllowedProposalSubmissions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"numSubmissions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"officialRewardsModule\",\"outputs\":[{\"internalType\":\"contract RewardsModule\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"percentageToCreator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prompt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"proposalAddressVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalAddressesHaveVoted\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalAuthors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalIsDeleted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalVotesStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"internalType\":\"struct GovernorCountingSimple.VoteCounts\",\"name\":\"proposalVoteCounts\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Governor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct Governor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Governor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct Governor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct Governor.ProposalCore\",\"name\":\"proposal\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Governor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct Governor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct Governor.ProposalCore\",\"name\":\"proposal\",\"type\":\"tuple\"}],\"name\":\"proposeWithoutProof\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rankLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract RewardsModule\",\"name\":\"officialRewardsModule_\",\"type\":\"address\"}],\"name\":\"setOfficialRewardsModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sortedRanks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sortingEnabled\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum Governor.ContestState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"submissionMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVotesCast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Governor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct Governor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct Governor.ProposalCore\",\"name\":\"proposal\",\"type\":\"tuple\"}],\"name\":\"validateProposalData\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"verifyProposer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"verifyVoter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voteStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allProposalTotalVotes()\":{\"details\":\"Accessor to the internal vote counts for a given proposal.\"},\"allProposalTotalVotesWithoutDeleted()\":{\"details\":\"Accessor to the internal vote counts for a given proposal that excludes deleted proposals.\"},\"cancel()\":{\"details\":\"Cancels the contest. Emits a {IGovernor-ContestCanceled} event.\"},\"castVote(uint256,uint8,uint256,uint256,bytes32[])\":{\"details\":\"Cast a vote with a merkle proof.\"},\"castVoteWithoutProof(uint256,uint8,uint256)\":{\"details\":\"Cast a vote without a proof if you have already voted with a proof.\"},\"checkProof(address,uint256,bytes32[],bool)\":{\"params\":{\"addressToCheck\":\"address of participant\",\"amount\":\"to check that the participant has the correct amount\",\"proof\":\"merkle proof to prove address and amount are in tree\",\"voting\":\"true if this is for a voting proof, false if this is for a submission proof\"}},\"contestAddressTotalVotesCast(address)\":{\"details\":\"Accessor to how many votes an address has cast total for the contest so far.\"},\"contestDeadline()\":{\"details\":\"Returns if a proposal has been deleted or not.\"},\"deleteProposals(uint256[])\":{\"details\":\"Delete proposals. Emits a {IGovernor-ProposalsDeleted} event.\"},\"getAllAddressesThatHaveVoted()\":{\"details\":\"Return all addresses that have voted.\"},\"getAllDeletedProposalIds()\":{\"details\":\"Return all deleted proposals.\"},\"getAllProposalAuthors()\":{\"details\":\"Return all proposal authors.\"},\"getAllProposalIds()\":{\"details\":\"Return all proposals.\"},\"getNumProposalsWithThisManyForVotes(uint256)\":{\"details\":\"See {GovernorSorting-getNumProposalsWithThisManyForVotes}. Get the number of proposals that have `forVotes` number of for votes.\"},\"getOnlyProposalIdWithThisManyForVotes(uint256)\":{\"details\":\"Get the only proposal id with this many for votes. NOTE: Should only get called at a point at which you are sure there is only one proposal id       with a certain number of forVotes (we only use it in the RewardsModule after ties have       been checked for).\"},\"getProposal(uint256)\":{\"details\":\"Retrieve proposal data.\"},\"getRankIndex(uint256)\":{\"details\":\"Get the idx of sortedRanks considered to hold the queried rank taking deleted proposals into account.      A rank has to have > 0 votes to be considered valid.\"},\"getSortedRanks()\":{\"details\":\"Get the sortedRanks array.\"},\"isOrIsBelowTiedRank(uint256)\":{\"details\":\"Returns whether a given index in sortedRanks is tied or is below a tied rank.\"},\"proposalAddressVotes(uint256,address)\":{\"details\":\"Accessor to how many votes an address has cast for a given proposal.\"},\"proposalAddressesHaveVoted(uint256)\":{\"details\":\"Accessor to which addresses have cast a vote for a given proposal.\"},\"proposalVotes(uint256)\":{\"details\":\"Accessor to the internal vote counts for a given proposal.\"},\"propose((address,bool,string,(address),(address[],uint256)),bytes32[])\":{\"details\":\"Create a new proposal.\"},\"proposeWithoutProof((address,bool,string,(address),(address[],uint256)))\":{\"details\":\"Create a new proposal without a proof if you have already proposed with a proof.\"},\"setOfficialRewardsModule(address)\":{\"details\":\"Get the official rewards module contract for this contest (effectively reverse record).\"},\"validateProposalData((address,bool,string,(address),(address[],uint256)))\":{\"details\":\"Verifies that all of the metadata in the proposal is valid.\"},\"verifyProposer(address,bytes32[])\":{\"details\":\"Verifies that `account` is permissioned to propose via merkle proof.\"},\"verifyVoter(address,uint256,bytes32[])\":{\"details\":\"Verifies that `account` is permissioned to vote with `totalVotes` via merkle proof.\"},\"voteStart()\":{\"details\":\"Timestamp the contest vote begins. Votes open at the end of this block, so it is possible to propose during this block.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"NotInMerkle()\":[{\"notice\":\"Thrown if address/amount are not part of Merkle tree\"}]},\"kind\":\"user\",\"methods\":{\"checkProof(address,uint256,bytes32[],bool)\":{\"notice\":\"Allows checking of proofs for an address\"},\"submissionMerkleRoot()\":{\"notice\":\"Participant inclusion roots\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Contest.sol\":\"Contest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4\",\"dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"src/Contest.sol\":{\"keccak256\":\"0x1bd729629ebddbbf52eabdf470166df45123d43b0e7668840c2928f5c3c8d0db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18144a26cf50df08c132f8fc7b2c9c9d40e78bb09658f19d6761721106707d90\",\"dweb:/ipfs/QmWehFeNC4gMoiQjoWBkdtgTzHAKvH89om7mnLnAHZBF1c\"]},\"src/governance/Governor.sol\":{\"keccak256\":\"0x6e2fb6ef0be0a8507e588513515749b3ef9b386cc8176dccb109a3a6e6975c77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c25705ba664785c3401f86de265e3990d3d610a327fc5d07208241469646530\",\"dweb:/ipfs/QmTmvX4ABcB3hr7mypmgzYuSvziYJuLSuLpaaiaKkKXcLx\"]},\"src/governance/extensions/GovernorCountingSimple.sol\":{\"keccak256\":\"0x84b8a20f0109bcf5730f899f1069f31bb7df37107bc2fea638ef626f0cc7f572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d5f0d2a4e9518128385edfeda565ca00433fb2c1dce407a143ba6fba1a2eebc\",\"dweb:/ipfs/QmZoWRFbexyiGhy83FMoAftLy53jQ5TNZSoKyDPYeutmrA\"]},\"src/governance/extensions/GovernorModuleRegistry.sol\":{\"keccak256\":\"0x125d25059bc535ebe7b693655f4f659e9094142d4214a0d7c0fcf5a40abbd09f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9bbacb3d06b816012e6eb700a12e5bfc2b574d2cd7c7b7ce9ce4fc94ee7396a\",\"dweb:/ipfs/QmPA9As3fYH7uj8h1YijwK4Sh93AnRbuBBQMqxzjMBndWh\"]},\"src/governance/utils/GovernorMerkleVotes.sol\":{\"keccak256\":\"0x0506edac02b698fae6c7ed1b5971e84861d043451d27084c441d52aaaa1e8e77\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://fb8fe0e9a90457544963de97a94f6d546dbeccffa1efe910eb4015996e0c18db\",\"dweb:/ipfs/QmfVmMzQDBbEHtsQKVbrXWGNuJtkpEYWVdhSPsQK2vFwhP\"]},\"src/governance/utils/GovernorSorting.sol\":{\"keccak256\":\"0xd717701ba9b69754d41e0df580fc26d373b5ec4a18236da8bc5c6730b6ac8970\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08cc91aae7a8aa57abf31a722291062ad78d8835833752911d2ca3a5a0a764af\",\"dweb:/ipfs/QmVZipTtXMnzBoeAwS51XeG2sGyCBzoaowWmpBG4vmZcxP\"]},\"src/modules/RewardsModule.sol\":{\"keccak256\":\"0x456fabd9e0b8d8740107ba5ef0bb5aa0fe50b5d733e70bc96b4801f1dd139966\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51f54aa28981ff9a127a62c207d91f1cce31b1a19e8154420b6940bc8d3d2d1b\",\"dweb:/ipfs/QmSbkR16hVWNmEKG3nk4bnboQbJX7R4DYC8Bmgcaw99bKz\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_prompt",
              "type": "string"
            },
            {
              "internalType": "bytes32",
              "name": "_submissionMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "_votingMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256[]",
              "name": "_constructorIntParams",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AddressNotPermissionedToSubmit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AuthorIsNotSender"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CannotCancelACompletedContest"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CannotDeleteWhenCompleted"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CannotVoteOnDeletedProposal"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ContestAlreadyCancelled"
        },
        {
          "inputs": [
            {
              "internalType": "enum Governor.ContestState",
              "name": "currentState",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "ContestMustBeActiveToVote"
        },
        {
          "inputs": [
            {
              "internalType": "enum Governor.ContestState",
              "name": "currentState",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "ContestMustBeQueuedToPropose"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "maxProposalCount",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ContestSubmissionLimitReached"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DownvotingNotEnabled"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "DuplicateSubmission"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EmptyProposalDescription"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "msgValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "costToPropose",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "IncorrectCostToProposeSent"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IndexHasNotBeenPopulated"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidVoteType"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MoreThanOneProposalWithThisManyVotes"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NeedAtLeastOneVoteToVote"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NeedToSubmitWithProofFirst"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NeedToVoteWithProofFirst"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotEnoughVotesLeft"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotInMerkle"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyCreatorCanDelete"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyCreatorCanSetRewardsModule"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyJkLabsOrCreatorCanCancel"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RankCannotBeZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RankIsNotInSortedRanks"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "numAllowedProposalSubmissions",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "SenderSubmissionLimitReached"
        },
        {
          "inputs": [
            {
              "internalType": "enum Governor.Metadatas",
              "name": "unexpectedMetadata",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "UnexpectedMetadata"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroSignersInSafeMetadata"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroThresholdInSafeMetadata"
        },
        {
          "inputs": [],
          "type": "event",
          "name": "ContestCanceled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "JokeraceCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract RewardsModule",
              "name": "oldOfficialRewardsModule",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract RewardsModule",
              "name": "newOfficialRewardsModule",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OfficialRewardsModuleSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PaymentReleased",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "proposer",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProposalCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalIds",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProposalsDeleted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "voter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "numVotes",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VoteCast",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "AMOUNT_FOR_SUMBITTER_PROOF",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "JK_LABS_ADDRESS",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "METADATAS_COUNT",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressSubmitterVerified",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressTotalCastVoteCounts",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressTotalVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressTotalVotesVerified",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressesThatHaveVoted",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allProposalTotalVotes",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalIdsReturn",
              "type": "uint256[]"
            },
            {
              "internalType": "struct GovernorCountingSimple.VoteCounts[]",
              "name": "proposalVoteCountsArrayReturn",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "forVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "againstVotes",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allProposalTotalVotesWithoutDeleted",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalIdsReturn",
              "type": "uint256[]"
            },
            {
              "internalType": "struct GovernorCountingSimple.VoteCounts[]",
              "name": "proposalVoteCountsArrayReturn",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "forVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "againstVotes",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancel"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "canceled",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "totalVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "numVotes",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "castVote",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "numVotes",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "castVoteWithoutProof",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "addressToCheck",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "bool",
              "name": "voting",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkProof",
          "outputs": [
            {
              "internalType": "bool",
              "name": "verified",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "userAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "contestAddressTotalVotesCast",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "userTotalVotesCast",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contestDeadline",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contestStart",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "costToPropose",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "creator",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalIdsToDelete",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteProposals"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "deletedProposalIds",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "downvotingAllowed",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "forVotesToProposalIds",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllAddressesThatHaveVoted",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllDeletedProposalIds",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllProposalAuthors",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllProposalIds",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getNumProposalsWithThisManyForVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOnlyProposalIdWithThisManyForVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProposal",
          "outputs": [
            {
              "internalType": "struct Governor.ProposalCore",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "struct Governor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct Governor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "rank",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRankIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "rankIndex",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getSortedRanks",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "sortedRanksArray",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Governor.ProposalCore",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "struct Governor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct Governor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "hashProposal",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "idx",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOrIsBelowTiedRank",
          "outputs": [
            {
              "internalType": "bool",
              "name": "atOrBelowTiedRank",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxProposalCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "numAllowedProposalSubmissions",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "numSubmissions",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "officialRewardsModule",
          "outputs": [
            {
              "internalType": "contract RewardsModule",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "percentageToCreator",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "prompt",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "userAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalAddressVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalAddressesHaveVoted",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalAuthors",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalIds",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalIsDeleted",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalVotesStructs",
          "outputs": [
            {
              "internalType": "struct GovernorCountingSimple.VoteCounts",
              "name": "proposalVoteCounts",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "forVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "againstVotes",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposals",
          "outputs": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "struct Governor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct Governor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Governor.ProposalCore",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "struct Governor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct Governor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "propose",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Governor.ProposalCore",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "struct Governor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct Governor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "proposeWithoutProof",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rankLimit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract RewardsModule",
              "name": "officialRewardsModule_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOfficialRewardsModule"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "sortedRanks",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sortingEnabled",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "state",
          "outputs": [
            {
              "internalType": "enum Governor.ContestState",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "submissionMerkleRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalVotesCast",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Governor.ProposalCore",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "struct Governor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct Governor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "validateProposalData"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyProposer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalVotes",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyVoter"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "voteStart",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "votingDelay",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "votingMerkleRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "votingPeriod",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allProposalTotalVotes()": {
            "details": "Accessor to the internal vote counts for a given proposal."
          },
          "allProposalTotalVotesWithoutDeleted()": {
            "details": "Accessor to the internal vote counts for a given proposal that excludes deleted proposals."
          },
          "cancel()": {
            "details": "Cancels the contest. Emits a {IGovernor-ContestCanceled} event."
          },
          "castVote(uint256,uint8,uint256,uint256,bytes32[])": {
            "details": "Cast a vote with a merkle proof."
          },
          "castVoteWithoutProof(uint256,uint8,uint256)": {
            "details": "Cast a vote without a proof if you have already voted with a proof."
          },
          "checkProof(address,uint256,bytes32[],bool)": {
            "params": {
              "addressToCheck": "address of participant",
              "amount": "to check that the participant has the correct amount",
              "proof": "merkle proof to prove address and amount are in tree",
              "voting": "true if this is for a voting proof, false if this is for a submission proof"
            }
          },
          "contestAddressTotalVotesCast(address)": {
            "details": "Accessor to how many votes an address has cast total for the contest so far."
          },
          "contestDeadline()": {
            "details": "Returns if a proposal has been deleted or not."
          },
          "deleteProposals(uint256[])": {
            "details": "Delete proposals. Emits a {IGovernor-ProposalsDeleted} event."
          },
          "getAllAddressesThatHaveVoted()": {
            "details": "Return all addresses that have voted."
          },
          "getAllDeletedProposalIds()": {
            "details": "Return all deleted proposals."
          },
          "getAllProposalAuthors()": {
            "details": "Return all proposal authors."
          },
          "getAllProposalIds()": {
            "details": "Return all proposals."
          },
          "getNumProposalsWithThisManyForVotes(uint256)": {
            "details": "See {GovernorSorting-getNumProposalsWithThisManyForVotes}. Get the number of proposals that have `forVotes` number of for votes."
          },
          "getOnlyProposalIdWithThisManyForVotes(uint256)": {
            "details": "Get the only proposal id with this many for votes. NOTE: Should only get called at a point at which you are sure there is only one proposal id       with a certain number of forVotes (we only use it in the RewardsModule after ties have       been checked for)."
          },
          "getProposal(uint256)": {
            "details": "Retrieve proposal data."
          },
          "getRankIndex(uint256)": {
            "details": "Get the idx of sortedRanks considered to hold the queried rank taking deleted proposals into account.      A rank has to have > 0 votes to be considered valid."
          },
          "getSortedRanks()": {
            "details": "Get the sortedRanks array."
          },
          "isOrIsBelowTiedRank(uint256)": {
            "details": "Returns whether a given index in sortedRanks is tied or is below a tied rank."
          },
          "proposalAddressVotes(uint256,address)": {
            "details": "Accessor to how many votes an address has cast for a given proposal."
          },
          "proposalAddressesHaveVoted(uint256)": {
            "details": "Accessor to which addresses have cast a vote for a given proposal."
          },
          "proposalVotes(uint256)": {
            "details": "Accessor to the internal vote counts for a given proposal."
          },
          "propose((address,bool,string,(address),(address[],uint256)),bytes32[])": {
            "details": "Create a new proposal."
          },
          "proposeWithoutProof((address,bool,string,(address),(address[],uint256)))": {
            "details": "Create a new proposal without a proof if you have already proposed with a proof."
          },
          "setOfficialRewardsModule(address)": {
            "details": "Get the official rewards module contract for this contest (effectively reverse record)."
          },
          "validateProposalData((address,bool,string,(address),(address[],uint256)))": {
            "details": "Verifies that all of the metadata in the proposal is valid."
          },
          "verifyProposer(address,bytes32[])": {
            "details": "Verifies that `account` is permissioned to propose via merkle proof."
          },
          "verifyVoter(address,uint256,bytes32[])": {
            "details": "Verifies that `account` is permissioned to vote with `totalVotes` via merkle proof."
          },
          "voteStart()": {
            "details": "Timestamp the contest vote begins. Votes open at the end of this block, so it is possible to propose during this block."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "checkProof(address,uint256,bytes32[],bool)": {
            "notice": "Allows checking of proofs for an address"
          },
          "submissionMerkleRoot()": {
            "notice": "Participant inclusion roots"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@forge-std/=lib/forge-std/src/",
        "@openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Contest.sol": "Contest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa",
        "urls": [
          "bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4",
          "dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol": {
        "keccak256": "0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac",
        "urls": [
          "bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04",
          "dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "src/Contest.sol": {
        "keccak256": "0x1bd729629ebddbbf52eabdf470166df45123d43b0e7668840c2928f5c3c8d0db",
        "urls": [
          "bzz-raw://18144a26cf50df08c132f8fc7b2c9c9d40e78bb09658f19d6761721106707d90",
          "dweb:/ipfs/QmWehFeNC4gMoiQjoWBkdtgTzHAKvH89om7mnLnAHZBF1c"
        ],
        "license": "MIT"
      },
      "src/governance/Governor.sol": {
        "keccak256": "0x6e2fb6ef0be0a8507e588513515749b3ef9b386cc8176dccb109a3a6e6975c77",
        "urls": [
          "bzz-raw://5c25705ba664785c3401f86de265e3990d3d610a327fc5d07208241469646530",
          "dweb:/ipfs/QmTmvX4ABcB3hr7mypmgzYuSvziYJuLSuLpaaiaKkKXcLx"
        ],
        "license": "MIT"
      },
      "src/governance/extensions/GovernorCountingSimple.sol": {
        "keccak256": "0x84b8a20f0109bcf5730f899f1069f31bb7df37107bc2fea638ef626f0cc7f572",
        "urls": [
          "bzz-raw://7d5f0d2a4e9518128385edfeda565ca00433fb2c1dce407a143ba6fba1a2eebc",
          "dweb:/ipfs/QmZoWRFbexyiGhy83FMoAftLy53jQ5TNZSoKyDPYeutmrA"
        ],
        "license": "MIT"
      },
      "src/governance/extensions/GovernorModuleRegistry.sol": {
        "keccak256": "0x125d25059bc535ebe7b693655f4f659e9094142d4214a0d7c0fcf5a40abbd09f",
        "urls": [
          "bzz-raw://d9bbacb3d06b816012e6eb700a12e5bfc2b574d2cd7c7b7ce9ce4fc94ee7396a",
          "dweb:/ipfs/QmPA9As3fYH7uj8h1YijwK4Sh93AnRbuBBQMqxzjMBndWh"
        ],
        "license": "MIT"
      },
      "src/governance/utils/GovernorMerkleVotes.sol": {
        "keccak256": "0x0506edac02b698fae6c7ed1b5971e84861d043451d27084c441d52aaaa1e8e77",
        "urls": [
          "bzz-raw://fb8fe0e9a90457544963de97a94f6d546dbeccffa1efe910eb4015996e0c18db",
          "dweb:/ipfs/QmfVmMzQDBbEHtsQKVbrXWGNuJtkpEYWVdhSPsQK2vFwhP"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/governance/utils/GovernorSorting.sol": {
        "keccak256": "0xd717701ba9b69754d41e0df580fc26d373b5ec4a18236da8bc5c6730b6ac8970",
        "urls": [
          "bzz-raw://08cc91aae7a8aa57abf31a722291062ad78d8835833752911d2ca3a5a0a764af",
          "dweb:/ipfs/QmVZipTtXMnzBoeAwS51XeG2sGyCBzoaowWmpBG4vmZcxP"
        ],
        "license": "MIT"
      },
      "src/modules/RewardsModule.sol": {
        "keccak256": "0x456fabd9e0b8d8740107ba5ef0bb5aa0fe50b5d733e70bc96b4801f1dd139966",
        "urls": [
          "bzz-raw://51f54aa28981ff9a127a62c207d91f1cce31b1a19e8154420b6940bc8d3d2d1b",
          "dweb:/ipfs/QmSbkR16hVWNmEKG3nk4bnboQbJX7R4DYC8Bmgcaw99bKz"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Contest.sol",
    "id": 32634,
    "exportedSymbols": {
      "Address": [
        30478
      ],
      "Contest": [
        32633
      ],
      "Governor": [
        33804
      ],
      "GovernorCountingSimple": [
        34546
      ],
      "GovernorMerkleVotes": [
        34679
      ],
      "GovernorModuleRegistry": [
        34597
      ],
      "GovernorSorting": [
        34939
      ],
      "IERC20": [
        29638
      ],
      "IERC20Permit": [
        29743
      ],
      "MerkleProof": [
        31028
      ],
      "RewardsModule": [
        35645
      ],
      "SafeCast": [
        32569
      ],
      "SafeERC20": [
        30148
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1257:28",
    "nodes": [
      {
        "id": 32571,
        "nodeType": "PragmaDirective",
        "src": "32:23:28",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 32572,
        "nodeType": "ImportDirective",
        "src": "57:35:28",
        "nodes": [],
        "absolutePath": "src/governance/Governor.sol",
        "file": "./governance/Governor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32634,
        "sourceUnit": 33805,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32573,
        "nodeType": "ImportDirective",
        "src": "93:60:28",
        "nodes": [],
        "absolutePath": "src/governance/extensions/GovernorCountingSimple.sol",
        "file": "./governance/extensions/GovernorCountingSimple.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32634,
        "sourceUnit": 34547,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32574,
        "nodeType": "ImportDirective",
        "src": "154:60:28",
        "nodes": [],
        "absolutePath": "src/governance/extensions/GovernorModuleRegistry.sol",
        "file": "./governance/extensions/GovernorModuleRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32634,
        "sourceUnit": 34598,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32575,
        "nodeType": "ImportDirective",
        "src": "215:48:28",
        "nodes": [],
        "absolutePath": "src/governance/utils/GovernorSorting.sol",
        "file": "./governance/utils/GovernorSorting.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32634,
        "sourceUnit": 34940,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32633,
        "nodeType": "ContractDefinition",
        "src": "265:1023:28",
        "nodes": [
          {
            "id": 32632,
            "nodeType": "FunctionDefinition",
            "src": "338:948:28",
            "nodes": [],
            "body": {
              "id": 32631,
              "nodeType": "Block",
              "src": "1284:2:28",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 32593,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32581,
                    "src": "568:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 32594,
                    "name": "_prompt",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32583,
                    "src": "587:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 32595,
                    "name": "_submissionMerkleRoot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32585,
                    "src": "608:21:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "id": 32596,
                    "name": "_votingMerkleRoot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32587,
                    "src": "643:17:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 32597,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32590,
                      "src": "674:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 32599,
                    "indexExpression": {
                      "hexValue": "30",
                      "id": 32598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "696:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "674:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 32600,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32590,
                      "src": "728:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 32602,
                    "indexExpression": {
                      "hexValue": "31",
                      "id": 32601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "750:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "728:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 32603,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32590,
                      "src": "782:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 32605,
                    "indexExpression": {
                      "hexValue": "32",
                      "id": 32604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "804:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "782:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 32606,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32590,
                      "src": "837:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 32608,
                    "indexExpression": {
                      "hexValue": "33",
                      "id": 32607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "859:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "837:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 32609,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32590,
                      "src": "909:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 32611,
                    "indexExpression": {
                      "hexValue": "34",
                      "id": 32610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "931:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "909:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 32612,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32590,
                      "src": "967:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 32614,
                    "indexExpression": {
                      "hexValue": "35",
                      "id": 32613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "989:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "967:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 32615,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32590,
                      "src": "1026:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 32617,
                    "indexExpression": {
                      "hexValue": "36",
                      "id": 32616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1048:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_6_by_1",
                        "typeString": "int_const 6"
                      },
                      "value": "6"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1026:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 32618,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32590,
                      "src": "1081:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 32620,
                    "indexExpression": {
                      "hexValue": "37",
                      "id": 32619,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1103:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_7_by_1",
                        "typeString": "int_const 7"
                      },
                      "value": "7"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1081:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 32621,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 32592,
                  "name": "Governor",
                  "nameLocations": [
                    "546:8:28"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33804,
                  "src": "546:8:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "546:592:28"
              },
              {
                "arguments": [
                  {
                    "baseExpression": {
                      "id": 32623,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32590,
                      "src": "1176:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 32625,
                    "indexExpression": {
                      "hexValue": "38",
                      "id": 32624,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1198:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_8_by_1",
                        "typeString": "int_const 8"
                      },
                      "value": "8"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1176:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 32626,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32590,
                      "src": "1232:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 32628,
                    "indexExpression": {
                      "hexValue": "39",
                      "id": 32627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1254:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_9_by_1",
                        "typeString": "int_const 9"
                      },
                      "value": "9"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1232:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 32629,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 32622,
                  "name": "GovernorSorting",
                  "nameLocations": [
                    "1147:15:28"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34939,
                  "src": "1147:15:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "1147:132:28"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 32591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32581,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "373:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 32632,
                  "src": "359:19:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32580,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "359:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32583,
                  "mutability": "mutable",
                  "name": "_prompt",
                  "nameLocation": "402:7:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 32632,
                  "src": "388:21:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32582,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "388:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32585,
                  "mutability": "mutable",
                  "name": "_submissionMerkleRoot",
                  "nameLocation": "427:21:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 32632,
                  "src": "419:29:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 32584,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "419:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32587,
                  "mutability": "mutable",
                  "name": "_votingMerkleRoot",
                  "nameLocation": "466:17:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 32632,
                  "src": "458:25:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 32586,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "458:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32590,
                  "mutability": "mutable",
                  "name": "_constructorIntParams",
                  "nameLocation": "510:21:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 32632,
                  "src": "493:38:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 32588,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "493:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 32589,
                    "nodeType": "ArrayTypeName",
                    "src": "493:9:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "349:188:28"
            },
            "returnParameters": {
              "id": 32630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1284:0:28"
            },
            "scope": 32633,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 32576,
              "name": "GovernorCountingSimple",
              "nameLocations": [
                "285:22:28"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34546,
              "src": "285:22:28"
            },
            "id": 32577,
            "nodeType": "InheritanceSpecifier",
            "src": "285:22:28"
          },
          {
            "baseName": {
              "id": 32578,
              "name": "GovernorModuleRegistry",
              "nameLocations": [
                "309:22:28"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34597,
              "src": "309:22:28"
            },
            "id": 32579,
            "nodeType": "InheritanceSpecifier",
            "src": "309:22:28"
          }
        ],
        "canonicalName": "Contest",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          32633,
          34597,
          34546,
          33804,
          34679,
          34939
        ],
        "name": "Contest",
        "nameLocation": "274:7:28",
        "scope": 32634,
        "usedErrors": [
          32797,
          32799,
          32801,
          32806,
          32808,
          32814,
          32816,
          32821,
          32826,
          32830,
          32834,
          32838,
          32840,
          32842,
          32844,
          32846,
          32848,
          32850,
          32852,
          32854,
          32856,
          33848,
          33850,
          33852,
          33854,
          33856,
          33858,
          33860,
          34566,
          34610
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 28
}